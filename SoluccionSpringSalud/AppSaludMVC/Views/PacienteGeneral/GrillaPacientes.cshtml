@{
    ViewBag.Title = "Listado de Pacientes";
}
<script>
    var Valores;
    var template = '<span style="color:{0};">{1}</span>';

    var change = function (value) {
        return Ext.String.format(template, (value > 0) ? "green" : "red", value);
    };

    var pctChange = function (value) {
        return Ext.String.format(template, (value > 0) ? "green" : "red", value + "%");
    };

    var onSuccess = function (grid, data) {
        grid.show();
        grid.getStore().loadData(data);
    };

    function deleteSelected(grid) {
        var store = grid.store,
            records = grid.selModel.getSelection();

        store.remove(records);
        store.load(true);
    }
 

</script>

@(Html.X().GridPanel()
 
            
         .Title("Listado de Pacientes")
          .Scroll(ScrollMode.Both)
          .AutoScroll(true)
         .Layout(LayoutType.Anchor)
        // .DefaultAnchor("100%")
          .Anchor("100% 100%")
        // .Width(100)
         //.Width(600)
         //.Height(500)
         .ID("GridPanel1")
         .Frame(true)
         //.Layout(Ext.Net.LayoutType.Auto)
         .Margins("0 0 2 2")
         .Border(false)
         .TopBar(Html.X().Toolbar()
                    .Items(Html.X().Container()
                                .Layout(LayoutType.HBox)
                                .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle })
                                .Items(items =>
                                {
                                    items.Add(new Container
                                    {
                                        LayoutConfig = {
                                        new HBoxLayoutConfig {Align = HBoxAlign.Top, Pack = BoxPack.Start}
                                                },
                                        Width = 600,
                                        Height = 50,
                                        Items = { 
                                        Html.X().Label()
                                            .ID("lbBuscar")
                                            .Margins("0 10 0 0")
                                            .Text("Apellidos y Nombres")
                                            //.EmptyText("Search...")
                                            .Width(150),
                                        
                                        Html.X().TextField()
                                            .ID("txtSearch")
                                            .Margins("0 10 0 0")
                                            .EmptyText("Search...")
                                            .Width(250),
                                            
                                         Html.X().Button()
                                            .Text("Buscar")
                                            .Icon(Icon.Find)
                                            .DirectEvents(directEvents =>
                                                        {
                                                            //directEvents.Click.IsUpload = true;
                                                            directEvents.Click.Url = Url.Action("GetCustomers");
                                                            directEvents.Click.Success = "onSuccess(App.GridPanel1, result.data);";
                                                            directEvents.Click.EventMask.ShowMask = true;
                                                            directEvents.Click.EventMask.Msg = "Loading...";
                                                            directEvents.Click.ExtraParams.Add(new
                                                                    {
                                                                        start = 1,
                                                                        limit = 4
                                                                    });
                                                        }),
                                            Html.X().Container().Flex(1),
                                           Html.X().Button()
                                            .Text("Historia Clinica")
                                            .Icon(Icon.ApplicationEdit)
                                            .DirectEvents(directEvents =>
                                                        {
                                                            //directEvents.Click.IsUpload = true;
                                                            directEvents.Click.Url = Url.Action("GetSelectPaciente");
                                                            //directEvents.Click.Success = "onSuccess(App.GridPanel1, result.data);";
                                                            directEvents.Click.EventMask.ShowMask = true;
                                                            directEvents.Click.EventMask.Msg = "Loading...";
                                                            directEvents.Click.ExtraParams.Add(new 
                                                                    {
                                                                        Name = "selection",
                                                                       // valor = "App.GridPanel1.getSelectionModel().getSelected()",
                                                                        // selection =  JRawValue.From("this.getView().getSelectionModel().getSelection()[0]"),
                                                                      selection = new JRawValue("App.GridPanel1.getSelectionSubmit().getSelectionModelField().getValue()"),
                                                                       // Value = new JRawValue("this.getView().getSelectionModel().getSelection()[0]"),
                                                                        //grid.getView().getSelectionModel().getSelection()[0]
                                                                        Mode = ParameterMode.Raw
                                                                    });
                                                        })
                                                        
                                                        
                                                     
                                                                                                                 
                                    }
                                    }
                                    
                                    );
                                })
                )
          )
        .Store(store => store.Add(Html.X().Store()

        .AutoLoad(true)
        .RemoteSort(false)
        .IsPagingStore(true)
        .RemotePaging(true)
        .PageSize(20)

        .Proxy(proxy => proxy.Add(Html.X().AjaxProxy()
                                        .Url("Gestion/GetCustomers")
                            .Reader(reader => reader.Add(Html.X().JsonReader()
                                                                   .Root("data")
                                                                   .TotalProperty("total")
                                                                   .IDProperty("ID")))))
       .Model(model => model.Add(Html.X().Model()
                        .Fields(fields =>
                        {
                            fields.Add(Html.X().ModelField().Name("ID"));
                            fields.Add(Html.X().ModelField().Name("FirstName"));
                            fields.Add(Html.X().ModelField().Name("LastName"));
                            fields.Add(Html.X().ModelField().Name("Company"));

                        })))))


        .ColumnModel(columnModel =>
        {
            columnModel.Columns.Add(Html.X().Column().Text("FirstName").DataIndex("FirstName").Flex(1));
            columnModel.Columns.Add(Html.X().Column().Text("LastName").DataIndex("LastName").Flex(1));
            columnModel.Columns.Add(Html.X().Column().Text("Company").DataIndex("Company").Flex(1));

        })
        .SelectionModel(Html.X().RowSelectionModel().Mode(SelectionMode.Multi)) 

        .BottomBar(bar => bar.Add(Html.X().PagingToolbar()
                                          .DisplayInfo(true)
                                          .DisplayMsg("Displaying customers {0} - {1} of {2}")))
        .View(view => view.Add(Html.X().GridView()))
        .Border(false)
       


)
