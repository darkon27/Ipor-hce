//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using SoluccionSalud.Entidades.Entidades;
using System.Data.Entity.Core.Objects;


namespace SoluccionSalud.Model
{
    public partial class WEB_ERPSALUDEntities : DbContext
    {
        public WEB_ERPSALUDEntities()
            : base("name=WEB_ERPSALUDEntities")
        {
            Configuration.LazyLoadingEnabled = false;
            Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<APLICACIONESMAST> APLICACIONESMASTs { get; set; }
        public DbSet<CM_CO_TablaMaestro> CM_CO_TablaMaestro { get; set; }
        public DbSet<CM_CO_TablaMaestroAsociado> CM_CO_TablaMaestroAsociado { get; set; }
        public DbSet<CM_CO_TablaMaestroConcepto> CM_CO_TablaMaestroConcepto { get; set; }
        public DbSet<CM_CO_TablaMaestroDetalle> CM_CO_TablaMaestroDetalle { get; set; }
        public DbSet<CM_CO_TablaMaestroDetalleConcepto> CM_CO_TablaMaestroDetalleConcepto { get; set; }
        public DbSet<EMPLEADOMAST> EMPLEADOMASTs { get; set; }
        public DbSet<HC_FlujoProceso> HC_FlujoProceso { get; set; }
        public DbSet<HC_Proceso> HC_Proceso { get; set; }
        public DbSet<HC_SubProceso> HC_SubProceso { get; set; }
        public DbSet<HC_SubProcesoHijo> HC_SubProcesoHijo { get; set; }
        public DbSet<HC_SubProcesoSelector> HC_SubProcesoSelector { get; set; }
        public DbSet<MA_MiscelaneosHeader> MA_MiscelaneosHeader { get; set; }
        public DbSet<PERSONAMAST> PERSONAMASTs { get; set; }
        public DbSet<SEGURIDADAUTORIZACIONE> SEGURIDADAUTORIZACIONES { get; set; }
        public DbSet<SEGURIDADCONCEPTO> SEGURIDADCONCEPTOes { get; set; }
        public DbSet<SEGURIDADGRUPO> SEGURIDADGRUPOes { get; set; }
        public DbSet<SEGURIDADPERFILUSUARIO> SEGURIDADPERFILUSUARIOs { get; set; }
        public DbSet<SG_Opcion> SG_Opcion { get; set; }
        public DbSet<SS_AD_OrdenAtencion> SS_AD_OrdenAtencion { get; set; }
        public DbSet<SS_AD_OrdenAtencionDetalle> SS_AD_OrdenAtencionDetalle { get; set; }
        public DbSet<SS_GE_Diagnostico> SS_GE_Diagnostico { get; set; }
        public DbSet<SS_GE_Paciente> SS_GE_Paciente { get; set; }
        public DbSet<SS_GE_ProcedimientoMedico> SS_GE_ProcedimientoMedico { get; set; }
        public DbSet<SS_GE_ProcedimientoMedicoDos> SS_GE_ProcedimientoMedicoDos { get; set; }
        public DbSet<SS_GE_Servicio> SS_GE_Servicio { get; set; }
        public DbSet<SS_GE_TipoAtencion> SS_GE_TipoAtencion { get; set; }
        public DbSet<SS_HC_AnatomiaPatologica> SS_HC_AnatomiaPatologica { get; set; }
        public DbSet<SS_HC_EpisodioClinico> SS_HC_EpisodioClinico { get; set; }
        public DbSet<SS_HC_EstablecimientoSalud> SS_HC_EstablecimientoSalud { get; set; }
        public DbSet<SS_HC_PatologiaClinica> SS_HC_PatologiaClinica { get; set; }
        public DbSet<SS_HC_PersonalSalud> SS_HC_PersonalSalud { get; set; }
        public DbSet<SS_HC_ProcedimientoPrueba> SS_HC_ProcedimientoPrueba { get; set; }
        public DbSet<SS_HC_Proceso> SS_HC_Proceso { get; set; }
        public DbSet<SS_HC_ProcesoSelector> SS_HC_ProcesoSelector { get; set; }
        public DbSet<SS_HC_Seccion> SS_HC_Seccion { get; set; }
        public DbSet<SS_HC_SeccionCampo> SS_HC_SeccionCampo { get; set; }
        public DbSet<SS_HC_Tabla> SS_HC_Tabla { get; set; }
        public DbSet<SS_HC_TablaCampo> SS_HC_TablaCampo { get; set; }
        public DbSet<SS_HC_UnidadMedida> SS_HC_UnidadMedida { get; set; }
        public DbSet<SS_HC_UnidadServicio> SS_HC_UnidadServicio { get; set; }
        public DbSet<UnidadesMast> UnidadesMasts { get; set; }
        public DbSet<USUARIO> USUARIOs { get; set; }
        public DbSet<WH_ItemMast> WH_ItemMast { get; set; }
        public DbSet<SS_GE_ServicioPrestacion> SS_GE_ServicioPrestacion { get; set; }
        public DbSet<SS_HC_Anamnesis_AF> SS_HC_Anamnesis_AF { get; set; }
        public DbSet<SS_HC_Anamnesis_AF_Enfermedad> SS_HC_Anamnesis_AF_Enfermedad { get; set; }
        public DbSet<SS_HC_Anamnesis_AP> SS_HC_Anamnesis_AP { get; set; }
        public DbSet<SS_HC_Anamnesis_AP_Detalle> SS_HC_Anamnesis_AP_Detalle { get; set; }
        public DbSet<SS_HC_Anamnesis_EA> SS_HC_Anamnesis_EA { get; set; }
        public DbSet<SS_HC_Anamnesis_EA_Sintoma> SS_HC_Anamnesis_EA_Sintoma { get; set; }
        public DbSet<SS_HC_Diagnostico> SS_HC_Diagnostico { get; set; }
        public DbSet<SS_HC_EpisodioAtencion> SS_HC_EpisodioAtencion { get; set; }
        public DbSet<SS_HC_ExamenFisico_Triaje> SS_HC_ExamenFisico_Triaje { get; set; }
        public DbSet<SS_HC_Imagen> SS_HC_Imagen { get; set; }
        public DbSet<SS_HC_IntervencionQuirurgica> SS_HC_IntervencionQuirurgica { get; set; }
        public DbSet<SS_HC_Prescripcion> SS_HC_Prescripcion { get; set; }
        public DbSet<SS_HC_Problema> SS_HC_Problema { get; set; }
        public DbSet<SS_HC_Procedimiento> SS_HC_Procedimiento { get; set; }
        public DbSet<MA_MiscelaneosDetalle> MA_MiscelaneosDetalle { get; set; }
        public DbSet<SS_HC_Medicamento> SS_HC_Medicamento { get; set; }
        public DbSet<SS_HC_ExamenSolicitado> SS_HC_ExamenSolicitado { get; set; }
        public DbSet<SS_HC_Selector> SS_HC_Selector { get; set; }
    
        public virtual ObjectResult<PERSONAMAST> USP_PERSONAMAST(Nullable<int> pERSONA, string nOMBRECOMPLETO, string eSTADO, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PERSONAMAST).Assembly);
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERSONAMAST>("USP_PERSONAMAST", pERSONAParameter, nOMBRECOMPLETOParameter, eSTADOParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<PERSONAMAST> USP_PERSONAMAST(Nullable<int> pERSONA, string nOMBRECOMPLETO, string eSTADO, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PERSONAMAST).Assembly);
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERSONAMAST>("USP_PERSONAMAST", mergeOption, pERSONAParameter, nOMBRECOMPLETOParameter, eSTADOParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SEGURIDADCONCEPTO> USP_SEGURIDADCONCEPTO(string aCCION, string aPLICACIONCODIGO, string gRUPO, string cONCEPTO, string cONCEPTOPADRE)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADCONCEPTO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var cONCEPTOPADREParameter = cONCEPTOPADRE != null ?
                new ObjectParameter("CONCEPTOPADRE", cONCEPTOPADRE) :
                new ObjectParameter("CONCEPTOPADRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADCONCEPTO>("USP_SEGURIDADCONCEPTO", aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter, cONCEPTOParameter, cONCEPTOPADREParameter);
        }
    
        public virtual ObjectResult<SEGURIDADCONCEPTO> USP_SEGURIDADCONCEPTO(string aCCION, string aPLICACIONCODIGO, string gRUPO, string cONCEPTO, string cONCEPTOPADRE, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADCONCEPTO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var cONCEPTOPADREParameter = cONCEPTOPADRE != null ?
                new ObjectParameter("CONCEPTOPADRE", cONCEPTOPADRE) :
                new ObjectParameter("CONCEPTOPADRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADCONCEPTO>("USP_SEGURIDADCONCEPTO", mergeOption, aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter, cONCEPTOParameter, cONCEPTOPADREParameter);
        }
    
        public virtual ObjectResult<SEGURIDADGRUPO> USP_SEGURIDADGRUPO(string aCCION, string aPLICACIONCODIGO, string gRUPO)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADGRUPO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADGRUPO>("USP_SEGURIDADGRUPO", aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter);
        }
    
        public virtual ObjectResult<SEGURIDADGRUPO> USP_SEGURIDADGRUPO(string aCCION, string aPLICACIONCODIGO, string gRUPO, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADGRUPO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADGRUPO>("USP_SEGURIDADGRUPO", mergeOption, aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_LISTARSERVICIOS(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_LISTARSERVICIOS", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_LISTARSERVICIOS(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_LISTARSERVICIOS", mergeOption, aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ANAMNESIS_AP(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<short> idTipoEmbarazo, string patologiaGestacion, Nullable<short> idControlPrenatal, Nullable<short> cPnumeroControles, Nullable<short> cPnumeroEmbarazos, string lugarControl, Nullable<short> idTipoParto, string complicacionesParto, Nullable<short> idLugarParto, Nullable<short> idPartoAtendidoPor, string antecentesPatologicos, Nullable<short> semanasGestacionNacer, Nullable<int> pesoAlNacerGR, Nullable<decimal> tallaAlNacerCM, Nullable<decimal> perimetroCefalicoCM, string patologiasPernatales, Nullable<short> diasHospitalizacion, Nullable<short> idTipoLecheHasta6meses, string antecLactancia, Nullable<short> edadInicioAblactanciaMeses, string desarrolloSicomotriz, Nullable<System.DateTime> fechaUltimaRegla, Nullable<System.DateTime> fechaUltimoPeriodo, string metodosAnticonceptivos, string menarquia, string menopausia, string caracteristicasMenstruaciones, string informacionEmbarazos, string transfusiones, Nullable<System.DateTime> deinmunizFechaAproximada, Nullable<int> deinmunizEdadAproximada, string alcohol, string tabaco, string drogas, string actividadFisica, string consumoVerduras, string consumoFrutas, string medicamentos, string alimentos, string sustanciasEnElAmbiente, string sustanciasContactoConPiel, string contactoPersonaEnferma, string crianzaAnimalesDomesticos, string aguaPotable, string disposicionExcretas, string reaccionAdversaMedicamentos, string saludBucal, string vigilanciaDeCrecimiento, string vigilanciaDelDesarrollo, Nullable<short> idValoracionFuncional1, Nullable<short> idValoracionFuncional2, Nullable<short> idValoracionFuncional3, Nullable<short> idValoracionFuncional4, Nullable<short> idValoracionFuncional5, Nullable<short> idValoracionFuncional6, Nullable<short> diagnosticoFuncional, Nullable<short> idEstadoCognitivo1, Nullable<short> idEstadoCognitivo2, Nullable<short> idEstadoCognitivo3, Nullable<short> idEstadoCognitivo4, Nullable<short> idEstadoCognitivo5, Nullable<short> idEstadoCognitivo6, Nullable<short> idEstadoCognitivo7, Nullable<short> idEstadoCognitivo8, Nullable<short> idEstadoCognitivo9, Nullable<short> idEstadoCognitivo10, Nullable<short> valoracionCognitiva, Nullable<short> idEstadoAfectivo1, Nullable<short> idEstadoAfectivo2, Nullable<short> idEstadoAfectivo3, Nullable<short> idEstadoAfectivo4, Nullable<short> conManifestacionesDepresivas, Nullable<short> valoracionSocioFamiliar1, Nullable<short> valoracionSocioFamiliar2, Nullable<short> valoracionSocioFamiliar3, Nullable<short> valoracionSocioFamiliar4, Nullable<short> valoracionSocioFamiliar5, Nullable<short> valoracionSocioFamiliar, Nullable<short> idCategoriaAdutoMayor, Nullable<short> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idTipoEmbarazoParameter = idTipoEmbarazo.HasValue ?
                new ObjectParameter("IdTipoEmbarazo", idTipoEmbarazo) :
                new ObjectParameter("IdTipoEmbarazo", typeof(short));
    
            var patologiaGestacionParameter = patologiaGestacion != null ?
                new ObjectParameter("PatologiaGestacion", patologiaGestacion) :
                new ObjectParameter("PatologiaGestacion", typeof(string));
    
            var idControlPrenatalParameter = idControlPrenatal.HasValue ?
                new ObjectParameter("IdControlPrenatal", idControlPrenatal) :
                new ObjectParameter("IdControlPrenatal", typeof(short));
    
            var cPnumeroControlesParameter = cPnumeroControles.HasValue ?
                new ObjectParameter("CPnumeroControles", cPnumeroControles) :
                new ObjectParameter("CPnumeroControles", typeof(short));
    
            var cPnumeroEmbarazosParameter = cPnumeroEmbarazos.HasValue ?
                new ObjectParameter("CPnumeroEmbarazos", cPnumeroEmbarazos) :
                new ObjectParameter("CPnumeroEmbarazos", typeof(short));
    
            var lugarControlParameter = lugarControl != null ?
                new ObjectParameter("LugarControl", lugarControl) :
                new ObjectParameter("LugarControl", typeof(string));
    
            var idTipoPartoParameter = idTipoParto.HasValue ?
                new ObjectParameter("IdTipoParto", idTipoParto) :
                new ObjectParameter("IdTipoParto", typeof(short));
    
            var complicacionesPartoParameter = complicacionesParto != null ?
                new ObjectParameter("ComplicacionesParto", complicacionesParto) :
                new ObjectParameter("ComplicacionesParto", typeof(string));
    
            var idLugarPartoParameter = idLugarParto.HasValue ?
                new ObjectParameter("IdLugarParto", idLugarParto) :
                new ObjectParameter("IdLugarParto", typeof(short));
    
            var idPartoAtendidoPorParameter = idPartoAtendidoPor.HasValue ?
                new ObjectParameter("IdPartoAtendidoPor", idPartoAtendidoPor) :
                new ObjectParameter("IdPartoAtendidoPor", typeof(short));
    
            var antecentesPatologicosParameter = antecentesPatologicos != null ?
                new ObjectParameter("AntecentesPatologicos", antecentesPatologicos) :
                new ObjectParameter("AntecentesPatologicos", typeof(string));
    
            var semanasGestacionNacerParameter = semanasGestacionNacer.HasValue ?
                new ObjectParameter("SemanasGestacionNacer", semanasGestacionNacer) :
                new ObjectParameter("SemanasGestacionNacer", typeof(short));
    
            var pesoAlNacerGRParameter = pesoAlNacerGR.HasValue ?
                new ObjectParameter("PesoAlNacerGR", pesoAlNacerGR) :
                new ObjectParameter("PesoAlNacerGR", typeof(int));
    
            var tallaAlNacerCMParameter = tallaAlNacerCM.HasValue ?
                new ObjectParameter("TallaAlNacerCM", tallaAlNacerCM) :
                new ObjectParameter("TallaAlNacerCM", typeof(decimal));
    
            var perimetroCefalicoCMParameter = perimetroCefalicoCM.HasValue ?
                new ObjectParameter("PerimetroCefalicoCM", perimetroCefalicoCM) :
                new ObjectParameter("PerimetroCefalicoCM", typeof(decimal));
    
            var patologiasPernatalesParameter = patologiasPernatales != null ?
                new ObjectParameter("PatologiasPernatales", patologiasPernatales) :
                new ObjectParameter("PatologiasPernatales", typeof(string));
    
            var diasHospitalizacionParameter = diasHospitalizacion.HasValue ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(short));
    
            var idTipoLecheHasta6mesesParameter = idTipoLecheHasta6meses.HasValue ?
                new ObjectParameter("IdTipoLecheHasta6meses", idTipoLecheHasta6meses) :
                new ObjectParameter("IdTipoLecheHasta6meses", typeof(short));
    
            var antecLactanciaParameter = antecLactancia != null ?
                new ObjectParameter("AntecLactancia", antecLactancia) :
                new ObjectParameter("AntecLactancia", typeof(string));
    
            var edadInicioAblactanciaMesesParameter = edadInicioAblactanciaMeses.HasValue ?
                new ObjectParameter("EdadInicioAblactanciaMeses", edadInicioAblactanciaMeses) :
                new ObjectParameter("EdadInicioAblactanciaMeses", typeof(short));
    
            var desarrolloSicomotrizParameter = desarrolloSicomotriz != null ?
                new ObjectParameter("DesarrolloSicomotriz", desarrolloSicomotriz) :
                new ObjectParameter("DesarrolloSicomotriz", typeof(string));
    
            var fechaUltimaReglaParameter = fechaUltimaRegla.HasValue ?
                new ObjectParameter("FechaUltimaRegla", fechaUltimaRegla) :
                new ObjectParameter("FechaUltimaRegla", typeof(System.DateTime));
    
            var fechaUltimoPeriodoParameter = fechaUltimoPeriodo.HasValue ?
                new ObjectParameter("FechaUltimoPeriodo", fechaUltimoPeriodo) :
                new ObjectParameter("FechaUltimoPeriodo", typeof(System.DateTime));
    
            var metodosAnticonceptivosParameter = metodosAnticonceptivos != null ?
                new ObjectParameter("MetodosAnticonceptivos", metodosAnticonceptivos) :
                new ObjectParameter("MetodosAnticonceptivos", typeof(string));
    
            var menarquiaParameter = menarquia != null ?
                new ObjectParameter("Menarquia", menarquia) :
                new ObjectParameter("Menarquia", typeof(string));
    
            var menopausiaParameter = menopausia != null ?
                new ObjectParameter("Menopausia", menopausia) :
                new ObjectParameter("Menopausia", typeof(string));
    
            var caracteristicasMenstruacionesParameter = caracteristicasMenstruaciones != null ?
                new ObjectParameter("CaracteristicasMenstruaciones", caracteristicasMenstruaciones) :
                new ObjectParameter("CaracteristicasMenstruaciones", typeof(string));
    
            var informacionEmbarazosParameter = informacionEmbarazos != null ?
                new ObjectParameter("InformacionEmbarazos", informacionEmbarazos) :
                new ObjectParameter("InformacionEmbarazos", typeof(string));
    
            var transfusionesParameter = transfusiones != null ?
                new ObjectParameter("Transfusiones", transfusiones) :
                new ObjectParameter("Transfusiones", typeof(string));
    
            var deinmunizFechaAproximadaParameter = deinmunizFechaAproximada.HasValue ?
                new ObjectParameter("DeinmunizFechaAproximada", deinmunizFechaAproximada) :
                new ObjectParameter("DeinmunizFechaAproximada", typeof(System.DateTime));
    
            var deinmunizEdadAproximadaParameter = deinmunizEdadAproximada.HasValue ?
                new ObjectParameter("DeinmunizEdadAproximada", deinmunizEdadAproximada) :
                new ObjectParameter("DeinmunizEdadAproximada", typeof(int));
    
            var alcoholParameter = alcohol != null ?
                new ObjectParameter("Alcohol", alcohol) :
                new ObjectParameter("Alcohol", typeof(string));
    
            var tabacoParameter = tabaco != null ?
                new ObjectParameter("Tabaco", tabaco) :
                new ObjectParameter("Tabaco", typeof(string));
    
            var drogasParameter = drogas != null ?
                new ObjectParameter("Drogas", drogas) :
                new ObjectParameter("Drogas", typeof(string));
    
            var actividadFisicaParameter = actividadFisica != null ?
                new ObjectParameter("ActividadFisica", actividadFisica) :
                new ObjectParameter("ActividadFisica", typeof(string));
    
            var consumoVerdurasParameter = consumoVerduras != null ?
                new ObjectParameter("ConsumoVerduras", consumoVerduras) :
                new ObjectParameter("ConsumoVerduras", typeof(string));
    
            var consumoFrutasParameter = consumoFrutas != null ?
                new ObjectParameter("ConsumoFrutas", consumoFrutas) :
                new ObjectParameter("ConsumoFrutas", typeof(string));
    
            var medicamentosParameter = medicamentos != null ?
                new ObjectParameter("Medicamentos", medicamentos) :
                new ObjectParameter("Medicamentos", typeof(string));
    
            var alimentosParameter = alimentos != null ?
                new ObjectParameter("Alimentos", alimentos) :
                new ObjectParameter("Alimentos", typeof(string));
    
            var sustanciasEnElAmbienteParameter = sustanciasEnElAmbiente != null ?
                new ObjectParameter("SustanciasEnElAmbiente", sustanciasEnElAmbiente) :
                new ObjectParameter("SustanciasEnElAmbiente", typeof(string));
    
            var sustanciasContactoConPielParameter = sustanciasContactoConPiel != null ?
                new ObjectParameter("SustanciasContactoConPiel", sustanciasContactoConPiel) :
                new ObjectParameter("SustanciasContactoConPiel", typeof(string));
    
            var contactoPersonaEnfermaParameter = contactoPersonaEnferma != null ?
                new ObjectParameter("ContactoPersonaEnferma", contactoPersonaEnferma) :
                new ObjectParameter("ContactoPersonaEnferma", typeof(string));
    
            var crianzaAnimalesDomesticosParameter = crianzaAnimalesDomesticos != null ?
                new ObjectParameter("CrianzaAnimalesDomesticos", crianzaAnimalesDomesticos) :
                new ObjectParameter("CrianzaAnimalesDomesticos", typeof(string));
    
            var aguaPotableParameter = aguaPotable != null ?
                new ObjectParameter("AguaPotable", aguaPotable) :
                new ObjectParameter("AguaPotable", typeof(string));
    
            var disposicionExcretasParameter = disposicionExcretas != null ?
                new ObjectParameter("DisposicionExcretas", disposicionExcretas) :
                new ObjectParameter("DisposicionExcretas", typeof(string));
    
            var reaccionAdversaMedicamentosParameter = reaccionAdversaMedicamentos != null ?
                new ObjectParameter("ReaccionAdversaMedicamentos", reaccionAdversaMedicamentos) :
                new ObjectParameter("ReaccionAdversaMedicamentos", typeof(string));
    
            var saludBucalParameter = saludBucal != null ?
                new ObjectParameter("SaludBucal", saludBucal) :
                new ObjectParameter("SaludBucal", typeof(string));
    
            var vigilanciaDeCrecimientoParameter = vigilanciaDeCrecimiento != null ?
                new ObjectParameter("VigilanciaDeCrecimiento", vigilanciaDeCrecimiento) :
                new ObjectParameter("VigilanciaDeCrecimiento", typeof(string));
    
            var vigilanciaDelDesarrolloParameter = vigilanciaDelDesarrollo != null ?
                new ObjectParameter("VigilanciaDelDesarrollo", vigilanciaDelDesarrollo) :
                new ObjectParameter("VigilanciaDelDesarrollo", typeof(string));
    
            var idValoracionFuncional1Parameter = idValoracionFuncional1.HasValue ?
                new ObjectParameter("IdValoracionFuncional1", idValoracionFuncional1) :
                new ObjectParameter("IdValoracionFuncional1", typeof(short));
    
            var idValoracionFuncional2Parameter = idValoracionFuncional2.HasValue ?
                new ObjectParameter("IdValoracionFuncional2", idValoracionFuncional2) :
                new ObjectParameter("IdValoracionFuncional2", typeof(short));
    
            var idValoracionFuncional3Parameter = idValoracionFuncional3.HasValue ?
                new ObjectParameter("IdValoracionFuncional3", idValoracionFuncional3) :
                new ObjectParameter("IdValoracionFuncional3", typeof(short));
    
            var idValoracionFuncional4Parameter = idValoracionFuncional4.HasValue ?
                new ObjectParameter("IdValoracionFuncional4", idValoracionFuncional4) :
                new ObjectParameter("IdValoracionFuncional4", typeof(short));
    
            var idValoracionFuncional5Parameter = idValoracionFuncional5.HasValue ?
                new ObjectParameter("IdValoracionFuncional5", idValoracionFuncional5) :
                new ObjectParameter("IdValoracionFuncional5", typeof(short));
    
            var idValoracionFuncional6Parameter = idValoracionFuncional6.HasValue ?
                new ObjectParameter("IdValoracionFuncional6", idValoracionFuncional6) :
                new ObjectParameter("IdValoracionFuncional6", typeof(short));
    
            var diagnosticoFuncionalParameter = diagnosticoFuncional.HasValue ?
                new ObjectParameter("DiagnosticoFuncional", diagnosticoFuncional) :
                new ObjectParameter("DiagnosticoFuncional", typeof(short));
    
            var idEstadoCognitivo1Parameter = idEstadoCognitivo1.HasValue ?
                new ObjectParameter("IdEstadoCognitivo1", idEstadoCognitivo1) :
                new ObjectParameter("IdEstadoCognitivo1", typeof(short));
    
            var idEstadoCognitivo2Parameter = idEstadoCognitivo2.HasValue ?
                new ObjectParameter("IdEstadoCognitivo2", idEstadoCognitivo2) :
                new ObjectParameter("IdEstadoCognitivo2", typeof(short));
    
            var idEstadoCognitivo3Parameter = idEstadoCognitivo3.HasValue ?
                new ObjectParameter("IdEstadoCognitivo3", idEstadoCognitivo3) :
                new ObjectParameter("IdEstadoCognitivo3", typeof(short));
    
            var idEstadoCognitivo4Parameter = idEstadoCognitivo4.HasValue ?
                new ObjectParameter("IdEstadoCognitivo4", idEstadoCognitivo4) :
                new ObjectParameter("IdEstadoCognitivo4", typeof(short));
    
            var idEstadoCognitivo5Parameter = idEstadoCognitivo5.HasValue ?
                new ObjectParameter("IdEstadoCognitivo5", idEstadoCognitivo5) :
                new ObjectParameter("IdEstadoCognitivo5", typeof(short));
    
            var idEstadoCognitivo6Parameter = idEstadoCognitivo6.HasValue ?
                new ObjectParameter("IdEstadoCognitivo6", idEstadoCognitivo6) :
                new ObjectParameter("IdEstadoCognitivo6", typeof(short));
    
            var idEstadoCognitivo7Parameter = idEstadoCognitivo7.HasValue ?
                new ObjectParameter("IdEstadoCognitivo7", idEstadoCognitivo7) :
                new ObjectParameter("IdEstadoCognitivo7", typeof(short));
    
            var idEstadoCognitivo8Parameter = idEstadoCognitivo8.HasValue ?
                new ObjectParameter("IdEstadoCognitivo8", idEstadoCognitivo8) :
                new ObjectParameter("IdEstadoCognitivo8", typeof(short));
    
            var idEstadoCognitivo9Parameter = idEstadoCognitivo9.HasValue ?
                new ObjectParameter("IdEstadoCognitivo9", idEstadoCognitivo9) :
                new ObjectParameter("IdEstadoCognitivo9", typeof(short));
    
            var idEstadoCognitivo10Parameter = idEstadoCognitivo10.HasValue ?
                new ObjectParameter("IdEstadoCognitivo10", idEstadoCognitivo10) :
                new ObjectParameter("IdEstadoCognitivo10", typeof(short));
    
            var valoracionCognitivaParameter = valoracionCognitiva.HasValue ?
                new ObjectParameter("ValoracionCognitiva", valoracionCognitiva) :
                new ObjectParameter("ValoracionCognitiva", typeof(short));
    
            var idEstadoAfectivo1Parameter = idEstadoAfectivo1.HasValue ?
                new ObjectParameter("IdEstadoAfectivo1", idEstadoAfectivo1) :
                new ObjectParameter("IdEstadoAfectivo1", typeof(short));
    
            var idEstadoAfectivo2Parameter = idEstadoAfectivo2.HasValue ?
                new ObjectParameter("IdEstadoAfectivo2", idEstadoAfectivo2) :
                new ObjectParameter("IdEstadoAfectivo2", typeof(short));
    
            var idEstadoAfectivo3Parameter = idEstadoAfectivo3.HasValue ?
                new ObjectParameter("IdEstadoAfectivo3", idEstadoAfectivo3) :
                new ObjectParameter("IdEstadoAfectivo3", typeof(short));
    
            var idEstadoAfectivo4Parameter = idEstadoAfectivo4.HasValue ?
                new ObjectParameter("IdEstadoAfectivo4", idEstadoAfectivo4) :
                new ObjectParameter("IdEstadoAfectivo4", typeof(short));
    
            var conManifestacionesDepresivasParameter = conManifestacionesDepresivas.HasValue ?
                new ObjectParameter("ConManifestacionesDepresivas", conManifestacionesDepresivas) :
                new ObjectParameter("ConManifestacionesDepresivas", typeof(short));
    
            var valoracionSocioFamiliar1Parameter = valoracionSocioFamiliar1.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar1", valoracionSocioFamiliar1) :
                new ObjectParameter("ValoracionSocioFamiliar1", typeof(short));
    
            var valoracionSocioFamiliar2Parameter = valoracionSocioFamiliar2.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar2", valoracionSocioFamiliar2) :
                new ObjectParameter("ValoracionSocioFamiliar2", typeof(short));
    
            var valoracionSocioFamiliar3Parameter = valoracionSocioFamiliar3.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar3", valoracionSocioFamiliar3) :
                new ObjectParameter("ValoracionSocioFamiliar3", typeof(short));
    
            var valoracionSocioFamiliar4Parameter = valoracionSocioFamiliar4.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar4", valoracionSocioFamiliar4) :
                new ObjectParameter("ValoracionSocioFamiliar4", typeof(short));
    
            var valoracionSocioFamiliar5Parameter = valoracionSocioFamiliar5.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar5", valoracionSocioFamiliar5) :
                new ObjectParameter("ValoracionSocioFamiliar5", typeof(short));
    
            var valoracionSocioFamiliarParameter = valoracionSocioFamiliar.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar", valoracionSocioFamiliar) :
                new ObjectParameter("ValoracionSocioFamiliar", typeof(short));
    
            var idCategoriaAdutoMayorParameter = idCategoriaAdutoMayor.HasValue ?
                new ObjectParameter("IdCategoriaAdutoMayor", idCategoriaAdutoMayor) :
                new ObjectParameter("IdCategoriaAdutoMayor", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(short));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ANAMNESIS_AP", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idTipoEmbarazoParameter, patologiaGestacionParameter, idControlPrenatalParameter, cPnumeroControlesParameter, cPnumeroEmbarazosParameter, lugarControlParameter, idTipoPartoParameter, complicacionesPartoParameter, idLugarPartoParameter, idPartoAtendidoPorParameter, antecentesPatologicosParameter, semanasGestacionNacerParameter, pesoAlNacerGRParameter, tallaAlNacerCMParameter, perimetroCefalicoCMParameter, patologiasPernatalesParameter, diasHospitalizacionParameter, idTipoLecheHasta6mesesParameter, antecLactanciaParameter, edadInicioAblactanciaMesesParameter, desarrolloSicomotrizParameter, fechaUltimaReglaParameter, fechaUltimoPeriodoParameter, metodosAnticonceptivosParameter, menarquiaParameter, menopausiaParameter, caracteristicasMenstruacionesParameter, informacionEmbarazosParameter, transfusionesParameter, deinmunizFechaAproximadaParameter, deinmunizEdadAproximadaParameter, alcoholParameter, tabacoParameter, drogasParameter, actividadFisicaParameter, consumoVerdurasParameter, consumoFrutasParameter, medicamentosParameter, alimentosParameter, sustanciasEnElAmbienteParameter, sustanciasContactoConPielParameter, contactoPersonaEnfermaParameter, crianzaAnimalesDomesticosParameter, aguaPotableParameter, disposicionExcretasParameter, reaccionAdversaMedicamentosParameter, saludBucalParameter, vigilanciaDeCrecimientoParameter, vigilanciaDelDesarrolloParameter, idValoracionFuncional1Parameter, idValoracionFuncional2Parameter, idValoracionFuncional3Parameter, idValoracionFuncional4Parameter, idValoracionFuncional5Parameter, idValoracionFuncional6Parameter, diagnosticoFuncionalParameter, idEstadoCognitivo1Parameter, idEstadoCognitivo2Parameter, idEstadoCognitivo3Parameter, idEstadoCognitivo4Parameter, idEstadoCognitivo5Parameter, idEstadoCognitivo6Parameter, idEstadoCognitivo7Parameter, idEstadoCognitivo8Parameter, idEstadoCognitivo9Parameter, idEstadoCognitivo10Parameter, valoracionCognitivaParameter, idEstadoAfectivo1Parameter, idEstadoAfectivo2Parameter, idEstadoAfectivo3Parameter, idEstadoAfectivo4Parameter, conManifestacionesDepresivasParameter, valoracionSocioFamiliar1Parameter, valoracionSocioFamiliar2Parameter, valoracionSocioFamiliar3Parameter, valoracionSocioFamiliar4Parameter, valoracionSocioFamiliar5Parameter, valoracionSocioFamiliarParameter, idCategoriaAdutoMayorParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_EA> USP_Anamnesis_EA_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string motivoConsulta, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, string tiempoEnfermedad, string relatoCronologico, string apetito, string sed, string orina, string deposiciones, string sueno, Nullable<decimal> pesoAnterior, string infancia, string evaluacionAlimentacionActual, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_EA).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var motivoConsultaParameter = motivoConsulta != null ?
                new ObjectParameter("MotivoConsulta", motivoConsulta) :
                new ObjectParameter("MotivoConsulta", typeof(string));
    
            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));
    
            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));
    
            var tiempoEnfermedadParameter = tiempoEnfermedad != null ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(string));
    
            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));
    
            var apetitoParameter = apetito != null ?
                new ObjectParameter("Apetito", apetito) :
                new ObjectParameter("Apetito", typeof(string));
    
            var sedParameter = sed != null ?
                new ObjectParameter("Sed", sed) :
                new ObjectParameter("Sed", typeof(string));
    
            var orinaParameter = orina != null ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(string));
    
            var deposicionesParameter = deposiciones != null ?
                new ObjectParameter("Deposiciones", deposiciones) :
                new ObjectParameter("Deposiciones", typeof(string));
    
            var suenoParameter = sueno != null ?
                new ObjectParameter("Sueno", sueno) :
                new ObjectParameter("Sueno", typeof(string));
    
            var pesoAnteriorParameter = pesoAnterior.HasValue ?
                new ObjectParameter("PesoAnterior", pesoAnterior) :
                new ObjectParameter("PesoAnterior", typeof(decimal));
    
            var infanciaParameter = infancia != null ?
                new ObjectParameter("Infancia", infancia) :
                new ObjectParameter("Infancia", typeof(string));
    
            var evaluacionAlimentacionActualParameter = evaluacionAlimentacionActual != null ?
                new ObjectParameter("EvaluacionAlimentacionActual", evaluacionAlimentacionActual) :
                new ObjectParameter("EvaluacionAlimentacionActual", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_EA>("USP_Anamnesis_EA_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, motivoConsultaParameter, idFormaInicioParameter, idCursoEnfermedadParameter, tiempoEnfermedadParameter, relatoCronologicoParameter, apetitoParameter, sedParameter, orinaParameter, deposicionesParameter, suenoParameter, pesoAnteriorParameter, infanciaParameter, evaluacionAlimentacionActualParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_EA> USP_Anamnesis_EA_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string motivoConsulta, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, string tiempoEnfermedad, string relatoCronologico, string apetito, string sed, string orina, string deposiciones, string sueno, Nullable<decimal> pesoAnterior, string infancia, string evaluacionAlimentacionActual, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_EA).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var motivoConsultaParameter = motivoConsulta != null ?
                new ObjectParameter("MotivoConsulta", motivoConsulta) :
                new ObjectParameter("MotivoConsulta", typeof(string));
    
            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));
    
            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));
    
            var tiempoEnfermedadParameter = tiempoEnfermedad != null ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(string));
    
            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));
    
            var apetitoParameter = apetito != null ?
                new ObjectParameter("Apetito", apetito) :
                new ObjectParameter("Apetito", typeof(string));
    
            var sedParameter = sed != null ?
                new ObjectParameter("Sed", sed) :
                new ObjectParameter("Sed", typeof(string));
    
            var orinaParameter = orina != null ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(string));
    
            var deposicionesParameter = deposiciones != null ?
                new ObjectParameter("Deposiciones", deposiciones) :
                new ObjectParameter("Deposiciones", typeof(string));
    
            var suenoParameter = sueno != null ?
                new ObjectParameter("Sueno", sueno) :
                new ObjectParameter("Sueno", typeof(string));
    
            var pesoAnteriorParameter = pesoAnterior.HasValue ?
                new ObjectParameter("PesoAnterior", pesoAnterior) :
                new ObjectParameter("PesoAnterior", typeof(decimal));
    
            var infanciaParameter = infancia != null ?
                new ObjectParameter("Infancia", infancia) :
                new ObjectParameter("Infancia", typeof(string));
    
            var evaluacionAlimentacionActualParameter = evaluacionAlimentacionActual != null ?
                new ObjectParameter("EvaluacionAlimentacionActual", evaluacionAlimentacionActual) :
                new ObjectParameter("EvaluacionAlimentacionActual", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_EA>("USP_Anamnesis_EA_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, motivoConsultaParameter, idFormaInicioParameter, idCursoEnfermedadParameter, tiempoEnfermedadParameter, relatoCronologicoParameter, apetitoParameter, sedParameter, orinaParameter, deposicionesParameter, suenoParameter, pesoAnteriorParameter, infanciaParameter, evaluacionAlimentacionActualParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_DIAGNOSTICO(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idDiagnostico, Nullable<int> idDeterminacionDiagnostica, Nullable<int> idGradoAfeccion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var idDeterminacionDiagnosticaParameter = idDeterminacionDiagnostica.HasValue ?
                new ObjectParameter("IdDeterminacionDiagnostica", idDeterminacionDiagnostica) :
                new ObjectParameter("IdDeterminacionDiagnostica", typeof(int));
    
            var idGradoAfeccionParameter = idGradoAfeccion.HasValue ?
                new ObjectParameter("IdGradoAfeccion", idGradoAfeccion) :
                new ObjectParameter("IdGradoAfeccion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_DIAGNOSTICO", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idDiagnosticoParameter, idDeterminacionDiagnosticaParameter, idGradoAfeccionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_EXAMENFISICOTRIAJE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<decimal> presionArterial, Nullable<decimal> frecuenciaRespiratoria, Nullable<decimal> frecuenciaCardiaca, Nullable<decimal> temperatura, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> indiceMasaCorporal, Nullable<short> idEstadoGeneral, Nullable<short> idNutricion, Nullable<short> idHidratacion, Nullable<short> idColaboracion, string observacionesAdicionales, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var presionArterialParameter = presionArterial.HasValue ?
                new ObjectParameter("PresionArterial", presionArterial) :
                new ObjectParameter("PresionArterial", typeof(decimal));
    
            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(decimal));
    
            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));
    
            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));
    
            var indiceMasaCorporalParameter = indiceMasaCorporal.HasValue ?
                new ObjectParameter("IndiceMasaCorporal", indiceMasaCorporal) :
                new ObjectParameter("IndiceMasaCorporal", typeof(decimal));
    
            var idEstadoGeneralParameter = idEstadoGeneral.HasValue ?
                new ObjectParameter("IdEstadoGeneral", idEstadoGeneral) :
                new ObjectParameter("IdEstadoGeneral", typeof(short));
    
            var idNutricionParameter = idNutricion.HasValue ?
                new ObjectParameter("IdNutricion", idNutricion) :
                new ObjectParameter("IdNutricion", typeof(short));
    
            var idHidratacionParameter = idHidratacion.HasValue ?
                new ObjectParameter("IdHidratacion", idHidratacion) :
                new ObjectParameter("IdHidratacion", typeof(short));
    
            var idColaboracionParameter = idColaboracion.HasValue ?
                new ObjectParameter("IdColaboracion", idColaboracion) :
                new ObjectParameter("IdColaboracion", typeof(short));
    
            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_EXAMENFISICOTRIAJE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, presionArterialParameter, frecuenciaRespiratoriaParameter, frecuenciaCardiacaParameter, temperaturaParameter, pesoParameter, tallaParameter, indiceMasaCorporalParameter, idEstadoGeneralParameter, idNutricionParameter, idHidratacionParameter, idColaboracionParameter, observacionesAdicionalesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_ExamenFisico_Triaje> USP_ExamenFisicoTriajeListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<decimal> presionArterial, Nullable<decimal> frecuenciaRespiratoria, Nullable<decimal> frecuenciaCardiaca, Nullable<decimal> temperatura, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> indiceMasaCorporal, Nullable<short> idEstadoGeneral, Nullable<short> idNutricion, Nullable<short> idHidratacion, Nullable<short> idColaboracion, string observacionesAdicionales, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ExamenFisico_Triaje).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var presionArterialParameter = presionArterial.HasValue ?
                new ObjectParameter("PresionArterial", presionArterial) :
                new ObjectParameter("PresionArterial", typeof(decimal));
    
            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(decimal));
    
            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));
    
            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));
    
            var indiceMasaCorporalParameter = indiceMasaCorporal.HasValue ?
                new ObjectParameter("IndiceMasaCorporal", indiceMasaCorporal) :
                new ObjectParameter("IndiceMasaCorporal", typeof(decimal));
    
            var idEstadoGeneralParameter = idEstadoGeneral.HasValue ?
                new ObjectParameter("IdEstadoGeneral", idEstadoGeneral) :
                new ObjectParameter("IdEstadoGeneral", typeof(short));
    
            var idNutricionParameter = idNutricion.HasValue ?
                new ObjectParameter("IdNutricion", idNutricion) :
                new ObjectParameter("IdNutricion", typeof(short));
    
            var idHidratacionParameter = idHidratacion.HasValue ?
                new ObjectParameter("IdHidratacion", idHidratacion) :
                new ObjectParameter("IdHidratacion", typeof(short));
    
            var idColaboracionParameter = idColaboracion.HasValue ?
                new ObjectParameter("IdColaboracion", idColaboracion) :
                new ObjectParameter("IdColaboracion", typeof(short));
    
            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ExamenFisico_Triaje>("USP_ExamenFisicoTriajeListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, presionArterialParameter, frecuenciaRespiratoriaParameter, frecuenciaCardiacaParameter, temperaturaParameter, pesoParameter, tallaParameter, indiceMasaCorporalParameter, idEstadoGeneralParameter, idNutricionParameter, idHidratacionParameter, idColaboracionParameter, observacionesAdicionalesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_ExamenFisico_Triaje> USP_ExamenFisicoTriajeListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<decimal> presionArterial, Nullable<decimal> frecuenciaRespiratoria, Nullable<decimal> frecuenciaCardiaca, Nullable<decimal> temperatura, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> indiceMasaCorporal, Nullable<short> idEstadoGeneral, Nullable<short> idNutricion, Nullable<short> idHidratacion, Nullable<short> idColaboracion, string observacionesAdicionales, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ExamenFisico_Triaje).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var presionArterialParameter = presionArterial.HasValue ?
                new ObjectParameter("PresionArterial", presionArterial) :
                new ObjectParameter("PresionArterial", typeof(decimal));
    
            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(decimal));
    
            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));
    
            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));
    
            var indiceMasaCorporalParameter = indiceMasaCorporal.HasValue ?
                new ObjectParameter("IndiceMasaCorporal", indiceMasaCorporal) :
                new ObjectParameter("IndiceMasaCorporal", typeof(decimal));
    
            var idEstadoGeneralParameter = idEstadoGeneral.HasValue ?
                new ObjectParameter("IdEstadoGeneral", idEstadoGeneral) :
                new ObjectParameter("IdEstadoGeneral", typeof(short));
    
            var idNutricionParameter = idNutricion.HasValue ?
                new ObjectParameter("IdNutricion", idNutricion) :
                new ObjectParameter("IdNutricion", typeof(short));
    
            var idHidratacionParameter = idHidratacion.HasValue ?
                new ObjectParameter("IdHidratacion", idHidratacion) :
                new ObjectParameter("IdHidratacion", typeof(short));
    
            var idColaboracionParameter = idColaboracion.HasValue ?
                new ObjectParameter("IdColaboracion", idColaboracion) :
                new ObjectParameter("IdColaboracion", typeof(short));
    
            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ExamenFisico_Triaje>("USP_ExamenFisicoTriajeListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, presionArterialParameter, frecuenciaRespiratoriaParameter, frecuenciaCardiacaParameter, temperaturaParameter, pesoParameter, tallaParameter, indiceMasaCorporalParameter, idEstadoGeneralParameter, idNutricionParameter, idHidratacionParameter, idColaboracionParameter, observacionesAdicionalesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_MiscelaneosDetalle(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, string valorCodigo6, string valorCodigo7, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, Nullable<int> valorEntero6, Nullable<int> valorEntero7, Nullable<System.DateTime> valorFecha, string estado, string aCCION)
        {
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorCodigo6Parameter = valorCodigo6 != null ?
                new ObjectParameter("ValorCodigo6", valorCodigo6) :
                new ObjectParameter("ValorCodigo6", typeof(string));
    
            var valorCodigo7Parameter = valorCodigo7 != null ?
                new ObjectParameter("ValorCodigo7", valorCodigo7) :
                new ObjectParameter("ValorCodigo7", typeof(string));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_MiscelaneosDetalle", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorCodigo6Parameter, valorCodigo7Parameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorEntero6Parameter, valorEntero7Parameter, valorFechaParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_AnamnesisAF(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idTipoParentesco, Nullable<int> edad, Nullable<int> idVivo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idTipoParentescoParameter = idTipoParentesco.HasValue ?
                new ObjectParameter("IdTipoParentesco", idTipoParentesco) :
                new ObjectParameter("IdTipoParentesco", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var idVivoParameter = idVivo.HasValue ?
                new ObjectParameter("IdVivo", idVivo) :
                new ObjectParameter("IdVivo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_AnamnesisAF", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idTipoParentescoParameter, edadParameter, idVivoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_AF> USP_AnamnesisAFListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idTipoParentesco, Nullable<int> edad, Nullable<int> idVivo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_AF).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idTipoParentescoParameter = idTipoParentesco.HasValue ?
                new ObjectParameter("IdTipoParentesco", idTipoParentesco) :
                new ObjectParameter("IdTipoParentesco", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var idVivoParameter = idVivo.HasValue ?
                new ObjectParameter("IdVivo", idVivo) :
                new ObjectParameter("IdVivo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_AF>("USP_AnamnesisAFListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idTipoParentescoParameter, edadParameter, idVivoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_AF> USP_AnamnesisAFListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idTipoParentesco, Nullable<int> edad, Nullable<int> idVivo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_AF).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idTipoParentescoParameter = idTipoParentesco.HasValue ?
                new ObjectParameter("IdTipoParentesco", idTipoParentesco) :
                new ObjectParameter("IdTipoParentesco", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var idVivoParameter = idVivo.HasValue ?
                new ObjectParameter("IdVivo", idVivo) :
                new ObjectParameter("IdVivo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_AF>("USP_AnamnesisAFListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idTipoParentescoParameter, edadParameter, idVivoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Diagnostico> USP_DiagnosticoListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idDiagnostico, Nullable<int> idDeterminacionDiagnostica, Nullable<int> idGradoAfeccion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Diagnostico).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var idDeterminacionDiagnosticaParameter = idDeterminacionDiagnostica.HasValue ?
                new ObjectParameter("IdDeterminacionDiagnostica", idDeterminacionDiagnostica) :
                new ObjectParameter("IdDeterminacionDiagnostica", typeof(int));
    
            var idGradoAfeccionParameter = idGradoAfeccion.HasValue ?
                new ObjectParameter("IdGradoAfeccion", idGradoAfeccion) :
                new ObjectParameter("IdGradoAfeccion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Diagnostico>("USP_DiagnosticoListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idDiagnosticoParameter, idDeterminacionDiagnosticaParameter, idGradoAfeccionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Diagnostico> USP_DiagnosticoListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idDiagnostico, Nullable<int> idDeterminacionDiagnostica, Nullable<int> idGradoAfeccion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Diagnostico).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var idDeterminacionDiagnosticaParameter = idDeterminacionDiagnostica.HasValue ?
                new ObjectParameter("IdDeterminacionDiagnostica", idDeterminacionDiagnostica) :
                new ObjectParameter("IdDeterminacionDiagnostica", typeof(int));
    
            var idGradoAfeccionParameter = idGradoAfeccion.HasValue ?
                new ObjectParameter("IdGradoAfeccion", idGradoAfeccion) :
                new ObjectParameter("IdGradoAfeccion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Diagnostico>("USP_DiagnosticoListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idDiagnosticoParameter, idDeterminacionDiagnosticaParameter, idGradoAfeccionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual int SP_ELIMINAR(Nullable<int> codigo, string gRUPO, string cONCEPTO, string cONCEPTOPADRE, Nullable<int> iDPAGINA, string aCCION)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var cONCEPTOPADREParameter = cONCEPTOPADRE != null ?
                new ObjectParameter("CONCEPTOPADRE", cONCEPTOPADRE) :
                new ObjectParameter("CONCEPTOPADRE", typeof(string));
    
            var iDPAGINAParameter = iDPAGINA.HasValue ?
                new ObjectParameter("IDPAGINA", iDPAGINA) :
                new ObjectParameter("IDPAGINA", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ELIMINAR", codigoParameter, gRUPOParameter, cONCEPTOParameter, cONCEPTOPADREParameter, iDPAGINAParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_EPISODIOATENCION_LISTAR(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> episodioAtencion, Nullable<int> idPaciente, Nullable<int> tipoAtencion, string motivoConsulta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var motivoConsultaParameter = motivoConsulta != null ?
                new ObjectParameter("MotivoConsulta", motivoConsulta) :
                new ObjectParameter("MotivoConsulta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_EPISODIOATENCION_LISTAR", unidadReplicacionParameter, idEpisodioAtencionParameter, episodioAtencionParameter, idPacienteParameter, tipoAtencionParameter, motivoConsultaParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_EPISODIOATENCION_LISTAR(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> episodioAtencion, Nullable<int> idPaciente, Nullable<int> tipoAtencion, string motivoConsulta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var motivoConsultaParameter = motivoConsulta != null ?
                new ObjectParameter("MotivoConsulta", motivoConsulta) :
                new ObjectParameter("MotivoConsulta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_EPISODIOATENCION_LISTAR", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, episodioAtencionParameter, idPacienteParameter, tipoAtencionParameter, motivoConsultaParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_LISTADORECURSOS(string aplicacionCodigo, string codigoTabla, string codigoElemento, string descripcionLocal, string estado, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_LISTADORECURSOS", aplicacionCodigoParameter, codigoTablaParameter, codigoElementoParameter, descripcionLocalParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_LISTADORECURSOS(string aplicacionCodigo, string codigoTabla, string codigoElemento, string descripcionLocal, string estado, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_LISTADORECURSOS", mergeOption, aplicacionCodigoParameter, codigoTablaParameter, codigoElementoParameter, descripcionLocalParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_Problema(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tipoProblema, Nullable<int> idTipoProblemaDiag, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<int> idDiagnostico, string observacion, Nullable<int> idControlado, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var tipoProblemaParameter = tipoProblema != null ?
                new ObjectParameter("TipoProblema", tipoProblema) :
                new ObjectParameter("TipoProblema", typeof(string));
    
            var idTipoProblemaDiagParameter = idTipoProblemaDiag.HasValue ?
                new ObjectParameter("IdTipoProblemaDiag", idTipoProblemaDiag) :
                new ObjectParameter("IdTipoProblemaDiag", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var idControladoParameter = idControlado.HasValue ?
                new ObjectParameter("IdControlado", idControlado) :
                new ObjectParameter("IdControlado", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_Problema", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoProblemaParameter, idTipoProblemaDiagParameter, secuenciaParameter, fechaParameter, idDiagnosticoParameter, observacionParameter, idControladoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Problema> USP_ProblemaListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tipoProblema, Nullable<int> idTipoProblemaDiag, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<int> idDiagnostico, string observacion, Nullable<int> idControlado, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Problema).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var tipoProblemaParameter = tipoProblema != null ?
                new ObjectParameter("TipoProblema", tipoProblema) :
                new ObjectParameter("TipoProblema", typeof(string));
    
            var idTipoProblemaDiagParameter = idTipoProblemaDiag.HasValue ?
                new ObjectParameter("IdTipoProblemaDiag", idTipoProblemaDiag) :
                new ObjectParameter("IdTipoProblemaDiag", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var idControladoParameter = idControlado.HasValue ?
                new ObjectParameter("IdControlado", idControlado) :
                new ObjectParameter("IdControlado", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Problema>("USP_ProblemaListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoProblemaParameter, idTipoProblemaDiagParameter, secuenciaParameter, fechaParameter, idDiagnosticoParameter, observacionParameter, idControladoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Problema> USP_ProblemaListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tipoProblema, Nullable<int> idTipoProblemaDiag, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<int> idDiagnostico, string observacion, Nullable<int> idControlado, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Problema).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var tipoProblemaParameter = tipoProblema != null ?
                new ObjectParameter("TipoProblema", tipoProblema) :
                new ObjectParameter("TipoProblema", typeof(string));
    
            var idTipoProblemaDiagParameter = idTipoProblemaDiag.HasValue ?
                new ObjectParameter("IdTipoProblemaDiag", idTipoProblemaDiag) :
                new ObjectParameter("IdTipoProblemaDiag", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var idControladoParameter = idControlado.HasValue ?
                new ObjectParameter("IdControlado", idControlado) :
                new ObjectParameter("IdControlado", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Problema>("USP_ProblemaListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoProblemaParameter, idTipoProblemaDiagParameter, secuenciaParameter, fechaParameter, idDiagnosticoParameter, observacionParameter, idControladoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SEGURIDADCONCEPTO> USP_SEGURIDADCONCEPTOS(string aCCION, string aPLICACIONCODIGO, string gRUPO)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADCONCEPTO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADCONCEPTO>("USP_SEGURIDADCONCEPTOS", aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter);
        }
    
        public virtual ObjectResult<SEGURIDADCONCEPTO> USP_SEGURIDADCONCEPTOS(string aCCION, string aPLICACIONCODIGO, string gRUPO, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADCONCEPTO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADCONCEPTO>("USP_SEGURIDADCONCEPTOS", mergeOption, aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_Anamnesis_EA(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string motivoConsulta, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, string tiempoEnfermedad, string relatoCronologico, string apetito, string sed, string orina, string deposiciones, string sueno, Nullable<decimal> pesoAnterior, string infancia, string evaluacionAlimentacionActual, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var motivoConsultaParameter = motivoConsulta != null ?
                new ObjectParameter("MotivoConsulta", motivoConsulta) :
                new ObjectParameter("MotivoConsulta", typeof(string));
    
            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));
    
            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));
    
            var tiempoEnfermedadParameter = tiempoEnfermedad != null ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(string));
    
            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));
    
            var apetitoParameter = apetito != null ?
                new ObjectParameter("Apetito", apetito) :
                new ObjectParameter("Apetito", typeof(string));
    
            var sedParameter = sed != null ?
                new ObjectParameter("Sed", sed) :
                new ObjectParameter("Sed", typeof(string));
    
            var orinaParameter = orina != null ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(string));
    
            var deposicionesParameter = deposiciones != null ?
                new ObjectParameter("Deposiciones", deposiciones) :
                new ObjectParameter("Deposiciones", typeof(string));
    
            var suenoParameter = sueno != null ?
                new ObjectParameter("Sueno", sueno) :
                new ObjectParameter("Sueno", typeof(string));
    
            var pesoAnteriorParameter = pesoAnterior.HasValue ?
                new ObjectParameter("PesoAnterior", pesoAnterior) :
                new ObjectParameter("PesoAnterior", typeof(decimal));
    
            var infanciaParameter = infancia != null ?
                new ObjectParameter("Infancia", infancia) :
                new ObjectParameter("Infancia", typeof(string));
    
            var evaluacionAlimentacionActualParameter = evaluacionAlimentacionActual != null ?
                new ObjectParameter("EvaluacionAlimentacionActual", evaluacionAlimentacionActual) :
                new ObjectParameter("EvaluacionAlimentacionActual", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_Anamnesis_EA", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, motivoConsultaParameter, idFormaInicioParameter, idCursoEnfermedadParameter, tiempoEnfermedadParameter, relatoCronologicoParameter, apetitoParameter, sedParameter, orinaParameter, deposicionesParameter, suenoParameter, pesoAnteriorParameter, infanciaParameter, evaluacionAlimentacionActualParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_Medicamento(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, Nullable<decimal> cantidad, string frecuencia, Nullable<int> periodo, Nullable<int> idUnidadTiempo, string codigoMedicamento, Nullable<decimal> cantidadDespachada, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string presentacion, string dosis, Nullable<int> tiempo)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var frecuenciaParameter = frecuencia != null ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var idUnidadTiempoParameter = idUnidadTiempo.HasValue ?
                new ObjectParameter("IdUnidadTiempo", idUnidadTiempo) :
                new ObjectParameter("IdUnidadTiempo", typeof(int));
    
            var codigoMedicamentoParameter = codigoMedicamento != null ?
                new ObjectParameter("CodigoMedicamento", codigoMedicamento) :
                new ObjectParameter("CodigoMedicamento", typeof(string));
    
            var cantidadDespachadaParameter = cantidadDespachada.HasValue ?
                new ObjectParameter("CantidadDespachada", cantidadDespachada) :
                new ObjectParameter("CantidadDespachada", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));
    
            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));
    
            var tiempoParameter = tiempo.HasValue ?
                new ObjectParameter("Tiempo", tiempo) :
                new ObjectParameter("Tiempo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_Medicamento", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, cantidadParameter, frecuenciaParameter, periodoParameter, idUnidadTiempoParameter, codigoMedicamentoParameter, cantidadDespachadaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, presentacionParameter, dosisParameter, tiempoParameter);
        }
    
        public virtual ObjectResult<SS_HC_Medicamento> USP_MedicamentoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, Nullable<decimal> cantidad, string frecuencia, Nullable<int> periodo, Nullable<int> idUnidadTiempo, string codigoMedicamento, Nullable<decimal> cantidadDespachada, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string presentacion, string dosis, Nullable<int> tiempo)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Medicamento).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var frecuenciaParameter = frecuencia != null ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var idUnidadTiempoParameter = idUnidadTiempo.HasValue ?
                new ObjectParameter("IdUnidadTiempo", idUnidadTiempo) :
                new ObjectParameter("IdUnidadTiempo", typeof(int));
    
            var codigoMedicamentoParameter = codigoMedicamento != null ?
                new ObjectParameter("CodigoMedicamento", codigoMedicamento) :
                new ObjectParameter("CodigoMedicamento", typeof(string));
    
            var cantidadDespachadaParameter = cantidadDespachada.HasValue ?
                new ObjectParameter("CantidadDespachada", cantidadDespachada) :
                new ObjectParameter("CantidadDespachada", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));
    
            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));
    
            var tiempoParameter = tiempo.HasValue ?
                new ObjectParameter("Tiempo", tiempo) :
                new ObjectParameter("Tiempo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Medicamento>("USP_MedicamentoListar", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, cantidadParameter, frecuenciaParameter, periodoParameter, idUnidadTiempoParameter, codigoMedicamentoParameter, cantidadDespachadaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, presentacionParameter, dosisParameter, tiempoParameter);
        }
    
        public virtual ObjectResult<SS_HC_Medicamento> USP_MedicamentoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, Nullable<decimal> cantidad, string frecuencia, Nullable<int> periodo, Nullable<int> idUnidadTiempo, string codigoMedicamento, Nullable<decimal> cantidadDespachada, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string presentacion, string dosis, Nullable<int> tiempo, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Medicamento).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var frecuenciaParameter = frecuencia != null ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var idUnidadTiempoParameter = idUnidadTiempo.HasValue ?
                new ObjectParameter("IdUnidadTiempo", idUnidadTiempo) :
                new ObjectParameter("IdUnidadTiempo", typeof(int));
    
            var codigoMedicamentoParameter = codigoMedicamento != null ?
                new ObjectParameter("CodigoMedicamento", codigoMedicamento) :
                new ObjectParameter("CodigoMedicamento", typeof(string));
    
            var cantidadDespachadaParameter = cantidadDespachada.HasValue ?
                new ObjectParameter("CantidadDespachada", cantidadDespachada) :
                new ObjectParameter("CantidadDespachada", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));
    
            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));
    
            var tiempoParameter = tiempo.HasValue ?
                new ObjectParameter("Tiempo", tiempo) :
                new ObjectParameter("Tiempo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Medicamento>("USP_MedicamentoListar", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, cantidadParameter, frecuenciaParameter, periodoParameter, idUnidadTiempoParameter, codigoMedicamentoParameter, cantidadDespachadaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, presentacionParameter, dosisParameter, tiempoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ExamenSolicitado(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<int> idProcedimiento, string observacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idTipoExamen)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idTipoExamenParameter = idTipoExamen.HasValue ?
                new ObjectParameter("IdTipoExamen", idTipoExamen) :
                new ObjectParameter("IdTipoExamen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ExamenSolicitado", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, fechaParameter, idProcedimientoParameter, observacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idTipoExamenParameter);
        }
    
        public virtual ObjectResult<SS_HC_ExamenSolicitado> USP_ExamenSolicitadoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<int> idProcedimiento, string observacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idTipoExamen)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ExamenSolicitado).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idTipoExamenParameter = idTipoExamen.HasValue ?
                new ObjectParameter("IdTipoExamen", idTipoExamen) :
                new ObjectParameter("IdTipoExamen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ExamenSolicitado>("USP_ExamenSolicitadoListar", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, fechaParameter, idProcedimientoParameter, observacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idTipoExamenParameter);
        }
    
        public virtual ObjectResult<SS_HC_ExamenSolicitado> USP_ExamenSolicitadoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<int> idProcedimiento, string observacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idTipoExamen, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ExamenSolicitado).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idTipoExamenParameter = idTipoExamen.HasValue ?
                new ObjectParameter("IdTipoExamen", idTipoExamen) :
                new ObjectParameter("IdTipoExamen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ExamenSolicitado>("USP_ExamenSolicitadoListar", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, fechaParameter, idProcedimientoParameter, observacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idTipoExamenParameter);
        }
    
        public virtual int SP_DICCIONARIO(string aCCION, Nullable<int> iDDICCIONARIO, string cODIGODICCIONARIO, string nOMBREDICCIONARIO, string nOMBRECONTROL, Nullable<int> aNCHO, Nullable<int> aLTURA, Nullable<int> eSTADO)
        {
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iDDICCIONARIOParameter = iDDICCIONARIO.HasValue ?
                new ObjectParameter("IDDICCIONARIO", iDDICCIONARIO) :
                new ObjectParameter("IDDICCIONARIO", typeof(int));
    
            var cODIGODICCIONARIOParameter = cODIGODICCIONARIO != null ?
                new ObjectParameter("CODIGODICCIONARIO", cODIGODICCIONARIO) :
                new ObjectParameter("CODIGODICCIONARIO", typeof(string));
    
            var nOMBREDICCIONARIOParameter = nOMBREDICCIONARIO != null ?
                new ObjectParameter("NOMBREDICCIONARIO", nOMBREDICCIONARIO) :
                new ObjectParameter("NOMBREDICCIONARIO", typeof(string));
    
            var nOMBRECONTROLParameter = nOMBRECONTROL != null ?
                new ObjectParameter("NOMBRECONTROL", nOMBRECONTROL) :
                new ObjectParameter("NOMBRECONTROL", typeof(string));
    
            var aNCHOParameter = aNCHO.HasValue ?
                new ObjectParameter("ANCHO", aNCHO) :
                new ObjectParameter("ANCHO", typeof(int));
    
            var aLTURAParameter = aLTURA.HasValue ?
                new ObjectParameter("ALTURA", aLTURA) :
                new ObjectParameter("ALTURA", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DICCIONARIO", aCCIONParameter, iDDICCIONARIOParameter, cODIGODICCIONARIOParameter, nOMBREDICCIONARIOParameter, nOMBRECONTROLParameter, aNCHOParameter, aLTURAParameter, eSTADOParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_AP> USP_Anamnesis_AP_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<short> idTipoEmbarazo, string patologiaGestacion, Nullable<short> idControlPrenatal, Nullable<short> cPnumeroControles, Nullable<short> cPnumeroEmbarazos, string lugarControl, Nullable<short> idTipoParto, string complicacionesParto, Nullable<short> idLugarParto, Nullable<short> idPartoAtendidoPor, string antecentesPatologicos, Nullable<short> semanasGestacionNacer, Nullable<int> pesoAlNacerGR, Nullable<decimal> tallaAlNacerCM, Nullable<decimal> perimetroCefalicoCM, string patologiasPernatales, Nullable<short> diasHospitalizacion, Nullable<short> idTipoLecheHasta6meses, string antecLactancia, Nullable<short> edadInicioAblactanciaMeses, string desarrolloSicomotriz, Nullable<System.DateTime> fechaUltimaRegla, Nullable<System.DateTime> fechaUltimoPeriodo, string metodosAnticonceptivos, string menarquia, string menopausia, string caracteristicasMenstruaciones, string informacionEmbarazos, string transfusiones, Nullable<System.DateTime> deinmunizFechaAproximada, Nullable<int> deinmunizEdadAproximada, string alcohol, string tabaco, string drogas, string actividadFisica, string consumoVerduras, string consumoFrutas, string medicamentos, string alimentos, string sustanciasEnElAmbiente, string sustanciasContactoConPiel, string contactoPersonaEnferma, string crianzaAnimalesDomesticos, string aguaPotable, string disposicionExcretas, string reaccionAdversaMedicamentos, string saludBucal, string vigilanciaDeCrecimiento, string vigilanciaDelDesarrollo, Nullable<short> idValoracionFuncional1, Nullable<short> idValoracionFuncional2, Nullable<short> idValoracionFuncional3, Nullable<short> idValoracionFuncional4, Nullable<short> idValoracionFuncional5, Nullable<short> idValoracionFuncional6, Nullable<short> diagnosticoFuncional, Nullable<short> idEstadoCognitivo1, Nullable<short> idEstadoCognitivo2, Nullable<short> idEstadoCognitivo3, Nullable<short> idEstadoCognitivo4, Nullable<short> idEstadoCognitivo5, Nullable<short> idEstadoCognitivo6, Nullable<short> idEstadoCognitivo7, Nullable<short> idEstadoCognitivo8, Nullable<short> idEstadoCognitivo9, Nullable<short> idEstadoCognitivo10, Nullable<short> valoracionCognitiva, Nullable<short> idEstadoAfectivo1, Nullable<short> idEstadoAfectivo2, Nullable<short> idEstadoAfectivo3, Nullable<short> idEstadoAfectivo4, Nullable<short> conManifestacionesDepresivas, Nullable<short> valoracionSocioFamiliar1, Nullable<short> valoracionSocioFamiliar2, Nullable<short> valoracionSocioFamiliar3, Nullable<short> valoracionSocioFamiliar4, Nullable<short> valoracionSocioFamiliar5, Nullable<short> valoracionSocioFamiliar, Nullable<short> idCategoriaAdutoMayor, Nullable<short> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_AP).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idTipoEmbarazoParameter = idTipoEmbarazo.HasValue ?
                new ObjectParameter("IdTipoEmbarazo", idTipoEmbarazo) :
                new ObjectParameter("IdTipoEmbarazo", typeof(short));
    
            var patologiaGestacionParameter = patologiaGestacion != null ?
                new ObjectParameter("PatologiaGestacion", patologiaGestacion) :
                new ObjectParameter("PatologiaGestacion", typeof(string));
    
            var idControlPrenatalParameter = idControlPrenatal.HasValue ?
                new ObjectParameter("IdControlPrenatal", idControlPrenatal) :
                new ObjectParameter("IdControlPrenatal", typeof(short));
    
            var cPnumeroControlesParameter = cPnumeroControles.HasValue ?
                new ObjectParameter("CPnumeroControles", cPnumeroControles) :
                new ObjectParameter("CPnumeroControles", typeof(short));
    
            var cPnumeroEmbarazosParameter = cPnumeroEmbarazos.HasValue ?
                new ObjectParameter("CPnumeroEmbarazos", cPnumeroEmbarazos) :
                new ObjectParameter("CPnumeroEmbarazos", typeof(short));
    
            var lugarControlParameter = lugarControl != null ?
                new ObjectParameter("LugarControl", lugarControl) :
                new ObjectParameter("LugarControl", typeof(string));
    
            var idTipoPartoParameter = idTipoParto.HasValue ?
                new ObjectParameter("IdTipoParto", idTipoParto) :
                new ObjectParameter("IdTipoParto", typeof(short));
    
            var complicacionesPartoParameter = complicacionesParto != null ?
                new ObjectParameter("ComplicacionesParto", complicacionesParto) :
                new ObjectParameter("ComplicacionesParto", typeof(string));
    
            var idLugarPartoParameter = idLugarParto.HasValue ?
                new ObjectParameter("IdLugarParto", idLugarParto) :
                new ObjectParameter("IdLugarParto", typeof(short));
    
            var idPartoAtendidoPorParameter = idPartoAtendidoPor.HasValue ?
                new ObjectParameter("IdPartoAtendidoPor", idPartoAtendidoPor) :
                new ObjectParameter("IdPartoAtendidoPor", typeof(short));
    
            var antecentesPatologicosParameter = antecentesPatologicos != null ?
                new ObjectParameter("AntecentesPatologicos", antecentesPatologicos) :
                new ObjectParameter("AntecentesPatologicos", typeof(string));
    
            var semanasGestacionNacerParameter = semanasGestacionNacer.HasValue ?
                new ObjectParameter("SemanasGestacionNacer", semanasGestacionNacer) :
                new ObjectParameter("SemanasGestacionNacer", typeof(short));
    
            var pesoAlNacerGRParameter = pesoAlNacerGR.HasValue ?
                new ObjectParameter("PesoAlNacerGR", pesoAlNacerGR) :
                new ObjectParameter("PesoAlNacerGR", typeof(int));
    
            var tallaAlNacerCMParameter = tallaAlNacerCM.HasValue ?
                new ObjectParameter("TallaAlNacerCM", tallaAlNacerCM) :
                new ObjectParameter("TallaAlNacerCM", typeof(decimal));
    
            var perimetroCefalicoCMParameter = perimetroCefalicoCM.HasValue ?
                new ObjectParameter("PerimetroCefalicoCM", perimetroCefalicoCM) :
                new ObjectParameter("PerimetroCefalicoCM", typeof(decimal));
    
            var patologiasPernatalesParameter = patologiasPernatales != null ?
                new ObjectParameter("PatologiasPernatales", patologiasPernatales) :
                new ObjectParameter("PatologiasPernatales", typeof(string));
    
            var diasHospitalizacionParameter = diasHospitalizacion.HasValue ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(short));
    
            var idTipoLecheHasta6mesesParameter = idTipoLecheHasta6meses.HasValue ?
                new ObjectParameter("IdTipoLecheHasta6meses", idTipoLecheHasta6meses) :
                new ObjectParameter("IdTipoLecheHasta6meses", typeof(short));
    
            var antecLactanciaParameter = antecLactancia != null ?
                new ObjectParameter("AntecLactancia", antecLactancia) :
                new ObjectParameter("AntecLactancia", typeof(string));
    
            var edadInicioAblactanciaMesesParameter = edadInicioAblactanciaMeses.HasValue ?
                new ObjectParameter("EdadInicioAblactanciaMeses", edadInicioAblactanciaMeses) :
                new ObjectParameter("EdadInicioAblactanciaMeses", typeof(short));
    
            var desarrolloSicomotrizParameter = desarrolloSicomotriz != null ?
                new ObjectParameter("DesarrolloSicomotriz", desarrolloSicomotriz) :
                new ObjectParameter("DesarrolloSicomotriz", typeof(string));
    
            var fechaUltimaReglaParameter = fechaUltimaRegla.HasValue ?
                new ObjectParameter("FechaUltimaRegla", fechaUltimaRegla) :
                new ObjectParameter("FechaUltimaRegla", typeof(System.DateTime));
    
            var fechaUltimoPeriodoParameter = fechaUltimoPeriodo.HasValue ?
                new ObjectParameter("FechaUltimoPeriodo", fechaUltimoPeriodo) :
                new ObjectParameter("FechaUltimoPeriodo", typeof(System.DateTime));
    
            var metodosAnticonceptivosParameter = metodosAnticonceptivos != null ?
                new ObjectParameter("MetodosAnticonceptivos", metodosAnticonceptivos) :
                new ObjectParameter("MetodosAnticonceptivos", typeof(string));
    
            var menarquiaParameter = menarquia != null ?
                new ObjectParameter("Menarquia", menarquia) :
                new ObjectParameter("Menarquia", typeof(string));
    
            var menopausiaParameter = menopausia != null ?
                new ObjectParameter("Menopausia", menopausia) :
                new ObjectParameter("Menopausia", typeof(string));
    
            var caracteristicasMenstruacionesParameter = caracteristicasMenstruaciones != null ?
                new ObjectParameter("CaracteristicasMenstruaciones", caracteristicasMenstruaciones) :
                new ObjectParameter("CaracteristicasMenstruaciones", typeof(string));
    
            var informacionEmbarazosParameter = informacionEmbarazos != null ?
                new ObjectParameter("InformacionEmbarazos", informacionEmbarazos) :
                new ObjectParameter("InformacionEmbarazos", typeof(string));
    
            var transfusionesParameter = transfusiones != null ?
                new ObjectParameter("Transfusiones", transfusiones) :
                new ObjectParameter("Transfusiones", typeof(string));
    
            var deinmunizFechaAproximadaParameter = deinmunizFechaAproximada.HasValue ?
                new ObjectParameter("DeinmunizFechaAproximada", deinmunizFechaAproximada) :
                new ObjectParameter("DeinmunizFechaAproximada", typeof(System.DateTime));
    
            var deinmunizEdadAproximadaParameter = deinmunizEdadAproximada.HasValue ?
                new ObjectParameter("DeinmunizEdadAproximada", deinmunizEdadAproximada) :
                new ObjectParameter("DeinmunizEdadAproximada", typeof(int));
    
            var alcoholParameter = alcohol != null ?
                new ObjectParameter("Alcohol", alcohol) :
                new ObjectParameter("Alcohol", typeof(string));
    
            var tabacoParameter = tabaco != null ?
                new ObjectParameter("Tabaco", tabaco) :
                new ObjectParameter("Tabaco", typeof(string));
    
            var drogasParameter = drogas != null ?
                new ObjectParameter("Drogas", drogas) :
                new ObjectParameter("Drogas", typeof(string));
    
            var actividadFisicaParameter = actividadFisica != null ?
                new ObjectParameter("ActividadFisica", actividadFisica) :
                new ObjectParameter("ActividadFisica", typeof(string));
    
            var consumoVerdurasParameter = consumoVerduras != null ?
                new ObjectParameter("ConsumoVerduras", consumoVerduras) :
                new ObjectParameter("ConsumoVerduras", typeof(string));
    
            var consumoFrutasParameter = consumoFrutas != null ?
                new ObjectParameter("ConsumoFrutas", consumoFrutas) :
                new ObjectParameter("ConsumoFrutas", typeof(string));
    
            var medicamentosParameter = medicamentos != null ?
                new ObjectParameter("Medicamentos", medicamentos) :
                new ObjectParameter("Medicamentos", typeof(string));
    
            var alimentosParameter = alimentos != null ?
                new ObjectParameter("Alimentos", alimentos) :
                new ObjectParameter("Alimentos", typeof(string));
    
            var sustanciasEnElAmbienteParameter = sustanciasEnElAmbiente != null ?
                new ObjectParameter("SustanciasEnElAmbiente", sustanciasEnElAmbiente) :
                new ObjectParameter("SustanciasEnElAmbiente", typeof(string));
    
            var sustanciasContactoConPielParameter = sustanciasContactoConPiel != null ?
                new ObjectParameter("SustanciasContactoConPiel", sustanciasContactoConPiel) :
                new ObjectParameter("SustanciasContactoConPiel", typeof(string));
    
            var contactoPersonaEnfermaParameter = contactoPersonaEnferma != null ?
                new ObjectParameter("ContactoPersonaEnferma", contactoPersonaEnferma) :
                new ObjectParameter("ContactoPersonaEnferma", typeof(string));
    
            var crianzaAnimalesDomesticosParameter = crianzaAnimalesDomesticos != null ?
                new ObjectParameter("CrianzaAnimalesDomesticos", crianzaAnimalesDomesticos) :
                new ObjectParameter("CrianzaAnimalesDomesticos", typeof(string));
    
            var aguaPotableParameter = aguaPotable != null ?
                new ObjectParameter("AguaPotable", aguaPotable) :
                new ObjectParameter("AguaPotable", typeof(string));
    
            var disposicionExcretasParameter = disposicionExcretas != null ?
                new ObjectParameter("DisposicionExcretas", disposicionExcretas) :
                new ObjectParameter("DisposicionExcretas", typeof(string));
    
            var reaccionAdversaMedicamentosParameter = reaccionAdversaMedicamentos != null ?
                new ObjectParameter("ReaccionAdversaMedicamentos", reaccionAdversaMedicamentos) :
                new ObjectParameter("ReaccionAdversaMedicamentos", typeof(string));
    
            var saludBucalParameter = saludBucal != null ?
                new ObjectParameter("SaludBucal", saludBucal) :
                new ObjectParameter("SaludBucal", typeof(string));
    
            var vigilanciaDeCrecimientoParameter = vigilanciaDeCrecimiento != null ?
                new ObjectParameter("VigilanciaDeCrecimiento", vigilanciaDeCrecimiento) :
                new ObjectParameter("VigilanciaDeCrecimiento", typeof(string));
    
            var vigilanciaDelDesarrolloParameter = vigilanciaDelDesarrollo != null ?
                new ObjectParameter("VigilanciaDelDesarrollo", vigilanciaDelDesarrollo) :
                new ObjectParameter("VigilanciaDelDesarrollo", typeof(string));
    
            var idValoracionFuncional1Parameter = idValoracionFuncional1.HasValue ?
                new ObjectParameter("IdValoracionFuncional1", idValoracionFuncional1) :
                new ObjectParameter("IdValoracionFuncional1", typeof(short));
    
            var idValoracionFuncional2Parameter = idValoracionFuncional2.HasValue ?
                new ObjectParameter("IdValoracionFuncional2", idValoracionFuncional2) :
                new ObjectParameter("IdValoracionFuncional2", typeof(short));
    
            var idValoracionFuncional3Parameter = idValoracionFuncional3.HasValue ?
                new ObjectParameter("IdValoracionFuncional3", idValoracionFuncional3) :
                new ObjectParameter("IdValoracionFuncional3", typeof(short));
    
            var idValoracionFuncional4Parameter = idValoracionFuncional4.HasValue ?
                new ObjectParameter("IdValoracionFuncional4", idValoracionFuncional4) :
                new ObjectParameter("IdValoracionFuncional4", typeof(short));
    
            var idValoracionFuncional5Parameter = idValoracionFuncional5.HasValue ?
                new ObjectParameter("IdValoracionFuncional5", idValoracionFuncional5) :
                new ObjectParameter("IdValoracionFuncional5", typeof(short));
    
            var idValoracionFuncional6Parameter = idValoracionFuncional6.HasValue ?
                new ObjectParameter("IdValoracionFuncional6", idValoracionFuncional6) :
                new ObjectParameter("IdValoracionFuncional6", typeof(short));
    
            var diagnosticoFuncionalParameter = diagnosticoFuncional.HasValue ?
                new ObjectParameter("DiagnosticoFuncional", diagnosticoFuncional) :
                new ObjectParameter("DiagnosticoFuncional", typeof(short));
    
            var idEstadoCognitivo1Parameter = idEstadoCognitivo1.HasValue ?
                new ObjectParameter("IdEstadoCognitivo1", idEstadoCognitivo1) :
                new ObjectParameter("IdEstadoCognitivo1", typeof(short));
    
            var idEstadoCognitivo2Parameter = idEstadoCognitivo2.HasValue ?
                new ObjectParameter("IdEstadoCognitivo2", idEstadoCognitivo2) :
                new ObjectParameter("IdEstadoCognitivo2", typeof(short));
    
            var idEstadoCognitivo3Parameter = idEstadoCognitivo3.HasValue ?
                new ObjectParameter("IdEstadoCognitivo3", idEstadoCognitivo3) :
                new ObjectParameter("IdEstadoCognitivo3", typeof(short));
    
            var idEstadoCognitivo4Parameter = idEstadoCognitivo4.HasValue ?
                new ObjectParameter("IdEstadoCognitivo4", idEstadoCognitivo4) :
                new ObjectParameter("IdEstadoCognitivo4", typeof(short));
    
            var idEstadoCognitivo5Parameter = idEstadoCognitivo5.HasValue ?
                new ObjectParameter("IdEstadoCognitivo5", idEstadoCognitivo5) :
                new ObjectParameter("IdEstadoCognitivo5", typeof(short));
    
            var idEstadoCognitivo6Parameter = idEstadoCognitivo6.HasValue ?
                new ObjectParameter("IdEstadoCognitivo6", idEstadoCognitivo6) :
                new ObjectParameter("IdEstadoCognitivo6", typeof(short));
    
            var idEstadoCognitivo7Parameter = idEstadoCognitivo7.HasValue ?
                new ObjectParameter("IdEstadoCognitivo7", idEstadoCognitivo7) :
                new ObjectParameter("IdEstadoCognitivo7", typeof(short));
    
            var idEstadoCognitivo8Parameter = idEstadoCognitivo8.HasValue ?
                new ObjectParameter("IdEstadoCognitivo8", idEstadoCognitivo8) :
                new ObjectParameter("IdEstadoCognitivo8", typeof(short));
    
            var idEstadoCognitivo9Parameter = idEstadoCognitivo9.HasValue ?
                new ObjectParameter("IdEstadoCognitivo9", idEstadoCognitivo9) :
                new ObjectParameter("IdEstadoCognitivo9", typeof(short));
    
            var idEstadoCognitivo10Parameter = idEstadoCognitivo10.HasValue ?
                new ObjectParameter("IdEstadoCognitivo10", idEstadoCognitivo10) :
                new ObjectParameter("IdEstadoCognitivo10", typeof(short));
    
            var valoracionCognitivaParameter = valoracionCognitiva.HasValue ?
                new ObjectParameter("ValoracionCognitiva", valoracionCognitiva) :
                new ObjectParameter("ValoracionCognitiva", typeof(short));
    
            var idEstadoAfectivo1Parameter = idEstadoAfectivo1.HasValue ?
                new ObjectParameter("IdEstadoAfectivo1", idEstadoAfectivo1) :
                new ObjectParameter("IdEstadoAfectivo1", typeof(short));
    
            var idEstadoAfectivo2Parameter = idEstadoAfectivo2.HasValue ?
                new ObjectParameter("IdEstadoAfectivo2", idEstadoAfectivo2) :
                new ObjectParameter("IdEstadoAfectivo2", typeof(short));
    
            var idEstadoAfectivo3Parameter = idEstadoAfectivo3.HasValue ?
                new ObjectParameter("IdEstadoAfectivo3", idEstadoAfectivo3) :
                new ObjectParameter("IdEstadoAfectivo3", typeof(short));
    
            var idEstadoAfectivo4Parameter = idEstadoAfectivo4.HasValue ?
                new ObjectParameter("IdEstadoAfectivo4", idEstadoAfectivo4) :
                new ObjectParameter("IdEstadoAfectivo4", typeof(short));
    
            var conManifestacionesDepresivasParameter = conManifestacionesDepresivas.HasValue ?
                new ObjectParameter("ConManifestacionesDepresivas", conManifestacionesDepresivas) :
                new ObjectParameter("ConManifestacionesDepresivas", typeof(short));
    
            var valoracionSocioFamiliar1Parameter = valoracionSocioFamiliar1.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar1", valoracionSocioFamiliar1) :
                new ObjectParameter("ValoracionSocioFamiliar1", typeof(short));
    
            var valoracionSocioFamiliar2Parameter = valoracionSocioFamiliar2.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar2", valoracionSocioFamiliar2) :
                new ObjectParameter("ValoracionSocioFamiliar2", typeof(short));
    
            var valoracionSocioFamiliar3Parameter = valoracionSocioFamiliar3.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar3", valoracionSocioFamiliar3) :
                new ObjectParameter("ValoracionSocioFamiliar3", typeof(short));
    
            var valoracionSocioFamiliar4Parameter = valoracionSocioFamiliar4.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar4", valoracionSocioFamiliar4) :
                new ObjectParameter("ValoracionSocioFamiliar4", typeof(short));
    
            var valoracionSocioFamiliar5Parameter = valoracionSocioFamiliar5.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar5", valoracionSocioFamiliar5) :
                new ObjectParameter("ValoracionSocioFamiliar5", typeof(short));
    
            var valoracionSocioFamiliarParameter = valoracionSocioFamiliar.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar", valoracionSocioFamiliar) :
                new ObjectParameter("ValoracionSocioFamiliar", typeof(short));
    
            var idCategoriaAdutoMayorParameter = idCategoriaAdutoMayor.HasValue ?
                new ObjectParameter("IdCategoriaAdutoMayor", idCategoriaAdutoMayor) :
                new ObjectParameter("IdCategoriaAdutoMayor", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(short));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_AP>("USP_Anamnesis_AP_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idTipoEmbarazoParameter, patologiaGestacionParameter, idControlPrenatalParameter, cPnumeroControlesParameter, cPnumeroEmbarazosParameter, lugarControlParameter, idTipoPartoParameter, complicacionesPartoParameter, idLugarPartoParameter, idPartoAtendidoPorParameter, antecentesPatologicosParameter, semanasGestacionNacerParameter, pesoAlNacerGRParameter, tallaAlNacerCMParameter, perimetroCefalicoCMParameter, patologiasPernatalesParameter, diasHospitalizacionParameter, idTipoLecheHasta6mesesParameter, antecLactanciaParameter, edadInicioAblactanciaMesesParameter, desarrolloSicomotrizParameter, fechaUltimaReglaParameter, fechaUltimoPeriodoParameter, metodosAnticonceptivosParameter, menarquiaParameter, menopausiaParameter, caracteristicasMenstruacionesParameter, informacionEmbarazosParameter, transfusionesParameter, deinmunizFechaAproximadaParameter, deinmunizEdadAproximadaParameter, alcoholParameter, tabacoParameter, drogasParameter, actividadFisicaParameter, consumoVerdurasParameter, consumoFrutasParameter, medicamentosParameter, alimentosParameter, sustanciasEnElAmbienteParameter, sustanciasContactoConPielParameter, contactoPersonaEnfermaParameter, crianzaAnimalesDomesticosParameter, aguaPotableParameter, disposicionExcretasParameter, reaccionAdversaMedicamentosParameter, saludBucalParameter, vigilanciaDeCrecimientoParameter, vigilanciaDelDesarrolloParameter, idValoracionFuncional1Parameter, idValoracionFuncional2Parameter, idValoracionFuncional3Parameter, idValoracionFuncional4Parameter, idValoracionFuncional5Parameter, idValoracionFuncional6Parameter, diagnosticoFuncionalParameter, idEstadoCognitivo1Parameter, idEstadoCognitivo2Parameter, idEstadoCognitivo3Parameter, idEstadoCognitivo4Parameter, idEstadoCognitivo5Parameter, idEstadoCognitivo6Parameter, idEstadoCognitivo7Parameter, idEstadoCognitivo8Parameter, idEstadoCognitivo9Parameter, idEstadoCognitivo10Parameter, valoracionCognitivaParameter, idEstadoAfectivo1Parameter, idEstadoAfectivo2Parameter, idEstadoAfectivo3Parameter, idEstadoAfectivo4Parameter, conManifestacionesDepresivasParameter, valoracionSocioFamiliar1Parameter, valoracionSocioFamiliar2Parameter, valoracionSocioFamiliar3Parameter, valoracionSocioFamiliar4Parameter, valoracionSocioFamiliar5Parameter, valoracionSocioFamiliarParameter, idCategoriaAdutoMayorParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_AP> USP_Anamnesis_AP_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<short> idTipoEmbarazo, string patologiaGestacion, Nullable<short> idControlPrenatal, Nullable<short> cPnumeroControles, Nullable<short> cPnumeroEmbarazos, string lugarControl, Nullable<short> idTipoParto, string complicacionesParto, Nullable<short> idLugarParto, Nullable<short> idPartoAtendidoPor, string antecentesPatologicos, Nullable<short> semanasGestacionNacer, Nullable<int> pesoAlNacerGR, Nullable<decimal> tallaAlNacerCM, Nullable<decimal> perimetroCefalicoCM, string patologiasPernatales, Nullable<short> diasHospitalizacion, Nullable<short> idTipoLecheHasta6meses, string antecLactancia, Nullable<short> edadInicioAblactanciaMeses, string desarrolloSicomotriz, Nullable<System.DateTime> fechaUltimaRegla, Nullable<System.DateTime> fechaUltimoPeriodo, string metodosAnticonceptivos, string menarquia, string menopausia, string caracteristicasMenstruaciones, string informacionEmbarazos, string transfusiones, Nullable<System.DateTime> deinmunizFechaAproximada, Nullable<int> deinmunizEdadAproximada, string alcohol, string tabaco, string drogas, string actividadFisica, string consumoVerduras, string consumoFrutas, string medicamentos, string alimentos, string sustanciasEnElAmbiente, string sustanciasContactoConPiel, string contactoPersonaEnferma, string crianzaAnimalesDomesticos, string aguaPotable, string disposicionExcretas, string reaccionAdversaMedicamentos, string saludBucal, string vigilanciaDeCrecimiento, string vigilanciaDelDesarrollo, Nullable<short> idValoracionFuncional1, Nullable<short> idValoracionFuncional2, Nullable<short> idValoracionFuncional3, Nullable<short> idValoracionFuncional4, Nullable<short> idValoracionFuncional5, Nullable<short> idValoracionFuncional6, Nullable<short> diagnosticoFuncional, Nullable<short> idEstadoCognitivo1, Nullable<short> idEstadoCognitivo2, Nullable<short> idEstadoCognitivo3, Nullable<short> idEstadoCognitivo4, Nullable<short> idEstadoCognitivo5, Nullable<short> idEstadoCognitivo6, Nullable<short> idEstadoCognitivo7, Nullable<short> idEstadoCognitivo8, Nullable<short> idEstadoCognitivo9, Nullable<short> idEstadoCognitivo10, Nullable<short> valoracionCognitiva, Nullable<short> idEstadoAfectivo1, Nullable<short> idEstadoAfectivo2, Nullable<short> idEstadoAfectivo3, Nullable<short> idEstadoAfectivo4, Nullable<short> conManifestacionesDepresivas, Nullable<short> valoracionSocioFamiliar1, Nullable<short> valoracionSocioFamiliar2, Nullable<short> valoracionSocioFamiliar3, Nullable<short> valoracionSocioFamiliar4, Nullable<short> valoracionSocioFamiliar5, Nullable<short> valoracionSocioFamiliar, Nullable<short> idCategoriaAdutoMayor, Nullable<short> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_AP).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idTipoEmbarazoParameter = idTipoEmbarazo.HasValue ?
                new ObjectParameter("IdTipoEmbarazo", idTipoEmbarazo) :
                new ObjectParameter("IdTipoEmbarazo", typeof(short));
    
            var patologiaGestacionParameter = patologiaGestacion != null ?
                new ObjectParameter("PatologiaGestacion", patologiaGestacion) :
                new ObjectParameter("PatologiaGestacion", typeof(string));
    
            var idControlPrenatalParameter = idControlPrenatal.HasValue ?
                new ObjectParameter("IdControlPrenatal", idControlPrenatal) :
                new ObjectParameter("IdControlPrenatal", typeof(short));
    
            var cPnumeroControlesParameter = cPnumeroControles.HasValue ?
                new ObjectParameter("CPnumeroControles", cPnumeroControles) :
                new ObjectParameter("CPnumeroControles", typeof(short));
    
            var cPnumeroEmbarazosParameter = cPnumeroEmbarazos.HasValue ?
                new ObjectParameter("CPnumeroEmbarazos", cPnumeroEmbarazos) :
                new ObjectParameter("CPnumeroEmbarazos", typeof(short));
    
            var lugarControlParameter = lugarControl != null ?
                new ObjectParameter("LugarControl", lugarControl) :
                new ObjectParameter("LugarControl", typeof(string));
    
            var idTipoPartoParameter = idTipoParto.HasValue ?
                new ObjectParameter("IdTipoParto", idTipoParto) :
                new ObjectParameter("IdTipoParto", typeof(short));
    
            var complicacionesPartoParameter = complicacionesParto != null ?
                new ObjectParameter("ComplicacionesParto", complicacionesParto) :
                new ObjectParameter("ComplicacionesParto", typeof(string));
    
            var idLugarPartoParameter = idLugarParto.HasValue ?
                new ObjectParameter("IdLugarParto", idLugarParto) :
                new ObjectParameter("IdLugarParto", typeof(short));
    
            var idPartoAtendidoPorParameter = idPartoAtendidoPor.HasValue ?
                new ObjectParameter("IdPartoAtendidoPor", idPartoAtendidoPor) :
                new ObjectParameter("IdPartoAtendidoPor", typeof(short));
    
            var antecentesPatologicosParameter = antecentesPatologicos != null ?
                new ObjectParameter("AntecentesPatologicos", antecentesPatologicos) :
                new ObjectParameter("AntecentesPatologicos", typeof(string));
    
            var semanasGestacionNacerParameter = semanasGestacionNacer.HasValue ?
                new ObjectParameter("SemanasGestacionNacer", semanasGestacionNacer) :
                new ObjectParameter("SemanasGestacionNacer", typeof(short));
    
            var pesoAlNacerGRParameter = pesoAlNacerGR.HasValue ?
                new ObjectParameter("PesoAlNacerGR", pesoAlNacerGR) :
                new ObjectParameter("PesoAlNacerGR", typeof(int));
    
            var tallaAlNacerCMParameter = tallaAlNacerCM.HasValue ?
                new ObjectParameter("TallaAlNacerCM", tallaAlNacerCM) :
                new ObjectParameter("TallaAlNacerCM", typeof(decimal));
    
            var perimetroCefalicoCMParameter = perimetroCefalicoCM.HasValue ?
                new ObjectParameter("PerimetroCefalicoCM", perimetroCefalicoCM) :
                new ObjectParameter("PerimetroCefalicoCM", typeof(decimal));
    
            var patologiasPernatalesParameter = patologiasPernatales != null ?
                new ObjectParameter("PatologiasPernatales", patologiasPernatales) :
                new ObjectParameter("PatologiasPernatales", typeof(string));
    
            var diasHospitalizacionParameter = diasHospitalizacion.HasValue ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(short));
    
            var idTipoLecheHasta6mesesParameter = idTipoLecheHasta6meses.HasValue ?
                new ObjectParameter("IdTipoLecheHasta6meses", idTipoLecheHasta6meses) :
                new ObjectParameter("IdTipoLecheHasta6meses", typeof(short));
    
            var antecLactanciaParameter = antecLactancia != null ?
                new ObjectParameter("AntecLactancia", antecLactancia) :
                new ObjectParameter("AntecLactancia", typeof(string));
    
            var edadInicioAblactanciaMesesParameter = edadInicioAblactanciaMeses.HasValue ?
                new ObjectParameter("EdadInicioAblactanciaMeses", edadInicioAblactanciaMeses) :
                new ObjectParameter("EdadInicioAblactanciaMeses", typeof(short));
    
            var desarrolloSicomotrizParameter = desarrolloSicomotriz != null ?
                new ObjectParameter("DesarrolloSicomotriz", desarrolloSicomotriz) :
                new ObjectParameter("DesarrolloSicomotriz", typeof(string));
    
            var fechaUltimaReglaParameter = fechaUltimaRegla.HasValue ?
                new ObjectParameter("FechaUltimaRegla", fechaUltimaRegla) :
                new ObjectParameter("FechaUltimaRegla", typeof(System.DateTime));
    
            var fechaUltimoPeriodoParameter = fechaUltimoPeriodo.HasValue ?
                new ObjectParameter("FechaUltimoPeriodo", fechaUltimoPeriodo) :
                new ObjectParameter("FechaUltimoPeriodo", typeof(System.DateTime));
    
            var metodosAnticonceptivosParameter = metodosAnticonceptivos != null ?
                new ObjectParameter("MetodosAnticonceptivos", metodosAnticonceptivos) :
                new ObjectParameter("MetodosAnticonceptivos", typeof(string));
    
            var menarquiaParameter = menarquia != null ?
                new ObjectParameter("Menarquia", menarquia) :
                new ObjectParameter("Menarquia", typeof(string));
    
            var menopausiaParameter = menopausia != null ?
                new ObjectParameter("Menopausia", menopausia) :
                new ObjectParameter("Menopausia", typeof(string));
    
            var caracteristicasMenstruacionesParameter = caracteristicasMenstruaciones != null ?
                new ObjectParameter("CaracteristicasMenstruaciones", caracteristicasMenstruaciones) :
                new ObjectParameter("CaracteristicasMenstruaciones", typeof(string));
    
            var informacionEmbarazosParameter = informacionEmbarazos != null ?
                new ObjectParameter("InformacionEmbarazos", informacionEmbarazos) :
                new ObjectParameter("InformacionEmbarazos", typeof(string));
    
            var transfusionesParameter = transfusiones != null ?
                new ObjectParameter("Transfusiones", transfusiones) :
                new ObjectParameter("Transfusiones", typeof(string));
    
            var deinmunizFechaAproximadaParameter = deinmunizFechaAproximada.HasValue ?
                new ObjectParameter("DeinmunizFechaAproximada", deinmunizFechaAproximada) :
                new ObjectParameter("DeinmunizFechaAproximada", typeof(System.DateTime));
    
            var deinmunizEdadAproximadaParameter = deinmunizEdadAproximada.HasValue ?
                new ObjectParameter("DeinmunizEdadAproximada", deinmunizEdadAproximada) :
                new ObjectParameter("DeinmunizEdadAproximada", typeof(int));
    
            var alcoholParameter = alcohol != null ?
                new ObjectParameter("Alcohol", alcohol) :
                new ObjectParameter("Alcohol", typeof(string));
    
            var tabacoParameter = tabaco != null ?
                new ObjectParameter("Tabaco", tabaco) :
                new ObjectParameter("Tabaco", typeof(string));
    
            var drogasParameter = drogas != null ?
                new ObjectParameter("Drogas", drogas) :
                new ObjectParameter("Drogas", typeof(string));
    
            var actividadFisicaParameter = actividadFisica != null ?
                new ObjectParameter("ActividadFisica", actividadFisica) :
                new ObjectParameter("ActividadFisica", typeof(string));
    
            var consumoVerdurasParameter = consumoVerduras != null ?
                new ObjectParameter("ConsumoVerduras", consumoVerduras) :
                new ObjectParameter("ConsumoVerduras", typeof(string));
    
            var consumoFrutasParameter = consumoFrutas != null ?
                new ObjectParameter("ConsumoFrutas", consumoFrutas) :
                new ObjectParameter("ConsumoFrutas", typeof(string));
    
            var medicamentosParameter = medicamentos != null ?
                new ObjectParameter("Medicamentos", medicamentos) :
                new ObjectParameter("Medicamentos", typeof(string));
    
            var alimentosParameter = alimentos != null ?
                new ObjectParameter("Alimentos", alimentos) :
                new ObjectParameter("Alimentos", typeof(string));
    
            var sustanciasEnElAmbienteParameter = sustanciasEnElAmbiente != null ?
                new ObjectParameter("SustanciasEnElAmbiente", sustanciasEnElAmbiente) :
                new ObjectParameter("SustanciasEnElAmbiente", typeof(string));
    
            var sustanciasContactoConPielParameter = sustanciasContactoConPiel != null ?
                new ObjectParameter("SustanciasContactoConPiel", sustanciasContactoConPiel) :
                new ObjectParameter("SustanciasContactoConPiel", typeof(string));
    
            var contactoPersonaEnfermaParameter = contactoPersonaEnferma != null ?
                new ObjectParameter("ContactoPersonaEnferma", contactoPersonaEnferma) :
                new ObjectParameter("ContactoPersonaEnferma", typeof(string));
    
            var crianzaAnimalesDomesticosParameter = crianzaAnimalesDomesticos != null ?
                new ObjectParameter("CrianzaAnimalesDomesticos", crianzaAnimalesDomesticos) :
                new ObjectParameter("CrianzaAnimalesDomesticos", typeof(string));
    
            var aguaPotableParameter = aguaPotable != null ?
                new ObjectParameter("AguaPotable", aguaPotable) :
                new ObjectParameter("AguaPotable", typeof(string));
    
            var disposicionExcretasParameter = disposicionExcretas != null ?
                new ObjectParameter("DisposicionExcretas", disposicionExcretas) :
                new ObjectParameter("DisposicionExcretas", typeof(string));
    
            var reaccionAdversaMedicamentosParameter = reaccionAdversaMedicamentos != null ?
                new ObjectParameter("ReaccionAdversaMedicamentos", reaccionAdversaMedicamentos) :
                new ObjectParameter("ReaccionAdversaMedicamentos", typeof(string));
    
            var saludBucalParameter = saludBucal != null ?
                new ObjectParameter("SaludBucal", saludBucal) :
                new ObjectParameter("SaludBucal", typeof(string));
    
            var vigilanciaDeCrecimientoParameter = vigilanciaDeCrecimiento != null ?
                new ObjectParameter("VigilanciaDeCrecimiento", vigilanciaDeCrecimiento) :
                new ObjectParameter("VigilanciaDeCrecimiento", typeof(string));
    
            var vigilanciaDelDesarrolloParameter = vigilanciaDelDesarrollo != null ?
                new ObjectParameter("VigilanciaDelDesarrollo", vigilanciaDelDesarrollo) :
                new ObjectParameter("VigilanciaDelDesarrollo", typeof(string));
    
            var idValoracionFuncional1Parameter = idValoracionFuncional1.HasValue ?
                new ObjectParameter("IdValoracionFuncional1", idValoracionFuncional1) :
                new ObjectParameter("IdValoracionFuncional1", typeof(short));
    
            var idValoracionFuncional2Parameter = idValoracionFuncional2.HasValue ?
                new ObjectParameter("IdValoracionFuncional2", idValoracionFuncional2) :
                new ObjectParameter("IdValoracionFuncional2", typeof(short));
    
            var idValoracionFuncional3Parameter = idValoracionFuncional3.HasValue ?
                new ObjectParameter("IdValoracionFuncional3", idValoracionFuncional3) :
                new ObjectParameter("IdValoracionFuncional3", typeof(short));
    
            var idValoracionFuncional4Parameter = idValoracionFuncional4.HasValue ?
                new ObjectParameter("IdValoracionFuncional4", idValoracionFuncional4) :
                new ObjectParameter("IdValoracionFuncional4", typeof(short));
    
            var idValoracionFuncional5Parameter = idValoracionFuncional5.HasValue ?
                new ObjectParameter("IdValoracionFuncional5", idValoracionFuncional5) :
                new ObjectParameter("IdValoracionFuncional5", typeof(short));
    
            var idValoracionFuncional6Parameter = idValoracionFuncional6.HasValue ?
                new ObjectParameter("IdValoracionFuncional6", idValoracionFuncional6) :
                new ObjectParameter("IdValoracionFuncional6", typeof(short));
    
            var diagnosticoFuncionalParameter = diagnosticoFuncional.HasValue ?
                new ObjectParameter("DiagnosticoFuncional", diagnosticoFuncional) :
                new ObjectParameter("DiagnosticoFuncional", typeof(short));
    
            var idEstadoCognitivo1Parameter = idEstadoCognitivo1.HasValue ?
                new ObjectParameter("IdEstadoCognitivo1", idEstadoCognitivo1) :
                new ObjectParameter("IdEstadoCognitivo1", typeof(short));
    
            var idEstadoCognitivo2Parameter = idEstadoCognitivo2.HasValue ?
                new ObjectParameter("IdEstadoCognitivo2", idEstadoCognitivo2) :
                new ObjectParameter("IdEstadoCognitivo2", typeof(short));
    
            var idEstadoCognitivo3Parameter = idEstadoCognitivo3.HasValue ?
                new ObjectParameter("IdEstadoCognitivo3", idEstadoCognitivo3) :
                new ObjectParameter("IdEstadoCognitivo3", typeof(short));
    
            var idEstadoCognitivo4Parameter = idEstadoCognitivo4.HasValue ?
                new ObjectParameter("IdEstadoCognitivo4", idEstadoCognitivo4) :
                new ObjectParameter("IdEstadoCognitivo4", typeof(short));
    
            var idEstadoCognitivo5Parameter = idEstadoCognitivo5.HasValue ?
                new ObjectParameter("IdEstadoCognitivo5", idEstadoCognitivo5) :
                new ObjectParameter("IdEstadoCognitivo5", typeof(short));
    
            var idEstadoCognitivo6Parameter = idEstadoCognitivo6.HasValue ?
                new ObjectParameter("IdEstadoCognitivo6", idEstadoCognitivo6) :
                new ObjectParameter("IdEstadoCognitivo6", typeof(short));
    
            var idEstadoCognitivo7Parameter = idEstadoCognitivo7.HasValue ?
                new ObjectParameter("IdEstadoCognitivo7", idEstadoCognitivo7) :
                new ObjectParameter("IdEstadoCognitivo7", typeof(short));
    
            var idEstadoCognitivo8Parameter = idEstadoCognitivo8.HasValue ?
                new ObjectParameter("IdEstadoCognitivo8", idEstadoCognitivo8) :
                new ObjectParameter("IdEstadoCognitivo8", typeof(short));
    
            var idEstadoCognitivo9Parameter = idEstadoCognitivo9.HasValue ?
                new ObjectParameter("IdEstadoCognitivo9", idEstadoCognitivo9) :
                new ObjectParameter("IdEstadoCognitivo9", typeof(short));
    
            var idEstadoCognitivo10Parameter = idEstadoCognitivo10.HasValue ?
                new ObjectParameter("IdEstadoCognitivo10", idEstadoCognitivo10) :
                new ObjectParameter("IdEstadoCognitivo10", typeof(short));
    
            var valoracionCognitivaParameter = valoracionCognitiva.HasValue ?
                new ObjectParameter("ValoracionCognitiva", valoracionCognitiva) :
                new ObjectParameter("ValoracionCognitiva", typeof(short));
    
            var idEstadoAfectivo1Parameter = idEstadoAfectivo1.HasValue ?
                new ObjectParameter("IdEstadoAfectivo1", idEstadoAfectivo1) :
                new ObjectParameter("IdEstadoAfectivo1", typeof(short));
    
            var idEstadoAfectivo2Parameter = idEstadoAfectivo2.HasValue ?
                new ObjectParameter("IdEstadoAfectivo2", idEstadoAfectivo2) :
                new ObjectParameter("IdEstadoAfectivo2", typeof(short));
    
            var idEstadoAfectivo3Parameter = idEstadoAfectivo3.HasValue ?
                new ObjectParameter("IdEstadoAfectivo3", idEstadoAfectivo3) :
                new ObjectParameter("IdEstadoAfectivo3", typeof(short));
    
            var idEstadoAfectivo4Parameter = idEstadoAfectivo4.HasValue ?
                new ObjectParameter("IdEstadoAfectivo4", idEstadoAfectivo4) :
                new ObjectParameter("IdEstadoAfectivo4", typeof(short));
    
            var conManifestacionesDepresivasParameter = conManifestacionesDepresivas.HasValue ?
                new ObjectParameter("ConManifestacionesDepresivas", conManifestacionesDepresivas) :
                new ObjectParameter("ConManifestacionesDepresivas", typeof(short));
    
            var valoracionSocioFamiliar1Parameter = valoracionSocioFamiliar1.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar1", valoracionSocioFamiliar1) :
                new ObjectParameter("ValoracionSocioFamiliar1", typeof(short));
    
            var valoracionSocioFamiliar2Parameter = valoracionSocioFamiliar2.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar2", valoracionSocioFamiliar2) :
                new ObjectParameter("ValoracionSocioFamiliar2", typeof(short));
    
            var valoracionSocioFamiliar3Parameter = valoracionSocioFamiliar3.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar3", valoracionSocioFamiliar3) :
                new ObjectParameter("ValoracionSocioFamiliar3", typeof(short));
    
            var valoracionSocioFamiliar4Parameter = valoracionSocioFamiliar4.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar4", valoracionSocioFamiliar4) :
                new ObjectParameter("ValoracionSocioFamiliar4", typeof(short));
    
            var valoracionSocioFamiliar5Parameter = valoracionSocioFamiliar5.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar5", valoracionSocioFamiliar5) :
                new ObjectParameter("ValoracionSocioFamiliar5", typeof(short));
    
            var valoracionSocioFamiliarParameter = valoracionSocioFamiliar.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar", valoracionSocioFamiliar) :
                new ObjectParameter("ValoracionSocioFamiliar", typeof(short));
    
            var idCategoriaAdutoMayorParameter = idCategoriaAdutoMayor.HasValue ?
                new ObjectParameter("IdCategoriaAdutoMayor", idCategoriaAdutoMayor) :
                new ObjectParameter("IdCategoriaAdutoMayor", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(short));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_AP>("USP_Anamnesis_AP_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idTipoEmbarazoParameter, patologiaGestacionParameter, idControlPrenatalParameter, cPnumeroControlesParameter, cPnumeroEmbarazosParameter, lugarControlParameter, idTipoPartoParameter, complicacionesPartoParameter, idLugarPartoParameter, idPartoAtendidoPorParameter, antecentesPatologicosParameter, semanasGestacionNacerParameter, pesoAlNacerGRParameter, tallaAlNacerCMParameter, perimetroCefalicoCMParameter, patologiasPernatalesParameter, diasHospitalizacionParameter, idTipoLecheHasta6mesesParameter, antecLactanciaParameter, edadInicioAblactanciaMesesParameter, desarrolloSicomotrizParameter, fechaUltimaReglaParameter, fechaUltimoPeriodoParameter, metodosAnticonceptivosParameter, menarquiaParameter, menopausiaParameter, caracteristicasMenstruacionesParameter, informacionEmbarazosParameter, transfusionesParameter, deinmunizFechaAproximadaParameter, deinmunizEdadAproximadaParameter, alcoholParameter, tabacoParameter, drogasParameter, actividadFisicaParameter, consumoVerdurasParameter, consumoFrutasParameter, medicamentosParameter, alimentosParameter, sustanciasEnElAmbienteParameter, sustanciasContactoConPielParameter, contactoPersonaEnfermaParameter, crianzaAnimalesDomesticosParameter, aguaPotableParameter, disposicionExcretasParameter, reaccionAdversaMedicamentosParameter, saludBucalParameter, vigilanciaDeCrecimientoParameter, vigilanciaDelDesarrolloParameter, idValoracionFuncional1Parameter, idValoracionFuncional2Parameter, idValoracionFuncional3Parameter, idValoracionFuncional4Parameter, idValoracionFuncional5Parameter, idValoracionFuncional6Parameter, diagnosticoFuncionalParameter, idEstadoCognitivo1Parameter, idEstadoCognitivo2Parameter, idEstadoCognitivo3Parameter, idEstadoCognitivo4Parameter, idEstadoCognitivo5Parameter, idEstadoCognitivo6Parameter, idEstadoCognitivo7Parameter, idEstadoCognitivo8Parameter, idEstadoCognitivo9Parameter, idEstadoCognitivo10Parameter, valoracionCognitivaParameter, idEstadoAfectivo1Parameter, idEstadoAfectivo2Parameter, idEstadoAfectivo3Parameter, idEstadoAfectivo4Parameter, conManifestacionesDepresivasParameter, valoracionSocioFamiliar1Parameter, valoracionSocioFamiliar2Parameter, valoracionSocioFamiliar3Parameter, valoracionSocioFamiliar4Parameter, valoracionSocioFamiliar5Parameter, valoracionSocioFamiliarParameter, idCategoriaAdutoMayorParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    }
}
