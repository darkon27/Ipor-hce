//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using SoluccionSalud.Entidades.Entidades;
using System.Data.Entity.Core.Objects;



namespace SoluccionSalud.Model
{
    public partial class WEB_ERPSALUDEntities : DbContext
    {
        public WEB_ERPSALUDEntities()
            : base("name=WEB_ERPSALUDEntities")
        {
            Configuration.LazyLoadingEnabled = false;
            Configuration.ProxyCreationEnabled = false;
            Database.CommandTimeout = 300000;
            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 300000;
        }


        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public DbSet<APLICACIONESMAST> APLICACIONESMASTs { get; set; }
        public DbSet<CM_CO_TablaMaestro> CM_CO_TablaMaestro { get; set; }
        public DbSet<CM_CO_TablaMaestroAsociado> CM_CO_TablaMaestroAsociado { get; set; }
        public DbSet<CM_CO_TablaMaestroConcepto> CM_CO_TablaMaestroConcepto { get; set; }
        public DbSet<CM_CO_TablaMaestroDetalle> CM_CO_TablaMaestroDetalle { get; set; }
        public DbSet<CM_CO_TablaMaestroDetalleConcepto> CM_CO_TablaMaestroDetalleConcepto { get; set; }
        public DbSet<EMPLEADOMAST> EMPLEADOMASTs { get; set; }
        public DbSet<HC_FlujoProceso> HC_FlujoProceso { get; set; }
        public DbSet<HC_Proceso> HC_Proceso { get; set; }
        public DbSet<HC_SubProceso> HC_SubProceso { get; set; }
        public DbSet<HC_SubProcesoHijo> HC_SubProcesoHijo { get; set; }
        public DbSet<HC_SubProcesoSelector> HC_SubProcesoSelector { get; set; }
        public DbSet<MA_MiscelaneosHeader> MA_MiscelaneosHeader { get; set; }
        public DbSet<PERSONAMAST> PERSONAMASTs { get; set; }
        public DbSet<SEGURIDADAUTORIZACIONE> SEGURIDADAUTORIZACIONES { get; set; }
        public DbSet<SEGURIDADCONCEPTO> SEGURIDADCONCEPTOes { get; set; }
        public DbSet<SEGURIDADGRUPO> SEGURIDADGRUPOes { get; set; }
        public DbSet<SS_AD_OrdenAtencion> SS_AD_OrdenAtencion { get; set; }
        public DbSet<SS_AD_OrdenAtencionDetalle> SS_AD_OrdenAtencionDetalle { get; set; }
        public DbSet<SS_GE_Diagnostico> SS_GE_Diagnostico { get; set; }
        public DbSet<SS_HC_AnatomiaPatologica> SS_HC_AnatomiaPatologica { get; set; }
        public DbSet<SS_HC_EstablecimientoSalud> SS_HC_EstablecimientoSalud { get; set; }
        public DbSet<SS_HC_PatologiaClinica> SS_HC_PatologiaClinica { get; set; }
        public DbSet<SS_HC_PersonalSalud> SS_HC_PersonalSalud { get; set; }
        public DbSet<SS_HC_ProcedimientoPrueba> SS_HC_ProcedimientoPrueba { get; set; }
        public DbSet<SS_HC_Proceso> SS_HC_Proceso { get; set; }
        public DbSet<SS_HC_ProcesoSelector> SS_HC_ProcesoSelector { get; set; }
        public DbSet<SS_HC_UnidadMedida> SS_HC_UnidadMedida { get; set; }
        public DbSet<USUARIO> USUARIOs { get; set; }
        public DbSet<WH_ItemMast> WH_ItemMast { get; set; }
        public DbSet<SS_GE_ServicioPrestacion> SS_GE_ServicioPrestacion { get; set; }
        public DbSet<SS_HC_Anamnesis_AF_Enfermedad> SS_HC_Anamnesis_AF_Enfermedad { get; set; }
        public DbSet<SS_HC_Anamnesis_AP> SS_HC_Anamnesis_AP { get; set; }
        public DbSet<SS_HC_Anamnesis_AP_Detalle> SS_HC_Anamnesis_AP_Detalle { get; set; }
        public DbSet<SS_HC_Imagen> SS_HC_Imagen { get; set; }
        public DbSet<SS_HC_IntervencionQuirurgica> SS_HC_IntervencionQuirurgica { get; set; }
        public DbSet<SS_HC_Prescripcion> SS_HC_Prescripcion { get; set; }
        public DbSet<SS_HC_Problema> SS_HC_Problema { get; set; }
        public DbSet<MA_MiscelaneosDetalle> MA_MiscelaneosDetalle { get; set; }
        public DbSet<SS_GE_Especialidad> SS_GE_Especialidad { get; set; }
        public DbSet<SS_HC_DescansoMedico> SS_HC_DescansoMedico { get; set; }
        public DbSet<SS_HC_ProximaAtencionDiagnostico> SS_HC_ProximaAtencionDiagnostico { get; set; }
        public DbSet<SEGURIDADPERFILUSUARIO> SEGURIDADPERFILUSUARIOs { get; set; }
        public DbSet<SS_HC_Indicaciones> SS_HC_Indicaciones { get; set; }
        public DbSet<SS_HC_ExamenFisico_Regional> SS_HC_ExamenFisico_Regional { get; set; }
        public DbSet<SS_HC_SeguimientoRiesgo> SS_HC_SeguimientoRiesgo { get; set; }
        public DbSet<GE_Varios> GE_Varios { get; set; }
        public DbSet<SS_HC_Diagnostico> SS_HC_Diagnostico { get; set; }
        public DbSet<SS_HC_ExamenFisico_Triaje> SS_HC_ExamenFisico_Triaje { get; set; }
        public DbSet<SS_HC_ProximaAtencion> SS_HC_ProximaAtencion { get; set; }
        public DbSet<CM_CO_ClasificacionComponente> CM_CO_ClasificacionComponente { get; set; }
        public DbSet<CM_CO_Componente> CM_CO_Componente { get; set; }
        public DbSet<CM_CO_ComponenteGrupoCaracteristica> CM_CO_ComponenteGrupoCaracteristica { get; set; }
        public DbSet<CM_CO_ListaBase> CM_CO_ListaBase { get; set; }
        public DbSet<CM_CO_ListaBaseComponente> CM_CO_ListaBaseComponente { get; set; }
        public DbSet<WH_AlmacenMast> WH_AlmacenMast { get; set; }
        public DbSet<WH_Condicion> WH_Condicion { get; set; }
        public DbSet<WH_ItemAlmacen> WH_ItemAlmacen { get; set; }
        public DbSet<WH_ItemAlmacenLote> WH_ItemAlmacenLote { get; set; }
        public DbSet<WH_ItemProcedencia> WH_ItemProcedencia { get; set; }
        public DbSet<WH_ItemTipo> WH_ItemTipo { get; set; }
        public DbSet<WH_LoteEquivalente> WH_LoteEquivalente { get; set; }
        public DbSet<GE_ClasificadorMovimiento> GE_ClasificadorMovimiento { get; set; }
        public DbSet<SS_GE_EspecialidadOrdenMedica> SS_GE_EspecialidadOrdenMedica { get; set; }
        public DbSet<SG_Grupo> SG_Grupo { get; set; }
        public DbSet<SG_Modulo> SG_Modulo { get; set; }
        public DbSet<SG_Objeto> SG_Objeto { get; set; }
        public DbSet<SG_Opcion> SG_Opcion { get; set; }
        public DbSet<SG_PerfilUsuario> SG_PerfilUsuario { get; set; }
        public DbSet<SG_Sistema> SG_Sistema { get; set; }
        public DbSet<SG_TipoObjeto> SG_TipoObjeto { get; set; }
        public DbSet<SS_GE_TipoAtencion> SS_GE_TipoAtencion { get; set; }
        public DbSet<SS_HC_FormatoAsignacion> SS_HC_FormatoAsignacion { get; set; }
        public DbSet<SS_HC_FormatoCampo> SS_HC_FormatoCampo { get; set; }
        public DbSet<SS_HC_FormatoRecursoCampo> SS_HC_FormatoRecursoCampo { get; set; }
        public DbSet<SS_HC_SeccionFormato> SS_HC_SeccionFormato { get; set; }
        public DbSet<SS_HC_Tabla> SS_HC_Tabla { get; set; }
        public DbSet<SS_HC_TablaCampo> SS_HC_TablaCampo { get; set; }
        public DbSet<SS_SG_MaestroCobertura> SS_SG_MaestroCobertura { get; set; }
        public DbSet<AC_Sucursal> AC_Sucursal { get; set; }
        public DbSet<AC_SucursalGrupo> AC_SucursalGrupo { get; set; }
        public DbSet<companyowner> companyowners { get; set; }
        public DbSet<SS_GE_EmpresaSeguro> SS_GE_EmpresaSeguro { get; set; }
        public DbSet<VW_SS_GE_EMPRESASEGURO> VW_SS_GE_EMPRESASEGURO { get; set; }
        public DbSet<SS_GE_EspecialidadMedico> SS_GE_EspecialidadMedico { get; set; }
        public DbSet<VW_SS_GE_ESPECIALIDADMEDICO> VW_SS_GE_ESPECIALIDADMEDICO { get; set; }
        public DbSet<SS_HC_Favorito> SS_HC_Favorito { get; set; }
        public DbSet<UnidadesMast> UnidadesMasts { get; set; }
        public DbSet<SS_HC_Medicamento> SS_HC_Medicamento { get; set; }
        public DbSet<WH_ClaseFamilia> WH_ClaseFamilia { get; set; }
        public DbSet<WH_ClaseLinea> WH_ClaseLinea { get; set; }
        public DbSet<WH_ClaseSubFamilia> WH_ClaseSubFamilia { get; set; }
        public DbSet<VW_ServicioPrestacion> VW_ServicioPrestacion { get; set; }
        public DbSet<SS_HC_NIC> SS_HC_NIC { get; set; }
        public DbSet<VW_PERSONAPACIENTE> VW_PERSONAPACIENTE { get; set; }
        public DbSet<SS_HC_FavoritoCodigoId> SS_HC_FavoritoCodigoId { get; set; }
        public DbSet<SS_HC_FavoritoDetalle> SS_HC_FavoritoDetalle { get; set; }
        public DbSet<SS_HC_FavoritoNumero> SS_HC_FavoritoNumero { get; set; }
        public DbSet<SS_HC_AsignacionMedico> SS_HC_AsignacionMedico { get; set; }
        public DbSet<VW_SS_HC_ASIGNACIONMEDICO> VW_SS_HC_ASIGNACIONMEDICO { get; set; }
        public DbSet<VW_SS_HC_TABLAFORMATO_VALIDACION> VW_SS_HC_TABLAFORMATO_VALIDACION { get; set; }
        public DbSet<SS_AD_OrdenAtencionPreexistencia> SS_AD_OrdenAtencionPreexistencia { get; set; }
        public DbSet<SS_HC_ControlValidacion> SS_HC_ControlValidacion { get; set; }
        public DbSet<SS_HC_ControlAtributo> SS_HC_ControlAtributo { get; set; }
        public DbSet<SS_HC_ControlComponente> SS_HC_ControlComponente { get; set; }
        public DbSet<SS_VW_VALIDA> SS_VW_VALIDA { get; set; }
        public DbSet<VW_FORMATORECURSOCAMPO> VW_FORMATORECURSOCAMPO { get; set; }
        public DbSet<VW_FORMATOCAMPO> VW_FORMATOCAMPO { get; set; }
        public DbSet<SY_SeguridadAutorizaciones> SY_SeguridadAutorizaciones { get; set; }
        public DbSet<SS_HC_Anamnesis_AF> SS_HC_Anamnesis_AF { get; set; }
        public DbSet<SS_HC_Anamnesis_EA_Sintoma> SS_HC_Anamnesis_EA_Sintoma { get; set; }
        public DbSet<SS_HC_AuditRoyal> SS_HC_AuditRoyal { get; set; }
        public DbSet<SS_GE_ProcedimientoMedicoDos> SS_GE_ProcedimientoMedicoDos { get; set; }
        public DbSet<vw_Miscelaneos> vw_Miscelaneos { get; set; }
        public DbSet<SS_HC_CuidadoPreventivo> SS_HC_CuidadoPreventivo { get; set; }
        public DbSet<SS_HC_SeguimientoRiesgoDetalle> SS_HC_SeguimientoRiesgoDetalle { get; set; }
        public DbSet<SS_HC_CuerpoHumano> SS_HC_CuerpoHumano { get; set; }
        public DbSet<SS_HC_FormatoCodigoId> SS_HC_FormatoCodigoId { get; set; }
        public DbSet<SS_HC_CIAP2> SS_HC_CIAP2 { get; set; }
        public DbSet<SS_HC_Procedimiento> SS_HC_Procedimiento { get; set; }
        public DbSet<vw_favoritos> vw_favoritos { get; set; }
        public DbSet<SG_Agente> SG_Agente { get; set; }
        public DbSet<VW_TABLACAMPO> VW_TABLACAMPO { get; set; }
        public DbSet<SS_HC_EpisodioAtencionMaster> SS_HC_EpisodioAtencionMaster { get; set; }
        public DbSet<SS_HC_ProcedimientoInforme> SS_HC_ProcedimientoInforme { get; set; }
        public DbSet<ParametrosMast> ParametrosMasts { get; set; }
        public DbSet<VW_ATENCIONPACIENTE_GENERAL> VW_ATENCIONPACIENTE_GENERAL { get; set; }
        public DbSet<SS_HC_EpisodioClinico> SS_HC_EpisodioClinico { get; set; }
        public DbSet<SS_HC_CatalogoUnidadServicio> SS_HC_CatalogoUnidadServicio { get; set; }
        public DbSet<SS_HC_UnidadServicio> SS_HC_UnidadServicio { get; set; }
        public DbSet<SS_GE_Servicio> SS_GE_Servicio { get; set; }
        public DbSet<CM_CO_Establecimiento> CM_CO_Establecimiento { get; set; }
        public DbSet<SS_HC_CatalogoUnidadServicio_TipoAtencion> SS_HC_CatalogoUnidadServicio_TipoAtencion { get; set; }
        public DbSet<SS_CC_Horario> SS_CC_Horario { get; set; }
        public DbSet<SS_HC_Anamnesis_EA> SS_HC_Anamnesis_EA { get; set; }
        public DbSet<SS_GE_Paciente> SS_GE_Paciente { get; set; }
        public DbSet<VW_ATENCIONPACIENTE> VW_ATENCIONPACIENTE { get; set; }
        public DbSet<SS_GE_ProcedimientoMedico> SS_GE_ProcedimientoMedico { get; set; }
        public DbSet<SS_HC_ExamenSolicitado> SS_HC_ExamenSolicitado { get; set; }
        public DbSet<SS_HC_PacienteDocumentos> SS_HC_PacienteDocumentos { get; set; }
        public DbSet<SS_HC_ProcedimientoEjecucion> SS_HC_ProcedimientoEjecucion { get; set; }
        public DbSet<VW_SS_IT_ProcesoHistoriaAdjunta> VW_SS_IT_ProcesoHistoriaAdjunta { get; set; }
        public DbSet<SS_HC_GrupoFamiliar> SS_HC_GrupoFamiliar { get; set; }
        public DbSet<SS_HC_EpisodioAtencion> SS_HC_EpisodioAtencion { get; set; }
        public DbSet<SS_HC_AgrupadorAtencionVigente> SS_HC_AgrupadorAtencionVigente { get; set; }
        public DbSet<SS_HC_Ubicacion> SS_HC_Ubicacion { get; set; }
        public DbSet<SS_HC_EvolucionObjetiva> SS_HC_EvolucionObjetiva { get; set; }
        public DbSet<SG_AgenteOpcion> SG_AgenteOpcion { get; set; }
        public DbSet<SS_HC_Anamnesis_AFAM> SS_HC_Anamnesis_AFAM { get; set; }
        public DbSet<SS_HC_Anamnesis_AFAM_Enfermedad> SS_HC_Anamnesis_AFAM_Enfermedad { get; set; }
        public DbSet<SS_CHE_VistaSeguridad> SS_CHE_VistaSeguridad { get; set; }
        public DbSet<SS_HC_Formato> SS_HC_Formato { get; set; }
        public DbSet<V_EpisodioAtenciones> V_EpisodioAtenciones { get; set; }
    
        public virtual ObjectResult<PERSONAMAST> USP_PERSONAMAST(Nullable<int> pERSONA, string nOMBRECOMPLETO, string eSTADO, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PERSONAMAST).Assembly);
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERSONAMAST>("USP_PERSONAMAST", pERSONAParameter, nOMBRECOMPLETOParameter, eSTADOParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<PERSONAMAST> USP_PERSONAMAST(Nullable<int> pERSONA, string nOMBRECOMPLETO, string eSTADO, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PERSONAMAST).Assembly);
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERSONAMAST>("USP_PERSONAMAST", mergeOption, pERSONAParameter, nOMBRECOMPLETOParameter, eSTADOParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_LISTARSERVICIOS(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_LISTARSERVICIOS", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_LISTARSERVICIOS(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_LISTARSERVICIOS", mergeOption, aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ANAMNESIS_AP(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<short> idTipoEmbarazo, string patologiaGestacion, Nullable<short> idControlPrenatal, Nullable<short> cPnumeroControles, Nullable<short> cPnumeroEmbarazos, string lugarControl, Nullable<short> idTipoParto, string complicacionesParto, Nullable<short> idLugarParto, Nullable<short> idPartoAtendidoPor, string antecentesPatologicos, Nullable<short> semanasGestacionNacer, Nullable<int> pesoAlNacerGR, Nullable<decimal> tallaAlNacerCM, Nullable<decimal> perimetroCefalicoCM, string patologiasPernatales, Nullable<short> diasHospitalizacion, Nullable<short> idTipoLecheHasta6meses, string antecLactancia, Nullable<short> edadInicioAblactanciaMeses, string desarrolloSicomotriz, Nullable<System.DateTime> fechaUltimaRegla, Nullable<System.DateTime> fechaUltimoPeriodo, string metodosAnticonceptivos, string menarquia, string menopausia, string caracteristicasMenstruaciones, string informacionEmbarazos, string transfusiones, Nullable<System.DateTime> deinmunizFechaAproximada, Nullable<int> deinmunizEdadAproximada, string alcohol, string tabaco, string drogas, string actividadFisica, string consumoVerduras, string consumoFrutas, string medicamentos, string alimentos, string sustanciasEnElAmbiente, string sustanciasContactoConPiel, string contactoPersonaEnferma, string crianzaAnimalesDomesticos, string aguaPotable, string disposicionExcretas, string reaccionAdversaMedicamentos, string saludBucal, string vigilanciaDeCrecimiento, string vigilanciaDelDesarrollo, Nullable<short> idValoracionFuncional1, Nullable<short> idValoracionFuncional2, Nullable<short> idValoracionFuncional3, Nullable<short> idValoracionFuncional4, Nullable<short> idValoracionFuncional5, Nullable<short> idValoracionFuncional6, Nullable<short> diagnosticoFuncional, Nullable<short> idEstadoCognitivo1, Nullable<short> idEstadoCognitivo2, Nullable<short> idEstadoCognitivo3, Nullable<short> idEstadoCognitivo4, Nullable<short> idEstadoCognitivo5, Nullable<short> idEstadoCognitivo6, Nullable<short> idEstadoCognitivo7, Nullable<short> idEstadoCognitivo8, Nullable<short> idEstadoCognitivo9, Nullable<short> idEstadoCognitivo10, Nullable<short> valoracionCognitiva, Nullable<short> idEstadoAfectivo1, Nullable<short> idEstadoAfectivo2, Nullable<short> idEstadoAfectivo3, Nullable<short> idEstadoAfectivo4, Nullable<short> conManifestacionesDepresivas, Nullable<short> valoracionSocioFamiliar1, Nullable<short> valoracionSocioFamiliar2, Nullable<short> valoracionSocioFamiliar3, Nullable<short> valoracionSocioFamiliar4, Nullable<short> valoracionSocioFamiliar5, Nullable<short> valoracionSocioFamiliar, Nullable<short> idCategoriaAdutoMayor, Nullable<short> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idTipoEmbarazoParameter = idTipoEmbarazo.HasValue ?
                new ObjectParameter("IdTipoEmbarazo", idTipoEmbarazo) :
                new ObjectParameter("IdTipoEmbarazo", typeof(short));
    
            var patologiaGestacionParameter = patologiaGestacion != null ?
                new ObjectParameter("PatologiaGestacion", patologiaGestacion) :
                new ObjectParameter("PatologiaGestacion", typeof(string));
    
            var idControlPrenatalParameter = idControlPrenatal.HasValue ?
                new ObjectParameter("IdControlPrenatal", idControlPrenatal) :
                new ObjectParameter("IdControlPrenatal", typeof(short));
    
            var cPnumeroControlesParameter = cPnumeroControles.HasValue ?
                new ObjectParameter("CPnumeroControles", cPnumeroControles) :
                new ObjectParameter("CPnumeroControles", typeof(short));
    
            var cPnumeroEmbarazosParameter = cPnumeroEmbarazos.HasValue ?
                new ObjectParameter("CPnumeroEmbarazos", cPnumeroEmbarazos) :
                new ObjectParameter("CPnumeroEmbarazos", typeof(short));
    
            var lugarControlParameter = lugarControl != null ?
                new ObjectParameter("LugarControl", lugarControl) :
                new ObjectParameter("LugarControl", typeof(string));
    
            var idTipoPartoParameter = idTipoParto.HasValue ?
                new ObjectParameter("IdTipoParto", idTipoParto) :
                new ObjectParameter("IdTipoParto", typeof(short));
    
            var complicacionesPartoParameter = complicacionesParto != null ?
                new ObjectParameter("ComplicacionesParto", complicacionesParto) :
                new ObjectParameter("ComplicacionesParto", typeof(string));
    
            var idLugarPartoParameter = idLugarParto.HasValue ?
                new ObjectParameter("IdLugarParto", idLugarParto) :
                new ObjectParameter("IdLugarParto", typeof(short));
    
            var idPartoAtendidoPorParameter = idPartoAtendidoPor.HasValue ?
                new ObjectParameter("IdPartoAtendidoPor", idPartoAtendidoPor) :
                new ObjectParameter("IdPartoAtendidoPor", typeof(short));
    
            var antecentesPatologicosParameter = antecentesPatologicos != null ?
                new ObjectParameter("AntecentesPatologicos", antecentesPatologicos) :
                new ObjectParameter("AntecentesPatologicos", typeof(string));
    
            var semanasGestacionNacerParameter = semanasGestacionNacer.HasValue ?
                new ObjectParameter("SemanasGestacionNacer", semanasGestacionNacer) :
                new ObjectParameter("SemanasGestacionNacer", typeof(short));
    
            var pesoAlNacerGRParameter = pesoAlNacerGR.HasValue ?
                new ObjectParameter("PesoAlNacerGR", pesoAlNacerGR) :
                new ObjectParameter("PesoAlNacerGR", typeof(int));
    
            var tallaAlNacerCMParameter = tallaAlNacerCM.HasValue ?
                new ObjectParameter("TallaAlNacerCM", tallaAlNacerCM) :
                new ObjectParameter("TallaAlNacerCM", typeof(decimal));
    
            var perimetroCefalicoCMParameter = perimetroCefalicoCM.HasValue ?
                new ObjectParameter("PerimetroCefalicoCM", perimetroCefalicoCM) :
                new ObjectParameter("PerimetroCefalicoCM", typeof(decimal));
    
            var patologiasPernatalesParameter = patologiasPernatales != null ?
                new ObjectParameter("PatologiasPernatales", patologiasPernatales) :
                new ObjectParameter("PatologiasPernatales", typeof(string));
    
            var diasHospitalizacionParameter = diasHospitalizacion.HasValue ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(short));
    
            var idTipoLecheHasta6mesesParameter = idTipoLecheHasta6meses.HasValue ?
                new ObjectParameter("IdTipoLecheHasta6meses", idTipoLecheHasta6meses) :
                new ObjectParameter("IdTipoLecheHasta6meses", typeof(short));
    
            var antecLactanciaParameter = antecLactancia != null ?
                new ObjectParameter("AntecLactancia", antecLactancia) :
                new ObjectParameter("AntecLactancia", typeof(string));
    
            var edadInicioAblactanciaMesesParameter = edadInicioAblactanciaMeses.HasValue ?
                new ObjectParameter("EdadInicioAblactanciaMeses", edadInicioAblactanciaMeses) :
                new ObjectParameter("EdadInicioAblactanciaMeses", typeof(short));
    
            var desarrolloSicomotrizParameter = desarrolloSicomotriz != null ?
                new ObjectParameter("DesarrolloSicomotriz", desarrolloSicomotriz) :
                new ObjectParameter("DesarrolloSicomotriz", typeof(string));
    
            var fechaUltimaReglaParameter = fechaUltimaRegla.HasValue ?
                new ObjectParameter("FechaUltimaRegla", fechaUltimaRegla) :
                new ObjectParameter("FechaUltimaRegla", typeof(System.DateTime));
    
            var fechaUltimoPeriodoParameter = fechaUltimoPeriodo.HasValue ?
                new ObjectParameter("FechaUltimoPeriodo", fechaUltimoPeriodo) :
                new ObjectParameter("FechaUltimoPeriodo", typeof(System.DateTime));
    
            var metodosAnticonceptivosParameter = metodosAnticonceptivos != null ?
                new ObjectParameter("MetodosAnticonceptivos", metodosAnticonceptivos) :
                new ObjectParameter("MetodosAnticonceptivos", typeof(string));
    
            var menarquiaParameter = menarquia != null ?
                new ObjectParameter("Menarquia", menarquia) :
                new ObjectParameter("Menarquia", typeof(string));
    
            var menopausiaParameter = menopausia != null ?
                new ObjectParameter("Menopausia", menopausia) :
                new ObjectParameter("Menopausia", typeof(string));
    
            var caracteristicasMenstruacionesParameter = caracteristicasMenstruaciones != null ?
                new ObjectParameter("CaracteristicasMenstruaciones", caracteristicasMenstruaciones) :
                new ObjectParameter("CaracteristicasMenstruaciones", typeof(string));
    
            var informacionEmbarazosParameter = informacionEmbarazos != null ?
                new ObjectParameter("InformacionEmbarazos", informacionEmbarazos) :
                new ObjectParameter("InformacionEmbarazos", typeof(string));
    
            var transfusionesParameter = transfusiones != null ?
                new ObjectParameter("Transfusiones", transfusiones) :
                new ObjectParameter("Transfusiones", typeof(string));
    
            var deinmunizFechaAproximadaParameter = deinmunizFechaAproximada.HasValue ?
                new ObjectParameter("DeinmunizFechaAproximada", deinmunizFechaAproximada) :
                new ObjectParameter("DeinmunizFechaAproximada", typeof(System.DateTime));
    
            var deinmunizEdadAproximadaParameter = deinmunizEdadAproximada.HasValue ?
                new ObjectParameter("DeinmunizEdadAproximada", deinmunizEdadAproximada) :
                new ObjectParameter("DeinmunizEdadAproximada", typeof(int));
    
            var alcoholParameter = alcohol != null ?
                new ObjectParameter("Alcohol", alcohol) :
                new ObjectParameter("Alcohol", typeof(string));
    
            var tabacoParameter = tabaco != null ?
                new ObjectParameter("Tabaco", tabaco) :
                new ObjectParameter("Tabaco", typeof(string));
    
            var drogasParameter = drogas != null ?
                new ObjectParameter("Drogas", drogas) :
                new ObjectParameter("Drogas", typeof(string));
    
            var actividadFisicaParameter = actividadFisica != null ?
                new ObjectParameter("ActividadFisica", actividadFisica) :
                new ObjectParameter("ActividadFisica", typeof(string));
    
            var consumoVerdurasParameter = consumoVerduras != null ?
                new ObjectParameter("ConsumoVerduras", consumoVerduras) :
                new ObjectParameter("ConsumoVerduras", typeof(string));
    
            var consumoFrutasParameter = consumoFrutas != null ?
                new ObjectParameter("ConsumoFrutas", consumoFrutas) :
                new ObjectParameter("ConsumoFrutas", typeof(string));
    
            var medicamentosParameter = medicamentos != null ?
                new ObjectParameter("Medicamentos", medicamentos) :
                new ObjectParameter("Medicamentos", typeof(string));
    
            var alimentosParameter = alimentos != null ?
                new ObjectParameter("Alimentos", alimentos) :
                new ObjectParameter("Alimentos", typeof(string));
    
            var sustanciasEnElAmbienteParameter = sustanciasEnElAmbiente != null ?
                new ObjectParameter("SustanciasEnElAmbiente", sustanciasEnElAmbiente) :
                new ObjectParameter("SustanciasEnElAmbiente", typeof(string));
    
            var sustanciasContactoConPielParameter = sustanciasContactoConPiel != null ?
                new ObjectParameter("SustanciasContactoConPiel", sustanciasContactoConPiel) :
                new ObjectParameter("SustanciasContactoConPiel", typeof(string));
    
            var contactoPersonaEnfermaParameter = contactoPersonaEnferma != null ?
                new ObjectParameter("ContactoPersonaEnferma", contactoPersonaEnferma) :
                new ObjectParameter("ContactoPersonaEnferma", typeof(string));
    
            var crianzaAnimalesDomesticosParameter = crianzaAnimalesDomesticos != null ?
                new ObjectParameter("CrianzaAnimalesDomesticos", crianzaAnimalesDomesticos) :
                new ObjectParameter("CrianzaAnimalesDomesticos", typeof(string));
    
            var aguaPotableParameter = aguaPotable != null ?
                new ObjectParameter("AguaPotable", aguaPotable) :
                new ObjectParameter("AguaPotable", typeof(string));
    
            var disposicionExcretasParameter = disposicionExcretas != null ?
                new ObjectParameter("DisposicionExcretas", disposicionExcretas) :
                new ObjectParameter("DisposicionExcretas", typeof(string));
    
            var reaccionAdversaMedicamentosParameter = reaccionAdversaMedicamentos != null ?
                new ObjectParameter("ReaccionAdversaMedicamentos", reaccionAdversaMedicamentos) :
                new ObjectParameter("ReaccionAdversaMedicamentos", typeof(string));
    
            var saludBucalParameter = saludBucal != null ?
                new ObjectParameter("SaludBucal", saludBucal) :
                new ObjectParameter("SaludBucal", typeof(string));
    
            var vigilanciaDeCrecimientoParameter = vigilanciaDeCrecimiento != null ?
                new ObjectParameter("VigilanciaDeCrecimiento", vigilanciaDeCrecimiento) :
                new ObjectParameter("VigilanciaDeCrecimiento", typeof(string));
    
            var vigilanciaDelDesarrolloParameter = vigilanciaDelDesarrollo != null ?
                new ObjectParameter("VigilanciaDelDesarrollo", vigilanciaDelDesarrollo) :
                new ObjectParameter("VigilanciaDelDesarrollo", typeof(string));
    
            var idValoracionFuncional1Parameter = idValoracionFuncional1.HasValue ?
                new ObjectParameter("IdValoracionFuncional1", idValoracionFuncional1) :
                new ObjectParameter("IdValoracionFuncional1", typeof(short));
    
            var idValoracionFuncional2Parameter = idValoracionFuncional2.HasValue ?
                new ObjectParameter("IdValoracionFuncional2", idValoracionFuncional2) :
                new ObjectParameter("IdValoracionFuncional2", typeof(short));
    
            var idValoracionFuncional3Parameter = idValoracionFuncional3.HasValue ?
                new ObjectParameter("IdValoracionFuncional3", idValoracionFuncional3) :
                new ObjectParameter("IdValoracionFuncional3", typeof(short));
    
            var idValoracionFuncional4Parameter = idValoracionFuncional4.HasValue ?
                new ObjectParameter("IdValoracionFuncional4", idValoracionFuncional4) :
                new ObjectParameter("IdValoracionFuncional4", typeof(short));
    
            var idValoracionFuncional5Parameter = idValoracionFuncional5.HasValue ?
                new ObjectParameter("IdValoracionFuncional5", idValoracionFuncional5) :
                new ObjectParameter("IdValoracionFuncional5", typeof(short));
    
            var idValoracionFuncional6Parameter = idValoracionFuncional6.HasValue ?
                new ObjectParameter("IdValoracionFuncional6", idValoracionFuncional6) :
                new ObjectParameter("IdValoracionFuncional6", typeof(short));
    
            var diagnosticoFuncionalParameter = diagnosticoFuncional.HasValue ?
                new ObjectParameter("DiagnosticoFuncional", diagnosticoFuncional) :
                new ObjectParameter("DiagnosticoFuncional", typeof(short));
    
            var idEstadoCognitivo1Parameter = idEstadoCognitivo1.HasValue ?
                new ObjectParameter("IdEstadoCognitivo1", idEstadoCognitivo1) :
                new ObjectParameter("IdEstadoCognitivo1", typeof(short));
    
            var idEstadoCognitivo2Parameter = idEstadoCognitivo2.HasValue ?
                new ObjectParameter("IdEstadoCognitivo2", idEstadoCognitivo2) :
                new ObjectParameter("IdEstadoCognitivo2", typeof(short));
    
            var idEstadoCognitivo3Parameter = idEstadoCognitivo3.HasValue ?
                new ObjectParameter("IdEstadoCognitivo3", idEstadoCognitivo3) :
                new ObjectParameter("IdEstadoCognitivo3", typeof(short));
    
            var idEstadoCognitivo4Parameter = idEstadoCognitivo4.HasValue ?
                new ObjectParameter("IdEstadoCognitivo4", idEstadoCognitivo4) :
                new ObjectParameter("IdEstadoCognitivo4", typeof(short));
    
            var idEstadoCognitivo5Parameter = idEstadoCognitivo5.HasValue ?
                new ObjectParameter("IdEstadoCognitivo5", idEstadoCognitivo5) :
                new ObjectParameter("IdEstadoCognitivo5", typeof(short));
    
            var idEstadoCognitivo6Parameter = idEstadoCognitivo6.HasValue ?
                new ObjectParameter("IdEstadoCognitivo6", idEstadoCognitivo6) :
                new ObjectParameter("IdEstadoCognitivo6", typeof(short));
    
            var idEstadoCognitivo7Parameter = idEstadoCognitivo7.HasValue ?
                new ObjectParameter("IdEstadoCognitivo7", idEstadoCognitivo7) :
                new ObjectParameter("IdEstadoCognitivo7", typeof(short));
    
            var idEstadoCognitivo8Parameter = idEstadoCognitivo8.HasValue ?
                new ObjectParameter("IdEstadoCognitivo8", idEstadoCognitivo8) :
                new ObjectParameter("IdEstadoCognitivo8", typeof(short));
    
            var idEstadoCognitivo9Parameter = idEstadoCognitivo9.HasValue ?
                new ObjectParameter("IdEstadoCognitivo9", idEstadoCognitivo9) :
                new ObjectParameter("IdEstadoCognitivo9", typeof(short));
    
            var idEstadoCognitivo10Parameter = idEstadoCognitivo10.HasValue ?
                new ObjectParameter("IdEstadoCognitivo10", idEstadoCognitivo10) :
                new ObjectParameter("IdEstadoCognitivo10", typeof(short));
    
            var valoracionCognitivaParameter = valoracionCognitiva.HasValue ?
                new ObjectParameter("ValoracionCognitiva", valoracionCognitiva) :
                new ObjectParameter("ValoracionCognitiva", typeof(short));
    
            var idEstadoAfectivo1Parameter = idEstadoAfectivo1.HasValue ?
                new ObjectParameter("IdEstadoAfectivo1", idEstadoAfectivo1) :
                new ObjectParameter("IdEstadoAfectivo1", typeof(short));
    
            var idEstadoAfectivo2Parameter = idEstadoAfectivo2.HasValue ?
                new ObjectParameter("IdEstadoAfectivo2", idEstadoAfectivo2) :
                new ObjectParameter("IdEstadoAfectivo2", typeof(short));
    
            var idEstadoAfectivo3Parameter = idEstadoAfectivo3.HasValue ?
                new ObjectParameter("IdEstadoAfectivo3", idEstadoAfectivo3) :
                new ObjectParameter("IdEstadoAfectivo3", typeof(short));
    
            var idEstadoAfectivo4Parameter = idEstadoAfectivo4.HasValue ?
                new ObjectParameter("IdEstadoAfectivo4", idEstadoAfectivo4) :
                new ObjectParameter("IdEstadoAfectivo4", typeof(short));
    
            var conManifestacionesDepresivasParameter = conManifestacionesDepresivas.HasValue ?
                new ObjectParameter("ConManifestacionesDepresivas", conManifestacionesDepresivas) :
                new ObjectParameter("ConManifestacionesDepresivas", typeof(short));
    
            var valoracionSocioFamiliar1Parameter = valoracionSocioFamiliar1.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar1", valoracionSocioFamiliar1) :
                new ObjectParameter("ValoracionSocioFamiliar1", typeof(short));
    
            var valoracionSocioFamiliar2Parameter = valoracionSocioFamiliar2.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar2", valoracionSocioFamiliar2) :
                new ObjectParameter("ValoracionSocioFamiliar2", typeof(short));
    
            var valoracionSocioFamiliar3Parameter = valoracionSocioFamiliar3.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar3", valoracionSocioFamiliar3) :
                new ObjectParameter("ValoracionSocioFamiliar3", typeof(short));
    
            var valoracionSocioFamiliar4Parameter = valoracionSocioFamiliar4.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar4", valoracionSocioFamiliar4) :
                new ObjectParameter("ValoracionSocioFamiliar4", typeof(short));
    
            var valoracionSocioFamiliar5Parameter = valoracionSocioFamiliar5.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar5", valoracionSocioFamiliar5) :
                new ObjectParameter("ValoracionSocioFamiliar5", typeof(short));
    
            var valoracionSocioFamiliarParameter = valoracionSocioFamiliar.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar", valoracionSocioFamiliar) :
                new ObjectParameter("ValoracionSocioFamiliar", typeof(short));
    
            var idCategoriaAdutoMayorParameter = idCategoriaAdutoMayor.HasValue ?
                new ObjectParameter("IdCategoriaAdutoMayor", idCategoriaAdutoMayor) :
                new ObjectParameter("IdCategoriaAdutoMayor", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(short));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ANAMNESIS_AP", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idTipoEmbarazoParameter, patologiaGestacionParameter, idControlPrenatalParameter, cPnumeroControlesParameter, cPnumeroEmbarazosParameter, lugarControlParameter, idTipoPartoParameter, complicacionesPartoParameter, idLugarPartoParameter, idPartoAtendidoPorParameter, antecentesPatologicosParameter, semanasGestacionNacerParameter, pesoAlNacerGRParameter, tallaAlNacerCMParameter, perimetroCefalicoCMParameter, patologiasPernatalesParameter, diasHospitalizacionParameter, idTipoLecheHasta6mesesParameter, antecLactanciaParameter, edadInicioAblactanciaMesesParameter, desarrolloSicomotrizParameter, fechaUltimaReglaParameter, fechaUltimoPeriodoParameter, metodosAnticonceptivosParameter, menarquiaParameter, menopausiaParameter, caracteristicasMenstruacionesParameter, informacionEmbarazosParameter, transfusionesParameter, deinmunizFechaAproximadaParameter, deinmunizEdadAproximadaParameter, alcoholParameter, tabacoParameter, drogasParameter, actividadFisicaParameter, consumoVerdurasParameter, consumoFrutasParameter, medicamentosParameter, alimentosParameter, sustanciasEnElAmbienteParameter, sustanciasContactoConPielParameter, contactoPersonaEnfermaParameter, crianzaAnimalesDomesticosParameter, aguaPotableParameter, disposicionExcretasParameter, reaccionAdversaMedicamentosParameter, saludBucalParameter, vigilanciaDeCrecimientoParameter, vigilanciaDelDesarrolloParameter, idValoracionFuncional1Parameter, idValoracionFuncional2Parameter, idValoracionFuncional3Parameter, idValoracionFuncional4Parameter, idValoracionFuncional5Parameter, idValoracionFuncional6Parameter, diagnosticoFuncionalParameter, idEstadoCognitivo1Parameter, idEstadoCognitivo2Parameter, idEstadoCognitivo3Parameter, idEstadoCognitivo4Parameter, idEstadoCognitivo5Parameter, idEstadoCognitivo6Parameter, idEstadoCognitivo7Parameter, idEstadoCognitivo8Parameter, idEstadoCognitivo9Parameter, idEstadoCognitivo10Parameter, valoracionCognitivaParameter, idEstadoAfectivo1Parameter, idEstadoAfectivo2Parameter, idEstadoAfectivo3Parameter, idEstadoAfectivo4Parameter, conManifestacionesDepresivasParameter, valoracionSocioFamiliar1Parameter, valoracionSocioFamiliar2Parameter, valoracionSocioFamiliar3Parameter, valoracionSocioFamiliar4Parameter, valoracionSocioFamiliar5Parameter, valoracionSocioFamiliarParameter, idCategoriaAdutoMayorParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_MiscelaneosDetalle(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, string valorCodigo6, string valorCodigo7, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, Nullable<int> valorEntero6, Nullable<int> valorEntero7, Nullable<System.DateTime> valorFecha, string estado, string aCCION)
        {
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorCodigo6Parameter = valorCodigo6 != null ?
                new ObjectParameter("ValorCodigo6", valorCodigo6) :
                new ObjectParameter("ValorCodigo6", typeof(string));
    
            var valorCodigo7Parameter = valorCodigo7 != null ?
                new ObjectParameter("ValorCodigo7", valorCodigo7) :
                new ObjectParameter("ValorCodigo7", typeof(string));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_MiscelaneosDetalle", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorCodigo6Parameter, valorCodigo7Parameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorEntero6Parameter, valorEntero7Parameter, valorFechaParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_AnamnesisAF(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idTipoParentesco, Nullable<int> edad, Nullable<int> idVivo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idTipoParentescoParameter = idTipoParentesco.HasValue ?
                new ObjectParameter("IdTipoParentesco", idTipoParentesco) :
                new ObjectParameter("IdTipoParentesco", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var idVivoParameter = idVivo.HasValue ?
                new ObjectParameter("IdVivo", idVivo) :
                new ObjectParameter("IdVivo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_AnamnesisAF", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idTipoParentescoParameter, edadParameter, idVivoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_AF> USP_AnamnesisAFListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idTipoParentesco, Nullable<int> edad, Nullable<int> idVivo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_AF).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idTipoParentescoParameter = idTipoParentesco.HasValue ?
                new ObjectParameter("IdTipoParentesco", idTipoParentesco) :
                new ObjectParameter("IdTipoParentesco", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var idVivoParameter = idVivo.HasValue ?
                new ObjectParameter("IdVivo", idVivo) :
                new ObjectParameter("IdVivo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_AF>("USP_AnamnesisAFListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idTipoParentescoParameter, edadParameter, idVivoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_AF> USP_AnamnesisAFListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idTipoParentesco, Nullable<int> edad, Nullable<int> idVivo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_AF).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idTipoParentescoParameter = idTipoParentesco.HasValue ?
                new ObjectParameter("IdTipoParentesco", idTipoParentesco) :
                new ObjectParameter("IdTipoParentesco", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var idVivoParameter = idVivo.HasValue ?
                new ObjectParameter("IdVivo", idVivo) :
                new ObjectParameter("IdVivo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_AF>("USP_AnamnesisAFListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idTipoParentescoParameter, edadParameter, idVivoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual int SP_ELIMINAR(Nullable<int> codigo, string gRUPO, string cONCEPTO, string cONCEPTOPADRE, Nullable<int> iDPAGINA, string aCCION)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var cONCEPTOPADREParameter = cONCEPTOPADRE != null ?
                new ObjectParameter("CONCEPTOPADRE", cONCEPTOPADRE) :
                new ObjectParameter("CONCEPTOPADRE", typeof(string));
    
            var iDPAGINAParameter = iDPAGINA.HasValue ?
                new ObjectParameter("IDPAGINA", iDPAGINA) :
                new ObjectParameter("IDPAGINA", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ELIMINAR", codigoParameter, gRUPOParameter, cONCEPTOParameter, cONCEPTOPADREParameter, iDPAGINAParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_EPISODIOATENCION_LISTAR(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> episodioAtencion, Nullable<int> idPaciente, Nullable<int> tipoAtencion, string motivoConsulta)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var motivoConsultaParameter = motivoConsulta != null ?
                new ObjectParameter("MotivoConsulta", motivoConsulta) :
                new ObjectParameter("MotivoConsulta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_EPISODIOATENCION_LISTAR", unidadReplicacionParameter, idEpisodioAtencionParameter, episodioAtencionParameter, idPacienteParameter, tipoAtencionParameter, motivoConsultaParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_EPISODIOATENCION_LISTAR(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> episodioAtencion, Nullable<int> idPaciente, Nullable<int> tipoAtencion, string motivoConsulta, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var motivoConsultaParameter = motivoConsulta != null ?
                new ObjectParameter("MotivoConsulta", motivoConsulta) :
                new ObjectParameter("MotivoConsulta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_EPISODIOATENCION_LISTAR", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, episodioAtencionParameter, idPacienteParameter, tipoAtencionParameter, motivoConsultaParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_LISTADORECURSOS(string aplicacionCodigo, string codigoTabla, string codigoElemento, string descripcionLocal, string estado, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_LISTADORECURSOS", aplicacionCodigoParameter, codigoTablaParameter, codigoElementoParameter, descripcionLocalParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_LISTADORECURSOS(string aplicacionCodigo, string codigoTabla, string codigoElemento, string descripcionLocal, string estado, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_LISTADORECURSOS", mergeOption, aplicacionCodigoParameter, codigoTablaParameter, codigoElementoParameter, descripcionLocalParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_Problema(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tipoProblema, Nullable<int> idTipoProblemaDiag, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<int> idDiagnostico, string observacion, Nullable<int> idControlado, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var tipoProblemaParameter = tipoProblema != null ?
                new ObjectParameter("TipoProblema", tipoProblema) :
                new ObjectParameter("TipoProblema", typeof(string));
    
            var idTipoProblemaDiagParameter = idTipoProblemaDiag.HasValue ?
                new ObjectParameter("IdTipoProblemaDiag", idTipoProblemaDiag) :
                new ObjectParameter("IdTipoProblemaDiag", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var idControladoParameter = idControlado.HasValue ?
                new ObjectParameter("IdControlado", idControlado) :
                new ObjectParameter("IdControlado", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_Problema", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoProblemaParameter, idTipoProblemaDiagParameter, secuenciaParameter, fechaParameter, idDiagnosticoParameter, observacionParameter, idControladoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Problema> USP_ProblemaListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tipoProblema, Nullable<int> idTipoProblemaDiag, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<int> idDiagnostico, string observacion, Nullable<int> idControlado, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Problema).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var tipoProblemaParameter = tipoProblema != null ?
                new ObjectParameter("TipoProblema", tipoProblema) :
                new ObjectParameter("TipoProblema", typeof(string));
    
            var idTipoProblemaDiagParameter = idTipoProblemaDiag.HasValue ?
                new ObjectParameter("IdTipoProblemaDiag", idTipoProblemaDiag) :
                new ObjectParameter("IdTipoProblemaDiag", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var idControladoParameter = idControlado.HasValue ?
                new ObjectParameter("IdControlado", idControlado) :
                new ObjectParameter("IdControlado", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Problema>("USP_ProblemaListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoProblemaParameter, idTipoProblemaDiagParameter, secuenciaParameter, fechaParameter, idDiagnosticoParameter, observacionParameter, idControladoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Problema> USP_ProblemaListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tipoProblema, Nullable<int> idTipoProblemaDiag, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<int> idDiagnostico, string observacion, Nullable<int> idControlado, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Problema).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var tipoProblemaParameter = tipoProblema != null ?
                new ObjectParameter("TipoProblema", tipoProblema) :
                new ObjectParameter("TipoProblema", typeof(string));
    
            var idTipoProblemaDiagParameter = idTipoProblemaDiag.HasValue ?
                new ObjectParameter("IdTipoProblemaDiag", idTipoProblemaDiag) :
                new ObjectParameter("IdTipoProblemaDiag", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var idControladoParameter = idControlado.HasValue ?
                new ObjectParameter("IdControlado", idControlado) :
                new ObjectParameter("IdControlado", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Problema>("USP_ProblemaListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoProblemaParameter, idTipoProblemaDiagParameter, secuenciaParameter, fechaParameter, idDiagnosticoParameter, observacionParameter, idControladoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SEGURIDADCONCEPTO> USP_SEGURIDADCONCEPTOS(string aCCION, string aPLICACIONCODIGO, string gRUPO)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADCONCEPTO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADCONCEPTO>("USP_SEGURIDADCONCEPTOS", aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter);
        }
    
        public virtual ObjectResult<SEGURIDADCONCEPTO> USP_SEGURIDADCONCEPTOS(string aCCION, string aPLICACIONCODIGO, string gRUPO, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADCONCEPTO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADCONCEPTO>("USP_SEGURIDADCONCEPTOS", mergeOption, aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter);
        }
    
        public virtual int SP_DICCIONARIO(string aCCION, Nullable<int> iDDICCIONARIO, string cODIGODICCIONARIO, string nOMBREDICCIONARIO, string nOMBRECONTROL, Nullable<int> aNCHO, Nullable<int> aLTURA, Nullable<int> eSTADO)
        {
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iDDICCIONARIOParameter = iDDICCIONARIO.HasValue ?
                new ObjectParameter("IDDICCIONARIO", iDDICCIONARIO) :
                new ObjectParameter("IDDICCIONARIO", typeof(int));
    
            var cODIGODICCIONARIOParameter = cODIGODICCIONARIO != null ?
                new ObjectParameter("CODIGODICCIONARIO", cODIGODICCIONARIO) :
                new ObjectParameter("CODIGODICCIONARIO", typeof(string));
    
            var nOMBREDICCIONARIOParameter = nOMBREDICCIONARIO != null ?
                new ObjectParameter("NOMBREDICCIONARIO", nOMBREDICCIONARIO) :
                new ObjectParameter("NOMBREDICCIONARIO", typeof(string));
    
            var nOMBRECONTROLParameter = nOMBRECONTROL != null ?
                new ObjectParameter("NOMBRECONTROL", nOMBRECONTROL) :
                new ObjectParameter("NOMBRECONTROL", typeof(string));
    
            var aNCHOParameter = aNCHO.HasValue ?
                new ObjectParameter("ANCHO", aNCHO) :
                new ObjectParameter("ANCHO", typeof(int));
    
            var aLTURAParameter = aLTURA.HasValue ?
                new ObjectParameter("ALTURA", aLTURA) :
                new ObjectParameter("ALTURA", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DICCIONARIO", aCCIONParameter, iDDICCIONARIOParameter, cODIGODICCIONARIOParameter, nOMBREDICCIONARIOParameter, nOMBRECONTROLParameter, aNCHOParameter, aLTURAParameter, eSTADOParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_AP> USP_Anamnesis_AP_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<short> idTipoEmbarazo, string patologiaGestacion, Nullable<short> idControlPrenatal, Nullable<short> cPnumeroControles, Nullable<short> cPnumeroEmbarazos, string lugarControl, Nullable<short> idTipoParto, string complicacionesParto, Nullable<short> idLugarParto, Nullable<short> idPartoAtendidoPor, string antecentesPatologicos, Nullable<short> semanasGestacionNacer, Nullable<int> pesoAlNacerGR, Nullable<decimal> tallaAlNacerCM, Nullable<decimal> perimetroCefalicoCM, string patologiasPernatales, Nullable<short> diasHospitalizacion, Nullable<short> idTipoLecheHasta6meses, string antecLactancia, Nullable<short> edadInicioAblactanciaMeses, string desarrolloSicomotriz, Nullable<System.DateTime> fechaUltimaRegla, Nullable<System.DateTime> fechaUltimoPeriodo, string metodosAnticonceptivos, string menarquia, string menopausia, string caracteristicasMenstruaciones, string informacionEmbarazos, string transfusiones, Nullable<System.DateTime> deinmunizFechaAproximada, Nullable<int> deinmunizEdadAproximada, string alcohol, string tabaco, string drogas, string actividadFisica, string consumoVerduras, string consumoFrutas, string medicamentos, string alimentos, string sustanciasEnElAmbiente, string sustanciasContactoConPiel, string contactoPersonaEnferma, string crianzaAnimalesDomesticos, string aguaPotable, string disposicionExcretas, string reaccionAdversaMedicamentos, string saludBucal, string vigilanciaDeCrecimiento, string vigilanciaDelDesarrollo, Nullable<short> idValoracionFuncional1, Nullable<short> idValoracionFuncional2, Nullable<short> idValoracionFuncional3, Nullable<short> idValoracionFuncional4, Nullable<short> idValoracionFuncional5, Nullable<short> idValoracionFuncional6, Nullable<short> diagnosticoFuncional, Nullable<short> idEstadoCognitivo1, Nullable<short> idEstadoCognitivo2, Nullable<short> idEstadoCognitivo3, Nullable<short> idEstadoCognitivo4, Nullable<short> idEstadoCognitivo5, Nullable<short> idEstadoCognitivo6, Nullable<short> idEstadoCognitivo7, Nullable<short> idEstadoCognitivo8, Nullable<short> idEstadoCognitivo9, Nullable<short> idEstadoCognitivo10, Nullable<short> valoracionCognitiva, Nullable<short> idEstadoAfectivo1, Nullable<short> idEstadoAfectivo2, Nullable<short> idEstadoAfectivo3, Nullable<short> idEstadoAfectivo4, Nullable<short> conManifestacionesDepresivas, Nullable<short> valoracionSocioFamiliar1, Nullable<short> valoracionSocioFamiliar2, Nullable<short> valoracionSocioFamiliar3, Nullable<short> valoracionSocioFamiliar4, Nullable<short> valoracionSocioFamiliar5, Nullable<short> valoracionSocioFamiliar, Nullable<short> idCategoriaAdutoMayor, Nullable<short> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_AP).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idTipoEmbarazoParameter = idTipoEmbarazo.HasValue ?
                new ObjectParameter("IdTipoEmbarazo", idTipoEmbarazo) :
                new ObjectParameter("IdTipoEmbarazo", typeof(short));
    
            var patologiaGestacionParameter = patologiaGestacion != null ?
                new ObjectParameter("PatologiaGestacion", patologiaGestacion) :
                new ObjectParameter("PatologiaGestacion", typeof(string));
    
            var idControlPrenatalParameter = idControlPrenatal.HasValue ?
                new ObjectParameter("IdControlPrenatal", idControlPrenatal) :
                new ObjectParameter("IdControlPrenatal", typeof(short));
    
            var cPnumeroControlesParameter = cPnumeroControles.HasValue ?
                new ObjectParameter("CPnumeroControles", cPnumeroControles) :
                new ObjectParameter("CPnumeroControles", typeof(short));
    
            var cPnumeroEmbarazosParameter = cPnumeroEmbarazos.HasValue ?
                new ObjectParameter("CPnumeroEmbarazos", cPnumeroEmbarazos) :
                new ObjectParameter("CPnumeroEmbarazos", typeof(short));
    
            var lugarControlParameter = lugarControl != null ?
                new ObjectParameter("LugarControl", lugarControl) :
                new ObjectParameter("LugarControl", typeof(string));
    
            var idTipoPartoParameter = idTipoParto.HasValue ?
                new ObjectParameter("IdTipoParto", idTipoParto) :
                new ObjectParameter("IdTipoParto", typeof(short));
    
            var complicacionesPartoParameter = complicacionesParto != null ?
                new ObjectParameter("ComplicacionesParto", complicacionesParto) :
                new ObjectParameter("ComplicacionesParto", typeof(string));
    
            var idLugarPartoParameter = idLugarParto.HasValue ?
                new ObjectParameter("IdLugarParto", idLugarParto) :
                new ObjectParameter("IdLugarParto", typeof(short));
    
            var idPartoAtendidoPorParameter = idPartoAtendidoPor.HasValue ?
                new ObjectParameter("IdPartoAtendidoPor", idPartoAtendidoPor) :
                new ObjectParameter("IdPartoAtendidoPor", typeof(short));
    
            var antecentesPatologicosParameter = antecentesPatologicos != null ?
                new ObjectParameter("AntecentesPatologicos", antecentesPatologicos) :
                new ObjectParameter("AntecentesPatologicos", typeof(string));
    
            var semanasGestacionNacerParameter = semanasGestacionNacer.HasValue ?
                new ObjectParameter("SemanasGestacionNacer", semanasGestacionNacer) :
                new ObjectParameter("SemanasGestacionNacer", typeof(short));
    
            var pesoAlNacerGRParameter = pesoAlNacerGR.HasValue ?
                new ObjectParameter("PesoAlNacerGR", pesoAlNacerGR) :
                new ObjectParameter("PesoAlNacerGR", typeof(int));
    
            var tallaAlNacerCMParameter = tallaAlNacerCM.HasValue ?
                new ObjectParameter("TallaAlNacerCM", tallaAlNacerCM) :
                new ObjectParameter("TallaAlNacerCM", typeof(decimal));
    
            var perimetroCefalicoCMParameter = perimetroCefalicoCM.HasValue ?
                new ObjectParameter("PerimetroCefalicoCM", perimetroCefalicoCM) :
                new ObjectParameter("PerimetroCefalicoCM", typeof(decimal));
    
            var patologiasPernatalesParameter = patologiasPernatales != null ?
                new ObjectParameter("PatologiasPernatales", patologiasPernatales) :
                new ObjectParameter("PatologiasPernatales", typeof(string));
    
            var diasHospitalizacionParameter = diasHospitalizacion.HasValue ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(short));
    
            var idTipoLecheHasta6mesesParameter = idTipoLecheHasta6meses.HasValue ?
                new ObjectParameter("IdTipoLecheHasta6meses", idTipoLecheHasta6meses) :
                new ObjectParameter("IdTipoLecheHasta6meses", typeof(short));
    
            var antecLactanciaParameter = antecLactancia != null ?
                new ObjectParameter("AntecLactancia", antecLactancia) :
                new ObjectParameter("AntecLactancia", typeof(string));
    
            var edadInicioAblactanciaMesesParameter = edadInicioAblactanciaMeses.HasValue ?
                new ObjectParameter("EdadInicioAblactanciaMeses", edadInicioAblactanciaMeses) :
                new ObjectParameter("EdadInicioAblactanciaMeses", typeof(short));
    
            var desarrolloSicomotrizParameter = desarrolloSicomotriz != null ?
                new ObjectParameter("DesarrolloSicomotriz", desarrolloSicomotriz) :
                new ObjectParameter("DesarrolloSicomotriz", typeof(string));
    
            var fechaUltimaReglaParameter = fechaUltimaRegla.HasValue ?
                new ObjectParameter("FechaUltimaRegla", fechaUltimaRegla) :
                new ObjectParameter("FechaUltimaRegla", typeof(System.DateTime));
    
            var fechaUltimoPeriodoParameter = fechaUltimoPeriodo.HasValue ?
                new ObjectParameter("FechaUltimoPeriodo", fechaUltimoPeriodo) :
                new ObjectParameter("FechaUltimoPeriodo", typeof(System.DateTime));
    
            var metodosAnticonceptivosParameter = metodosAnticonceptivos != null ?
                new ObjectParameter("MetodosAnticonceptivos", metodosAnticonceptivos) :
                new ObjectParameter("MetodosAnticonceptivos", typeof(string));
    
            var menarquiaParameter = menarquia != null ?
                new ObjectParameter("Menarquia", menarquia) :
                new ObjectParameter("Menarquia", typeof(string));
    
            var menopausiaParameter = menopausia != null ?
                new ObjectParameter("Menopausia", menopausia) :
                new ObjectParameter("Menopausia", typeof(string));
    
            var caracteristicasMenstruacionesParameter = caracteristicasMenstruaciones != null ?
                new ObjectParameter("CaracteristicasMenstruaciones", caracteristicasMenstruaciones) :
                new ObjectParameter("CaracteristicasMenstruaciones", typeof(string));
    
            var informacionEmbarazosParameter = informacionEmbarazos != null ?
                new ObjectParameter("InformacionEmbarazos", informacionEmbarazos) :
                new ObjectParameter("InformacionEmbarazos", typeof(string));
    
            var transfusionesParameter = transfusiones != null ?
                new ObjectParameter("Transfusiones", transfusiones) :
                new ObjectParameter("Transfusiones", typeof(string));
    
            var deinmunizFechaAproximadaParameter = deinmunizFechaAproximada.HasValue ?
                new ObjectParameter("DeinmunizFechaAproximada", deinmunizFechaAproximada) :
                new ObjectParameter("DeinmunizFechaAproximada", typeof(System.DateTime));
    
            var deinmunizEdadAproximadaParameter = deinmunizEdadAproximada.HasValue ?
                new ObjectParameter("DeinmunizEdadAproximada", deinmunizEdadAproximada) :
                new ObjectParameter("DeinmunizEdadAproximada", typeof(int));
    
            var alcoholParameter = alcohol != null ?
                new ObjectParameter("Alcohol", alcohol) :
                new ObjectParameter("Alcohol", typeof(string));
    
            var tabacoParameter = tabaco != null ?
                new ObjectParameter("Tabaco", tabaco) :
                new ObjectParameter("Tabaco", typeof(string));
    
            var drogasParameter = drogas != null ?
                new ObjectParameter("Drogas", drogas) :
                new ObjectParameter("Drogas", typeof(string));
    
            var actividadFisicaParameter = actividadFisica != null ?
                new ObjectParameter("ActividadFisica", actividadFisica) :
                new ObjectParameter("ActividadFisica", typeof(string));
    
            var consumoVerdurasParameter = consumoVerduras != null ?
                new ObjectParameter("ConsumoVerduras", consumoVerduras) :
                new ObjectParameter("ConsumoVerduras", typeof(string));
    
            var consumoFrutasParameter = consumoFrutas != null ?
                new ObjectParameter("ConsumoFrutas", consumoFrutas) :
                new ObjectParameter("ConsumoFrutas", typeof(string));
    
            var medicamentosParameter = medicamentos != null ?
                new ObjectParameter("Medicamentos", medicamentos) :
                new ObjectParameter("Medicamentos", typeof(string));
    
            var alimentosParameter = alimentos != null ?
                new ObjectParameter("Alimentos", alimentos) :
                new ObjectParameter("Alimentos", typeof(string));
    
            var sustanciasEnElAmbienteParameter = sustanciasEnElAmbiente != null ?
                new ObjectParameter("SustanciasEnElAmbiente", sustanciasEnElAmbiente) :
                new ObjectParameter("SustanciasEnElAmbiente", typeof(string));
    
            var sustanciasContactoConPielParameter = sustanciasContactoConPiel != null ?
                new ObjectParameter("SustanciasContactoConPiel", sustanciasContactoConPiel) :
                new ObjectParameter("SustanciasContactoConPiel", typeof(string));
    
            var contactoPersonaEnfermaParameter = contactoPersonaEnferma != null ?
                new ObjectParameter("ContactoPersonaEnferma", contactoPersonaEnferma) :
                new ObjectParameter("ContactoPersonaEnferma", typeof(string));
    
            var crianzaAnimalesDomesticosParameter = crianzaAnimalesDomesticos != null ?
                new ObjectParameter("CrianzaAnimalesDomesticos", crianzaAnimalesDomesticos) :
                new ObjectParameter("CrianzaAnimalesDomesticos", typeof(string));
    
            var aguaPotableParameter = aguaPotable != null ?
                new ObjectParameter("AguaPotable", aguaPotable) :
                new ObjectParameter("AguaPotable", typeof(string));
    
            var disposicionExcretasParameter = disposicionExcretas != null ?
                new ObjectParameter("DisposicionExcretas", disposicionExcretas) :
                new ObjectParameter("DisposicionExcretas", typeof(string));
    
            var reaccionAdversaMedicamentosParameter = reaccionAdversaMedicamentos != null ?
                new ObjectParameter("ReaccionAdversaMedicamentos", reaccionAdversaMedicamentos) :
                new ObjectParameter("ReaccionAdversaMedicamentos", typeof(string));
    
            var saludBucalParameter = saludBucal != null ?
                new ObjectParameter("SaludBucal", saludBucal) :
                new ObjectParameter("SaludBucal", typeof(string));
    
            var vigilanciaDeCrecimientoParameter = vigilanciaDeCrecimiento != null ?
                new ObjectParameter("VigilanciaDeCrecimiento", vigilanciaDeCrecimiento) :
                new ObjectParameter("VigilanciaDeCrecimiento", typeof(string));
    
            var vigilanciaDelDesarrolloParameter = vigilanciaDelDesarrollo != null ?
                new ObjectParameter("VigilanciaDelDesarrollo", vigilanciaDelDesarrollo) :
                new ObjectParameter("VigilanciaDelDesarrollo", typeof(string));
    
            var idValoracionFuncional1Parameter = idValoracionFuncional1.HasValue ?
                new ObjectParameter("IdValoracionFuncional1", idValoracionFuncional1) :
                new ObjectParameter("IdValoracionFuncional1", typeof(short));
    
            var idValoracionFuncional2Parameter = idValoracionFuncional2.HasValue ?
                new ObjectParameter("IdValoracionFuncional2", idValoracionFuncional2) :
                new ObjectParameter("IdValoracionFuncional2", typeof(short));
    
            var idValoracionFuncional3Parameter = idValoracionFuncional3.HasValue ?
                new ObjectParameter("IdValoracionFuncional3", idValoracionFuncional3) :
                new ObjectParameter("IdValoracionFuncional3", typeof(short));
    
            var idValoracionFuncional4Parameter = idValoracionFuncional4.HasValue ?
                new ObjectParameter("IdValoracionFuncional4", idValoracionFuncional4) :
                new ObjectParameter("IdValoracionFuncional4", typeof(short));
    
            var idValoracionFuncional5Parameter = idValoracionFuncional5.HasValue ?
                new ObjectParameter("IdValoracionFuncional5", idValoracionFuncional5) :
                new ObjectParameter("IdValoracionFuncional5", typeof(short));
    
            var idValoracionFuncional6Parameter = idValoracionFuncional6.HasValue ?
                new ObjectParameter("IdValoracionFuncional6", idValoracionFuncional6) :
                new ObjectParameter("IdValoracionFuncional6", typeof(short));
    
            var diagnosticoFuncionalParameter = diagnosticoFuncional.HasValue ?
                new ObjectParameter("DiagnosticoFuncional", diagnosticoFuncional) :
                new ObjectParameter("DiagnosticoFuncional", typeof(short));
    
            var idEstadoCognitivo1Parameter = idEstadoCognitivo1.HasValue ?
                new ObjectParameter("IdEstadoCognitivo1", idEstadoCognitivo1) :
                new ObjectParameter("IdEstadoCognitivo1", typeof(short));
    
            var idEstadoCognitivo2Parameter = idEstadoCognitivo2.HasValue ?
                new ObjectParameter("IdEstadoCognitivo2", idEstadoCognitivo2) :
                new ObjectParameter("IdEstadoCognitivo2", typeof(short));
    
            var idEstadoCognitivo3Parameter = idEstadoCognitivo3.HasValue ?
                new ObjectParameter("IdEstadoCognitivo3", idEstadoCognitivo3) :
                new ObjectParameter("IdEstadoCognitivo3", typeof(short));
    
            var idEstadoCognitivo4Parameter = idEstadoCognitivo4.HasValue ?
                new ObjectParameter("IdEstadoCognitivo4", idEstadoCognitivo4) :
                new ObjectParameter("IdEstadoCognitivo4", typeof(short));
    
            var idEstadoCognitivo5Parameter = idEstadoCognitivo5.HasValue ?
                new ObjectParameter("IdEstadoCognitivo5", idEstadoCognitivo5) :
                new ObjectParameter("IdEstadoCognitivo5", typeof(short));
    
            var idEstadoCognitivo6Parameter = idEstadoCognitivo6.HasValue ?
                new ObjectParameter("IdEstadoCognitivo6", idEstadoCognitivo6) :
                new ObjectParameter("IdEstadoCognitivo6", typeof(short));
    
            var idEstadoCognitivo7Parameter = idEstadoCognitivo7.HasValue ?
                new ObjectParameter("IdEstadoCognitivo7", idEstadoCognitivo7) :
                new ObjectParameter("IdEstadoCognitivo7", typeof(short));
    
            var idEstadoCognitivo8Parameter = idEstadoCognitivo8.HasValue ?
                new ObjectParameter("IdEstadoCognitivo8", idEstadoCognitivo8) :
                new ObjectParameter("IdEstadoCognitivo8", typeof(short));
    
            var idEstadoCognitivo9Parameter = idEstadoCognitivo9.HasValue ?
                new ObjectParameter("IdEstadoCognitivo9", idEstadoCognitivo9) :
                new ObjectParameter("IdEstadoCognitivo9", typeof(short));
    
            var idEstadoCognitivo10Parameter = idEstadoCognitivo10.HasValue ?
                new ObjectParameter("IdEstadoCognitivo10", idEstadoCognitivo10) :
                new ObjectParameter("IdEstadoCognitivo10", typeof(short));
    
            var valoracionCognitivaParameter = valoracionCognitiva.HasValue ?
                new ObjectParameter("ValoracionCognitiva", valoracionCognitiva) :
                new ObjectParameter("ValoracionCognitiva", typeof(short));
    
            var idEstadoAfectivo1Parameter = idEstadoAfectivo1.HasValue ?
                new ObjectParameter("IdEstadoAfectivo1", idEstadoAfectivo1) :
                new ObjectParameter("IdEstadoAfectivo1", typeof(short));
    
            var idEstadoAfectivo2Parameter = idEstadoAfectivo2.HasValue ?
                new ObjectParameter("IdEstadoAfectivo2", idEstadoAfectivo2) :
                new ObjectParameter("IdEstadoAfectivo2", typeof(short));
    
            var idEstadoAfectivo3Parameter = idEstadoAfectivo3.HasValue ?
                new ObjectParameter("IdEstadoAfectivo3", idEstadoAfectivo3) :
                new ObjectParameter("IdEstadoAfectivo3", typeof(short));
    
            var idEstadoAfectivo4Parameter = idEstadoAfectivo4.HasValue ?
                new ObjectParameter("IdEstadoAfectivo4", idEstadoAfectivo4) :
                new ObjectParameter("IdEstadoAfectivo4", typeof(short));
    
            var conManifestacionesDepresivasParameter = conManifestacionesDepresivas.HasValue ?
                new ObjectParameter("ConManifestacionesDepresivas", conManifestacionesDepresivas) :
                new ObjectParameter("ConManifestacionesDepresivas", typeof(short));
    
            var valoracionSocioFamiliar1Parameter = valoracionSocioFamiliar1.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar1", valoracionSocioFamiliar1) :
                new ObjectParameter("ValoracionSocioFamiliar1", typeof(short));
    
            var valoracionSocioFamiliar2Parameter = valoracionSocioFamiliar2.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar2", valoracionSocioFamiliar2) :
                new ObjectParameter("ValoracionSocioFamiliar2", typeof(short));
    
            var valoracionSocioFamiliar3Parameter = valoracionSocioFamiliar3.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar3", valoracionSocioFamiliar3) :
                new ObjectParameter("ValoracionSocioFamiliar3", typeof(short));
    
            var valoracionSocioFamiliar4Parameter = valoracionSocioFamiliar4.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar4", valoracionSocioFamiliar4) :
                new ObjectParameter("ValoracionSocioFamiliar4", typeof(short));
    
            var valoracionSocioFamiliar5Parameter = valoracionSocioFamiliar5.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar5", valoracionSocioFamiliar5) :
                new ObjectParameter("ValoracionSocioFamiliar5", typeof(short));
    
            var valoracionSocioFamiliarParameter = valoracionSocioFamiliar.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar", valoracionSocioFamiliar) :
                new ObjectParameter("ValoracionSocioFamiliar", typeof(short));
    
            var idCategoriaAdutoMayorParameter = idCategoriaAdutoMayor.HasValue ?
                new ObjectParameter("IdCategoriaAdutoMayor", idCategoriaAdutoMayor) :
                new ObjectParameter("IdCategoriaAdutoMayor", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(short));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_AP>("USP_Anamnesis_AP_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idTipoEmbarazoParameter, patologiaGestacionParameter, idControlPrenatalParameter, cPnumeroControlesParameter, cPnumeroEmbarazosParameter, lugarControlParameter, idTipoPartoParameter, complicacionesPartoParameter, idLugarPartoParameter, idPartoAtendidoPorParameter, antecentesPatologicosParameter, semanasGestacionNacerParameter, pesoAlNacerGRParameter, tallaAlNacerCMParameter, perimetroCefalicoCMParameter, patologiasPernatalesParameter, diasHospitalizacionParameter, idTipoLecheHasta6mesesParameter, antecLactanciaParameter, edadInicioAblactanciaMesesParameter, desarrolloSicomotrizParameter, fechaUltimaReglaParameter, fechaUltimoPeriodoParameter, metodosAnticonceptivosParameter, menarquiaParameter, menopausiaParameter, caracteristicasMenstruacionesParameter, informacionEmbarazosParameter, transfusionesParameter, deinmunizFechaAproximadaParameter, deinmunizEdadAproximadaParameter, alcoholParameter, tabacoParameter, drogasParameter, actividadFisicaParameter, consumoVerdurasParameter, consumoFrutasParameter, medicamentosParameter, alimentosParameter, sustanciasEnElAmbienteParameter, sustanciasContactoConPielParameter, contactoPersonaEnfermaParameter, crianzaAnimalesDomesticosParameter, aguaPotableParameter, disposicionExcretasParameter, reaccionAdversaMedicamentosParameter, saludBucalParameter, vigilanciaDeCrecimientoParameter, vigilanciaDelDesarrolloParameter, idValoracionFuncional1Parameter, idValoracionFuncional2Parameter, idValoracionFuncional3Parameter, idValoracionFuncional4Parameter, idValoracionFuncional5Parameter, idValoracionFuncional6Parameter, diagnosticoFuncionalParameter, idEstadoCognitivo1Parameter, idEstadoCognitivo2Parameter, idEstadoCognitivo3Parameter, idEstadoCognitivo4Parameter, idEstadoCognitivo5Parameter, idEstadoCognitivo6Parameter, idEstadoCognitivo7Parameter, idEstadoCognitivo8Parameter, idEstadoCognitivo9Parameter, idEstadoCognitivo10Parameter, valoracionCognitivaParameter, idEstadoAfectivo1Parameter, idEstadoAfectivo2Parameter, idEstadoAfectivo3Parameter, idEstadoAfectivo4Parameter, conManifestacionesDepresivasParameter, valoracionSocioFamiliar1Parameter, valoracionSocioFamiliar2Parameter, valoracionSocioFamiliar3Parameter, valoracionSocioFamiliar4Parameter, valoracionSocioFamiliar5Parameter, valoracionSocioFamiliarParameter, idCategoriaAdutoMayorParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_AP> USP_Anamnesis_AP_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<short> idTipoEmbarazo, string patologiaGestacion, Nullable<short> idControlPrenatal, Nullable<short> cPnumeroControles, Nullable<short> cPnumeroEmbarazos, string lugarControl, Nullable<short> idTipoParto, string complicacionesParto, Nullable<short> idLugarParto, Nullable<short> idPartoAtendidoPor, string antecentesPatologicos, Nullable<short> semanasGestacionNacer, Nullable<int> pesoAlNacerGR, Nullable<decimal> tallaAlNacerCM, Nullable<decimal> perimetroCefalicoCM, string patologiasPernatales, Nullable<short> diasHospitalizacion, Nullable<short> idTipoLecheHasta6meses, string antecLactancia, Nullable<short> edadInicioAblactanciaMeses, string desarrolloSicomotriz, Nullable<System.DateTime> fechaUltimaRegla, Nullable<System.DateTime> fechaUltimoPeriodo, string metodosAnticonceptivos, string menarquia, string menopausia, string caracteristicasMenstruaciones, string informacionEmbarazos, string transfusiones, Nullable<System.DateTime> deinmunizFechaAproximada, Nullable<int> deinmunizEdadAproximada, string alcohol, string tabaco, string drogas, string actividadFisica, string consumoVerduras, string consumoFrutas, string medicamentos, string alimentos, string sustanciasEnElAmbiente, string sustanciasContactoConPiel, string contactoPersonaEnferma, string crianzaAnimalesDomesticos, string aguaPotable, string disposicionExcretas, string reaccionAdversaMedicamentos, string saludBucal, string vigilanciaDeCrecimiento, string vigilanciaDelDesarrollo, Nullable<short> idValoracionFuncional1, Nullable<short> idValoracionFuncional2, Nullable<short> idValoracionFuncional3, Nullable<short> idValoracionFuncional4, Nullable<short> idValoracionFuncional5, Nullable<short> idValoracionFuncional6, Nullable<short> diagnosticoFuncional, Nullable<short> idEstadoCognitivo1, Nullable<short> idEstadoCognitivo2, Nullable<short> idEstadoCognitivo3, Nullable<short> idEstadoCognitivo4, Nullable<short> idEstadoCognitivo5, Nullable<short> idEstadoCognitivo6, Nullable<short> idEstadoCognitivo7, Nullable<short> idEstadoCognitivo8, Nullable<short> idEstadoCognitivo9, Nullable<short> idEstadoCognitivo10, Nullable<short> valoracionCognitiva, Nullable<short> idEstadoAfectivo1, Nullable<short> idEstadoAfectivo2, Nullable<short> idEstadoAfectivo3, Nullable<short> idEstadoAfectivo4, Nullable<short> conManifestacionesDepresivas, Nullable<short> valoracionSocioFamiliar1, Nullable<short> valoracionSocioFamiliar2, Nullable<short> valoracionSocioFamiliar3, Nullable<short> valoracionSocioFamiliar4, Nullable<short> valoracionSocioFamiliar5, Nullable<short> valoracionSocioFamiliar, Nullable<short> idCategoriaAdutoMayor, Nullable<short> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_AP).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idTipoEmbarazoParameter = idTipoEmbarazo.HasValue ?
                new ObjectParameter("IdTipoEmbarazo", idTipoEmbarazo) :
                new ObjectParameter("IdTipoEmbarazo", typeof(short));
    
            var patologiaGestacionParameter = patologiaGestacion != null ?
                new ObjectParameter("PatologiaGestacion", patologiaGestacion) :
                new ObjectParameter("PatologiaGestacion", typeof(string));
    
            var idControlPrenatalParameter = idControlPrenatal.HasValue ?
                new ObjectParameter("IdControlPrenatal", idControlPrenatal) :
                new ObjectParameter("IdControlPrenatal", typeof(short));
    
            var cPnumeroControlesParameter = cPnumeroControles.HasValue ?
                new ObjectParameter("CPnumeroControles", cPnumeroControles) :
                new ObjectParameter("CPnumeroControles", typeof(short));
    
            var cPnumeroEmbarazosParameter = cPnumeroEmbarazos.HasValue ?
                new ObjectParameter("CPnumeroEmbarazos", cPnumeroEmbarazos) :
                new ObjectParameter("CPnumeroEmbarazos", typeof(short));
    
            var lugarControlParameter = lugarControl != null ?
                new ObjectParameter("LugarControl", lugarControl) :
                new ObjectParameter("LugarControl", typeof(string));
    
            var idTipoPartoParameter = idTipoParto.HasValue ?
                new ObjectParameter("IdTipoParto", idTipoParto) :
                new ObjectParameter("IdTipoParto", typeof(short));
    
            var complicacionesPartoParameter = complicacionesParto != null ?
                new ObjectParameter("ComplicacionesParto", complicacionesParto) :
                new ObjectParameter("ComplicacionesParto", typeof(string));
    
            var idLugarPartoParameter = idLugarParto.HasValue ?
                new ObjectParameter("IdLugarParto", idLugarParto) :
                new ObjectParameter("IdLugarParto", typeof(short));
    
            var idPartoAtendidoPorParameter = idPartoAtendidoPor.HasValue ?
                new ObjectParameter("IdPartoAtendidoPor", idPartoAtendidoPor) :
                new ObjectParameter("IdPartoAtendidoPor", typeof(short));
    
            var antecentesPatologicosParameter = antecentesPatologicos != null ?
                new ObjectParameter("AntecentesPatologicos", antecentesPatologicos) :
                new ObjectParameter("AntecentesPatologicos", typeof(string));
    
            var semanasGestacionNacerParameter = semanasGestacionNacer.HasValue ?
                new ObjectParameter("SemanasGestacionNacer", semanasGestacionNacer) :
                new ObjectParameter("SemanasGestacionNacer", typeof(short));
    
            var pesoAlNacerGRParameter = pesoAlNacerGR.HasValue ?
                new ObjectParameter("PesoAlNacerGR", pesoAlNacerGR) :
                new ObjectParameter("PesoAlNacerGR", typeof(int));
    
            var tallaAlNacerCMParameter = tallaAlNacerCM.HasValue ?
                new ObjectParameter("TallaAlNacerCM", tallaAlNacerCM) :
                new ObjectParameter("TallaAlNacerCM", typeof(decimal));
    
            var perimetroCefalicoCMParameter = perimetroCefalicoCM.HasValue ?
                new ObjectParameter("PerimetroCefalicoCM", perimetroCefalicoCM) :
                new ObjectParameter("PerimetroCefalicoCM", typeof(decimal));
    
            var patologiasPernatalesParameter = patologiasPernatales != null ?
                new ObjectParameter("PatologiasPernatales", patologiasPernatales) :
                new ObjectParameter("PatologiasPernatales", typeof(string));
    
            var diasHospitalizacionParameter = diasHospitalizacion.HasValue ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(short));
    
            var idTipoLecheHasta6mesesParameter = idTipoLecheHasta6meses.HasValue ?
                new ObjectParameter("IdTipoLecheHasta6meses", idTipoLecheHasta6meses) :
                new ObjectParameter("IdTipoLecheHasta6meses", typeof(short));
    
            var antecLactanciaParameter = antecLactancia != null ?
                new ObjectParameter("AntecLactancia", antecLactancia) :
                new ObjectParameter("AntecLactancia", typeof(string));
    
            var edadInicioAblactanciaMesesParameter = edadInicioAblactanciaMeses.HasValue ?
                new ObjectParameter("EdadInicioAblactanciaMeses", edadInicioAblactanciaMeses) :
                new ObjectParameter("EdadInicioAblactanciaMeses", typeof(short));
    
            var desarrolloSicomotrizParameter = desarrolloSicomotriz != null ?
                new ObjectParameter("DesarrolloSicomotriz", desarrolloSicomotriz) :
                new ObjectParameter("DesarrolloSicomotriz", typeof(string));
    
            var fechaUltimaReglaParameter = fechaUltimaRegla.HasValue ?
                new ObjectParameter("FechaUltimaRegla", fechaUltimaRegla) :
                new ObjectParameter("FechaUltimaRegla", typeof(System.DateTime));
    
            var fechaUltimoPeriodoParameter = fechaUltimoPeriodo.HasValue ?
                new ObjectParameter("FechaUltimoPeriodo", fechaUltimoPeriodo) :
                new ObjectParameter("FechaUltimoPeriodo", typeof(System.DateTime));
    
            var metodosAnticonceptivosParameter = metodosAnticonceptivos != null ?
                new ObjectParameter("MetodosAnticonceptivos", metodosAnticonceptivos) :
                new ObjectParameter("MetodosAnticonceptivos", typeof(string));
    
            var menarquiaParameter = menarquia != null ?
                new ObjectParameter("Menarquia", menarquia) :
                new ObjectParameter("Menarquia", typeof(string));
    
            var menopausiaParameter = menopausia != null ?
                new ObjectParameter("Menopausia", menopausia) :
                new ObjectParameter("Menopausia", typeof(string));
    
            var caracteristicasMenstruacionesParameter = caracteristicasMenstruaciones != null ?
                new ObjectParameter("CaracteristicasMenstruaciones", caracteristicasMenstruaciones) :
                new ObjectParameter("CaracteristicasMenstruaciones", typeof(string));
    
            var informacionEmbarazosParameter = informacionEmbarazos != null ?
                new ObjectParameter("InformacionEmbarazos", informacionEmbarazos) :
                new ObjectParameter("InformacionEmbarazos", typeof(string));
    
            var transfusionesParameter = transfusiones != null ?
                new ObjectParameter("Transfusiones", transfusiones) :
                new ObjectParameter("Transfusiones", typeof(string));
    
            var deinmunizFechaAproximadaParameter = deinmunizFechaAproximada.HasValue ?
                new ObjectParameter("DeinmunizFechaAproximada", deinmunizFechaAproximada) :
                new ObjectParameter("DeinmunizFechaAproximada", typeof(System.DateTime));
    
            var deinmunizEdadAproximadaParameter = deinmunizEdadAproximada.HasValue ?
                new ObjectParameter("DeinmunizEdadAproximada", deinmunizEdadAproximada) :
                new ObjectParameter("DeinmunizEdadAproximada", typeof(int));
    
            var alcoholParameter = alcohol != null ?
                new ObjectParameter("Alcohol", alcohol) :
                new ObjectParameter("Alcohol", typeof(string));
    
            var tabacoParameter = tabaco != null ?
                new ObjectParameter("Tabaco", tabaco) :
                new ObjectParameter("Tabaco", typeof(string));
    
            var drogasParameter = drogas != null ?
                new ObjectParameter("Drogas", drogas) :
                new ObjectParameter("Drogas", typeof(string));
    
            var actividadFisicaParameter = actividadFisica != null ?
                new ObjectParameter("ActividadFisica", actividadFisica) :
                new ObjectParameter("ActividadFisica", typeof(string));
    
            var consumoVerdurasParameter = consumoVerduras != null ?
                new ObjectParameter("ConsumoVerduras", consumoVerduras) :
                new ObjectParameter("ConsumoVerduras", typeof(string));
    
            var consumoFrutasParameter = consumoFrutas != null ?
                new ObjectParameter("ConsumoFrutas", consumoFrutas) :
                new ObjectParameter("ConsumoFrutas", typeof(string));
    
            var medicamentosParameter = medicamentos != null ?
                new ObjectParameter("Medicamentos", medicamentos) :
                new ObjectParameter("Medicamentos", typeof(string));
    
            var alimentosParameter = alimentos != null ?
                new ObjectParameter("Alimentos", alimentos) :
                new ObjectParameter("Alimentos", typeof(string));
    
            var sustanciasEnElAmbienteParameter = sustanciasEnElAmbiente != null ?
                new ObjectParameter("SustanciasEnElAmbiente", sustanciasEnElAmbiente) :
                new ObjectParameter("SustanciasEnElAmbiente", typeof(string));
    
            var sustanciasContactoConPielParameter = sustanciasContactoConPiel != null ?
                new ObjectParameter("SustanciasContactoConPiel", sustanciasContactoConPiel) :
                new ObjectParameter("SustanciasContactoConPiel", typeof(string));
    
            var contactoPersonaEnfermaParameter = contactoPersonaEnferma != null ?
                new ObjectParameter("ContactoPersonaEnferma", contactoPersonaEnferma) :
                new ObjectParameter("ContactoPersonaEnferma", typeof(string));
    
            var crianzaAnimalesDomesticosParameter = crianzaAnimalesDomesticos != null ?
                new ObjectParameter("CrianzaAnimalesDomesticos", crianzaAnimalesDomesticos) :
                new ObjectParameter("CrianzaAnimalesDomesticos", typeof(string));
    
            var aguaPotableParameter = aguaPotable != null ?
                new ObjectParameter("AguaPotable", aguaPotable) :
                new ObjectParameter("AguaPotable", typeof(string));
    
            var disposicionExcretasParameter = disposicionExcretas != null ?
                new ObjectParameter("DisposicionExcretas", disposicionExcretas) :
                new ObjectParameter("DisposicionExcretas", typeof(string));
    
            var reaccionAdversaMedicamentosParameter = reaccionAdversaMedicamentos != null ?
                new ObjectParameter("ReaccionAdversaMedicamentos", reaccionAdversaMedicamentos) :
                new ObjectParameter("ReaccionAdversaMedicamentos", typeof(string));
    
            var saludBucalParameter = saludBucal != null ?
                new ObjectParameter("SaludBucal", saludBucal) :
                new ObjectParameter("SaludBucal", typeof(string));
    
            var vigilanciaDeCrecimientoParameter = vigilanciaDeCrecimiento != null ?
                new ObjectParameter("VigilanciaDeCrecimiento", vigilanciaDeCrecimiento) :
                new ObjectParameter("VigilanciaDeCrecimiento", typeof(string));
    
            var vigilanciaDelDesarrolloParameter = vigilanciaDelDesarrollo != null ?
                new ObjectParameter("VigilanciaDelDesarrollo", vigilanciaDelDesarrollo) :
                new ObjectParameter("VigilanciaDelDesarrollo", typeof(string));
    
            var idValoracionFuncional1Parameter = idValoracionFuncional1.HasValue ?
                new ObjectParameter("IdValoracionFuncional1", idValoracionFuncional1) :
                new ObjectParameter("IdValoracionFuncional1", typeof(short));
    
            var idValoracionFuncional2Parameter = idValoracionFuncional2.HasValue ?
                new ObjectParameter("IdValoracionFuncional2", idValoracionFuncional2) :
                new ObjectParameter("IdValoracionFuncional2", typeof(short));
    
            var idValoracionFuncional3Parameter = idValoracionFuncional3.HasValue ?
                new ObjectParameter("IdValoracionFuncional3", idValoracionFuncional3) :
                new ObjectParameter("IdValoracionFuncional3", typeof(short));
    
            var idValoracionFuncional4Parameter = idValoracionFuncional4.HasValue ?
                new ObjectParameter("IdValoracionFuncional4", idValoracionFuncional4) :
                new ObjectParameter("IdValoracionFuncional4", typeof(short));
    
            var idValoracionFuncional5Parameter = idValoracionFuncional5.HasValue ?
                new ObjectParameter("IdValoracionFuncional5", idValoracionFuncional5) :
                new ObjectParameter("IdValoracionFuncional5", typeof(short));
    
            var idValoracionFuncional6Parameter = idValoracionFuncional6.HasValue ?
                new ObjectParameter("IdValoracionFuncional6", idValoracionFuncional6) :
                new ObjectParameter("IdValoracionFuncional6", typeof(short));
    
            var diagnosticoFuncionalParameter = diagnosticoFuncional.HasValue ?
                new ObjectParameter("DiagnosticoFuncional", diagnosticoFuncional) :
                new ObjectParameter("DiagnosticoFuncional", typeof(short));
    
            var idEstadoCognitivo1Parameter = idEstadoCognitivo1.HasValue ?
                new ObjectParameter("IdEstadoCognitivo1", idEstadoCognitivo1) :
                new ObjectParameter("IdEstadoCognitivo1", typeof(short));
    
            var idEstadoCognitivo2Parameter = idEstadoCognitivo2.HasValue ?
                new ObjectParameter("IdEstadoCognitivo2", idEstadoCognitivo2) :
                new ObjectParameter("IdEstadoCognitivo2", typeof(short));
    
            var idEstadoCognitivo3Parameter = idEstadoCognitivo3.HasValue ?
                new ObjectParameter("IdEstadoCognitivo3", idEstadoCognitivo3) :
                new ObjectParameter("IdEstadoCognitivo3", typeof(short));
    
            var idEstadoCognitivo4Parameter = idEstadoCognitivo4.HasValue ?
                new ObjectParameter("IdEstadoCognitivo4", idEstadoCognitivo4) :
                new ObjectParameter("IdEstadoCognitivo4", typeof(short));
    
            var idEstadoCognitivo5Parameter = idEstadoCognitivo5.HasValue ?
                new ObjectParameter("IdEstadoCognitivo5", idEstadoCognitivo5) :
                new ObjectParameter("IdEstadoCognitivo5", typeof(short));
    
            var idEstadoCognitivo6Parameter = idEstadoCognitivo6.HasValue ?
                new ObjectParameter("IdEstadoCognitivo6", idEstadoCognitivo6) :
                new ObjectParameter("IdEstadoCognitivo6", typeof(short));
    
            var idEstadoCognitivo7Parameter = idEstadoCognitivo7.HasValue ?
                new ObjectParameter("IdEstadoCognitivo7", idEstadoCognitivo7) :
                new ObjectParameter("IdEstadoCognitivo7", typeof(short));
    
            var idEstadoCognitivo8Parameter = idEstadoCognitivo8.HasValue ?
                new ObjectParameter("IdEstadoCognitivo8", idEstadoCognitivo8) :
                new ObjectParameter("IdEstadoCognitivo8", typeof(short));
    
            var idEstadoCognitivo9Parameter = idEstadoCognitivo9.HasValue ?
                new ObjectParameter("IdEstadoCognitivo9", idEstadoCognitivo9) :
                new ObjectParameter("IdEstadoCognitivo9", typeof(short));
    
            var idEstadoCognitivo10Parameter = idEstadoCognitivo10.HasValue ?
                new ObjectParameter("IdEstadoCognitivo10", idEstadoCognitivo10) :
                new ObjectParameter("IdEstadoCognitivo10", typeof(short));
    
            var valoracionCognitivaParameter = valoracionCognitiva.HasValue ?
                new ObjectParameter("ValoracionCognitiva", valoracionCognitiva) :
                new ObjectParameter("ValoracionCognitiva", typeof(short));
    
            var idEstadoAfectivo1Parameter = idEstadoAfectivo1.HasValue ?
                new ObjectParameter("IdEstadoAfectivo1", idEstadoAfectivo1) :
                new ObjectParameter("IdEstadoAfectivo1", typeof(short));
    
            var idEstadoAfectivo2Parameter = idEstadoAfectivo2.HasValue ?
                new ObjectParameter("IdEstadoAfectivo2", idEstadoAfectivo2) :
                new ObjectParameter("IdEstadoAfectivo2", typeof(short));
    
            var idEstadoAfectivo3Parameter = idEstadoAfectivo3.HasValue ?
                new ObjectParameter("IdEstadoAfectivo3", idEstadoAfectivo3) :
                new ObjectParameter("IdEstadoAfectivo3", typeof(short));
    
            var idEstadoAfectivo4Parameter = idEstadoAfectivo4.HasValue ?
                new ObjectParameter("IdEstadoAfectivo4", idEstadoAfectivo4) :
                new ObjectParameter("IdEstadoAfectivo4", typeof(short));
    
            var conManifestacionesDepresivasParameter = conManifestacionesDepresivas.HasValue ?
                new ObjectParameter("ConManifestacionesDepresivas", conManifestacionesDepresivas) :
                new ObjectParameter("ConManifestacionesDepresivas", typeof(short));
    
            var valoracionSocioFamiliar1Parameter = valoracionSocioFamiliar1.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar1", valoracionSocioFamiliar1) :
                new ObjectParameter("ValoracionSocioFamiliar1", typeof(short));
    
            var valoracionSocioFamiliar2Parameter = valoracionSocioFamiliar2.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar2", valoracionSocioFamiliar2) :
                new ObjectParameter("ValoracionSocioFamiliar2", typeof(short));
    
            var valoracionSocioFamiliar3Parameter = valoracionSocioFamiliar3.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar3", valoracionSocioFamiliar3) :
                new ObjectParameter("ValoracionSocioFamiliar3", typeof(short));
    
            var valoracionSocioFamiliar4Parameter = valoracionSocioFamiliar4.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar4", valoracionSocioFamiliar4) :
                new ObjectParameter("ValoracionSocioFamiliar4", typeof(short));
    
            var valoracionSocioFamiliar5Parameter = valoracionSocioFamiliar5.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar5", valoracionSocioFamiliar5) :
                new ObjectParameter("ValoracionSocioFamiliar5", typeof(short));
    
            var valoracionSocioFamiliarParameter = valoracionSocioFamiliar.HasValue ?
                new ObjectParameter("ValoracionSocioFamiliar", valoracionSocioFamiliar) :
                new ObjectParameter("ValoracionSocioFamiliar", typeof(short));
    
            var idCategoriaAdutoMayorParameter = idCategoriaAdutoMayor.HasValue ?
                new ObjectParameter("IdCategoriaAdutoMayor", idCategoriaAdutoMayor) :
                new ObjectParameter("IdCategoriaAdutoMayor", typeof(short));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(short));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_AP>("USP_Anamnesis_AP_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idTipoEmbarazoParameter, patologiaGestacionParameter, idControlPrenatalParameter, cPnumeroControlesParameter, cPnumeroEmbarazosParameter, lugarControlParameter, idTipoPartoParameter, complicacionesPartoParameter, idLugarPartoParameter, idPartoAtendidoPorParameter, antecentesPatologicosParameter, semanasGestacionNacerParameter, pesoAlNacerGRParameter, tallaAlNacerCMParameter, perimetroCefalicoCMParameter, patologiasPernatalesParameter, diasHospitalizacionParameter, idTipoLecheHasta6mesesParameter, antecLactanciaParameter, edadInicioAblactanciaMesesParameter, desarrolloSicomotrizParameter, fechaUltimaReglaParameter, fechaUltimoPeriodoParameter, metodosAnticonceptivosParameter, menarquiaParameter, menopausiaParameter, caracteristicasMenstruacionesParameter, informacionEmbarazosParameter, transfusionesParameter, deinmunizFechaAproximadaParameter, deinmunizEdadAproximadaParameter, alcoholParameter, tabacoParameter, drogasParameter, actividadFisicaParameter, consumoVerdurasParameter, consumoFrutasParameter, medicamentosParameter, alimentosParameter, sustanciasEnElAmbienteParameter, sustanciasContactoConPielParameter, contactoPersonaEnfermaParameter, crianzaAnimalesDomesticosParameter, aguaPotableParameter, disposicionExcretasParameter, reaccionAdversaMedicamentosParameter, saludBucalParameter, vigilanciaDeCrecimientoParameter, vigilanciaDelDesarrolloParameter, idValoracionFuncional1Parameter, idValoracionFuncional2Parameter, idValoracionFuncional3Parameter, idValoracionFuncional4Parameter, idValoracionFuncional5Parameter, idValoracionFuncional6Parameter, diagnosticoFuncionalParameter, idEstadoCognitivo1Parameter, idEstadoCognitivo2Parameter, idEstadoCognitivo3Parameter, idEstadoCognitivo4Parameter, idEstadoCognitivo5Parameter, idEstadoCognitivo6Parameter, idEstadoCognitivo7Parameter, idEstadoCognitivo8Parameter, idEstadoCognitivo9Parameter, idEstadoCognitivo10Parameter, valoracionCognitivaParameter, idEstadoAfectivo1Parameter, idEstadoAfectivo2Parameter, idEstadoAfectivo3Parameter, idEstadoAfectivo4Parameter, conManifestacionesDepresivasParameter, valoracionSocioFamiliar1Parameter, valoracionSocioFamiliar2Parameter, valoracionSocioFamiliar3Parameter, valoracionSocioFamiliar4Parameter, valoracionSocioFamiliar5Parameter, valoracionSocioFamiliarParameter, idCategoriaAdutoMayorParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<USUARIO> USP_USUARIOS_LISTAR(string usuario, string clave, string uSUARIOPERFIL, Nullable<int> pERSONA, string nOMBRE, string eSTADO, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(USUARIO).Assembly);
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var uSUARIOPERFILParameter = uSUARIOPERFIL != null ?
                new ObjectParameter("USUARIOPERFIL", uSUARIOPERFIL) :
                new ObjectParameter("USUARIOPERFIL", typeof(string));
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USUARIO>("USP_USUARIOS_LISTAR", usuarioParameter, claveParameter, uSUARIOPERFILParameter, pERSONAParameter, nOMBREParameter, eSTADOParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<USUARIO> USP_USUARIOS_LISTAR(string usuario, string clave, string uSUARIOPERFIL, Nullable<int> pERSONA, string nOMBRE, string eSTADO, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(USUARIO).Assembly);
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var uSUARIOPERFILParameter = uSUARIOPERFIL != null ?
                new ObjectParameter("USUARIOPERFIL", uSUARIOPERFIL) :
                new ObjectParameter("USUARIOPERFIL", typeof(string));
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USUARIO>("USP_USUARIOS_LISTAR", mergeOption, usuarioParameter, claveParameter, uSUARIOPERFILParameter, pERSONAParameter, nOMBREParameter, eSTADOParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_USUARIO(string uSUARIO, string uSUARIOPERFIL, Nullable<int> pERSONA, Nullable<int> tIPOPERSONA, string nOMBRE, string cLAVE, string eXPIRARPASSWORDFLAG, Nullable<System.DateTime> fECHAEXPIRACION, Nullable<System.DateTime> uLTIMOLOGIN, Nullable<int> nUMEROLOGINSDISPONIBLE, Nullable<int> nUMEROLOGINSUSADOS, string uSUARIORED, string sQLLOGIN, string sQLPASSWORD, string eSTADO, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string aCCION)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var uSUARIOPERFILParameter = uSUARIOPERFIL != null ?
                new ObjectParameter("USUARIOPERFIL", uSUARIOPERFIL) :
                new ObjectParameter("USUARIOPERFIL", typeof(string));
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var tIPOPERSONAParameter = tIPOPERSONA.HasValue ?
                new ObjectParameter("TIPOPERSONA", tIPOPERSONA) :
                new ObjectParameter("TIPOPERSONA", typeof(int));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var cLAVEParameter = cLAVE != null ?
                new ObjectParameter("CLAVE", cLAVE) :
                new ObjectParameter("CLAVE", typeof(string));
    
            var eXPIRARPASSWORDFLAGParameter = eXPIRARPASSWORDFLAG != null ?
                new ObjectParameter("EXPIRARPASSWORDFLAG", eXPIRARPASSWORDFLAG) :
                new ObjectParameter("EXPIRARPASSWORDFLAG", typeof(string));
    
            var fECHAEXPIRACIONParameter = fECHAEXPIRACION.HasValue ?
                new ObjectParameter("FECHAEXPIRACION", fECHAEXPIRACION) :
                new ObjectParameter("FECHAEXPIRACION", typeof(System.DateTime));
    
            var uLTIMOLOGINParameter = uLTIMOLOGIN.HasValue ?
                new ObjectParameter("ULTIMOLOGIN", uLTIMOLOGIN) :
                new ObjectParameter("ULTIMOLOGIN", typeof(System.DateTime));
    
            var nUMEROLOGINSDISPONIBLEParameter = nUMEROLOGINSDISPONIBLE.HasValue ?
                new ObjectParameter("NUMEROLOGINSDISPONIBLE", nUMEROLOGINSDISPONIBLE) :
                new ObjectParameter("NUMEROLOGINSDISPONIBLE", typeof(int));
    
            var nUMEROLOGINSUSADOSParameter = nUMEROLOGINSUSADOS.HasValue ?
                new ObjectParameter("NUMEROLOGINSUSADOS", nUMEROLOGINSUSADOS) :
                new ObjectParameter("NUMEROLOGINSUSADOS", typeof(int));
    
            var uSUARIOREDParameter = uSUARIORED != null ?
                new ObjectParameter("USUARIORED", uSUARIORED) :
                new ObjectParameter("USUARIORED", typeof(string));
    
            var sQLLOGINParameter = sQLLOGIN != null ?
                new ObjectParameter("SQLLOGIN", sQLLOGIN) :
                new ObjectParameter("SQLLOGIN", typeof(string));
    
            var sQLPASSWORDParameter = sQLPASSWORD != null ?
                new ObjectParameter("SQLPASSWORD", sQLPASSWORD) :
                new ObjectParameter("SQLPASSWORD", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_USUARIO", uSUARIOParameter, uSUARIOPERFILParameter, pERSONAParameter, tIPOPERSONAParameter, nOMBREParameter, cLAVEParameter, eXPIRARPASSWORDFLAGParameter, fECHAEXPIRACIONParameter, uLTIMOLOGINParameter, nUMEROLOGINSDISPONIBLEParameter, nUMEROLOGINSUSADOSParameter, uSUARIOREDParameter, sQLLOGINParameter, sQLPASSWORDParameter, eSTADOParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SEGURIDADPERFILUSUARIO(string pERFIL, string usuario, string eSTADO, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string aCCION)
        {
            var pERFILParameter = pERFIL != null ?
                new ObjectParameter("PERFIL", pERFIL) :
                new ObjectParameter("PERFIL", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SEGURIDADPERFILUSUARIO", pERFILParameter, usuarioParameter, eSTADOParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SEGURIDADPERFILUSUARIO> USP_SEGURIDADPERFILUSUARIO_LISTAR(string pERFIL, string usuario, string eSTADO, string uLTIMOUSUARIO, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADPERFILUSUARIO).Assembly);
    
            var pERFILParameter = pERFIL != null ?
                new ObjectParameter("PERFIL", pERFIL) :
                new ObjectParameter("PERFIL", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADPERFILUSUARIO>("USP_SEGURIDADPERFILUSUARIO_LISTAR", pERFILParameter, usuarioParameter, eSTADOParameter, uLTIMOUSUARIOParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SEGURIDADPERFILUSUARIO> USP_SEGURIDADPERFILUSUARIO_LISTAR(string pERFIL, string usuario, string eSTADO, string uLTIMOUSUARIO, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADPERFILUSUARIO).Assembly);
    
            var pERFILParameter = pERFIL != null ?
                new ObjectParameter("PERFIL", pERFIL) :
                new ObjectParameter("PERFIL", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADPERFILUSUARIO>("USP_SEGURIDADPERFILUSUARIO_LISTAR", mergeOption, pERFILParameter, usuarioParameter, eSTADOParameter, uLTIMOUSUARIOParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_GE_ProcedimientoMedico(Nullable<int> idProcedimiento, string codigoProcedimiento, string codigoPadre, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idProcedimientoPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipoFolder, string nombreTabla, string accion)
        {
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoProcedimientoParameter = codigoProcedimiento != null ?
                new ObjectParameter("CodigoProcedimiento", codigoProcedimiento) :
                new ObjectParameter("CodigoProcedimiento", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idProcedimientoPadreParameter = idProcedimientoPadre.HasValue ?
                new ObjectParameter("IdProcedimientoPadre", idProcedimientoPadre) :
                new ObjectParameter("IdProcedimientoPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipoFolderParameter = tipoFolder.HasValue ?
                new ObjectParameter("TipoFolder", tipoFolder) :
                new ObjectParameter("TipoFolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_GE_ProcedimientoMedico", idProcedimientoParameter, codigoProcedimientoParameter, codigoPadreParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idProcedimientoPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipoFolderParameter, nombreTablaParameter, accionParameter);
        }
    
        public virtual int USP_GE_ProcedimientoMedicoListar(Nullable<int> idProcedimiento, string codigoProcedimiento, string codigoPadre, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idProcedimientoPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipoFolder, string nombreTabla, string accion)
        {
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoProcedimientoParameter = codigoProcedimiento != null ?
                new ObjectParameter("CodigoProcedimiento", codigoProcedimiento) :
                new ObjectParameter("CodigoProcedimiento", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idProcedimientoPadreParameter = idProcedimientoPadre.HasValue ?
                new ObjectParameter("IdProcedimientoPadre", idProcedimientoPadre) :
                new ObjectParameter("IdProcedimientoPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipoFolderParameter = tipoFolder.HasValue ?
                new ObjectParameter("TipoFolder", tipoFolder) :
                new ObjectParameter("TipoFolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GE_ProcedimientoMedicoListar", idProcedimientoParameter, codigoProcedimientoParameter, codigoPadreParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idProcedimientoPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipoFolderParameter, nombreTablaParameter, accionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_CuerpoHumano(Nullable<int> idCuerpoHumano, Nullable<int> idCuerpoHumanoPadre, string codigo, string descripcion, string descripcionIngles, Nullable<int> nivel, string ultimoNivelFlag, string cadenaRecursiva, Nullable<int> orden, string icono, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string nombreTabla, string codigoPadre, Nullable<int> tipofolder, string aCCION)
        {
            var idCuerpoHumanoParameter = idCuerpoHumano.HasValue ?
                new ObjectParameter("IdCuerpoHumano", idCuerpoHumano) :
                new ObjectParameter("IdCuerpoHumano", typeof(int));
    
            var idCuerpoHumanoPadreParameter = idCuerpoHumanoPadre.HasValue ?
                new ObjectParameter("IdCuerpoHumanoPadre", idCuerpoHumanoPadre) :
                new ObjectParameter("IdCuerpoHumanoPadre", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var iconoParameter = icono != null ?
                new ObjectParameter("Icono", icono) :
                new ObjectParameter("Icono", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var tipofolderParameter = tipofolder.HasValue ?
                new ObjectParameter("tipofolder", tipofolder) :
                new ObjectParameter("tipofolder", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_CuerpoHumano", idCuerpoHumanoParameter, idCuerpoHumanoPadreParameter, codigoParameter, descripcionParameter, descripcionInglesParameter, nivelParameter, ultimoNivelFlagParameter, cadenaRecursivaParameter, ordenParameter, iconoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, nombreTablaParameter, codigoPadreParameter, tipofolderParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_CuerpoHumano> USP_SS_HC_CuerpoHumano_LISTAR(Nullable<int> idCuerpoHumano, Nullable<int> idCuerpoHumanoPadre, string codigo, string descripcion, string descripcionIngles, string ultimoNivelFlag, string cadenaRecursiva, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_CuerpoHumano).Assembly);
    
            var idCuerpoHumanoParameter = idCuerpoHumano.HasValue ?
                new ObjectParameter("IdCuerpoHumano", idCuerpoHumano) :
                new ObjectParameter("IdCuerpoHumano", typeof(int));
    
            var idCuerpoHumanoPadreParameter = idCuerpoHumanoPadre.HasValue ?
                new ObjectParameter("IdCuerpoHumanoPadre", idCuerpoHumanoPadre) :
                new ObjectParameter("IdCuerpoHumanoPadre", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_CuerpoHumano>("USP_SS_HC_CuerpoHumano_LISTAR", idCuerpoHumanoParameter, idCuerpoHumanoPadreParameter, codigoParameter, descripcionParameter, descripcionInglesParameter, ultimoNivelFlagParameter, cadenaRecursivaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_CuerpoHumano> USP_SS_HC_CuerpoHumano_LISTAR(Nullable<int> idCuerpoHumano, Nullable<int> idCuerpoHumanoPadre, string codigo, string descripcion, string descripcionIngles, string ultimoNivelFlag, string cadenaRecursiva, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_CuerpoHumano).Assembly);
    
            var idCuerpoHumanoParameter = idCuerpoHumano.HasValue ?
                new ObjectParameter("IdCuerpoHumano", idCuerpoHumano) :
                new ObjectParameter("IdCuerpoHumano", typeof(int));
    
            var idCuerpoHumanoPadreParameter = idCuerpoHumanoPadre.HasValue ?
                new ObjectParameter("IdCuerpoHumanoPadre", idCuerpoHumanoPadre) :
                new ObjectParameter("IdCuerpoHumanoPadre", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_CuerpoHumano>("USP_SS_HC_CuerpoHumano_LISTAR", mergeOption, idCuerpoHumanoParameter, idCuerpoHumanoPadreParameter, codigoParameter, descripcionParameter, descripcionInglesParameter, ultimoNivelFlagParameter, cadenaRecursivaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_CIAP2(Nullable<int> idCIAP2, Nullable<int> idCIAP2Padre, string codigo, string rubricaCompleta, string rubricaAbreviada, Nullable<int> nivel, string incluido, string excluido, string criterios, string consideraciones, string notas, string cIE10, Nullable<int> idComponente, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var idCIAP2Parameter = idCIAP2.HasValue ?
                new ObjectParameter("IdCIAP2", idCIAP2) :
                new ObjectParameter("IdCIAP2", typeof(int));
    
            var idCIAP2PadreParameter = idCIAP2Padre.HasValue ?
                new ObjectParameter("IdCIAP2Padre", idCIAP2Padre) :
                new ObjectParameter("IdCIAP2Padre", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var rubricaCompletaParameter = rubricaCompleta != null ?
                new ObjectParameter("RubricaCompleta", rubricaCompleta) :
                new ObjectParameter("RubricaCompleta", typeof(string));
    
            var rubricaAbreviadaParameter = rubricaAbreviada != null ?
                new ObjectParameter("RubricaAbreviada", rubricaAbreviada) :
                new ObjectParameter("RubricaAbreviada", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var incluidoParameter = incluido != null ?
                new ObjectParameter("Incluido", incluido) :
                new ObjectParameter("Incluido", typeof(string));
    
            var excluidoParameter = excluido != null ?
                new ObjectParameter("Excluido", excluido) :
                new ObjectParameter("Excluido", typeof(string));
    
            var criteriosParameter = criterios != null ?
                new ObjectParameter("Criterios", criterios) :
                new ObjectParameter("Criterios", typeof(string));
    
            var consideracionesParameter = consideraciones != null ?
                new ObjectParameter("Consideraciones", consideraciones) :
                new ObjectParameter("Consideraciones", typeof(string));
    
            var notasParameter = notas != null ?
                new ObjectParameter("Notas", notas) :
                new ObjectParameter("Notas", typeof(string));
    
            var cIE10Parameter = cIE10 != null ?
                new ObjectParameter("CIE10", cIE10) :
                new ObjectParameter("CIE10", typeof(string));
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_CIAP2", idCIAP2Parameter, idCIAP2PadreParameter, codigoParameter, rubricaCompletaParameter, rubricaAbreviadaParameter, nivelParameter, incluidoParameter, excluidoParameter, criteriosParameter, consideracionesParameter, notasParameter, cIE10Parameter, idComponenteParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_CIAP2> USP_SS_HC_CIAP2Listar(Nullable<int> idCIAP2, Nullable<int> idCIAP2Padre, string codigo, string rubricaCompleta, string rubricaAbreviada, Nullable<int> nivel, string incluido, string excluido, string criterios, string consideraciones, string notas, string cIE10, Nullable<int> idComponente, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_CIAP2).Assembly);
    
            var idCIAP2Parameter = idCIAP2.HasValue ?
                new ObjectParameter("IdCIAP2", idCIAP2) :
                new ObjectParameter("IdCIAP2", typeof(int));
    
            var idCIAP2PadreParameter = idCIAP2Padre.HasValue ?
                new ObjectParameter("IdCIAP2Padre", idCIAP2Padre) :
                new ObjectParameter("IdCIAP2Padre", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var rubricaCompletaParameter = rubricaCompleta != null ?
                new ObjectParameter("RubricaCompleta", rubricaCompleta) :
                new ObjectParameter("RubricaCompleta", typeof(string));
    
            var rubricaAbreviadaParameter = rubricaAbreviada != null ?
                new ObjectParameter("RubricaAbreviada", rubricaAbreviada) :
                new ObjectParameter("RubricaAbreviada", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var incluidoParameter = incluido != null ?
                new ObjectParameter("Incluido", incluido) :
                new ObjectParameter("Incluido", typeof(string));
    
            var excluidoParameter = excluido != null ?
                new ObjectParameter("Excluido", excluido) :
                new ObjectParameter("Excluido", typeof(string));
    
            var criteriosParameter = criterios != null ?
                new ObjectParameter("Criterios", criterios) :
                new ObjectParameter("Criterios", typeof(string));
    
            var consideracionesParameter = consideraciones != null ?
                new ObjectParameter("Consideraciones", consideraciones) :
                new ObjectParameter("Consideraciones", typeof(string));
    
            var notasParameter = notas != null ?
                new ObjectParameter("Notas", notas) :
                new ObjectParameter("Notas", typeof(string));
    
            var cIE10Parameter = cIE10 != null ?
                new ObjectParameter("CIE10", cIE10) :
                new ObjectParameter("CIE10", typeof(string));
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_CIAP2>("USP_SS_HC_CIAP2Listar", idCIAP2Parameter, idCIAP2PadreParameter, codigoParameter, rubricaCompletaParameter, rubricaAbreviadaParameter, nivelParameter, incluidoParameter, excluidoParameter, criteriosParameter, consideracionesParameter, notasParameter, cIE10Parameter, idComponenteParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_CIAP2> USP_SS_HC_CIAP2Listar(Nullable<int> idCIAP2, Nullable<int> idCIAP2Padre, string codigo, string rubricaCompleta, string rubricaAbreviada, Nullable<int> nivel, string incluido, string excluido, string criterios, string consideraciones, string notas, string cIE10, Nullable<int> idComponente, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_CIAP2).Assembly);
    
            var idCIAP2Parameter = idCIAP2.HasValue ?
                new ObjectParameter("IdCIAP2", idCIAP2) :
                new ObjectParameter("IdCIAP2", typeof(int));
    
            var idCIAP2PadreParameter = idCIAP2Padre.HasValue ?
                new ObjectParameter("IdCIAP2Padre", idCIAP2Padre) :
                new ObjectParameter("IdCIAP2Padre", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var rubricaCompletaParameter = rubricaCompleta != null ?
                new ObjectParameter("RubricaCompleta", rubricaCompleta) :
                new ObjectParameter("RubricaCompleta", typeof(string));
    
            var rubricaAbreviadaParameter = rubricaAbreviada != null ?
                new ObjectParameter("RubricaAbreviada", rubricaAbreviada) :
                new ObjectParameter("RubricaAbreviada", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var incluidoParameter = incluido != null ?
                new ObjectParameter("Incluido", incluido) :
                new ObjectParameter("Incluido", typeof(string));
    
            var excluidoParameter = excluido != null ?
                new ObjectParameter("Excluido", excluido) :
                new ObjectParameter("Excluido", typeof(string));
    
            var criteriosParameter = criterios != null ?
                new ObjectParameter("Criterios", criterios) :
                new ObjectParameter("Criterios", typeof(string));
    
            var consideracionesParameter = consideraciones != null ?
                new ObjectParameter("Consideraciones", consideraciones) :
                new ObjectParameter("Consideraciones", typeof(string));
    
            var notasParameter = notas != null ?
                new ObjectParameter("Notas", notas) :
                new ObjectParameter("Notas", typeof(string));
    
            var cIE10Parameter = cIE10 != null ?
                new ObjectParameter("CIE10", cIE10) :
                new ObjectParameter("CIE10", typeof(string));
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_CIAP2>("USP_SS_HC_CIAP2Listar", mergeOption, idCIAP2Parameter, idCIAP2PadreParameter, codigoParameter, rubricaCompletaParameter, rubricaAbreviadaParameter, nivelParameter, incluidoParameter, excluidoParameter, criteriosParameter, consideracionesParameter, notasParameter, cIE10Parameter, idComponenteParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_Procedimiento(Nullable<int> idProcedimiento, Nullable<int> idProcedimientoPadre, string descripcion, string descripcionExtranjera, Nullable<int> nivel, string ultimoNivelFlag, string cadenaRecursiva, Nullable<int> orden, string icono, string nombreInterfaz, string codigoProcedimiento, string usuarioModficacion, Nullable<System.DateTime> fechaModificacion, string accion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string version, Nullable<int> estado)
        {
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var idProcedimientoPadreParameter = idProcedimientoPadre.HasValue ?
                new ObjectParameter("IdProcedimientoPadre", idProcedimientoPadre) :
                new ObjectParameter("IdProcedimientoPadre", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var iconoParameter = icono != null ?
                new ObjectParameter("Icono", icono) :
                new ObjectParameter("Icono", typeof(string));
    
            var nombreInterfazParameter = nombreInterfaz != null ?
                new ObjectParameter("NombreInterfaz", nombreInterfaz) :
                new ObjectParameter("NombreInterfaz", typeof(string));
    
            var codigoProcedimientoParameter = codigoProcedimiento != null ?
                new ObjectParameter("CodigoProcedimiento", codigoProcedimiento) :
                new ObjectParameter("CodigoProcedimiento", typeof(string));
    
            var usuarioModficacionParameter = usuarioModficacion != null ?
                new ObjectParameter("UsuarioModficacion", usuarioModficacion) :
                new ObjectParameter("UsuarioModficacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_Procedimiento", idProcedimientoParameter, idProcedimientoPadreParameter, descripcionParameter, descripcionExtranjeraParameter, nivelParameter, ultimoNivelFlagParameter, cadenaRecursivaParameter, ordenParameter, iconoParameter, nombreInterfazParameter, codigoProcedimientoParameter, usuarioModficacionParameter, fechaModificacionParameter, accionParameter, usuarioCreacionParameter, fechaCreacionParameter, versionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<SS_HC_Procedimiento> USP_SS_HC_ProcedimientoListar(Nullable<int> idProcedimiento, Nullable<int> idProcedimientoPadre, string descripcion, string descripcionExtranjera, Nullable<int> nivel, string ultimoNivelFlag, string cadenaRecursiva, Nullable<int> orden, string icono, string nombreInterfaz, string codigoProcedimiento, string usuarioModficacion, Nullable<System.DateTime> fechaModificacion, string accion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string version, Nullable<int> estado, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Procedimiento).Assembly);
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var idProcedimientoPadreParameter = idProcedimientoPadre.HasValue ?
                new ObjectParameter("IdProcedimientoPadre", idProcedimientoPadre) :
                new ObjectParameter("IdProcedimientoPadre", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var iconoParameter = icono != null ?
                new ObjectParameter("Icono", icono) :
                new ObjectParameter("Icono", typeof(string));
    
            var nombreInterfazParameter = nombreInterfaz != null ?
                new ObjectParameter("NombreInterfaz", nombreInterfaz) :
                new ObjectParameter("NombreInterfaz", typeof(string));
    
            var codigoProcedimientoParameter = codigoProcedimiento != null ?
                new ObjectParameter("CodigoProcedimiento", codigoProcedimiento) :
                new ObjectParameter("CodigoProcedimiento", typeof(string));
    
            var usuarioModficacionParameter = usuarioModficacion != null ?
                new ObjectParameter("UsuarioModficacion", usuarioModficacion) :
                new ObjectParameter("UsuarioModficacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Procedimiento>("USP_SS_HC_ProcedimientoListar", idProcedimientoParameter, idProcedimientoPadreParameter, descripcionParameter, descripcionExtranjeraParameter, nivelParameter, ultimoNivelFlagParameter, cadenaRecursivaParameter, ordenParameter, iconoParameter, nombreInterfazParameter, codigoProcedimientoParameter, usuarioModficacionParameter, fechaModificacionParameter, accionParameter, usuarioCreacionParameter, fechaCreacionParameter, versionParameter, estadoParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_Procedimiento> USP_SS_HC_ProcedimientoListar(Nullable<int> idProcedimiento, Nullable<int> idProcedimientoPadre, string descripcion, string descripcionExtranjera, Nullable<int> nivel, string ultimoNivelFlag, string cadenaRecursiva, Nullable<int> orden, string icono, string nombreInterfaz, string codigoProcedimiento, string usuarioModficacion, Nullable<System.DateTime> fechaModificacion, string accion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string version, Nullable<int> estado, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Procedimiento).Assembly);
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var idProcedimientoPadreParameter = idProcedimientoPadre.HasValue ?
                new ObjectParameter("IdProcedimientoPadre", idProcedimientoPadre) :
                new ObjectParameter("IdProcedimientoPadre", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var iconoParameter = icono != null ?
                new ObjectParameter("Icono", icono) :
                new ObjectParameter("Icono", typeof(string));
    
            var nombreInterfazParameter = nombreInterfaz != null ?
                new ObjectParameter("NombreInterfaz", nombreInterfaz) :
                new ObjectParameter("NombreInterfaz", typeof(string));
    
            var codigoProcedimientoParameter = codigoProcedimiento != null ?
                new ObjectParameter("CodigoProcedimiento", codigoProcedimiento) :
                new ObjectParameter("CodigoProcedimiento", typeof(string));
    
            var usuarioModficacionParameter = usuarioModficacion != null ?
                new ObjectParameter("UsuarioModficacion", usuarioModficacion) :
                new ObjectParameter("UsuarioModficacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Procedimiento>("USP_SS_HC_ProcedimientoListar", mergeOption, idProcedimientoParameter, idProcedimientoPadreParameter, descripcionParameter, descripcionExtranjeraParameter, nivelParameter, ultimoNivelFlagParameter, cadenaRecursivaParameter, ordenParameter, iconoParameter, nombreInterfazParameter, codigoProcedimientoParameter, usuarioModficacionParameter, fechaModificacionParameter, accionParameter, usuarioCreacionParameter, fechaCreacionParameter, versionParameter, estadoParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_DescansoMedico(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fechaInicioDescanso, Nullable<System.DateTime> fechaFinDescanso, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> dias)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var fechaInicioDescansoParameter = fechaInicioDescanso.HasValue ?
                new ObjectParameter("FechaInicioDescanso", fechaInicioDescanso) :
                new ObjectParameter("FechaInicioDescanso", typeof(System.DateTime));
    
            var fechaFinDescansoParameter = fechaFinDescanso.HasValue ?
                new ObjectParameter("FechaFinDescanso", fechaFinDescanso) :
                new ObjectParameter("FechaFinDescanso", typeof(System.DateTime));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var diasParameter = dias.HasValue ?
                new ObjectParameter("Dias", dias) :
                new ObjectParameter("Dias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_DescansoMedico", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaInicioDescansoParameter, fechaFinDescansoParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, diasParameter);
        }
    
        public virtual ObjectResult<SS_HC_DescansoMedico> USP_DescansoMedicoListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fechaInicioDescanso, Nullable<System.DateTime> fechaFinDescanso, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> dias)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_DescansoMedico).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var fechaInicioDescansoParameter = fechaInicioDescanso.HasValue ?
                new ObjectParameter("FechaInicioDescanso", fechaInicioDescanso) :
                new ObjectParameter("FechaInicioDescanso", typeof(System.DateTime));
    
            var fechaFinDescansoParameter = fechaFinDescanso.HasValue ?
                new ObjectParameter("FechaFinDescanso", fechaFinDescanso) :
                new ObjectParameter("FechaFinDescanso", typeof(System.DateTime));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var diasParameter = dias.HasValue ?
                new ObjectParameter("Dias", dias) :
                new ObjectParameter("Dias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_DescansoMedico>("USP_DescansoMedicoListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaInicioDescansoParameter, fechaFinDescansoParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, diasParameter);
        }
    
        public virtual ObjectResult<SS_HC_DescansoMedico> USP_DescansoMedicoListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fechaInicioDescanso, Nullable<System.DateTime> fechaFinDescanso, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> dias, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_DescansoMedico).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var fechaInicioDescansoParameter = fechaInicioDescanso.HasValue ?
                new ObjectParameter("FechaInicioDescanso", fechaInicioDescanso) :
                new ObjectParameter("FechaInicioDescanso", typeof(System.DateTime));
    
            var fechaFinDescansoParameter = fechaFinDescanso.HasValue ?
                new ObjectParameter("FechaFinDescanso", fechaFinDescanso) :
                new ObjectParameter("FechaFinDescanso", typeof(System.DateTime));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var diasParameter = dias.HasValue ?
                new ObjectParameter("Dias", dias) :
                new ObjectParameter("Dias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_DescansoMedico>("USP_DescansoMedicoListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaInicioDescansoParameter, fechaFinDescansoParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, diasParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SEGURIDADAUTORIZACIONES(string aPLICACIONCODIGO, string gRUPO, string cONCEPTO, string uSUARIO, string oPCIONAGREGARFLAG, string oPCIONMODIFICARFLAG, string oPCIONBORRARFLAG, string oPCIONAPROBARFLAG, string eSTADO, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string aCCION)
        {
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var oPCIONAGREGARFLAGParameter = oPCIONAGREGARFLAG != null ?
                new ObjectParameter("OPCIONAGREGARFLAG", oPCIONAGREGARFLAG) :
                new ObjectParameter("OPCIONAGREGARFLAG", typeof(string));
    
            var oPCIONMODIFICARFLAGParameter = oPCIONMODIFICARFLAG != null ?
                new ObjectParameter("OPCIONMODIFICARFLAG", oPCIONMODIFICARFLAG) :
                new ObjectParameter("OPCIONMODIFICARFLAG", typeof(string));
    
            var oPCIONBORRARFLAGParameter = oPCIONBORRARFLAG != null ?
                new ObjectParameter("OPCIONBORRARFLAG", oPCIONBORRARFLAG) :
                new ObjectParameter("OPCIONBORRARFLAG", typeof(string));
    
            var oPCIONAPROBARFLAGParameter = oPCIONAPROBARFLAG != null ?
                new ObjectParameter("OPCIONAPROBARFLAG", oPCIONAPROBARFLAG) :
                new ObjectParameter("OPCIONAPROBARFLAG", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SEGURIDADAUTORIZACIONES", aPLICACIONCODIGOParameter, gRUPOParameter, cONCEPTOParameter, uSUARIOParameter, oPCIONAGREGARFLAGParameter, oPCIONMODIFICARFLAGParameter, oPCIONBORRARFLAGParameter, oPCIONAPROBARFLAGParameter, eSTADOParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SEGURIDADAUTORIZACIONE> USP_SEGURIDADAUTORIZACIONES_LISTAR(string aPLICACIONCODIGO, string gRUPO, string cONCEPTO, string uSUARIO, string eSTADO, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADAUTORIZACIONE).Assembly);
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADAUTORIZACIONE>("USP_SEGURIDADAUTORIZACIONES_LISTAR", aPLICACIONCODIGOParameter, gRUPOParameter, cONCEPTOParameter, uSUARIOParameter, eSTADOParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SEGURIDADAUTORIZACIONE> USP_SEGURIDADAUTORIZACIONES_LISTAR(string aPLICACIONCODIGO, string gRUPO, string cONCEPTO, string uSUARIO, string eSTADO, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADAUTORIZACIONE).Assembly);
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADAUTORIZACIONE>("USP_SEGURIDADAUTORIZACIONES_LISTAR", mergeOption, aPLICACIONCODIGOParameter, gRUPOParameter, cONCEPTOParameter, uSUARIOParameter, eSTADOParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SEGURIDADGRUPO> USP_SEGURIDADGRUPOLISTAR(string aPLICACIONCODIGO, string gRUPO, string dESCRIPCION, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string eSTADO, Nullable<int> sETCOLUMMENU, Nullable<int> sETFILAMENU, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADGRUPO).Assembly);
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var sETCOLUMMENUParameter = sETCOLUMMENU.HasValue ?
                new ObjectParameter("SETCOLUMMENU", sETCOLUMMENU) :
                new ObjectParameter("SETCOLUMMENU", typeof(int));
    
            var sETFILAMENUParameter = sETFILAMENU.HasValue ?
                new ObjectParameter("SETFILAMENU", sETFILAMENU) :
                new ObjectParameter("SETFILAMENU", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADGRUPO>("USP_SEGURIDADGRUPOLISTAR", aPLICACIONCODIGOParameter, gRUPOParameter, dESCRIPCIONParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, eSTADOParameter, sETCOLUMMENUParameter, sETFILAMENUParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SEGURIDADGRUPO> USP_SEGURIDADGRUPOLISTAR(string aPLICACIONCODIGO, string gRUPO, string dESCRIPCION, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string eSTADO, Nullable<int> sETCOLUMMENU, Nullable<int> sETFILAMENU, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADGRUPO).Assembly);
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var sETCOLUMMENUParameter = sETCOLUMMENU.HasValue ?
                new ObjectParameter("SETCOLUMMENU", sETCOLUMMENU) :
                new ObjectParameter("SETCOLUMMENU", typeof(int));
    
            var sETFILAMENUParameter = sETFILAMENU.HasValue ?
                new ObjectParameter("SETFILAMENU", sETFILAMENU) :
                new ObjectParameter("SETFILAMENU", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADGRUPO>("USP_SEGURIDADGRUPOLISTAR", mergeOption, aPLICACIONCODIGOParameter, gRUPOParameter, dESCRIPCIONParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, eSTADOParameter, sETCOLUMMENUParameter, sETFILAMENUParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SEGURIDADGRUPOMANTENIMIENTO(string aPLICACIONCODIGO, string gRUPO, string dESCRIPCION, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string eSTADO, Nullable<int> sETCOLUMMENU, Nullable<int> sETFILAMENU, string aCCION)
        {
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var sETCOLUMMENUParameter = sETCOLUMMENU.HasValue ?
                new ObjectParameter("SETCOLUMMENU", sETCOLUMMENU) :
                new ObjectParameter("SETCOLUMMENU", typeof(int));
    
            var sETFILAMENUParameter = sETFILAMENU.HasValue ?
                new ObjectParameter("SETFILAMENU", sETFILAMENU) :
                new ObjectParameter("SETFILAMENU", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SEGURIDADGRUPOMANTENIMIENTO", aPLICACIONCODIGOParameter, gRUPOParameter, dESCRIPCIONParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, eSTADOParameter, sETCOLUMMENUParameter, sETFILAMENUParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SEGURIDADCONCEPTO> USP_SEGURIDADCONCEPTO(string aCCION, string aPLICACIONCODIGO, string gRUPO, string cONCEPTO, string cONCEPTOPADRE, string uLTIMOUSUARIO, string eSTADO)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADCONCEPTO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var cONCEPTOPADREParameter = cONCEPTOPADRE != null ?
                new ObjectParameter("CONCEPTOPADRE", cONCEPTOPADRE) :
                new ObjectParameter("CONCEPTOPADRE", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADCONCEPTO>("USP_SEGURIDADCONCEPTO", aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter, cONCEPTOParameter, cONCEPTOPADREParameter, uLTIMOUSUARIOParameter, eSTADOParameter);
        }
    
        public virtual ObjectResult<SEGURIDADCONCEPTO> USP_SEGURIDADCONCEPTO(string aCCION, string aPLICACIONCODIGO, string gRUPO, string cONCEPTO, string cONCEPTOPADRE, string uLTIMOUSUARIO, string eSTADO, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADCONCEPTO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var cONCEPTOPADREParameter = cONCEPTOPADRE != null ?
                new ObjectParameter("CONCEPTOPADRE", cONCEPTOPADRE) :
                new ObjectParameter("CONCEPTOPADRE", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADCONCEPTO>("USP_SEGURIDADCONCEPTO", mergeOption, aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter, cONCEPTOParameter, cONCEPTOPADREParameter, uLTIMOUSUARIOParameter, eSTADOParameter);
        }
    
        public virtual ObjectResult<SEGURIDADGRUPO> USP_SEGURIDADGRUPO(string aCCION, string aPLICACIONCODIGO, string gRUPO, string uLTIMOUSUARIO, string eSTADO)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADGRUPO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADGRUPO>("USP_SEGURIDADGRUPO", aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter, uLTIMOUSUARIOParameter, eSTADOParameter);
        }
    
        public virtual ObjectResult<SEGURIDADGRUPO> USP_SEGURIDADGRUPO(string aCCION, string aPLICACIONCODIGO, string gRUPO, string uLTIMOUSUARIO, string eSTADO, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADGRUPO).Assembly);
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADGRUPO>("USP_SEGURIDADGRUPO", mergeOption, aCCIONParameter, aPLICACIONCODIGOParameter, gRUPOParameter, uLTIMOUSUARIOParameter, eSTADOParameter);
        }
    
        public virtual ObjectResult<SEGURIDADCONCEPTO> USP_SEGURIDADCONCEPTOLISTAR(string aPLICACIONCODIGO, string gRUPO, string cONCEPTO, string cONCEPTOPADRE, Nullable<int> iDPAGINA, string dESCRIPCION, string dESCRIPCIONINGLES, string vISIBLEFLAG, string tIPODEDETALLE, string tIPODEOBJETO, string oBJETO, string tIPODEACCESO, string oBJETOWINDOW, string wORKFLAG, string wORKAGREGARFLAG, string wORKMODIFICARFLAG, string wORKBORRARFLAG, string wORKAPROBARFLAG, string wEBFLAG, string wEBPAGE, string wEBACTION, string wEBGRUPO, Nullable<int> wEBGRUPOSECUENCIA, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string eSTADO, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADCONCEPTO).Assembly);
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var cONCEPTOPADREParameter = cONCEPTOPADRE != null ?
                new ObjectParameter("CONCEPTOPADRE", cONCEPTOPADRE) :
                new ObjectParameter("CONCEPTOPADRE", typeof(string));
    
            var iDPAGINAParameter = iDPAGINA.HasValue ?
                new ObjectParameter("IDPAGINA", iDPAGINA) :
                new ObjectParameter("IDPAGINA", typeof(int));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var dESCRIPCIONINGLESParameter = dESCRIPCIONINGLES != null ?
                new ObjectParameter("DESCRIPCIONINGLES", dESCRIPCIONINGLES) :
                new ObjectParameter("DESCRIPCIONINGLES", typeof(string));
    
            var vISIBLEFLAGParameter = vISIBLEFLAG != null ?
                new ObjectParameter("VISIBLEFLAG", vISIBLEFLAG) :
                new ObjectParameter("VISIBLEFLAG", typeof(string));
    
            var tIPODEDETALLEParameter = tIPODEDETALLE != null ?
                new ObjectParameter("TIPODEDETALLE", tIPODEDETALLE) :
                new ObjectParameter("TIPODEDETALLE", typeof(string));
    
            var tIPODEOBJETOParameter = tIPODEOBJETO != null ?
                new ObjectParameter("TIPODEOBJETO", tIPODEOBJETO) :
                new ObjectParameter("TIPODEOBJETO", typeof(string));
    
            var oBJETOParameter = oBJETO != null ?
                new ObjectParameter("OBJETO", oBJETO) :
                new ObjectParameter("OBJETO", typeof(string));
    
            var tIPODEACCESOParameter = tIPODEACCESO != null ?
                new ObjectParameter("TIPODEACCESO", tIPODEACCESO) :
                new ObjectParameter("TIPODEACCESO", typeof(string));
    
            var oBJETOWINDOWParameter = oBJETOWINDOW != null ?
                new ObjectParameter("OBJETOWINDOW", oBJETOWINDOW) :
                new ObjectParameter("OBJETOWINDOW", typeof(string));
    
            var wORKFLAGParameter = wORKFLAG != null ?
                new ObjectParameter("WORKFLAG", wORKFLAG) :
                new ObjectParameter("WORKFLAG", typeof(string));
    
            var wORKAGREGARFLAGParameter = wORKAGREGARFLAG != null ?
                new ObjectParameter("WORKAGREGARFLAG", wORKAGREGARFLAG) :
                new ObjectParameter("WORKAGREGARFLAG", typeof(string));
    
            var wORKMODIFICARFLAGParameter = wORKMODIFICARFLAG != null ?
                new ObjectParameter("WORKMODIFICARFLAG", wORKMODIFICARFLAG) :
                new ObjectParameter("WORKMODIFICARFLAG", typeof(string));
    
            var wORKBORRARFLAGParameter = wORKBORRARFLAG != null ?
                new ObjectParameter("WORKBORRARFLAG", wORKBORRARFLAG) :
                new ObjectParameter("WORKBORRARFLAG", typeof(string));
    
            var wORKAPROBARFLAGParameter = wORKAPROBARFLAG != null ?
                new ObjectParameter("WORKAPROBARFLAG", wORKAPROBARFLAG) :
                new ObjectParameter("WORKAPROBARFLAG", typeof(string));
    
            var wEBFLAGParameter = wEBFLAG != null ?
                new ObjectParameter("WEBFLAG", wEBFLAG) :
                new ObjectParameter("WEBFLAG", typeof(string));
    
            var wEBPAGEParameter = wEBPAGE != null ?
                new ObjectParameter("WEBPAGE", wEBPAGE) :
                new ObjectParameter("WEBPAGE", typeof(string));
    
            var wEBACTIONParameter = wEBACTION != null ?
                new ObjectParameter("WEBACTION", wEBACTION) :
                new ObjectParameter("WEBACTION", typeof(string));
    
            var wEBGRUPOParameter = wEBGRUPO != null ?
                new ObjectParameter("WEBGRUPO", wEBGRUPO) :
                new ObjectParameter("WEBGRUPO", typeof(string));
    
            var wEBGRUPOSECUENCIAParameter = wEBGRUPOSECUENCIA.HasValue ?
                new ObjectParameter("WEBGRUPOSECUENCIA", wEBGRUPOSECUENCIA) :
                new ObjectParameter("WEBGRUPOSECUENCIA", typeof(int));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADCONCEPTO>("USP_SEGURIDADCONCEPTOLISTAR", aPLICACIONCODIGOParameter, gRUPOParameter, cONCEPTOParameter, cONCEPTOPADREParameter, iDPAGINAParameter, dESCRIPCIONParameter, dESCRIPCIONINGLESParameter, vISIBLEFLAGParameter, tIPODEDETALLEParameter, tIPODEOBJETOParameter, oBJETOParameter, tIPODEACCESOParameter, oBJETOWINDOWParameter, wORKFLAGParameter, wORKAGREGARFLAGParameter, wORKMODIFICARFLAGParameter, wORKBORRARFLAGParameter, wORKAPROBARFLAGParameter, wEBFLAGParameter, wEBPAGEParameter, wEBACTIONParameter, wEBGRUPOParameter, wEBGRUPOSECUENCIAParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, eSTADOParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SEGURIDADCONCEPTO> USP_SEGURIDADCONCEPTOLISTAR(string aPLICACIONCODIGO, string gRUPO, string cONCEPTO, string cONCEPTOPADRE, Nullable<int> iDPAGINA, string dESCRIPCION, string dESCRIPCIONINGLES, string vISIBLEFLAG, string tIPODEDETALLE, string tIPODEOBJETO, string oBJETO, string tIPODEACCESO, string oBJETOWINDOW, string wORKFLAG, string wORKAGREGARFLAG, string wORKMODIFICARFLAG, string wORKBORRARFLAG, string wORKAPROBARFLAG, string wEBFLAG, string wEBPAGE, string wEBACTION, string wEBGRUPO, Nullable<int> wEBGRUPOSECUENCIA, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string eSTADO, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SEGURIDADCONCEPTO).Assembly);
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var cONCEPTOPADREParameter = cONCEPTOPADRE != null ?
                new ObjectParameter("CONCEPTOPADRE", cONCEPTOPADRE) :
                new ObjectParameter("CONCEPTOPADRE", typeof(string));
    
            var iDPAGINAParameter = iDPAGINA.HasValue ?
                new ObjectParameter("IDPAGINA", iDPAGINA) :
                new ObjectParameter("IDPAGINA", typeof(int));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var dESCRIPCIONINGLESParameter = dESCRIPCIONINGLES != null ?
                new ObjectParameter("DESCRIPCIONINGLES", dESCRIPCIONINGLES) :
                new ObjectParameter("DESCRIPCIONINGLES", typeof(string));
    
            var vISIBLEFLAGParameter = vISIBLEFLAG != null ?
                new ObjectParameter("VISIBLEFLAG", vISIBLEFLAG) :
                new ObjectParameter("VISIBLEFLAG", typeof(string));
    
            var tIPODEDETALLEParameter = tIPODEDETALLE != null ?
                new ObjectParameter("TIPODEDETALLE", tIPODEDETALLE) :
                new ObjectParameter("TIPODEDETALLE", typeof(string));
    
            var tIPODEOBJETOParameter = tIPODEOBJETO != null ?
                new ObjectParameter("TIPODEOBJETO", tIPODEOBJETO) :
                new ObjectParameter("TIPODEOBJETO", typeof(string));
    
            var oBJETOParameter = oBJETO != null ?
                new ObjectParameter("OBJETO", oBJETO) :
                new ObjectParameter("OBJETO", typeof(string));
    
            var tIPODEACCESOParameter = tIPODEACCESO != null ?
                new ObjectParameter("TIPODEACCESO", tIPODEACCESO) :
                new ObjectParameter("TIPODEACCESO", typeof(string));
    
            var oBJETOWINDOWParameter = oBJETOWINDOW != null ?
                new ObjectParameter("OBJETOWINDOW", oBJETOWINDOW) :
                new ObjectParameter("OBJETOWINDOW", typeof(string));
    
            var wORKFLAGParameter = wORKFLAG != null ?
                new ObjectParameter("WORKFLAG", wORKFLAG) :
                new ObjectParameter("WORKFLAG", typeof(string));
    
            var wORKAGREGARFLAGParameter = wORKAGREGARFLAG != null ?
                new ObjectParameter("WORKAGREGARFLAG", wORKAGREGARFLAG) :
                new ObjectParameter("WORKAGREGARFLAG", typeof(string));
    
            var wORKMODIFICARFLAGParameter = wORKMODIFICARFLAG != null ?
                new ObjectParameter("WORKMODIFICARFLAG", wORKMODIFICARFLAG) :
                new ObjectParameter("WORKMODIFICARFLAG", typeof(string));
    
            var wORKBORRARFLAGParameter = wORKBORRARFLAG != null ?
                new ObjectParameter("WORKBORRARFLAG", wORKBORRARFLAG) :
                new ObjectParameter("WORKBORRARFLAG", typeof(string));
    
            var wORKAPROBARFLAGParameter = wORKAPROBARFLAG != null ?
                new ObjectParameter("WORKAPROBARFLAG", wORKAPROBARFLAG) :
                new ObjectParameter("WORKAPROBARFLAG", typeof(string));
    
            var wEBFLAGParameter = wEBFLAG != null ?
                new ObjectParameter("WEBFLAG", wEBFLAG) :
                new ObjectParameter("WEBFLAG", typeof(string));
    
            var wEBPAGEParameter = wEBPAGE != null ?
                new ObjectParameter("WEBPAGE", wEBPAGE) :
                new ObjectParameter("WEBPAGE", typeof(string));
    
            var wEBACTIONParameter = wEBACTION != null ?
                new ObjectParameter("WEBACTION", wEBACTION) :
                new ObjectParameter("WEBACTION", typeof(string));
    
            var wEBGRUPOParameter = wEBGRUPO != null ?
                new ObjectParameter("WEBGRUPO", wEBGRUPO) :
                new ObjectParameter("WEBGRUPO", typeof(string));
    
            var wEBGRUPOSECUENCIAParameter = wEBGRUPOSECUENCIA.HasValue ?
                new ObjectParameter("WEBGRUPOSECUENCIA", wEBGRUPOSECUENCIA) :
                new ObjectParameter("WEBGRUPOSECUENCIA", typeof(int));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SEGURIDADCONCEPTO>("USP_SEGURIDADCONCEPTOLISTAR", mergeOption, aPLICACIONCODIGOParameter, gRUPOParameter, cONCEPTOParameter, cONCEPTOPADREParameter, iDPAGINAParameter, dESCRIPCIONParameter, dESCRIPCIONINGLESParameter, vISIBLEFLAGParameter, tIPODEDETALLEParameter, tIPODEOBJETOParameter, oBJETOParameter, tIPODEACCESOParameter, oBJETOWINDOWParameter, wORKFLAGParameter, wORKAGREGARFLAGParameter, wORKMODIFICARFLAGParameter, wORKBORRARFLAGParameter, wORKAPROBARFLAGParameter, wEBFLAGParameter, wEBPAGEParameter, wEBACTIONParameter, wEBGRUPOParameter, wEBGRUPOSECUENCIAParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, eSTADOParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SEGURIDADCONCEPTOMANTENIMIENTO(string aPLICACIONCODIGO, string gRUPO, string cONCEPTO, string cONCEPTOPADRE, Nullable<int> iDPAGINA, string dESCRIPCION, string dESCRIPCIONINGLES, string vISIBLEFLAG, string tIPODEDETALLE, string tIPODEOBJETO, string oBJETO, string tIPODEACCESO, string oBJETOWINDOW, string wORKFLAG, string wORKAGREGARFLAG, string wORKMODIFICARFLAG, string wORKBORRARFLAG, string wORKAPROBARFLAG, string wEBFLAG, string wEBPAGE, string wEBACTION, string wEBGRUPO, Nullable<int> wEBGRUPOSECUENCIA, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string eSTADO, string aCCION)
        {
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            var gRUPOParameter = gRUPO != null ?
                new ObjectParameter("GRUPO", gRUPO) :
                new ObjectParameter("GRUPO", typeof(string));
    
            var cONCEPTOParameter = cONCEPTO != null ?
                new ObjectParameter("CONCEPTO", cONCEPTO) :
                new ObjectParameter("CONCEPTO", typeof(string));
    
            var cONCEPTOPADREParameter = cONCEPTOPADRE != null ?
                new ObjectParameter("CONCEPTOPADRE", cONCEPTOPADRE) :
                new ObjectParameter("CONCEPTOPADRE", typeof(string));
    
            var iDPAGINAParameter = iDPAGINA.HasValue ?
                new ObjectParameter("IDPAGINA", iDPAGINA) :
                new ObjectParameter("IDPAGINA", typeof(int));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var dESCRIPCIONINGLESParameter = dESCRIPCIONINGLES != null ?
                new ObjectParameter("DESCRIPCIONINGLES", dESCRIPCIONINGLES) :
                new ObjectParameter("DESCRIPCIONINGLES", typeof(string));
    
            var vISIBLEFLAGParameter = vISIBLEFLAG != null ?
                new ObjectParameter("VISIBLEFLAG", vISIBLEFLAG) :
                new ObjectParameter("VISIBLEFLAG", typeof(string));
    
            var tIPODEDETALLEParameter = tIPODEDETALLE != null ?
                new ObjectParameter("TIPODEDETALLE", tIPODEDETALLE) :
                new ObjectParameter("TIPODEDETALLE", typeof(string));
    
            var tIPODEOBJETOParameter = tIPODEOBJETO != null ?
                new ObjectParameter("TIPODEOBJETO", tIPODEOBJETO) :
                new ObjectParameter("TIPODEOBJETO", typeof(string));
    
            var oBJETOParameter = oBJETO != null ?
                new ObjectParameter("OBJETO", oBJETO) :
                new ObjectParameter("OBJETO", typeof(string));
    
            var tIPODEACCESOParameter = tIPODEACCESO != null ?
                new ObjectParameter("TIPODEACCESO", tIPODEACCESO) :
                new ObjectParameter("TIPODEACCESO", typeof(string));
    
            var oBJETOWINDOWParameter = oBJETOWINDOW != null ?
                new ObjectParameter("OBJETOWINDOW", oBJETOWINDOW) :
                new ObjectParameter("OBJETOWINDOW", typeof(string));
    
            var wORKFLAGParameter = wORKFLAG != null ?
                new ObjectParameter("WORKFLAG", wORKFLAG) :
                new ObjectParameter("WORKFLAG", typeof(string));
    
            var wORKAGREGARFLAGParameter = wORKAGREGARFLAG != null ?
                new ObjectParameter("WORKAGREGARFLAG", wORKAGREGARFLAG) :
                new ObjectParameter("WORKAGREGARFLAG", typeof(string));
    
            var wORKMODIFICARFLAGParameter = wORKMODIFICARFLAG != null ?
                new ObjectParameter("WORKMODIFICARFLAG", wORKMODIFICARFLAG) :
                new ObjectParameter("WORKMODIFICARFLAG", typeof(string));
    
            var wORKBORRARFLAGParameter = wORKBORRARFLAG != null ?
                new ObjectParameter("WORKBORRARFLAG", wORKBORRARFLAG) :
                new ObjectParameter("WORKBORRARFLAG", typeof(string));
    
            var wORKAPROBARFLAGParameter = wORKAPROBARFLAG != null ?
                new ObjectParameter("WORKAPROBARFLAG", wORKAPROBARFLAG) :
                new ObjectParameter("WORKAPROBARFLAG", typeof(string));
    
            var wEBFLAGParameter = wEBFLAG != null ?
                new ObjectParameter("WEBFLAG", wEBFLAG) :
                new ObjectParameter("WEBFLAG", typeof(string));
    
            var wEBPAGEParameter = wEBPAGE != null ?
                new ObjectParameter("WEBPAGE", wEBPAGE) :
                new ObjectParameter("WEBPAGE", typeof(string));
    
            var wEBACTIONParameter = wEBACTION != null ?
                new ObjectParameter("WEBACTION", wEBACTION) :
                new ObjectParameter("WEBACTION", typeof(string));
    
            var wEBGRUPOParameter = wEBGRUPO != null ?
                new ObjectParameter("WEBGRUPO", wEBGRUPO) :
                new ObjectParameter("WEBGRUPO", typeof(string));
    
            var wEBGRUPOSECUENCIAParameter = wEBGRUPOSECUENCIA.HasValue ?
                new ObjectParameter("WEBGRUPOSECUENCIA", wEBGRUPOSECUENCIA) :
                new ObjectParameter("WEBGRUPOSECUENCIA", typeof(int));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SEGURIDADCONCEPTOMANTENIMIENTO", aPLICACIONCODIGOParameter, gRUPOParameter, cONCEPTOParameter, cONCEPTOPADREParameter, iDPAGINAParameter, dESCRIPCIONParameter, dESCRIPCIONINGLESParameter, vISIBLEFLAGParameter, tIPODEDETALLEParameter, tIPODEOBJETOParameter, oBJETOParameter, tIPODEACCESOParameter, oBJETOWINDOWParameter, wORKFLAGParameter, wORKAGREGARFLAGParameter, wORKMODIFICARFLAGParameter, wORKBORRARFLAGParameter, wORKAPROBARFLAGParameter, wEBFLAGParameter, wEBPAGEParameter, wEBACTIONParameter, wEBGRUPOParameter, wEBGRUPOSECUENCIAParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, eSTADOParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<CM_CO_TablaMaestroConcepto> TablaMaestroConceptoListar(Nullable<int> idTablaMaestro, Nullable<int> idConcepto, string concepto, string nombre, string descripcion, Nullable<int> tipoConcepto, string tipoDato, string campo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(CM_CO_TablaMaestroConcepto).Assembly);
    
            var idTablaMaestroParameter = idTablaMaestro.HasValue ?
                new ObjectParameter("IdTablaMaestro", idTablaMaestro) :
                new ObjectParameter("IdTablaMaestro", typeof(int));
    
            var idConceptoParameter = idConcepto.HasValue ?
                new ObjectParameter("IdConcepto", idConcepto) :
                new ObjectParameter("IdConcepto", typeof(int));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tipoConceptoParameter = tipoConcepto.HasValue ?
                new ObjectParameter("TipoConcepto", tipoConcepto) :
                new ObjectParameter("TipoConcepto", typeof(int));
    
            var tipoDatoParameter = tipoDato != null ?
                new ObjectParameter("TipoDato", tipoDato) :
                new ObjectParameter("TipoDato", typeof(string));
    
            var campoParameter = campo != null ?
                new ObjectParameter("Campo", campo) :
                new ObjectParameter("Campo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CM_CO_TablaMaestroConcepto>("TablaMaestroConceptoListar", idTablaMaestroParameter, idConceptoParameter, conceptoParameter, nombreParameter, descripcionParameter, tipoConceptoParameter, tipoDatoParameter, campoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<CM_CO_TablaMaestroConcepto> TablaMaestroConceptoListar(Nullable<int> idTablaMaestro, Nullable<int> idConcepto, string concepto, string nombre, string descripcion, Nullable<int> tipoConcepto, string tipoDato, string campo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(CM_CO_TablaMaestroConcepto).Assembly);
    
            var idTablaMaestroParameter = idTablaMaestro.HasValue ?
                new ObjectParameter("IdTablaMaestro", idTablaMaestro) :
                new ObjectParameter("IdTablaMaestro", typeof(int));
    
            var idConceptoParameter = idConcepto.HasValue ?
                new ObjectParameter("IdConcepto", idConcepto) :
                new ObjectParameter("IdConcepto", typeof(int));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tipoConceptoParameter = tipoConcepto.HasValue ?
                new ObjectParameter("TipoConcepto", tipoConcepto) :
                new ObjectParameter("TipoConcepto", typeof(int));
    
            var tipoDatoParameter = tipoDato != null ?
                new ObjectParameter("TipoDato", tipoDato) :
                new ObjectParameter("TipoDato", typeof(string));
    
            var campoParameter = campo != null ?
                new ObjectParameter("Campo", campo) :
                new ObjectParameter("Campo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CM_CO_TablaMaestroConcepto>("TablaMaestroConceptoListar", mergeOption, idTablaMaestroParameter, idConceptoParameter, conceptoParameter, nombreParameter, descripcionParameter, tipoConceptoParameter, tipoDatoParameter, campoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_Indicaciones(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuenciaMedicamento, Nullable<int> secuencia, string tipoRegistro, Nullable<int> correlativo, Nullable<int> idTipoIndicacion, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaMedicamentoParameter = secuenciaMedicamento.HasValue ?
                new ObjectParameter("SecuenciaMedicamento", secuenciaMedicamento) :
                new ObjectParameter("SecuenciaMedicamento", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var tipoRegistroParameter = tipoRegistro != null ?
                new ObjectParameter("TipoRegistro", tipoRegistro) :
                new ObjectParameter("TipoRegistro", typeof(string));
    
            var correlativoParameter = correlativo.HasValue ?
                new ObjectParameter("Correlativo", correlativo) :
                new ObjectParameter("Correlativo", typeof(int));
    
            var idTipoIndicacionParameter = idTipoIndicacion.HasValue ?
                new ObjectParameter("IdTipoIndicacion", idTipoIndicacion) :
                new ObjectParameter("IdTipoIndicacion", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_Indicaciones", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaMedicamentoParameter, secuenciaParameter, tipoRegistroParameter, correlativoParameter, idTipoIndicacionParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Indicaciones> USP_IndicacionesListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuenciaMedicamento, Nullable<int> secuencia, string tipoRegistro, Nullable<int> correlativo, Nullable<int> idTipoIndicacion, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Indicaciones).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaMedicamentoParameter = secuenciaMedicamento.HasValue ?
                new ObjectParameter("SecuenciaMedicamento", secuenciaMedicamento) :
                new ObjectParameter("SecuenciaMedicamento", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var tipoRegistroParameter = tipoRegistro != null ?
                new ObjectParameter("TipoRegistro", tipoRegistro) :
                new ObjectParameter("TipoRegistro", typeof(string));
    
            var correlativoParameter = correlativo.HasValue ?
                new ObjectParameter("Correlativo", correlativo) :
                new ObjectParameter("Correlativo", typeof(int));
    
            var idTipoIndicacionParameter = idTipoIndicacion.HasValue ?
                new ObjectParameter("IdTipoIndicacion", idTipoIndicacion) :
                new ObjectParameter("IdTipoIndicacion", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Indicaciones>("USP_IndicacionesListar", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaMedicamentoParameter, secuenciaParameter, tipoRegistroParameter, correlativoParameter, idTipoIndicacionParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Indicaciones> USP_IndicacionesListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuenciaMedicamento, Nullable<int> secuencia, string tipoRegistro, Nullable<int> correlativo, Nullable<int> idTipoIndicacion, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Indicaciones).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaMedicamentoParameter = secuenciaMedicamento.HasValue ?
                new ObjectParameter("SecuenciaMedicamento", secuenciaMedicamento) :
                new ObjectParameter("SecuenciaMedicamento", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var tipoRegistroParameter = tipoRegistro != null ?
                new ObjectParameter("TipoRegistro", tipoRegistro) :
                new ObjectParameter("TipoRegistro", typeof(string));
    
            var correlativoParameter = correlativo.HasValue ?
                new ObjectParameter("Correlativo", correlativo) :
                new ObjectParameter("Correlativo", typeof(int));
    
            var idTipoIndicacionParameter = idTipoIndicacion.HasValue ?
                new ObjectParameter("IdTipoIndicacion", idTipoIndicacion) :
                new ObjectParameter("IdTipoIndicacion", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Indicaciones>("USP_IndicacionesListar", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaMedicamentoParameter, secuenciaParameter, tipoRegistroParameter, correlativoParameter, idTipoIndicacionParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ExamenFisicoRegional(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idCuerpoHumano, string comentarios, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idCuerpoHumanoParameter = idCuerpoHumano.HasValue ?
                new ObjectParameter("IdCuerpoHumano", idCuerpoHumano) :
                new ObjectParameter("IdCuerpoHumano", typeof(int));
    
            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ExamenFisicoRegional", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idCuerpoHumanoParameter, comentariosParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_CuidadoPreventivo(Nullable<int> idCuidadoPreventivo, Nullable<int> idCuidadoPreventivoPadre, string codigoCuidadoPreventivo, string codigoCuidadoPreventivoPadre, Nullable<int> idTipoCuidadoPreventivo, Nullable<int> idTipoPeriodicidad, string descripcion, string descripcionExtranjera, Nullable<int> nivel, string ultimoNivelFlag, string cadenaRecursiva, Nullable<int> orden, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string nombreTabla, string accion, string version)
        {
            var idCuidadoPreventivoParameter = idCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdCuidadoPreventivo", idCuidadoPreventivo) :
                new ObjectParameter("IdCuidadoPreventivo", typeof(int));
    
            var idCuidadoPreventivoPadreParameter = idCuidadoPreventivoPadre.HasValue ?
                new ObjectParameter("IdCuidadoPreventivoPadre", idCuidadoPreventivoPadre) :
                new ObjectParameter("IdCuidadoPreventivoPadre", typeof(int));
    
            var codigoCuidadoPreventivoParameter = codigoCuidadoPreventivo != null ?
                new ObjectParameter("CodigoCuidadoPreventivo", codigoCuidadoPreventivo) :
                new ObjectParameter("CodigoCuidadoPreventivo", typeof(string));
    
            var codigoCuidadoPreventivoPadreParameter = codigoCuidadoPreventivoPadre != null ?
                new ObjectParameter("CodigoCuidadoPreventivoPadre", codigoCuidadoPreventivoPadre) :
                new ObjectParameter("CodigoCuidadoPreventivoPadre", typeof(string));
    
            var idTipoCuidadoPreventivoParameter = idTipoCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdTipoCuidadoPreventivo", idTipoCuidadoPreventivo) :
                new ObjectParameter("IdTipoCuidadoPreventivo", typeof(int));
    
            var idTipoPeriodicidadParameter = idTipoPeriodicidad.HasValue ?
                new ObjectParameter("IdTipoPeriodicidad", idTipoPeriodicidad) :
                new ObjectParameter("IdTipoPeriodicidad", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_CuidadoPreventivo", idCuidadoPreventivoParameter, idCuidadoPreventivoPadreParameter, codigoCuidadoPreventivoParameter, codigoCuidadoPreventivoPadreParameter, idTipoCuidadoPreventivoParameter, idTipoPeriodicidadParameter, descripcionParameter, descripcionExtranjeraParameter, nivelParameter, ultimoNivelFlagParameter, cadenaRecursivaParameter, ordenParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, nombreTablaParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_CuidadoPreventivo> USP_SS_HC_CuidadoPreventivoListar(Nullable<int> idCuidadoPreventivo, Nullable<int> idCuidadoPreventivoPadre, string codigoCuidadoPreventivo, string codigoCuidadoPreventivoPadre, Nullable<int> idTipoCuidadoPreventivo, Nullable<int> idTipoPeriodicidad, string descripcion, string descripcionExtranjera, Nullable<int> nivel, string ultimoNivelFlag, string cadenaRecursiva, Nullable<int> orden, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string nombreTabla, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_CuidadoPreventivo).Assembly);
    
            var idCuidadoPreventivoParameter = idCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdCuidadoPreventivo", idCuidadoPreventivo) :
                new ObjectParameter("IdCuidadoPreventivo", typeof(int));
    
            var idCuidadoPreventivoPadreParameter = idCuidadoPreventivoPadre.HasValue ?
                new ObjectParameter("IdCuidadoPreventivoPadre", idCuidadoPreventivoPadre) :
                new ObjectParameter("IdCuidadoPreventivoPadre", typeof(int));
    
            var codigoCuidadoPreventivoParameter = codigoCuidadoPreventivo != null ?
                new ObjectParameter("CodigoCuidadoPreventivo", codigoCuidadoPreventivo) :
                new ObjectParameter("CodigoCuidadoPreventivo", typeof(string));
    
            var codigoCuidadoPreventivoPadreParameter = codigoCuidadoPreventivoPadre != null ?
                new ObjectParameter("CodigoCuidadoPreventivoPadre", codigoCuidadoPreventivoPadre) :
                new ObjectParameter("CodigoCuidadoPreventivoPadre", typeof(string));
    
            var idTipoCuidadoPreventivoParameter = idTipoCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdTipoCuidadoPreventivo", idTipoCuidadoPreventivo) :
                new ObjectParameter("IdTipoCuidadoPreventivo", typeof(int));
    
            var idTipoPeriodicidadParameter = idTipoPeriodicidad.HasValue ?
                new ObjectParameter("IdTipoPeriodicidad", idTipoPeriodicidad) :
                new ObjectParameter("IdTipoPeriodicidad", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_CuidadoPreventivo>("USP_SS_HC_CuidadoPreventivoListar", idCuidadoPreventivoParameter, idCuidadoPreventivoPadreParameter, codigoCuidadoPreventivoParameter, codigoCuidadoPreventivoPadreParameter, idTipoCuidadoPreventivoParameter, idTipoPeriodicidadParameter, descripcionParameter, descripcionExtranjeraParameter, nivelParameter, ultimoNivelFlagParameter, cadenaRecursivaParameter, ordenParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, nombreTablaParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_CuidadoPreventivo> USP_SS_HC_CuidadoPreventivoListar(Nullable<int> idCuidadoPreventivo, Nullable<int> idCuidadoPreventivoPadre, string codigoCuidadoPreventivo, string codigoCuidadoPreventivoPadre, Nullable<int> idTipoCuidadoPreventivo, Nullable<int> idTipoPeriodicidad, string descripcion, string descripcionExtranjera, Nullable<int> nivel, string ultimoNivelFlag, string cadenaRecursiva, Nullable<int> orden, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string nombreTabla, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_CuidadoPreventivo).Assembly);
    
            var idCuidadoPreventivoParameter = idCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdCuidadoPreventivo", idCuidadoPreventivo) :
                new ObjectParameter("IdCuidadoPreventivo", typeof(int));
    
            var idCuidadoPreventivoPadreParameter = idCuidadoPreventivoPadre.HasValue ?
                new ObjectParameter("IdCuidadoPreventivoPadre", idCuidadoPreventivoPadre) :
                new ObjectParameter("IdCuidadoPreventivoPadre", typeof(int));
    
            var codigoCuidadoPreventivoParameter = codigoCuidadoPreventivo != null ?
                new ObjectParameter("CodigoCuidadoPreventivo", codigoCuidadoPreventivo) :
                new ObjectParameter("CodigoCuidadoPreventivo", typeof(string));
    
            var codigoCuidadoPreventivoPadreParameter = codigoCuidadoPreventivoPadre != null ?
                new ObjectParameter("CodigoCuidadoPreventivoPadre", codigoCuidadoPreventivoPadre) :
                new ObjectParameter("CodigoCuidadoPreventivoPadre", typeof(string));
    
            var idTipoCuidadoPreventivoParameter = idTipoCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdTipoCuidadoPreventivo", idTipoCuidadoPreventivo) :
                new ObjectParameter("IdTipoCuidadoPreventivo", typeof(int));
    
            var idTipoPeriodicidadParameter = idTipoPeriodicidad.HasValue ?
                new ObjectParameter("IdTipoPeriodicidad", idTipoPeriodicidad) :
                new ObjectParameter("IdTipoPeriodicidad", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_CuidadoPreventivo>("USP_SS_HC_CuidadoPreventivoListar", mergeOption, idCuidadoPreventivoParameter, idCuidadoPreventivoPadreParameter, codigoCuidadoPreventivoParameter, codigoCuidadoPreventivoPadreParameter, idTipoCuidadoPreventivoParameter, idTipoPeriodicidadParameter, descripcionParameter, descripcionExtranjeraParameter, nivelParameter, ultimoNivelFlagParameter, cadenaRecursivaParameter, ordenParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, nombreTablaParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_SeguimientoRiesgo(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idTipoCuidadoPreventivo, Nullable<System.DateTime> fechaSeguimiento, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idTipoCuidadoPreventivoParameter = idTipoCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdTipoCuidadoPreventivo", idTipoCuidadoPreventivo) :
                new ObjectParameter("IdTipoCuidadoPreventivo", typeof(int));
    
            var fechaSeguimientoParameter = fechaSeguimiento.HasValue ?
                new ObjectParameter("FechaSeguimiento", fechaSeguimiento) :
                new ObjectParameter("FechaSeguimiento", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_SeguimientoRiesgo", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idTipoCuidadoPreventivoParameter, fechaSeguimientoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_SeguimientoRiesgoDetalle(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idCuidadoPreventivo, string comentario, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idCuidadoPreventivoParameter = idCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdCuidadoPreventivo", idCuidadoPreventivo) :
                new ObjectParameter("IdCuidadoPreventivo", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_SeguimientoRiesgoDetalle", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idCuidadoPreventivoParameter, comentarioParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_SeguimientoRiesgoDetalle> USP_SS_HC_SeguimientoRiesgoDetalle_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idCuidadoPreventivo, string comentario, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_SeguimientoRiesgoDetalle).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idCuidadoPreventivoParameter = idCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdCuidadoPreventivo", idCuidadoPreventivo) :
                new ObjectParameter("IdCuidadoPreventivo", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_SeguimientoRiesgoDetalle>("USP_SS_HC_SeguimientoRiesgoDetalle_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idCuidadoPreventivoParameter, comentarioParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_SeguimientoRiesgoDetalle> USP_SS_HC_SeguimientoRiesgoDetalle_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idCuidadoPreventivo, string comentario, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_SeguimientoRiesgoDetalle).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idCuidadoPreventivoParameter = idCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdCuidadoPreventivo", idCuidadoPreventivo) :
                new ObjectParameter("IdCuidadoPreventivo", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_SeguimientoRiesgoDetalle>("USP_SS_HC_SeguimientoRiesgoDetalle_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idCuidadoPreventivoParameter, comentarioParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_SeguimientoRiesgo> USP_SS_HC_SeguimientoRiesgoListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idTipoCuidadoPreventivo, Nullable<System.DateTime> fechaSeguimiento, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_SeguimientoRiesgo).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idTipoCuidadoPreventivoParameter = idTipoCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdTipoCuidadoPreventivo", idTipoCuidadoPreventivo) :
                new ObjectParameter("IdTipoCuidadoPreventivo", typeof(int));
    
            var fechaSeguimientoParameter = fechaSeguimiento.HasValue ?
                new ObjectParameter("FechaSeguimiento", fechaSeguimiento) :
                new ObjectParameter("FechaSeguimiento", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_SeguimientoRiesgo>("USP_SS_HC_SeguimientoRiesgoListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idTipoCuidadoPreventivoParameter, fechaSeguimientoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_SeguimientoRiesgo> USP_SS_HC_SeguimientoRiesgoListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idTipoCuidadoPreventivo, Nullable<System.DateTime> fechaSeguimiento, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_SeguimientoRiesgo).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idTipoCuidadoPreventivoParameter = idTipoCuidadoPreventivo.HasValue ?
                new ObjectParameter("IdTipoCuidadoPreventivo", idTipoCuidadoPreventivo) :
                new ObjectParameter("IdTipoCuidadoPreventivo", typeof(int));
    
            var fechaSeguimientoParameter = fechaSeguimiento.HasValue ?
                new ObjectParameter("FechaSeguimiento", fechaSeguimiento) :
                new ObjectParameter("FechaSeguimiento", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_SeguimientoRiesgo>("USP_SS_HC_SeguimientoRiesgoListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idTipoCuidadoPreventivoParameter, fechaSeguimientoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_VW_PERSONAPACIENTE(Nullable<int> persona, string nombreCompleto, string tipoDocumento, string documento, string esCliente, string esEmpleado, string esOtro, string esProveedor, string esPaciente, string esEmpresa, Nullable<System.DateTime> fechaNacimiento, string sexo, string estadoCivil, string nivelInstruccion, string codigoPostal, string provincia, string departamento, Nullable<int> tipoMedico, string estado, string estadoEmpleado, Nullable<System.DateTime> fechaIngreso, string companiaSocio, string centroCostos, string aFE, string gradoSalario, Nullable<int> codigoCargo, string departamentoOperacional, string paciente, string historiaClinica, string usuario, string uSUARIOPERFIL, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var tipoMedicoParameter = tipoMedico.HasValue ?
                new ObjectParameter("TipoMedico", tipoMedico) :
                new ObjectParameter("TipoMedico", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var estadoEmpleadoParameter = estadoEmpleado != null ?
                new ObjectParameter("EstadoEmpleado", estadoEmpleado) :
                new ObjectParameter("EstadoEmpleado", typeof(string));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var companiaSocioParameter = companiaSocio != null ?
                new ObjectParameter("CompaniaSocio", companiaSocio) :
                new ObjectParameter("CompaniaSocio", typeof(string));
    
            var centroCostosParameter = centroCostos != null ?
                new ObjectParameter("CentroCostos", centroCostos) :
                new ObjectParameter("CentroCostos", typeof(string));
    
            var aFEParameter = aFE != null ?
                new ObjectParameter("AFE", aFE) :
                new ObjectParameter("AFE", typeof(string));
    
            var gradoSalarioParameter = gradoSalario != null ?
                new ObjectParameter("GradoSalario", gradoSalario) :
                new ObjectParameter("GradoSalario", typeof(string));
    
            var codigoCargoParameter = codigoCargo.HasValue ?
                new ObjectParameter("CodigoCargo", codigoCargo) :
                new ObjectParameter("CodigoCargo", typeof(int));
    
            var departamentoOperacionalParameter = departamentoOperacional != null ?
                new ObjectParameter("DepartamentoOperacional", departamentoOperacional) :
                new ObjectParameter("DepartamentoOperacional", typeof(string));
    
            var pacienteParameter = paciente != null ?
                new ObjectParameter("Paciente", paciente) :
                new ObjectParameter("Paciente", typeof(string));
    
            var historiaClinicaParameter = historiaClinica != null ?
                new ObjectParameter("HistoriaClinica", historiaClinica) :
                new ObjectParameter("HistoriaClinica", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var uSUARIOPERFILParameter = uSUARIOPERFIL != null ?
                new ObjectParameter("USUARIOPERFIL", uSUARIOPERFIL) :
                new ObjectParameter("USUARIOPERFIL", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_VW_PERSONAPACIENTE", personaParameter, nombreCompletoParameter, tipoDocumentoParameter, documentoParameter, esClienteParameter, esEmpleadoParameter, esOtroParameter, esProveedorParameter, esPacienteParameter, esEmpresaParameter, fechaNacimientoParameter, sexoParameter, estadoCivilParameter, nivelInstruccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, tipoMedicoParameter, estadoParameter, estadoEmpleadoParameter, fechaIngresoParameter, companiaSocioParameter, centroCostosParameter, aFEParameter, gradoSalarioParameter, codigoCargoParameter, departamentoOperacionalParameter, pacienteParameter, historiaClinicaParameter, usuarioParameter, uSUARIOPERFILParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<GE_Varios> USP_GE_VARIOSLISTAR(string codigoTabla, Nullable<int> secuencial, string codigoTablaPadre, Nullable<int> secuencialPadre, string nemonico, string descripcion, Nullable<System.DateTime> valorFecha, Nullable<decimal> valorNumerico, string valorTexto, Nullable<int> indicadorUso, Nullable<int> indicadorAgregarHijo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> ordenEstablecido, string accion)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GE_Varios).Assembly);
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var codigoTablaPadreParameter = codigoTablaPadre != null ?
                new ObjectParameter("CodigoTablaPadre", codigoTablaPadre) :
                new ObjectParameter("CodigoTablaPadre", typeof(string));
    
            var secuencialPadreParameter = secuencialPadre.HasValue ?
                new ObjectParameter("SecuencialPadre", secuencialPadre) :
                new ObjectParameter("SecuencialPadre", typeof(int));
    
            var nemonicoParameter = nemonico != null ?
                new ObjectParameter("Nemonico", nemonico) :
                new ObjectParameter("Nemonico", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var indicadorUsoParameter = indicadorUso.HasValue ?
                new ObjectParameter("IndicadorUso", indicadorUso) :
                new ObjectParameter("IndicadorUso", typeof(int));
    
            var indicadorAgregarHijoParameter = indicadorAgregarHijo.HasValue ?
                new ObjectParameter("IndicadorAgregarHijo", indicadorAgregarHijo) :
                new ObjectParameter("IndicadorAgregarHijo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var ordenEstablecidoParameter = ordenEstablecido.HasValue ?
                new ObjectParameter("OrdenEstablecido", ordenEstablecido) :
                new ObjectParameter("OrdenEstablecido", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GE_Varios>("USP_GE_VARIOSLISTAR", codigoTablaParameter, secuencialParameter, codigoTablaPadreParameter, secuencialPadreParameter, nemonicoParameter, descripcionParameter, valorFechaParameter, valorNumericoParameter, valorTextoParameter, indicadorUsoParameter, indicadorAgregarHijoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, ordenEstablecidoParameter, accionParameter);
        }
    
        public virtual ObjectResult<GE_Varios> USP_GE_VARIOSLISTAR(string codigoTabla, Nullable<int> secuencial, string codigoTablaPadre, Nullable<int> secuencialPadre, string nemonico, string descripcion, Nullable<System.DateTime> valorFecha, Nullable<decimal> valorNumerico, string valorTexto, Nullable<int> indicadorUso, Nullable<int> indicadorAgregarHijo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> ordenEstablecido, string accion, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GE_Varios).Assembly);
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var codigoTablaPadreParameter = codigoTablaPadre != null ?
                new ObjectParameter("CodigoTablaPadre", codigoTablaPadre) :
                new ObjectParameter("CodigoTablaPadre", typeof(string));
    
            var secuencialPadreParameter = secuencialPadre.HasValue ?
                new ObjectParameter("SecuencialPadre", secuencialPadre) :
                new ObjectParameter("SecuencialPadre", typeof(int));
    
            var nemonicoParameter = nemonico != null ?
                new ObjectParameter("Nemonico", nemonico) :
                new ObjectParameter("Nemonico", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var indicadorUsoParameter = indicadorUso.HasValue ?
                new ObjectParameter("IndicadorUso", indicadorUso) :
                new ObjectParameter("IndicadorUso", typeof(int));
    
            var indicadorAgregarHijoParameter = indicadorAgregarHijo.HasValue ?
                new ObjectParameter("IndicadorAgregarHijo", indicadorAgregarHijo) :
                new ObjectParameter("IndicadorAgregarHijo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var ordenEstablecidoParameter = ordenEstablecido.HasValue ?
                new ObjectParameter("OrdenEstablecido", ordenEstablecido) :
                new ObjectParameter("OrdenEstablecido", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GE_Varios>("USP_GE_VARIOSLISTAR", mergeOption, codigoTablaParameter, secuencialParameter, codigoTablaPadreParameter, secuencialPadreParameter, nemonicoParameter, descripcionParameter, valorFechaParameter, valorNumericoParameter, valorTextoParameter, indicadorUsoParameter, indicadorAgregarHijoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, ordenEstablecidoParameter, accionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_Diagnostico(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fechaRegistro, Nullable<int> idDiagnostico, Nullable<int> idDiagnosticoValoracion, string determinacionDiagnostica, Nullable<int> idDiagnosticoPrincipal, string gradoAfeccion, string observacion, Nullable<int> indicadorAntecedente, string tipoAntecedente, Nullable<int> indicadorPreExistencia, Nullable<int> indicadorCronico, Nullable<int> indicadorNuevo, string detalleDiagnostico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var idDiagnosticoValoracionParameter = idDiagnosticoValoracion.HasValue ?
                new ObjectParameter("IdDiagnosticoValoracion", idDiagnosticoValoracion) :
                new ObjectParameter("IdDiagnosticoValoracion", typeof(int));
    
            var determinacionDiagnosticaParameter = determinacionDiagnostica != null ?
                new ObjectParameter("DeterminacionDiagnostica", determinacionDiagnostica) :
                new ObjectParameter("DeterminacionDiagnostica", typeof(string));
    
            var idDiagnosticoPrincipalParameter = idDiagnosticoPrincipal.HasValue ?
                new ObjectParameter("IdDiagnosticoPrincipal", idDiagnosticoPrincipal) :
                new ObjectParameter("IdDiagnosticoPrincipal", typeof(int));
    
            var gradoAfeccionParameter = gradoAfeccion != null ?
                new ObjectParameter("GradoAfeccion", gradoAfeccion) :
                new ObjectParameter("GradoAfeccion", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var indicadorAntecedenteParameter = indicadorAntecedente.HasValue ?
                new ObjectParameter("IndicadorAntecedente", indicadorAntecedente) :
                new ObjectParameter("IndicadorAntecedente", typeof(int));
    
            var tipoAntecedenteParameter = tipoAntecedente != null ?
                new ObjectParameter("TipoAntecedente", tipoAntecedente) :
                new ObjectParameter("TipoAntecedente", typeof(string));
    
            var indicadorPreExistenciaParameter = indicadorPreExistencia.HasValue ?
                new ObjectParameter("IndicadorPreExistencia", indicadorPreExistencia) :
                new ObjectParameter("IndicadorPreExistencia", typeof(int));
    
            var indicadorCronicoParameter = indicadorCronico.HasValue ?
                new ObjectParameter("IndicadorCronico", indicadorCronico) :
                new ObjectParameter("IndicadorCronico", typeof(int));
    
            var indicadorNuevoParameter = indicadorNuevo.HasValue ?
                new ObjectParameter("IndicadorNuevo", indicadorNuevo) :
                new ObjectParameter("IndicadorNuevo", typeof(int));
    
            var detalleDiagnosticoParameter = detalleDiagnostico != null ?
                new ObjectParameter("DetalleDiagnostico", detalleDiagnostico) :
                new ObjectParameter("DetalleDiagnostico", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_Diagnostico", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaRegistroParameter, idDiagnosticoParameter, idDiagnosticoValoracionParameter, determinacionDiagnosticaParameter, idDiagnosticoPrincipalParameter, gradoAfeccionParameter, observacionParameter, indicadorAntecedenteParameter, tipoAntecedenteParameter, indicadorPreExistenciaParameter, indicadorCronicoParameter, indicadorNuevoParameter, detalleDiagnosticoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Diagnostico> USP_DiagnosticoListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fechaRegistro, Nullable<int> idDiagnostico, Nullable<int> idDiagnosticoValoracion, string determinacionDiagnostica, Nullable<int> idDiagnosticoPrincipal, string gradoAfeccion, string observacion, Nullable<int> indicadorAntecedente, string tipoAntecedente, Nullable<int> indicadorPreExistencia, Nullable<int> indicadorCronico, Nullable<int> indicadorNuevo, string detalleDiagnostico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Diagnostico).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var idDiagnosticoValoracionParameter = idDiagnosticoValoracion.HasValue ?
                new ObjectParameter("IdDiagnosticoValoracion", idDiagnosticoValoracion) :
                new ObjectParameter("IdDiagnosticoValoracion", typeof(int));
    
            var determinacionDiagnosticaParameter = determinacionDiagnostica != null ?
                new ObjectParameter("DeterminacionDiagnostica", determinacionDiagnostica) :
                new ObjectParameter("DeterminacionDiagnostica", typeof(string));
    
            var idDiagnosticoPrincipalParameter = idDiagnosticoPrincipal.HasValue ?
                new ObjectParameter("IdDiagnosticoPrincipal", idDiagnosticoPrincipal) :
                new ObjectParameter("IdDiagnosticoPrincipal", typeof(int));
    
            var gradoAfeccionParameter = gradoAfeccion != null ?
                new ObjectParameter("GradoAfeccion", gradoAfeccion) :
                new ObjectParameter("GradoAfeccion", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var indicadorAntecedenteParameter = indicadorAntecedente.HasValue ?
                new ObjectParameter("IndicadorAntecedente", indicadorAntecedente) :
                new ObjectParameter("IndicadorAntecedente", typeof(int));
    
            var tipoAntecedenteParameter = tipoAntecedente != null ?
                new ObjectParameter("TipoAntecedente", tipoAntecedente) :
                new ObjectParameter("TipoAntecedente", typeof(string));
    
            var indicadorPreExistenciaParameter = indicadorPreExistencia.HasValue ?
                new ObjectParameter("IndicadorPreExistencia", indicadorPreExistencia) :
                new ObjectParameter("IndicadorPreExistencia", typeof(int));
    
            var indicadorCronicoParameter = indicadorCronico.HasValue ?
                new ObjectParameter("IndicadorCronico", indicadorCronico) :
                new ObjectParameter("IndicadorCronico", typeof(int));
    
            var indicadorNuevoParameter = indicadorNuevo.HasValue ?
                new ObjectParameter("IndicadorNuevo", indicadorNuevo) :
                new ObjectParameter("IndicadorNuevo", typeof(int));
    
            var detalleDiagnosticoParameter = detalleDiagnostico != null ?
                new ObjectParameter("DetalleDiagnostico", detalleDiagnostico) :
                new ObjectParameter("DetalleDiagnostico", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Diagnostico>("USP_DiagnosticoListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaRegistroParameter, idDiagnosticoParameter, idDiagnosticoValoracionParameter, determinacionDiagnosticaParameter, idDiagnosticoPrincipalParameter, gradoAfeccionParameter, observacionParameter, indicadorAntecedenteParameter, tipoAntecedenteParameter, indicadorPreExistenciaParameter, indicadorCronicoParameter, indicadorNuevoParameter, detalleDiagnosticoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Diagnostico> USP_DiagnosticoListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fechaRegistro, Nullable<int> idDiagnostico, Nullable<int> idDiagnosticoValoracion, string determinacionDiagnostica, Nullable<int> idDiagnosticoPrincipal, string gradoAfeccion, string observacion, Nullable<int> indicadorAntecedente, string tipoAntecedente, Nullable<int> indicadorPreExistencia, Nullable<int> indicadorCronico, Nullable<int> indicadorNuevo, string detalleDiagnostico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Diagnostico).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var idDiagnosticoValoracionParameter = idDiagnosticoValoracion.HasValue ?
                new ObjectParameter("IdDiagnosticoValoracion", idDiagnosticoValoracion) :
                new ObjectParameter("IdDiagnosticoValoracion", typeof(int));
    
            var determinacionDiagnosticaParameter = determinacionDiagnostica != null ?
                new ObjectParameter("DeterminacionDiagnostica", determinacionDiagnostica) :
                new ObjectParameter("DeterminacionDiagnostica", typeof(string));
    
            var idDiagnosticoPrincipalParameter = idDiagnosticoPrincipal.HasValue ?
                new ObjectParameter("IdDiagnosticoPrincipal", idDiagnosticoPrincipal) :
                new ObjectParameter("IdDiagnosticoPrincipal", typeof(int));
    
            var gradoAfeccionParameter = gradoAfeccion != null ?
                new ObjectParameter("GradoAfeccion", gradoAfeccion) :
                new ObjectParameter("GradoAfeccion", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var indicadorAntecedenteParameter = indicadorAntecedente.HasValue ?
                new ObjectParameter("IndicadorAntecedente", indicadorAntecedente) :
                new ObjectParameter("IndicadorAntecedente", typeof(int));
    
            var tipoAntecedenteParameter = tipoAntecedente != null ?
                new ObjectParameter("TipoAntecedente", tipoAntecedente) :
                new ObjectParameter("TipoAntecedente", typeof(string));
    
            var indicadorPreExistenciaParameter = indicadorPreExistencia.HasValue ?
                new ObjectParameter("IndicadorPreExistencia", indicadorPreExistencia) :
                new ObjectParameter("IndicadorPreExistencia", typeof(int));
    
            var indicadorCronicoParameter = indicadorCronico.HasValue ?
                new ObjectParameter("IndicadorCronico", indicadorCronico) :
                new ObjectParameter("IndicadorCronico", typeof(int));
    
            var indicadorNuevoParameter = indicadorNuevo.HasValue ?
                new ObjectParameter("IndicadorNuevo", indicadorNuevo) :
                new ObjectParameter("IndicadorNuevo", typeof(int));
    
            var detalleDiagnosticoParameter = detalleDiagnostico != null ?
                new ObjectParameter("DetalleDiagnostico", detalleDiagnostico) :
                new ObjectParameter("DetalleDiagnostico", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Diagnostico>("USP_DiagnosticoListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaRegistroParameter, idDiagnosticoParameter, idDiagnosticoValoracionParameter, determinacionDiagnosticaParameter, idDiagnosticoPrincipalParameter, gradoAfeccionParameter, observacionParameter, indicadorAntecedenteParameter, tipoAntecedenteParameter, indicadorPreExistenciaParameter, indicadorCronicoParameter, indicadorNuevoParameter, detalleDiagnosticoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ExamenFisico_Triaje(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> presionMinima, Nullable<int> presionMaxima, Nullable<decimal> frecuenciaRespiratoria, Nullable<decimal> frecuenciaCardiaca, Nullable<decimal> temperatura, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> indiceMasaCorporal, Nullable<int> idEstadoGeneral, Nullable<int> idNutricion, Nullable<int> idHidratacion, Nullable<int> idColaboracion, string observacionesAdicionales, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var presionMinimaParameter = presionMinima.HasValue ?
                new ObjectParameter("PresionMinima", presionMinima) :
                new ObjectParameter("PresionMinima", typeof(int));
    
            var presionMaximaParameter = presionMaxima.HasValue ?
                new ObjectParameter("PresionMaxima", presionMaxima) :
                new ObjectParameter("PresionMaxima", typeof(int));
    
            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(decimal));
    
            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));
    
            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));
    
            var indiceMasaCorporalParameter = indiceMasaCorporal.HasValue ?
                new ObjectParameter("IndiceMasaCorporal", indiceMasaCorporal) :
                new ObjectParameter("IndiceMasaCorporal", typeof(decimal));
    
            var idEstadoGeneralParameter = idEstadoGeneral.HasValue ?
                new ObjectParameter("IdEstadoGeneral", idEstadoGeneral) :
                new ObjectParameter("IdEstadoGeneral", typeof(int));
    
            var idNutricionParameter = idNutricion.HasValue ?
                new ObjectParameter("IdNutricion", idNutricion) :
                new ObjectParameter("IdNutricion", typeof(int));
    
            var idHidratacionParameter = idHidratacion.HasValue ?
                new ObjectParameter("IdHidratacion", idHidratacion) :
                new ObjectParameter("IdHidratacion", typeof(int));
    
            var idColaboracionParameter = idColaboracion.HasValue ?
                new ObjectParameter("IdColaboracion", idColaboracion) :
                new ObjectParameter("IdColaboracion", typeof(int));
    
            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ExamenFisico_Triaje", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, presionMinimaParameter, presionMaximaParameter, frecuenciaRespiratoriaParameter, frecuenciaCardiacaParameter, temperaturaParameter, pesoParameter, tallaParameter, indiceMasaCorporalParameter, idEstadoGeneralParameter, idNutricionParameter, idHidratacionParameter, idColaboracionParameter, observacionesAdicionalesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_ExamenFisico_Triaje> USP_ExamenFisicoTriajeListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> presionMinima, Nullable<int> presionMaxima, Nullable<decimal> frecuenciaRespiratoria, Nullable<decimal> frecuenciaCardiaca, Nullable<decimal> temperatura, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> indiceMasaCorporal, Nullable<int> idEstadoGeneral, Nullable<int> idNutricion, Nullable<int> idHidratacion, Nullable<int> idColaboracion, string observacionesAdicionales, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ExamenFisico_Triaje).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var presionMinimaParameter = presionMinima.HasValue ?
                new ObjectParameter("PresionMinima", presionMinima) :
                new ObjectParameter("PresionMinima", typeof(int));
    
            var presionMaximaParameter = presionMaxima.HasValue ?
                new ObjectParameter("PresionMaxima", presionMaxima) :
                new ObjectParameter("PresionMaxima", typeof(int));
    
            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(decimal));
    
            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));
    
            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));
    
            var indiceMasaCorporalParameter = indiceMasaCorporal.HasValue ?
                new ObjectParameter("IndiceMasaCorporal", indiceMasaCorporal) :
                new ObjectParameter("IndiceMasaCorporal", typeof(decimal));
    
            var idEstadoGeneralParameter = idEstadoGeneral.HasValue ?
                new ObjectParameter("IdEstadoGeneral", idEstadoGeneral) :
                new ObjectParameter("IdEstadoGeneral", typeof(int));
    
            var idNutricionParameter = idNutricion.HasValue ?
                new ObjectParameter("IdNutricion", idNutricion) :
                new ObjectParameter("IdNutricion", typeof(int));
    
            var idHidratacionParameter = idHidratacion.HasValue ?
                new ObjectParameter("IdHidratacion", idHidratacion) :
                new ObjectParameter("IdHidratacion", typeof(int));
    
            var idColaboracionParameter = idColaboracion.HasValue ?
                new ObjectParameter("IdColaboracion", idColaboracion) :
                new ObjectParameter("IdColaboracion", typeof(int));
    
            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ExamenFisico_Triaje>("USP_ExamenFisicoTriajeListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, presionMinimaParameter, presionMaximaParameter, frecuenciaRespiratoriaParameter, frecuenciaCardiacaParameter, temperaturaParameter, pesoParameter, tallaParameter, indiceMasaCorporalParameter, idEstadoGeneralParameter, idNutricionParameter, idHidratacionParameter, idColaboracionParameter, observacionesAdicionalesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_ExamenFisico_Triaje> USP_ExamenFisicoTriajeListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> presionMinima, Nullable<int> presionMaxima, Nullable<decimal> frecuenciaRespiratoria, Nullable<decimal> frecuenciaCardiaca, Nullable<decimal> temperatura, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> indiceMasaCorporal, Nullable<int> idEstadoGeneral, Nullable<int> idNutricion, Nullable<int> idHidratacion, Nullable<int> idColaboracion, string observacionesAdicionales, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ExamenFisico_Triaje).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var presionMinimaParameter = presionMinima.HasValue ?
                new ObjectParameter("PresionMinima", presionMinima) :
                new ObjectParameter("PresionMinima", typeof(int));
    
            var presionMaximaParameter = presionMaxima.HasValue ?
                new ObjectParameter("PresionMaxima", presionMaxima) :
                new ObjectParameter("PresionMaxima", typeof(int));
    
            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(decimal));
    
            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));
    
            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));
    
            var indiceMasaCorporalParameter = indiceMasaCorporal.HasValue ?
                new ObjectParameter("IndiceMasaCorporal", indiceMasaCorporal) :
                new ObjectParameter("IndiceMasaCorporal", typeof(decimal));
    
            var idEstadoGeneralParameter = idEstadoGeneral.HasValue ?
                new ObjectParameter("IdEstadoGeneral", idEstadoGeneral) :
                new ObjectParameter("IdEstadoGeneral", typeof(int));
    
            var idNutricionParameter = idNutricion.HasValue ?
                new ObjectParameter("IdNutricion", idNutricion) :
                new ObjectParameter("IdNutricion", typeof(int));
    
            var idHidratacionParameter = idHidratacion.HasValue ?
                new ObjectParameter("IdHidratacion", idHidratacion) :
                new ObjectParameter("IdHidratacion", typeof(int));
    
            var idColaboracionParameter = idColaboracion.HasValue ?
                new ObjectParameter("IdColaboracion", idColaboracion) :
                new ObjectParameter("IdColaboracion", typeof(int));
    
            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ExamenFisico_Triaje>("USP_ExamenFisicoTriajeListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, presionMinimaParameter, presionMaximaParameter, frecuenciaRespiratoriaParameter, frecuenciaCardiacaParameter, temperaturaParameter, pesoParameter, tallaParameter, indiceMasaCorporalParameter, idEstadoGeneralParameter, idNutricionParameter, idHidratacionParameter, idColaboracionParameter, observacionesAdicionalesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ProximaAtencion(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string proximaAtencionFlag, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idEstablecimientoSalud, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacion, Nullable<int> idProcedimiento, string codigoComponente, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPersonalSalud, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));
    
            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));
    
            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));
    
            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));
    
            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ProximaAtencion", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, proximaAtencionFlagParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idEstablecimientoSaludParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionParameter, idProcedimientoParameter, codigoComponenteParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPersonalSaludParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter);
        }
    
        public virtual ObjectResult<SS_HC_ProximaAtencion> USP_ProximaAtencionListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string proximaAtencionFlag, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idEstablecimientoSalud, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacion, Nullable<int> idProcedimiento, string codigoComponente, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPersonalSalud, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ProximaAtencion).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));
    
            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));
    
            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));
    
            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));
    
            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ProximaAtencion>("USP_ProximaAtencionListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, proximaAtencionFlagParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idEstablecimientoSaludParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionParameter, idProcedimientoParameter, codigoComponenteParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPersonalSaludParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter);
        }
    
        public virtual ObjectResult<SS_HC_ProximaAtencion> USP_ProximaAtencionListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string proximaAtencionFlag, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idEstablecimientoSalud, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacion, Nullable<int> idProcedimiento, string codigoComponente, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPersonalSalud, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ProximaAtencion).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));
    
            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));
    
            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));
    
            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));
    
            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ProximaAtencion>("USP_ProximaAtencionListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, proximaAtencionFlagParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idEstablecimientoSaludParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionParameter, idProcedimientoParameter, codigoComponenteParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPersonalSaludParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_V_EpisodioAtenciones(Nullable<int> persona, string nombreCompleto, string unidadReplicacion, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<int> episodioAtencion, Nullable<int> tipoAtencion, Nullable<int> idOrdenAtencion, Nullable<int> tipoOrdenAtencion, Nullable<int> estado_EpisodioAten, Nullable<System.DateTime> fechaRegistroDesde, Nullable<System.DateTime> fechaRegistroHasta, Nullable<System.DateTime> fechaAtencion, Nullable<System.DateTime> fechaCierre, string usuarioModificacion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string version, string aCCION)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estado_EpisodioAtenParameter = estado_EpisodioAten.HasValue ?
                new ObjectParameter("Estado_EpisodioAten", estado_EpisodioAten) :
                new ObjectParameter("Estado_EpisodioAten", typeof(int));
    
            var fechaRegistroDesdeParameter = fechaRegistroDesde.HasValue ?
                new ObjectParameter("FechaRegistroDesde", fechaRegistroDesde) :
                new ObjectParameter("FechaRegistroDesde", typeof(System.DateTime));
    
            var fechaRegistroHastaParameter = fechaRegistroHasta.HasValue ?
                new ObjectParameter("FechaRegistroHasta", fechaRegistroHasta) :
                new ObjectParameter("FechaRegistroHasta", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_V_EpisodioAtenciones", personaParameter, nombreCompletoParameter, unidadReplicacionParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idPacienteParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, episodioAtencionParameter, tipoAtencionParameter, idOrdenAtencionParameter, tipoOrdenAtencionParameter, estado_EpisodioAtenParameter, fechaRegistroDesdeParameter, fechaRegistroHastaParameter, fechaAtencionParameter, fechaCierreParameter, usuarioModificacionParameter, iNICIOParameter, nUMEROFILASParameter, versionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_GE_Diagnostico> USP_GE_DiagnosticoListar(Nullable<int> idDiagnostico, string codigoDiagnostico, string codigoPadre, string nombre, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idDiagnosticoPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipoFolder, string nombreTabla, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_Diagnostico).Assembly);
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var codigoDiagnosticoParameter = codigoDiagnostico != null ?
                new ObjectParameter("CodigoDiagnostico", codigoDiagnostico) :
                new ObjectParameter("CodigoDiagnostico", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idDiagnosticoPadreParameter = idDiagnosticoPadre.HasValue ?
                new ObjectParameter("IdDiagnosticoPadre", idDiagnosticoPadre) :
                new ObjectParameter("IdDiagnosticoPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipoFolderParameter = tipoFolder.HasValue ?
                new ObjectParameter("tipoFolder", tipoFolder) :
                new ObjectParameter("tipoFolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_Diagnostico>("USP_GE_DiagnosticoListar", idDiagnosticoParameter, codigoDiagnosticoParameter, codigoPadreParameter, nombreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idDiagnosticoPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipoFolderParameter, nombreTablaParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_GE_Diagnostico> USP_GE_DiagnosticoListar(Nullable<int> idDiagnostico, string codigoDiagnostico, string codigoPadre, string nombre, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idDiagnosticoPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipoFolder, string nombreTabla, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_Diagnostico).Assembly);
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var codigoDiagnosticoParameter = codigoDiagnostico != null ?
                new ObjectParameter("CodigoDiagnostico", codigoDiagnostico) :
                new ObjectParameter("CodigoDiagnostico", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idDiagnosticoPadreParameter = idDiagnosticoPadre.HasValue ?
                new ObjectParameter("IdDiagnosticoPadre", idDiagnosticoPadre) :
                new ObjectParameter("IdDiagnosticoPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipoFolderParameter = tipoFolder.HasValue ?
                new ObjectParameter("tipoFolder", tipoFolder) :
                new ObjectParameter("tipoFolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_Diagnostico>("USP_GE_DiagnosticoListar", mergeOption, idDiagnosticoParameter, codigoDiagnosticoParameter, codigoPadreParameter, nombreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idDiagnosticoPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipoFolderParameter, nombreTablaParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_GE_Diagnostico(Nullable<int> idDiagnostico, string codigoDiagnostico, string codigoPadre, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idDiagnosticoPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipoFolder, string nombreTabla, string accion, string version)
        {
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var codigoDiagnosticoParameter = codigoDiagnostico != null ?
                new ObjectParameter("CodigoDiagnostico", codigoDiagnostico) :
                new ObjectParameter("CodigoDiagnostico", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idDiagnosticoPadreParameter = idDiagnosticoPadre.HasValue ?
                new ObjectParameter("IdDiagnosticoPadre", idDiagnosticoPadre) :
                new ObjectParameter("IdDiagnosticoPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipoFolderParameter = tipoFolder.HasValue ?
                new ObjectParameter("tipoFolder", tipoFolder) :
                new ObjectParameter("tipoFolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_GE_Diagnostico", idDiagnosticoParameter, codigoDiagnosticoParameter, codigoPadreParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idDiagnosticoPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipoFolderParameter, nombreTablaParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_WH_ItemMast_mantenimiento(string item, string itemTipo, string linea, string familia, string subFamilia, string subFamiliaInferior, string descripcionLocal, string descripcionIngles, string descripcionCompleta, string numeroDeParte, string codigoInterno, string unidadCodigo, string unidadCompra, string unidadEmbalaje, string color, string modelo, string marcaCodigo, string itemProcedencia, string clasificacionComercial, string partidaArancelaria, string codigoBarras, string codigoBarrasFabricante, string codigoBarras2, string monedaCodigo, Nullable<decimal> precioCosto, Nullable<decimal> precioUnitarioLocal, Nullable<decimal> precioUnitarioDolares, string itemPrecioFlag, string itemPrecioCodigo, string disponibleVentaFlag, string manejoxLoteFlag, string manejoxSerieFlag, string manejoxKitFlag, string manejoxKitSplitFlag, string manejoxUnidadFlag, string afectoImpuestoVentasFlag, string afectoImpuesto2Flag, string requisicionamientoAutomaticoFl, string controlCalidadFlag, string disponibleTransferenciaFlag, string disponibleConsumoFlag, string formularioFlag, Nullable<int> formularioNroJuegos, string iSOAplicableFlag, string iSONormaInterna, string cantidadDobleFlag, Nullable<decimal> cantidadDobleFactor, string unidadCodigoDoble, string unidadReplicacion, string imageFile, string mapaFile, string cuentaInventario, string cuentaGasto, string cuentaInversion, string cuentaServicioTecnico, string cuentaSalidaTerceros, string cuentaVentas, string cuentaTransito, string elementoGasto, string elementoInversion, string partidaPresupuestal, string flujodeCaja, Nullable<int> lotedeCompra, Nullable<decimal> lotedeDespacho, Nullable<decimal> lotedeCompraM3, Nullable<decimal> lotedeCompraKG, Nullable<decimal> periodicidadCompraMeses, string especificacionTecnica, string dimensiones, Nullable<decimal> factorEquivalenciaComercial, string aBCCodigo, Nullable<decimal> inventarioTolerancia, Nullable<decimal> stockMinimo, Nullable<decimal> stockMaximo, Nullable<int> lotedeVenta, string descripcionAdicional, string codigoPrecio, string caracteristicaValor01, string caracteristicaValor02, string caracteristicaValor03, string caracteristicaValor04, string caracteristicaValor05, string referenciaFiscal02, string referenciaFiscalIngreso02, string detraccionCodigo, string estado, string periodicidadCompra, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, string centrocosto, string conceptoGasto, string clasificadorMovimiento, string flujodeCajaIngreso, string mapaCodigo, string paisfabricacion, string aBCCodigoIN, string lectura, Nullable<int> idGrupoComponente, Nullable<int> idRegimenVenta, Nullable<int> indicadorReemplazo, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string cuentaVentaComercial, string cuentaDescuentoVentaComercial, Nullable<int> indicadorCuentaVenta, string tipoRepuesto, Nullable<int> cantidadkit, Nullable<int> periodoInicioReposicion, Nullable<int> periodosReposicion, Nullable<int> indicadorClasificacion, Nullable<int> peridoInicioReposicion, Nullable<int> idClasificacion, Nullable<decimal> cantidadReposicion, string grupoReposicion, Nullable<int> indicadorReposicion, Nullable<int> indicadorPrecioManual, Nullable<int> indicadorConsumoFraccionado, string nombreLaboratorio, string estadoAnterior, string cuentaCompras, Nullable<decimal> precioCostoAnt, string ultimaOC, string previaOC, string tipomedicamento, string codigoDigemid, string eAN13, string medicamentoCodigo, string medicamentoCodigoPadre, string nombreTabla, Nullable<int> tipofolder, string aCCION)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var itemTipoParameter = itemTipo != null ?
                new ObjectParameter("ItemTipo", itemTipo) :
                new ObjectParameter("ItemTipo", typeof(string));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var subFamiliaInferiorParameter = subFamiliaInferior != null ?
                new ObjectParameter("SubFamiliaInferior", subFamiliaInferior) :
                new ObjectParameter("SubFamiliaInferior", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var descripcionCompletaParameter = descripcionCompleta != null ?
                new ObjectParameter("DescripcionCompleta", descripcionCompleta) :
                new ObjectParameter("DescripcionCompleta", typeof(string));
    
            var numeroDeParteParameter = numeroDeParte != null ?
                new ObjectParameter("NumeroDeParte", numeroDeParte) :
                new ObjectParameter("NumeroDeParte", typeof(string));
    
            var codigoInternoParameter = codigoInterno != null ?
                new ObjectParameter("CodigoInterno", codigoInterno) :
                new ObjectParameter("CodigoInterno", typeof(string));
    
            var unidadCodigoParameter = unidadCodigo != null ?
                new ObjectParameter("UnidadCodigo", unidadCodigo) :
                new ObjectParameter("UnidadCodigo", typeof(string));
    
            var unidadCompraParameter = unidadCompra != null ?
                new ObjectParameter("UnidadCompra", unidadCompra) :
                new ObjectParameter("UnidadCompra", typeof(string));
    
            var unidadEmbalajeParameter = unidadEmbalaje != null ?
                new ObjectParameter("UnidadEmbalaje", unidadEmbalaje) :
                new ObjectParameter("UnidadEmbalaje", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var marcaCodigoParameter = marcaCodigo != null ?
                new ObjectParameter("MarcaCodigo", marcaCodigo) :
                new ObjectParameter("MarcaCodigo", typeof(string));
    
            var itemProcedenciaParameter = itemProcedencia != null ?
                new ObjectParameter("ItemProcedencia", itemProcedencia) :
                new ObjectParameter("ItemProcedencia", typeof(string));
    
            var clasificacionComercialParameter = clasificacionComercial != null ?
                new ObjectParameter("ClasificacionComercial", clasificacionComercial) :
                new ObjectParameter("ClasificacionComercial", typeof(string));
    
            var partidaArancelariaParameter = partidaArancelaria != null ?
                new ObjectParameter("PartidaArancelaria", partidaArancelaria) :
                new ObjectParameter("PartidaArancelaria", typeof(string));
    
            var codigoBarrasParameter = codigoBarras != null ?
                new ObjectParameter("CodigoBarras", codigoBarras) :
                new ObjectParameter("CodigoBarras", typeof(string));
    
            var codigoBarrasFabricanteParameter = codigoBarrasFabricante != null ?
                new ObjectParameter("CodigoBarrasFabricante", codigoBarrasFabricante) :
                new ObjectParameter("CodigoBarrasFabricante", typeof(string));
    
            var codigoBarras2Parameter = codigoBarras2 != null ?
                new ObjectParameter("CodigoBarras2", codigoBarras2) :
                new ObjectParameter("CodigoBarras2", typeof(string));
    
            var monedaCodigoParameter = monedaCodigo != null ?
                new ObjectParameter("MonedaCodigo", monedaCodigo) :
                new ObjectParameter("MonedaCodigo", typeof(string));
    
            var precioCostoParameter = precioCosto.HasValue ?
                new ObjectParameter("PrecioCosto", precioCosto) :
                new ObjectParameter("PrecioCosto", typeof(decimal));
    
            var precioUnitarioLocalParameter = precioUnitarioLocal.HasValue ?
                new ObjectParameter("PrecioUnitarioLocal", precioUnitarioLocal) :
                new ObjectParameter("PrecioUnitarioLocal", typeof(decimal));
    
            var precioUnitarioDolaresParameter = precioUnitarioDolares.HasValue ?
                new ObjectParameter("PrecioUnitarioDolares", precioUnitarioDolares) :
                new ObjectParameter("PrecioUnitarioDolares", typeof(decimal));
    
            var itemPrecioFlagParameter = itemPrecioFlag != null ?
                new ObjectParameter("ItemPrecioFlag", itemPrecioFlag) :
                new ObjectParameter("ItemPrecioFlag", typeof(string));
    
            var itemPrecioCodigoParameter = itemPrecioCodigo != null ?
                new ObjectParameter("ItemPrecioCodigo", itemPrecioCodigo) :
                new ObjectParameter("ItemPrecioCodigo", typeof(string));
    
            var disponibleVentaFlagParameter = disponibleVentaFlag != null ?
                new ObjectParameter("DisponibleVentaFlag", disponibleVentaFlag) :
                new ObjectParameter("DisponibleVentaFlag", typeof(string));
    
            var manejoxLoteFlagParameter = manejoxLoteFlag != null ?
                new ObjectParameter("ManejoxLoteFlag", manejoxLoteFlag) :
                new ObjectParameter("ManejoxLoteFlag", typeof(string));
    
            var manejoxSerieFlagParameter = manejoxSerieFlag != null ?
                new ObjectParameter("ManejoxSerieFlag", manejoxSerieFlag) :
                new ObjectParameter("ManejoxSerieFlag", typeof(string));
    
            var manejoxKitFlagParameter = manejoxKitFlag != null ?
                new ObjectParameter("ManejoxKitFlag", manejoxKitFlag) :
                new ObjectParameter("ManejoxKitFlag", typeof(string));
    
            var manejoxKitSplitFlagParameter = manejoxKitSplitFlag != null ?
                new ObjectParameter("ManejoxKitSplitFlag", manejoxKitSplitFlag) :
                new ObjectParameter("ManejoxKitSplitFlag", typeof(string));
    
            var manejoxUnidadFlagParameter = manejoxUnidadFlag != null ?
                new ObjectParameter("ManejoxUnidadFlag", manejoxUnidadFlag) :
                new ObjectParameter("ManejoxUnidadFlag", typeof(string));
    
            var afectoImpuestoVentasFlagParameter = afectoImpuestoVentasFlag != null ?
                new ObjectParameter("AfectoImpuestoVentasFlag", afectoImpuestoVentasFlag) :
                new ObjectParameter("AfectoImpuestoVentasFlag", typeof(string));
    
            var afectoImpuesto2FlagParameter = afectoImpuesto2Flag != null ?
                new ObjectParameter("AfectoImpuesto2Flag", afectoImpuesto2Flag) :
                new ObjectParameter("AfectoImpuesto2Flag", typeof(string));
    
            var requisicionamientoAutomaticoFlParameter = requisicionamientoAutomaticoFl != null ?
                new ObjectParameter("RequisicionamientoAutomaticoFl", requisicionamientoAutomaticoFl) :
                new ObjectParameter("RequisicionamientoAutomaticoFl", typeof(string));
    
            var controlCalidadFlagParameter = controlCalidadFlag != null ?
                new ObjectParameter("ControlCalidadFlag", controlCalidadFlag) :
                new ObjectParameter("ControlCalidadFlag", typeof(string));
    
            var disponibleTransferenciaFlagParameter = disponibleTransferenciaFlag != null ?
                new ObjectParameter("DisponibleTransferenciaFlag", disponibleTransferenciaFlag) :
                new ObjectParameter("DisponibleTransferenciaFlag", typeof(string));
    
            var disponibleConsumoFlagParameter = disponibleConsumoFlag != null ?
                new ObjectParameter("DisponibleConsumoFlag", disponibleConsumoFlag) :
                new ObjectParameter("DisponibleConsumoFlag", typeof(string));
    
            var formularioFlagParameter = formularioFlag != null ?
                new ObjectParameter("FormularioFlag", formularioFlag) :
                new ObjectParameter("FormularioFlag", typeof(string));
    
            var formularioNroJuegosParameter = formularioNroJuegos.HasValue ?
                new ObjectParameter("FormularioNroJuegos", formularioNroJuegos) :
                new ObjectParameter("FormularioNroJuegos", typeof(int));
    
            var iSOAplicableFlagParameter = iSOAplicableFlag != null ?
                new ObjectParameter("ISOAplicableFlag", iSOAplicableFlag) :
                new ObjectParameter("ISOAplicableFlag", typeof(string));
    
            var iSONormaInternaParameter = iSONormaInterna != null ?
                new ObjectParameter("ISONormaInterna", iSONormaInterna) :
                new ObjectParameter("ISONormaInterna", typeof(string));
    
            var cantidadDobleFlagParameter = cantidadDobleFlag != null ?
                new ObjectParameter("CantidadDobleFlag", cantidadDobleFlag) :
                new ObjectParameter("CantidadDobleFlag", typeof(string));
    
            var cantidadDobleFactorParameter = cantidadDobleFactor.HasValue ?
                new ObjectParameter("CantidadDobleFactor", cantidadDobleFactor) :
                new ObjectParameter("CantidadDobleFactor", typeof(decimal));
    
            var unidadCodigoDobleParameter = unidadCodigoDoble != null ?
                new ObjectParameter("UnidadCodigoDoble", unidadCodigoDoble) :
                new ObjectParameter("UnidadCodigoDoble", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var imageFileParameter = imageFile != null ?
                new ObjectParameter("ImageFile", imageFile) :
                new ObjectParameter("ImageFile", typeof(string));
    
            var mapaFileParameter = mapaFile != null ?
                new ObjectParameter("MapaFile", mapaFile) :
                new ObjectParameter("MapaFile", typeof(string));
    
            var cuentaInventarioParameter = cuentaInventario != null ?
                new ObjectParameter("CuentaInventario", cuentaInventario) :
                new ObjectParameter("CuentaInventario", typeof(string));
    
            var cuentaGastoParameter = cuentaGasto != null ?
                new ObjectParameter("CuentaGasto", cuentaGasto) :
                new ObjectParameter("CuentaGasto", typeof(string));
    
            var cuentaInversionParameter = cuentaInversion != null ?
                new ObjectParameter("CuentaInversion", cuentaInversion) :
                new ObjectParameter("CuentaInversion", typeof(string));
    
            var cuentaServicioTecnicoParameter = cuentaServicioTecnico != null ?
                new ObjectParameter("CuentaServicioTecnico", cuentaServicioTecnico) :
                new ObjectParameter("CuentaServicioTecnico", typeof(string));
    
            var cuentaSalidaTercerosParameter = cuentaSalidaTerceros != null ?
                new ObjectParameter("CuentaSalidaTerceros", cuentaSalidaTerceros) :
                new ObjectParameter("CuentaSalidaTerceros", typeof(string));
    
            var cuentaVentasParameter = cuentaVentas != null ?
                new ObjectParameter("CuentaVentas", cuentaVentas) :
                new ObjectParameter("CuentaVentas", typeof(string));
    
            var cuentaTransitoParameter = cuentaTransito != null ?
                new ObjectParameter("CuentaTransito", cuentaTransito) :
                new ObjectParameter("CuentaTransito", typeof(string));
    
            var elementoGastoParameter = elementoGasto != null ?
                new ObjectParameter("ElementoGasto", elementoGasto) :
                new ObjectParameter("ElementoGasto", typeof(string));
    
            var elementoInversionParameter = elementoInversion != null ?
                new ObjectParameter("ElementoInversion", elementoInversion) :
                new ObjectParameter("ElementoInversion", typeof(string));
    
            var partidaPresupuestalParameter = partidaPresupuestal != null ?
                new ObjectParameter("PartidaPresupuestal", partidaPresupuestal) :
                new ObjectParameter("PartidaPresupuestal", typeof(string));
    
            var flujodeCajaParameter = flujodeCaja != null ?
                new ObjectParameter("FlujodeCaja", flujodeCaja) :
                new ObjectParameter("FlujodeCaja", typeof(string));
    
            var lotedeCompraParameter = lotedeCompra.HasValue ?
                new ObjectParameter("LotedeCompra", lotedeCompra) :
                new ObjectParameter("LotedeCompra", typeof(int));
    
            var lotedeDespachoParameter = lotedeDespacho.HasValue ?
                new ObjectParameter("LotedeDespacho", lotedeDespacho) :
                new ObjectParameter("LotedeDespacho", typeof(decimal));
    
            var lotedeCompraM3Parameter = lotedeCompraM3.HasValue ?
                new ObjectParameter("LotedeCompraM3", lotedeCompraM3) :
                new ObjectParameter("LotedeCompraM3", typeof(decimal));
    
            var lotedeCompraKGParameter = lotedeCompraKG.HasValue ?
                new ObjectParameter("LotedeCompraKG", lotedeCompraKG) :
                new ObjectParameter("LotedeCompraKG", typeof(decimal));
    
            var periodicidadCompraMesesParameter = periodicidadCompraMeses.HasValue ?
                new ObjectParameter("PeriodicidadCompraMeses", periodicidadCompraMeses) :
                new ObjectParameter("PeriodicidadCompraMeses", typeof(decimal));
    
            var especificacionTecnicaParameter = especificacionTecnica != null ?
                new ObjectParameter("EspecificacionTecnica", especificacionTecnica) :
                new ObjectParameter("EspecificacionTecnica", typeof(string));
    
            var dimensionesParameter = dimensiones != null ?
                new ObjectParameter("Dimensiones", dimensiones) :
                new ObjectParameter("Dimensiones", typeof(string));
    
            var factorEquivalenciaComercialParameter = factorEquivalenciaComercial.HasValue ?
                new ObjectParameter("FactorEquivalenciaComercial", factorEquivalenciaComercial) :
                new ObjectParameter("FactorEquivalenciaComercial", typeof(decimal));
    
            var aBCCodigoParameter = aBCCodigo != null ?
                new ObjectParameter("ABCCodigo", aBCCodigo) :
                new ObjectParameter("ABCCodigo", typeof(string));
    
            var inventarioToleranciaParameter = inventarioTolerancia.HasValue ?
                new ObjectParameter("InventarioTolerancia", inventarioTolerancia) :
                new ObjectParameter("InventarioTolerancia", typeof(decimal));
    
            var stockMinimoParameter = stockMinimo.HasValue ?
                new ObjectParameter("StockMinimo", stockMinimo) :
                new ObjectParameter("StockMinimo", typeof(decimal));
    
            var stockMaximoParameter = stockMaximo.HasValue ?
                new ObjectParameter("StockMaximo", stockMaximo) :
                new ObjectParameter("StockMaximo", typeof(decimal));
    
            var lotedeVentaParameter = lotedeVenta.HasValue ?
                new ObjectParameter("LotedeVenta", lotedeVenta) :
                new ObjectParameter("LotedeVenta", typeof(int));
    
            var descripcionAdicionalParameter = descripcionAdicional != null ?
                new ObjectParameter("DescripcionAdicional", descripcionAdicional) :
                new ObjectParameter("DescripcionAdicional", typeof(string));
    
            var codigoPrecioParameter = codigoPrecio != null ?
                new ObjectParameter("CodigoPrecio", codigoPrecio) :
                new ObjectParameter("CodigoPrecio", typeof(string));
    
            var caracteristicaValor01Parameter = caracteristicaValor01 != null ?
                new ObjectParameter("CaracteristicaValor01", caracteristicaValor01) :
                new ObjectParameter("CaracteristicaValor01", typeof(string));
    
            var caracteristicaValor02Parameter = caracteristicaValor02 != null ?
                new ObjectParameter("CaracteristicaValor02", caracteristicaValor02) :
                new ObjectParameter("CaracteristicaValor02", typeof(string));
    
            var caracteristicaValor03Parameter = caracteristicaValor03 != null ?
                new ObjectParameter("CaracteristicaValor03", caracteristicaValor03) :
                new ObjectParameter("CaracteristicaValor03", typeof(string));
    
            var caracteristicaValor04Parameter = caracteristicaValor04 != null ?
                new ObjectParameter("CaracteristicaValor04", caracteristicaValor04) :
                new ObjectParameter("CaracteristicaValor04", typeof(string));
    
            var caracteristicaValor05Parameter = caracteristicaValor05 != null ?
                new ObjectParameter("CaracteristicaValor05", caracteristicaValor05) :
                new ObjectParameter("CaracteristicaValor05", typeof(string));
    
            var referenciaFiscal02Parameter = referenciaFiscal02 != null ?
                new ObjectParameter("ReferenciaFiscal02", referenciaFiscal02) :
                new ObjectParameter("ReferenciaFiscal02", typeof(string));
    
            var referenciaFiscalIngreso02Parameter = referenciaFiscalIngreso02 != null ?
                new ObjectParameter("ReferenciaFiscalIngreso02", referenciaFiscalIngreso02) :
                new ObjectParameter("ReferenciaFiscalIngreso02", typeof(string));
    
            var detraccionCodigoParameter = detraccionCodigo != null ?
                new ObjectParameter("DetraccionCodigo", detraccionCodigo) :
                new ObjectParameter("DetraccionCodigo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var periodicidadCompraParameter = periodicidadCompra != null ?
                new ObjectParameter("PeriodicidadCompra", periodicidadCompra) :
                new ObjectParameter("PeriodicidadCompra", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var centrocostoParameter = centrocosto != null ?
                new ObjectParameter("Centrocosto", centrocosto) :
                new ObjectParameter("Centrocosto", typeof(string));
    
            var conceptoGastoParameter = conceptoGasto != null ?
                new ObjectParameter("ConceptoGasto", conceptoGasto) :
                new ObjectParameter("ConceptoGasto", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var flujodeCajaIngresoParameter = flujodeCajaIngreso != null ?
                new ObjectParameter("FlujodeCajaIngreso", flujodeCajaIngreso) :
                new ObjectParameter("FlujodeCajaIngreso", typeof(string));
    
            var mapaCodigoParameter = mapaCodigo != null ?
                new ObjectParameter("MapaCodigo", mapaCodigo) :
                new ObjectParameter("MapaCodigo", typeof(string));
    
            var paisfabricacionParameter = paisfabricacion != null ?
                new ObjectParameter("paisfabricacion", paisfabricacion) :
                new ObjectParameter("paisfabricacion", typeof(string));
    
            var aBCCodigoINParameter = aBCCodigoIN != null ?
                new ObjectParameter("ABCCodigoIN", aBCCodigoIN) :
                new ObjectParameter("ABCCodigoIN", typeof(string));
    
            var lecturaParameter = lectura != null ?
                new ObjectParameter("Lectura", lectura) :
                new ObjectParameter("Lectura", typeof(string));
    
            var idGrupoComponenteParameter = idGrupoComponente.HasValue ?
                new ObjectParameter("IdGrupoComponente", idGrupoComponente) :
                new ObjectParameter("IdGrupoComponente", typeof(int));
    
            var idRegimenVentaParameter = idRegimenVenta.HasValue ?
                new ObjectParameter("IdRegimenVenta", idRegimenVenta) :
                new ObjectParameter("IdRegimenVenta", typeof(int));
    
            var indicadorReemplazoParameter = indicadorReemplazo.HasValue ?
                new ObjectParameter("IndicadorReemplazo", indicadorReemplazo) :
                new ObjectParameter("IndicadorReemplazo", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var cuentaVentaComercialParameter = cuentaVentaComercial != null ?
                new ObjectParameter("CuentaVentaComercial", cuentaVentaComercial) :
                new ObjectParameter("CuentaVentaComercial", typeof(string));
    
            var cuentaDescuentoVentaComercialParameter = cuentaDescuentoVentaComercial != null ?
                new ObjectParameter("CuentaDescuentoVentaComercial", cuentaDescuentoVentaComercial) :
                new ObjectParameter("CuentaDescuentoVentaComercial", typeof(string));
    
            var indicadorCuentaVentaParameter = indicadorCuentaVenta.HasValue ?
                new ObjectParameter("IndicadorCuentaVenta", indicadorCuentaVenta) :
                new ObjectParameter("IndicadorCuentaVenta", typeof(int));
    
            var tipoRepuestoParameter = tipoRepuesto != null ?
                new ObjectParameter("TipoRepuesto", tipoRepuesto) :
                new ObjectParameter("TipoRepuesto", typeof(string));
    
            var cantidadkitParameter = cantidadkit.HasValue ?
                new ObjectParameter("Cantidadkit", cantidadkit) :
                new ObjectParameter("Cantidadkit", typeof(int));
    
            var periodoInicioReposicionParameter = periodoInicioReposicion.HasValue ?
                new ObjectParameter("PeriodoInicioReposicion", periodoInicioReposicion) :
                new ObjectParameter("PeriodoInicioReposicion", typeof(int));
    
            var periodosReposicionParameter = periodosReposicion.HasValue ?
                new ObjectParameter("PeriodosReposicion", periodosReposicion) :
                new ObjectParameter("PeriodosReposicion", typeof(int));
    
            var indicadorClasificacionParameter = indicadorClasificacion.HasValue ?
                new ObjectParameter("IndicadorClasificacion", indicadorClasificacion) :
                new ObjectParameter("IndicadorClasificacion", typeof(int));
    
            var peridoInicioReposicionParameter = peridoInicioReposicion.HasValue ?
                new ObjectParameter("PeridoInicioReposicion", peridoInicioReposicion) :
                new ObjectParameter("PeridoInicioReposicion", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var cantidadReposicionParameter = cantidadReposicion.HasValue ?
                new ObjectParameter("cantidadReposicion", cantidadReposicion) :
                new ObjectParameter("cantidadReposicion", typeof(decimal));
    
            var grupoReposicionParameter = grupoReposicion != null ?
                new ObjectParameter("grupoReposicion", grupoReposicion) :
                new ObjectParameter("grupoReposicion", typeof(string));
    
            var indicadorReposicionParameter = indicadorReposicion.HasValue ?
                new ObjectParameter("IndicadorReposicion", indicadorReposicion) :
                new ObjectParameter("IndicadorReposicion", typeof(int));
    
            var indicadorPrecioManualParameter = indicadorPrecioManual.HasValue ?
                new ObjectParameter("IndicadorPrecioManual", indicadorPrecioManual) :
                new ObjectParameter("IndicadorPrecioManual", typeof(int));
    
            var indicadorConsumoFraccionadoParameter = indicadorConsumoFraccionado.HasValue ?
                new ObjectParameter("IndicadorConsumoFraccionado", indicadorConsumoFraccionado) :
                new ObjectParameter("IndicadorConsumoFraccionado", typeof(int));
    
            var nombreLaboratorioParameter = nombreLaboratorio != null ?
                new ObjectParameter("nombreLaboratorio", nombreLaboratorio) :
                new ObjectParameter("nombreLaboratorio", typeof(string));
    
            var estadoAnteriorParameter = estadoAnterior != null ?
                new ObjectParameter("estadoAnterior", estadoAnterior) :
                new ObjectParameter("estadoAnterior", typeof(string));
    
            var cuentaComprasParameter = cuentaCompras != null ?
                new ObjectParameter("CuentaCompras", cuentaCompras) :
                new ObjectParameter("CuentaCompras", typeof(string));
    
            var precioCostoAntParameter = precioCostoAnt.HasValue ?
                new ObjectParameter("PrecioCostoAnt", precioCostoAnt) :
                new ObjectParameter("PrecioCostoAnt", typeof(decimal));
    
            var ultimaOCParameter = ultimaOC != null ?
                new ObjectParameter("UltimaOC", ultimaOC) :
                new ObjectParameter("UltimaOC", typeof(string));
    
            var previaOCParameter = previaOC != null ?
                new ObjectParameter("PreviaOC", previaOC) :
                new ObjectParameter("PreviaOC", typeof(string));
    
            var tipomedicamentoParameter = tipomedicamento != null ?
                new ObjectParameter("tipomedicamento", tipomedicamento) :
                new ObjectParameter("tipomedicamento", typeof(string));
    
            var codigoDigemidParameter = codigoDigemid != null ?
                new ObjectParameter("CodigoDigemid", codigoDigemid) :
                new ObjectParameter("CodigoDigemid", typeof(string));
    
            var eAN13Parameter = eAN13 != null ?
                new ObjectParameter("EAN13", eAN13) :
                new ObjectParameter("EAN13", typeof(string));
    
            var medicamentoCodigoParameter = medicamentoCodigo != null ?
                new ObjectParameter("MedicamentoCodigo", medicamentoCodigo) :
                new ObjectParameter("MedicamentoCodigo", typeof(string));
    
            var medicamentoCodigoPadreParameter = medicamentoCodigoPadre != null ?
                new ObjectParameter("MedicamentoCodigoPadre", medicamentoCodigoPadre) :
                new ObjectParameter("MedicamentoCodigoPadre", typeof(string));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var tipofolderParameter = tipofolder.HasValue ?
                new ObjectParameter("tipofolder", tipofolder) :
                new ObjectParameter("tipofolder", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_WH_ItemMast_mantenimiento", itemParameter, itemTipoParameter, lineaParameter, familiaParameter, subFamiliaParameter, subFamiliaInferiorParameter, descripcionLocalParameter, descripcionInglesParameter, descripcionCompletaParameter, numeroDeParteParameter, codigoInternoParameter, unidadCodigoParameter, unidadCompraParameter, unidadEmbalajeParameter, colorParameter, modeloParameter, marcaCodigoParameter, itemProcedenciaParameter, clasificacionComercialParameter, partidaArancelariaParameter, codigoBarrasParameter, codigoBarrasFabricanteParameter, codigoBarras2Parameter, monedaCodigoParameter, precioCostoParameter, precioUnitarioLocalParameter, precioUnitarioDolaresParameter, itemPrecioFlagParameter, itemPrecioCodigoParameter, disponibleVentaFlagParameter, manejoxLoteFlagParameter, manejoxSerieFlagParameter, manejoxKitFlagParameter, manejoxKitSplitFlagParameter, manejoxUnidadFlagParameter, afectoImpuestoVentasFlagParameter, afectoImpuesto2FlagParameter, requisicionamientoAutomaticoFlParameter, controlCalidadFlagParameter, disponibleTransferenciaFlagParameter, disponibleConsumoFlagParameter, formularioFlagParameter, formularioNroJuegosParameter, iSOAplicableFlagParameter, iSONormaInternaParameter, cantidadDobleFlagParameter, cantidadDobleFactorParameter, unidadCodigoDobleParameter, unidadReplicacionParameter, imageFileParameter, mapaFileParameter, cuentaInventarioParameter, cuentaGastoParameter, cuentaInversionParameter, cuentaServicioTecnicoParameter, cuentaSalidaTercerosParameter, cuentaVentasParameter, cuentaTransitoParameter, elementoGastoParameter, elementoInversionParameter, partidaPresupuestalParameter, flujodeCajaParameter, lotedeCompraParameter, lotedeDespachoParameter, lotedeCompraM3Parameter, lotedeCompraKGParameter, periodicidadCompraMesesParameter, especificacionTecnicaParameter, dimensionesParameter, factorEquivalenciaComercialParameter, aBCCodigoParameter, inventarioToleranciaParameter, stockMinimoParameter, stockMaximoParameter, lotedeVentaParameter, descripcionAdicionalParameter, codigoPrecioParameter, caracteristicaValor01Parameter, caracteristicaValor02Parameter, caracteristicaValor03Parameter, caracteristicaValor04Parameter, caracteristicaValor05Parameter, referenciaFiscal02Parameter, referenciaFiscalIngreso02Parameter, detraccionCodigoParameter, estadoParameter, periodicidadCompraParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, centrocostoParameter, conceptoGastoParameter, clasificadorMovimientoParameter, flujodeCajaIngresoParameter, mapaCodigoParameter, paisfabricacionParameter, aBCCodigoINParameter, lecturaParameter, idGrupoComponenteParameter, idRegimenVentaParameter, indicadorReemplazoParameter, usuarioCreacionParameter, fechaCreacionParameter, cuentaVentaComercialParameter, cuentaDescuentoVentaComercialParameter, indicadorCuentaVentaParameter, tipoRepuestoParameter, cantidadkitParameter, periodoInicioReposicionParameter, periodosReposicionParameter, indicadorClasificacionParameter, peridoInicioReposicionParameter, idClasificacionParameter, cantidadReposicionParameter, grupoReposicionParameter, indicadorReposicionParameter, indicadorPrecioManualParameter, indicadorConsumoFraccionadoParameter, nombreLaboratorioParameter, estadoAnteriorParameter, cuentaComprasParameter, precioCostoAntParameter, ultimaOCParameter, previaOCParameter, tipomedicamentoParameter, codigoDigemidParameter, eAN13Parameter, medicamentoCodigoParameter, medicamentoCodigoPadreParameter, nombreTablaParameter, tipofolderParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<WH_ItemMast> USP_WH_ItemMastListar(string item, string itemTipo, string linea, string familia, string subFamilia, string subFamiliaInferior, string descripcionLocal, string descripcionIngles, string descripcionCompleta, string numeroDeParte, string codigoInterno, string unidadCodigo, string unidadCompra, string unidadEmbalaje, string color, string modelo, string marcaCodigo, string itemProcedencia, string clasificacionComercial, string partidaArancelaria, string codigoBarras, string codigoBarrasFabricante, string codigoBarras2, string monedaCodigo, Nullable<decimal> precioCosto, Nullable<decimal> precioUnitarioLocal, Nullable<decimal> precioUnitarioDolares, string itemPrecioFlag, string itemPrecioCodigo, string disponibleVentaFlag, string manejoxLoteFlag, string manejoxSerieFlag, string manejoxKitFlag, string manejoxKitSplitFlag, string manejoxUnidadFlag, string afectoImpuestoVentasFlag, string afectoImpuesto2Flag, string requisicionamientoAutomaticoFl, string controlCalidadFlag, string disponibleTransferenciaFlag, string disponibleConsumoFlag, string formularioFlag, Nullable<int> formularioNroJuegos, string iSOAplicableFlag, string iSONormaInterna, string cantidadDobleFlag, Nullable<decimal> cantidadDobleFactor, string unidadCodigoDoble, string unidadReplicacion, string imageFile, string mapaFile, string cuentaInventario, string cuentaGasto, string cuentaInversion, string cuentaServicioTecnico, string cuentaSalidaTerceros, string cuentaVentas, string cuentaTransito, string elementoGasto, string elementoInversion, string partidaPresupuestal, string flujodeCaja, Nullable<int> lotedeCompra, Nullable<decimal> lotedeDespacho, Nullable<decimal> lotedeCompraM3, Nullable<decimal> lotedeCompraKG, Nullable<decimal> periodicidadCompraMeses, string especificacionTecnica, string dimensiones, Nullable<decimal> factorEquivalenciaComercial, string aBCCodigo, Nullable<decimal> inventarioTolerancia, Nullable<decimal> stockMinimo, Nullable<decimal> stockMaximo, Nullable<int> lotedeVenta, string descripcionAdicional, string codigoPrecio, string caracteristicaValor01, string caracteristicaValor02, string caracteristicaValor03, string caracteristicaValor04, string caracteristicaValor05, string referenciaFiscal02, string referenciaFiscalIngreso02, string detraccionCodigo, string estado, string periodicidadCompra, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, string centrocosto, string conceptoGasto, string clasificadorMovimiento, string flujodeCajaIngreso, string mapaCodigo, string paisfabricacion, string aBCCodigoIN, string lectura, Nullable<int> idGrupoComponente, Nullable<int> idRegimenVenta, Nullable<int> indicadorReemplazo, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string cuentaVentaComercial, string cuentaDescuentoVentaComercial, Nullable<int> indicadorCuentaVenta, string tipoRepuesto, Nullable<int> cantidadkit, Nullable<int> periodoInicioReposicion, Nullable<int> periodosReposicion, Nullable<int> indicadorClasificacion, Nullable<int> peridoInicioReposicion, Nullable<int> idClasificacion, Nullable<decimal> cantidadReposicion, string grupoReposicion, Nullable<int> indicadorReposicion, Nullable<int> indicadorPrecioManual, Nullable<int> indicadorConsumoFraccionado, string nombreLaboratorio, string estadoAnterior, string cuentaCompras, Nullable<decimal> precioCostoAnt, string ultimaOC, string previaOC, string tipomedicamento, string codigoDigemid, string eAN13, string medicamentoCodigo, string medicamentoCodigoPadre, string nombreTabla, Nullable<int> tipofolder, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(WH_ItemMast).Assembly);
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var itemTipoParameter = itemTipo != null ?
                new ObjectParameter("ItemTipo", itemTipo) :
                new ObjectParameter("ItemTipo", typeof(string));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var subFamiliaInferiorParameter = subFamiliaInferior != null ?
                new ObjectParameter("SubFamiliaInferior", subFamiliaInferior) :
                new ObjectParameter("SubFamiliaInferior", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var descripcionCompletaParameter = descripcionCompleta != null ?
                new ObjectParameter("DescripcionCompleta", descripcionCompleta) :
                new ObjectParameter("DescripcionCompleta", typeof(string));
    
            var numeroDeParteParameter = numeroDeParte != null ?
                new ObjectParameter("NumeroDeParte", numeroDeParte) :
                new ObjectParameter("NumeroDeParte", typeof(string));
    
            var codigoInternoParameter = codigoInterno != null ?
                new ObjectParameter("CodigoInterno", codigoInterno) :
                new ObjectParameter("CodigoInterno", typeof(string));
    
            var unidadCodigoParameter = unidadCodigo != null ?
                new ObjectParameter("UnidadCodigo", unidadCodigo) :
                new ObjectParameter("UnidadCodigo", typeof(string));
    
            var unidadCompraParameter = unidadCompra != null ?
                new ObjectParameter("UnidadCompra", unidadCompra) :
                new ObjectParameter("UnidadCompra", typeof(string));
    
            var unidadEmbalajeParameter = unidadEmbalaje != null ?
                new ObjectParameter("UnidadEmbalaje", unidadEmbalaje) :
                new ObjectParameter("UnidadEmbalaje", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var marcaCodigoParameter = marcaCodigo != null ?
                new ObjectParameter("MarcaCodigo", marcaCodigo) :
                new ObjectParameter("MarcaCodigo", typeof(string));
    
            var itemProcedenciaParameter = itemProcedencia != null ?
                new ObjectParameter("ItemProcedencia", itemProcedencia) :
                new ObjectParameter("ItemProcedencia", typeof(string));
    
            var clasificacionComercialParameter = clasificacionComercial != null ?
                new ObjectParameter("ClasificacionComercial", clasificacionComercial) :
                new ObjectParameter("ClasificacionComercial", typeof(string));
    
            var partidaArancelariaParameter = partidaArancelaria != null ?
                new ObjectParameter("PartidaArancelaria", partidaArancelaria) :
                new ObjectParameter("PartidaArancelaria", typeof(string));
    
            var codigoBarrasParameter = codigoBarras != null ?
                new ObjectParameter("CodigoBarras", codigoBarras) :
                new ObjectParameter("CodigoBarras", typeof(string));
    
            var codigoBarrasFabricanteParameter = codigoBarrasFabricante != null ?
                new ObjectParameter("CodigoBarrasFabricante", codigoBarrasFabricante) :
                new ObjectParameter("CodigoBarrasFabricante", typeof(string));
    
            var codigoBarras2Parameter = codigoBarras2 != null ?
                new ObjectParameter("CodigoBarras2", codigoBarras2) :
                new ObjectParameter("CodigoBarras2", typeof(string));
    
            var monedaCodigoParameter = monedaCodigo != null ?
                new ObjectParameter("MonedaCodigo", monedaCodigo) :
                new ObjectParameter("MonedaCodigo", typeof(string));
    
            var precioCostoParameter = precioCosto.HasValue ?
                new ObjectParameter("PrecioCosto", precioCosto) :
                new ObjectParameter("PrecioCosto", typeof(decimal));
    
            var precioUnitarioLocalParameter = precioUnitarioLocal.HasValue ?
                new ObjectParameter("PrecioUnitarioLocal", precioUnitarioLocal) :
                new ObjectParameter("PrecioUnitarioLocal", typeof(decimal));
    
            var precioUnitarioDolaresParameter = precioUnitarioDolares.HasValue ?
                new ObjectParameter("PrecioUnitarioDolares", precioUnitarioDolares) :
                new ObjectParameter("PrecioUnitarioDolares", typeof(decimal));
    
            var itemPrecioFlagParameter = itemPrecioFlag != null ?
                new ObjectParameter("ItemPrecioFlag", itemPrecioFlag) :
                new ObjectParameter("ItemPrecioFlag", typeof(string));
    
            var itemPrecioCodigoParameter = itemPrecioCodigo != null ?
                new ObjectParameter("ItemPrecioCodigo", itemPrecioCodigo) :
                new ObjectParameter("ItemPrecioCodigo", typeof(string));
    
            var disponibleVentaFlagParameter = disponibleVentaFlag != null ?
                new ObjectParameter("DisponibleVentaFlag", disponibleVentaFlag) :
                new ObjectParameter("DisponibleVentaFlag", typeof(string));
    
            var manejoxLoteFlagParameter = manejoxLoteFlag != null ?
                new ObjectParameter("ManejoxLoteFlag", manejoxLoteFlag) :
                new ObjectParameter("ManejoxLoteFlag", typeof(string));
    
            var manejoxSerieFlagParameter = manejoxSerieFlag != null ?
                new ObjectParameter("ManejoxSerieFlag", manejoxSerieFlag) :
                new ObjectParameter("ManejoxSerieFlag", typeof(string));
    
            var manejoxKitFlagParameter = manejoxKitFlag != null ?
                new ObjectParameter("ManejoxKitFlag", manejoxKitFlag) :
                new ObjectParameter("ManejoxKitFlag", typeof(string));
    
            var manejoxKitSplitFlagParameter = manejoxKitSplitFlag != null ?
                new ObjectParameter("ManejoxKitSplitFlag", manejoxKitSplitFlag) :
                new ObjectParameter("ManejoxKitSplitFlag", typeof(string));
    
            var manejoxUnidadFlagParameter = manejoxUnidadFlag != null ?
                new ObjectParameter("ManejoxUnidadFlag", manejoxUnidadFlag) :
                new ObjectParameter("ManejoxUnidadFlag", typeof(string));
    
            var afectoImpuestoVentasFlagParameter = afectoImpuestoVentasFlag != null ?
                new ObjectParameter("AfectoImpuestoVentasFlag", afectoImpuestoVentasFlag) :
                new ObjectParameter("AfectoImpuestoVentasFlag", typeof(string));
    
            var afectoImpuesto2FlagParameter = afectoImpuesto2Flag != null ?
                new ObjectParameter("AfectoImpuesto2Flag", afectoImpuesto2Flag) :
                new ObjectParameter("AfectoImpuesto2Flag", typeof(string));
    
            var requisicionamientoAutomaticoFlParameter = requisicionamientoAutomaticoFl != null ?
                new ObjectParameter("RequisicionamientoAutomaticoFl", requisicionamientoAutomaticoFl) :
                new ObjectParameter("RequisicionamientoAutomaticoFl", typeof(string));
    
            var controlCalidadFlagParameter = controlCalidadFlag != null ?
                new ObjectParameter("ControlCalidadFlag", controlCalidadFlag) :
                new ObjectParameter("ControlCalidadFlag", typeof(string));
    
            var disponibleTransferenciaFlagParameter = disponibleTransferenciaFlag != null ?
                new ObjectParameter("DisponibleTransferenciaFlag", disponibleTransferenciaFlag) :
                new ObjectParameter("DisponibleTransferenciaFlag", typeof(string));
    
            var disponibleConsumoFlagParameter = disponibleConsumoFlag != null ?
                new ObjectParameter("DisponibleConsumoFlag", disponibleConsumoFlag) :
                new ObjectParameter("DisponibleConsumoFlag", typeof(string));
    
            var formularioFlagParameter = formularioFlag != null ?
                new ObjectParameter("FormularioFlag", formularioFlag) :
                new ObjectParameter("FormularioFlag", typeof(string));
    
            var formularioNroJuegosParameter = formularioNroJuegos.HasValue ?
                new ObjectParameter("FormularioNroJuegos", formularioNroJuegos) :
                new ObjectParameter("FormularioNroJuegos", typeof(int));
    
            var iSOAplicableFlagParameter = iSOAplicableFlag != null ?
                new ObjectParameter("ISOAplicableFlag", iSOAplicableFlag) :
                new ObjectParameter("ISOAplicableFlag", typeof(string));
    
            var iSONormaInternaParameter = iSONormaInterna != null ?
                new ObjectParameter("ISONormaInterna", iSONormaInterna) :
                new ObjectParameter("ISONormaInterna", typeof(string));
    
            var cantidadDobleFlagParameter = cantidadDobleFlag != null ?
                new ObjectParameter("CantidadDobleFlag", cantidadDobleFlag) :
                new ObjectParameter("CantidadDobleFlag", typeof(string));
    
            var cantidadDobleFactorParameter = cantidadDobleFactor.HasValue ?
                new ObjectParameter("CantidadDobleFactor", cantidadDobleFactor) :
                new ObjectParameter("CantidadDobleFactor", typeof(decimal));
    
            var unidadCodigoDobleParameter = unidadCodigoDoble != null ?
                new ObjectParameter("UnidadCodigoDoble", unidadCodigoDoble) :
                new ObjectParameter("UnidadCodigoDoble", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var imageFileParameter = imageFile != null ?
                new ObjectParameter("ImageFile", imageFile) :
                new ObjectParameter("ImageFile", typeof(string));
    
            var mapaFileParameter = mapaFile != null ?
                new ObjectParameter("MapaFile", mapaFile) :
                new ObjectParameter("MapaFile", typeof(string));
    
            var cuentaInventarioParameter = cuentaInventario != null ?
                new ObjectParameter("CuentaInventario", cuentaInventario) :
                new ObjectParameter("CuentaInventario", typeof(string));
    
            var cuentaGastoParameter = cuentaGasto != null ?
                new ObjectParameter("CuentaGasto", cuentaGasto) :
                new ObjectParameter("CuentaGasto", typeof(string));
    
            var cuentaInversionParameter = cuentaInversion != null ?
                new ObjectParameter("CuentaInversion", cuentaInversion) :
                new ObjectParameter("CuentaInversion", typeof(string));
    
            var cuentaServicioTecnicoParameter = cuentaServicioTecnico != null ?
                new ObjectParameter("CuentaServicioTecnico", cuentaServicioTecnico) :
                new ObjectParameter("CuentaServicioTecnico", typeof(string));
    
            var cuentaSalidaTercerosParameter = cuentaSalidaTerceros != null ?
                new ObjectParameter("CuentaSalidaTerceros", cuentaSalidaTerceros) :
                new ObjectParameter("CuentaSalidaTerceros", typeof(string));
    
            var cuentaVentasParameter = cuentaVentas != null ?
                new ObjectParameter("CuentaVentas", cuentaVentas) :
                new ObjectParameter("CuentaVentas", typeof(string));
    
            var cuentaTransitoParameter = cuentaTransito != null ?
                new ObjectParameter("CuentaTransito", cuentaTransito) :
                new ObjectParameter("CuentaTransito", typeof(string));
    
            var elementoGastoParameter = elementoGasto != null ?
                new ObjectParameter("ElementoGasto", elementoGasto) :
                new ObjectParameter("ElementoGasto", typeof(string));
    
            var elementoInversionParameter = elementoInversion != null ?
                new ObjectParameter("ElementoInversion", elementoInversion) :
                new ObjectParameter("ElementoInversion", typeof(string));
    
            var partidaPresupuestalParameter = partidaPresupuestal != null ?
                new ObjectParameter("PartidaPresupuestal", partidaPresupuestal) :
                new ObjectParameter("PartidaPresupuestal", typeof(string));
    
            var flujodeCajaParameter = flujodeCaja != null ?
                new ObjectParameter("FlujodeCaja", flujodeCaja) :
                new ObjectParameter("FlujodeCaja", typeof(string));
    
            var lotedeCompraParameter = lotedeCompra.HasValue ?
                new ObjectParameter("LotedeCompra", lotedeCompra) :
                new ObjectParameter("LotedeCompra", typeof(int));
    
            var lotedeDespachoParameter = lotedeDespacho.HasValue ?
                new ObjectParameter("LotedeDespacho", lotedeDespacho) :
                new ObjectParameter("LotedeDespacho", typeof(decimal));
    
            var lotedeCompraM3Parameter = lotedeCompraM3.HasValue ?
                new ObjectParameter("LotedeCompraM3", lotedeCompraM3) :
                new ObjectParameter("LotedeCompraM3", typeof(decimal));
    
            var lotedeCompraKGParameter = lotedeCompraKG.HasValue ?
                new ObjectParameter("LotedeCompraKG", lotedeCompraKG) :
                new ObjectParameter("LotedeCompraKG", typeof(decimal));
    
            var periodicidadCompraMesesParameter = periodicidadCompraMeses.HasValue ?
                new ObjectParameter("PeriodicidadCompraMeses", periodicidadCompraMeses) :
                new ObjectParameter("PeriodicidadCompraMeses", typeof(decimal));
    
            var especificacionTecnicaParameter = especificacionTecnica != null ?
                new ObjectParameter("EspecificacionTecnica", especificacionTecnica) :
                new ObjectParameter("EspecificacionTecnica", typeof(string));
    
            var dimensionesParameter = dimensiones != null ?
                new ObjectParameter("Dimensiones", dimensiones) :
                new ObjectParameter("Dimensiones", typeof(string));
    
            var factorEquivalenciaComercialParameter = factorEquivalenciaComercial.HasValue ?
                new ObjectParameter("FactorEquivalenciaComercial", factorEquivalenciaComercial) :
                new ObjectParameter("FactorEquivalenciaComercial", typeof(decimal));
    
            var aBCCodigoParameter = aBCCodigo != null ?
                new ObjectParameter("ABCCodigo", aBCCodigo) :
                new ObjectParameter("ABCCodigo", typeof(string));
    
            var inventarioToleranciaParameter = inventarioTolerancia.HasValue ?
                new ObjectParameter("InventarioTolerancia", inventarioTolerancia) :
                new ObjectParameter("InventarioTolerancia", typeof(decimal));
    
            var stockMinimoParameter = stockMinimo.HasValue ?
                new ObjectParameter("StockMinimo", stockMinimo) :
                new ObjectParameter("StockMinimo", typeof(decimal));
    
            var stockMaximoParameter = stockMaximo.HasValue ?
                new ObjectParameter("StockMaximo", stockMaximo) :
                new ObjectParameter("StockMaximo", typeof(decimal));
    
            var lotedeVentaParameter = lotedeVenta.HasValue ?
                new ObjectParameter("LotedeVenta", lotedeVenta) :
                new ObjectParameter("LotedeVenta", typeof(int));
    
            var descripcionAdicionalParameter = descripcionAdicional != null ?
                new ObjectParameter("DescripcionAdicional", descripcionAdicional) :
                new ObjectParameter("DescripcionAdicional", typeof(string));
    
            var codigoPrecioParameter = codigoPrecio != null ?
                new ObjectParameter("CodigoPrecio", codigoPrecio) :
                new ObjectParameter("CodigoPrecio", typeof(string));
    
            var caracteristicaValor01Parameter = caracteristicaValor01 != null ?
                new ObjectParameter("CaracteristicaValor01", caracteristicaValor01) :
                new ObjectParameter("CaracteristicaValor01", typeof(string));
    
            var caracteristicaValor02Parameter = caracteristicaValor02 != null ?
                new ObjectParameter("CaracteristicaValor02", caracteristicaValor02) :
                new ObjectParameter("CaracteristicaValor02", typeof(string));
    
            var caracteristicaValor03Parameter = caracteristicaValor03 != null ?
                new ObjectParameter("CaracteristicaValor03", caracteristicaValor03) :
                new ObjectParameter("CaracteristicaValor03", typeof(string));
    
            var caracteristicaValor04Parameter = caracteristicaValor04 != null ?
                new ObjectParameter("CaracteristicaValor04", caracteristicaValor04) :
                new ObjectParameter("CaracteristicaValor04", typeof(string));
    
            var caracteristicaValor05Parameter = caracteristicaValor05 != null ?
                new ObjectParameter("CaracteristicaValor05", caracteristicaValor05) :
                new ObjectParameter("CaracteristicaValor05", typeof(string));
    
            var referenciaFiscal02Parameter = referenciaFiscal02 != null ?
                new ObjectParameter("ReferenciaFiscal02", referenciaFiscal02) :
                new ObjectParameter("ReferenciaFiscal02", typeof(string));
    
            var referenciaFiscalIngreso02Parameter = referenciaFiscalIngreso02 != null ?
                new ObjectParameter("ReferenciaFiscalIngreso02", referenciaFiscalIngreso02) :
                new ObjectParameter("ReferenciaFiscalIngreso02", typeof(string));
    
            var detraccionCodigoParameter = detraccionCodigo != null ?
                new ObjectParameter("DetraccionCodigo", detraccionCodigo) :
                new ObjectParameter("DetraccionCodigo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var periodicidadCompraParameter = periodicidadCompra != null ?
                new ObjectParameter("PeriodicidadCompra", periodicidadCompra) :
                new ObjectParameter("PeriodicidadCompra", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var centrocostoParameter = centrocosto != null ?
                new ObjectParameter("Centrocosto", centrocosto) :
                new ObjectParameter("Centrocosto", typeof(string));
    
            var conceptoGastoParameter = conceptoGasto != null ?
                new ObjectParameter("ConceptoGasto", conceptoGasto) :
                new ObjectParameter("ConceptoGasto", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var flujodeCajaIngresoParameter = flujodeCajaIngreso != null ?
                new ObjectParameter("FlujodeCajaIngreso", flujodeCajaIngreso) :
                new ObjectParameter("FlujodeCajaIngreso", typeof(string));
    
            var mapaCodigoParameter = mapaCodigo != null ?
                new ObjectParameter("MapaCodigo", mapaCodigo) :
                new ObjectParameter("MapaCodigo", typeof(string));
    
            var paisfabricacionParameter = paisfabricacion != null ?
                new ObjectParameter("paisfabricacion", paisfabricacion) :
                new ObjectParameter("paisfabricacion", typeof(string));
    
            var aBCCodigoINParameter = aBCCodigoIN != null ?
                new ObjectParameter("ABCCodigoIN", aBCCodigoIN) :
                new ObjectParameter("ABCCodigoIN", typeof(string));
    
            var lecturaParameter = lectura != null ?
                new ObjectParameter("Lectura", lectura) :
                new ObjectParameter("Lectura", typeof(string));
    
            var idGrupoComponenteParameter = idGrupoComponente.HasValue ?
                new ObjectParameter("IdGrupoComponente", idGrupoComponente) :
                new ObjectParameter("IdGrupoComponente", typeof(int));
    
            var idRegimenVentaParameter = idRegimenVenta.HasValue ?
                new ObjectParameter("IdRegimenVenta", idRegimenVenta) :
                new ObjectParameter("IdRegimenVenta", typeof(int));
    
            var indicadorReemplazoParameter = indicadorReemplazo.HasValue ?
                new ObjectParameter("IndicadorReemplazo", indicadorReemplazo) :
                new ObjectParameter("IndicadorReemplazo", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var cuentaVentaComercialParameter = cuentaVentaComercial != null ?
                new ObjectParameter("CuentaVentaComercial", cuentaVentaComercial) :
                new ObjectParameter("CuentaVentaComercial", typeof(string));
    
            var cuentaDescuentoVentaComercialParameter = cuentaDescuentoVentaComercial != null ?
                new ObjectParameter("CuentaDescuentoVentaComercial", cuentaDescuentoVentaComercial) :
                new ObjectParameter("CuentaDescuentoVentaComercial", typeof(string));
    
            var indicadorCuentaVentaParameter = indicadorCuentaVenta.HasValue ?
                new ObjectParameter("IndicadorCuentaVenta", indicadorCuentaVenta) :
                new ObjectParameter("IndicadorCuentaVenta", typeof(int));
    
            var tipoRepuestoParameter = tipoRepuesto != null ?
                new ObjectParameter("TipoRepuesto", tipoRepuesto) :
                new ObjectParameter("TipoRepuesto", typeof(string));
    
            var cantidadkitParameter = cantidadkit.HasValue ?
                new ObjectParameter("Cantidadkit", cantidadkit) :
                new ObjectParameter("Cantidadkit", typeof(int));
    
            var periodoInicioReposicionParameter = periodoInicioReposicion.HasValue ?
                new ObjectParameter("PeriodoInicioReposicion", periodoInicioReposicion) :
                new ObjectParameter("PeriodoInicioReposicion", typeof(int));
    
            var periodosReposicionParameter = periodosReposicion.HasValue ?
                new ObjectParameter("PeriodosReposicion", periodosReposicion) :
                new ObjectParameter("PeriodosReposicion", typeof(int));
    
            var indicadorClasificacionParameter = indicadorClasificacion.HasValue ?
                new ObjectParameter("IndicadorClasificacion", indicadorClasificacion) :
                new ObjectParameter("IndicadorClasificacion", typeof(int));
    
            var peridoInicioReposicionParameter = peridoInicioReposicion.HasValue ?
                new ObjectParameter("PeridoInicioReposicion", peridoInicioReposicion) :
                new ObjectParameter("PeridoInicioReposicion", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var cantidadReposicionParameter = cantidadReposicion.HasValue ?
                new ObjectParameter("cantidadReposicion", cantidadReposicion) :
                new ObjectParameter("cantidadReposicion", typeof(decimal));
    
            var grupoReposicionParameter = grupoReposicion != null ?
                new ObjectParameter("grupoReposicion", grupoReposicion) :
                new ObjectParameter("grupoReposicion", typeof(string));
    
            var indicadorReposicionParameter = indicadorReposicion.HasValue ?
                new ObjectParameter("IndicadorReposicion", indicadorReposicion) :
                new ObjectParameter("IndicadorReposicion", typeof(int));
    
            var indicadorPrecioManualParameter = indicadorPrecioManual.HasValue ?
                new ObjectParameter("IndicadorPrecioManual", indicadorPrecioManual) :
                new ObjectParameter("IndicadorPrecioManual", typeof(int));
    
            var indicadorConsumoFraccionadoParameter = indicadorConsumoFraccionado.HasValue ?
                new ObjectParameter("IndicadorConsumoFraccionado", indicadorConsumoFraccionado) :
                new ObjectParameter("IndicadorConsumoFraccionado", typeof(int));
    
            var nombreLaboratorioParameter = nombreLaboratorio != null ?
                new ObjectParameter("nombreLaboratorio", nombreLaboratorio) :
                new ObjectParameter("nombreLaboratorio", typeof(string));
    
            var estadoAnteriorParameter = estadoAnterior != null ?
                new ObjectParameter("estadoAnterior", estadoAnterior) :
                new ObjectParameter("estadoAnterior", typeof(string));
    
            var cuentaComprasParameter = cuentaCompras != null ?
                new ObjectParameter("CuentaCompras", cuentaCompras) :
                new ObjectParameter("CuentaCompras", typeof(string));
    
            var precioCostoAntParameter = precioCostoAnt.HasValue ?
                new ObjectParameter("PrecioCostoAnt", precioCostoAnt) :
                new ObjectParameter("PrecioCostoAnt", typeof(decimal));
    
            var ultimaOCParameter = ultimaOC != null ?
                new ObjectParameter("UltimaOC", ultimaOC) :
                new ObjectParameter("UltimaOC", typeof(string));
    
            var previaOCParameter = previaOC != null ?
                new ObjectParameter("PreviaOC", previaOC) :
                new ObjectParameter("PreviaOC", typeof(string));
    
            var tipomedicamentoParameter = tipomedicamento != null ?
                new ObjectParameter("tipomedicamento", tipomedicamento) :
                new ObjectParameter("tipomedicamento", typeof(string));
    
            var codigoDigemidParameter = codigoDigemid != null ?
                new ObjectParameter("CodigoDigemid", codigoDigemid) :
                new ObjectParameter("CodigoDigemid", typeof(string));
    
            var eAN13Parameter = eAN13 != null ?
                new ObjectParameter("EAN13", eAN13) :
                new ObjectParameter("EAN13", typeof(string));
    
            var medicamentoCodigoParameter = medicamentoCodigo != null ?
                new ObjectParameter("MedicamentoCodigo", medicamentoCodigo) :
                new ObjectParameter("MedicamentoCodigo", typeof(string));
    
            var medicamentoCodigoPadreParameter = medicamentoCodigoPadre != null ?
                new ObjectParameter("MedicamentoCodigoPadre", medicamentoCodigoPadre) :
                new ObjectParameter("MedicamentoCodigoPadre", typeof(string));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var tipofolderParameter = tipofolder.HasValue ?
                new ObjectParameter("tipofolder", tipofolder) :
                new ObjectParameter("tipofolder", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WH_ItemMast>("USP_WH_ItemMastListar", itemParameter, itemTipoParameter, lineaParameter, familiaParameter, subFamiliaParameter, subFamiliaInferiorParameter, descripcionLocalParameter, descripcionInglesParameter, descripcionCompletaParameter, numeroDeParteParameter, codigoInternoParameter, unidadCodigoParameter, unidadCompraParameter, unidadEmbalajeParameter, colorParameter, modeloParameter, marcaCodigoParameter, itemProcedenciaParameter, clasificacionComercialParameter, partidaArancelariaParameter, codigoBarrasParameter, codigoBarrasFabricanteParameter, codigoBarras2Parameter, monedaCodigoParameter, precioCostoParameter, precioUnitarioLocalParameter, precioUnitarioDolaresParameter, itemPrecioFlagParameter, itemPrecioCodigoParameter, disponibleVentaFlagParameter, manejoxLoteFlagParameter, manejoxSerieFlagParameter, manejoxKitFlagParameter, manejoxKitSplitFlagParameter, manejoxUnidadFlagParameter, afectoImpuestoVentasFlagParameter, afectoImpuesto2FlagParameter, requisicionamientoAutomaticoFlParameter, controlCalidadFlagParameter, disponibleTransferenciaFlagParameter, disponibleConsumoFlagParameter, formularioFlagParameter, formularioNroJuegosParameter, iSOAplicableFlagParameter, iSONormaInternaParameter, cantidadDobleFlagParameter, cantidadDobleFactorParameter, unidadCodigoDobleParameter, unidadReplicacionParameter, imageFileParameter, mapaFileParameter, cuentaInventarioParameter, cuentaGastoParameter, cuentaInversionParameter, cuentaServicioTecnicoParameter, cuentaSalidaTercerosParameter, cuentaVentasParameter, cuentaTransitoParameter, elementoGastoParameter, elementoInversionParameter, partidaPresupuestalParameter, flujodeCajaParameter, lotedeCompraParameter, lotedeDespachoParameter, lotedeCompraM3Parameter, lotedeCompraKGParameter, periodicidadCompraMesesParameter, especificacionTecnicaParameter, dimensionesParameter, factorEquivalenciaComercialParameter, aBCCodigoParameter, inventarioToleranciaParameter, stockMinimoParameter, stockMaximoParameter, lotedeVentaParameter, descripcionAdicionalParameter, codigoPrecioParameter, caracteristicaValor01Parameter, caracteristicaValor02Parameter, caracteristicaValor03Parameter, caracteristicaValor04Parameter, caracteristicaValor05Parameter, referenciaFiscal02Parameter, referenciaFiscalIngreso02Parameter, detraccionCodigoParameter, estadoParameter, periodicidadCompraParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, centrocostoParameter, conceptoGastoParameter, clasificadorMovimientoParameter, flujodeCajaIngresoParameter, mapaCodigoParameter, paisfabricacionParameter, aBCCodigoINParameter, lecturaParameter, idGrupoComponenteParameter, idRegimenVentaParameter, indicadorReemplazoParameter, usuarioCreacionParameter, fechaCreacionParameter, cuentaVentaComercialParameter, cuentaDescuentoVentaComercialParameter, indicadorCuentaVentaParameter, tipoRepuestoParameter, cantidadkitParameter, periodoInicioReposicionParameter, periodosReposicionParameter, indicadorClasificacionParameter, peridoInicioReposicionParameter, idClasificacionParameter, cantidadReposicionParameter, grupoReposicionParameter, indicadorReposicionParameter, indicadorPrecioManualParameter, indicadorConsumoFraccionadoParameter, nombreLaboratorioParameter, estadoAnteriorParameter, cuentaComprasParameter, precioCostoAntParameter, ultimaOCParameter, previaOCParameter, tipomedicamentoParameter, codigoDigemidParameter, eAN13Parameter, medicamentoCodigoParameter, medicamentoCodigoPadreParameter, nombreTablaParameter, tipofolderParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<WH_ItemMast> USP_WH_ItemMastListar(string item, string itemTipo, string linea, string familia, string subFamilia, string subFamiliaInferior, string descripcionLocal, string descripcionIngles, string descripcionCompleta, string numeroDeParte, string codigoInterno, string unidadCodigo, string unidadCompra, string unidadEmbalaje, string color, string modelo, string marcaCodigo, string itemProcedencia, string clasificacionComercial, string partidaArancelaria, string codigoBarras, string codigoBarrasFabricante, string codigoBarras2, string monedaCodigo, Nullable<decimal> precioCosto, Nullable<decimal> precioUnitarioLocal, Nullable<decimal> precioUnitarioDolares, string itemPrecioFlag, string itemPrecioCodigo, string disponibleVentaFlag, string manejoxLoteFlag, string manejoxSerieFlag, string manejoxKitFlag, string manejoxKitSplitFlag, string manejoxUnidadFlag, string afectoImpuestoVentasFlag, string afectoImpuesto2Flag, string requisicionamientoAutomaticoFl, string controlCalidadFlag, string disponibleTransferenciaFlag, string disponibleConsumoFlag, string formularioFlag, Nullable<int> formularioNroJuegos, string iSOAplicableFlag, string iSONormaInterna, string cantidadDobleFlag, Nullable<decimal> cantidadDobleFactor, string unidadCodigoDoble, string unidadReplicacion, string imageFile, string mapaFile, string cuentaInventario, string cuentaGasto, string cuentaInversion, string cuentaServicioTecnico, string cuentaSalidaTerceros, string cuentaVentas, string cuentaTransito, string elementoGasto, string elementoInversion, string partidaPresupuestal, string flujodeCaja, Nullable<int> lotedeCompra, Nullable<decimal> lotedeDespacho, Nullable<decimal> lotedeCompraM3, Nullable<decimal> lotedeCompraKG, Nullable<decimal> periodicidadCompraMeses, string especificacionTecnica, string dimensiones, Nullable<decimal> factorEquivalenciaComercial, string aBCCodigo, Nullable<decimal> inventarioTolerancia, Nullable<decimal> stockMinimo, Nullable<decimal> stockMaximo, Nullable<int> lotedeVenta, string descripcionAdicional, string codigoPrecio, string caracteristicaValor01, string caracteristicaValor02, string caracteristicaValor03, string caracteristicaValor04, string caracteristicaValor05, string referenciaFiscal02, string referenciaFiscalIngreso02, string detraccionCodigo, string estado, string periodicidadCompra, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, string centrocosto, string conceptoGasto, string clasificadorMovimiento, string flujodeCajaIngreso, string mapaCodigo, string paisfabricacion, string aBCCodigoIN, string lectura, Nullable<int> idGrupoComponente, Nullable<int> idRegimenVenta, Nullable<int> indicadorReemplazo, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string cuentaVentaComercial, string cuentaDescuentoVentaComercial, Nullable<int> indicadorCuentaVenta, string tipoRepuesto, Nullable<int> cantidadkit, Nullable<int> periodoInicioReposicion, Nullable<int> periodosReposicion, Nullable<int> indicadorClasificacion, Nullable<int> peridoInicioReposicion, Nullable<int> idClasificacion, Nullable<decimal> cantidadReposicion, string grupoReposicion, Nullable<int> indicadorReposicion, Nullable<int> indicadorPrecioManual, Nullable<int> indicadorConsumoFraccionado, string nombreLaboratorio, string estadoAnterior, string cuentaCompras, Nullable<decimal> precioCostoAnt, string ultimaOC, string previaOC, string tipomedicamento, string codigoDigemid, string eAN13, string medicamentoCodigo, string medicamentoCodigoPadre, string nombreTabla, Nullable<int> tipofolder, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(WH_ItemMast).Assembly);
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var itemTipoParameter = itemTipo != null ?
                new ObjectParameter("ItemTipo", itemTipo) :
                new ObjectParameter("ItemTipo", typeof(string));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var subFamiliaInferiorParameter = subFamiliaInferior != null ?
                new ObjectParameter("SubFamiliaInferior", subFamiliaInferior) :
                new ObjectParameter("SubFamiliaInferior", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var descripcionCompletaParameter = descripcionCompleta != null ?
                new ObjectParameter("DescripcionCompleta", descripcionCompleta) :
                new ObjectParameter("DescripcionCompleta", typeof(string));
    
            var numeroDeParteParameter = numeroDeParte != null ?
                new ObjectParameter("NumeroDeParte", numeroDeParte) :
                new ObjectParameter("NumeroDeParte", typeof(string));
    
            var codigoInternoParameter = codigoInterno != null ?
                new ObjectParameter("CodigoInterno", codigoInterno) :
                new ObjectParameter("CodigoInterno", typeof(string));
    
            var unidadCodigoParameter = unidadCodigo != null ?
                new ObjectParameter("UnidadCodigo", unidadCodigo) :
                new ObjectParameter("UnidadCodigo", typeof(string));
    
            var unidadCompraParameter = unidadCompra != null ?
                new ObjectParameter("UnidadCompra", unidadCompra) :
                new ObjectParameter("UnidadCompra", typeof(string));
    
            var unidadEmbalajeParameter = unidadEmbalaje != null ?
                new ObjectParameter("UnidadEmbalaje", unidadEmbalaje) :
                new ObjectParameter("UnidadEmbalaje", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var marcaCodigoParameter = marcaCodigo != null ?
                new ObjectParameter("MarcaCodigo", marcaCodigo) :
                new ObjectParameter("MarcaCodigo", typeof(string));
    
            var itemProcedenciaParameter = itemProcedencia != null ?
                new ObjectParameter("ItemProcedencia", itemProcedencia) :
                new ObjectParameter("ItemProcedencia", typeof(string));
    
            var clasificacionComercialParameter = clasificacionComercial != null ?
                new ObjectParameter("ClasificacionComercial", clasificacionComercial) :
                new ObjectParameter("ClasificacionComercial", typeof(string));
    
            var partidaArancelariaParameter = partidaArancelaria != null ?
                new ObjectParameter("PartidaArancelaria", partidaArancelaria) :
                new ObjectParameter("PartidaArancelaria", typeof(string));
    
            var codigoBarrasParameter = codigoBarras != null ?
                new ObjectParameter("CodigoBarras", codigoBarras) :
                new ObjectParameter("CodigoBarras", typeof(string));
    
            var codigoBarrasFabricanteParameter = codigoBarrasFabricante != null ?
                new ObjectParameter("CodigoBarrasFabricante", codigoBarrasFabricante) :
                new ObjectParameter("CodigoBarrasFabricante", typeof(string));
    
            var codigoBarras2Parameter = codigoBarras2 != null ?
                new ObjectParameter("CodigoBarras2", codigoBarras2) :
                new ObjectParameter("CodigoBarras2", typeof(string));
    
            var monedaCodigoParameter = monedaCodigo != null ?
                new ObjectParameter("MonedaCodigo", monedaCodigo) :
                new ObjectParameter("MonedaCodigo", typeof(string));
    
            var precioCostoParameter = precioCosto.HasValue ?
                new ObjectParameter("PrecioCosto", precioCosto) :
                new ObjectParameter("PrecioCosto", typeof(decimal));
    
            var precioUnitarioLocalParameter = precioUnitarioLocal.HasValue ?
                new ObjectParameter("PrecioUnitarioLocal", precioUnitarioLocal) :
                new ObjectParameter("PrecioUnitarioLocal", typeof(decimal));
    
            var precioUnitarioDolaresParameter = precioUnitarioDolares.HasValue ?
                new ObjectParameter("PrecioUnitarioDolares", precioUnitarioDolares) :
                new ObjectParameter("PrecioUnitarioDolares", typeof(decimal));
    
            var itemPrecioFlagParameter = itemPrecioFlag != null ?
                new ObjectParameter("ItemPrecioFlag", itemPrecioFlag) :
                new ObjectParameter("ItemPrecioFlag", typeof(string));
    
            var itemPrecioCodigoParameter = itemPrecioCodigo != null ?
                new ObjectParameter("ItemPrecioCodigo", itemPrecioCodigo) :
                new ObjectParameter("ItemPrecioCodigo", typeof(string));
    
            var disponibleVentaFlagParameter = disponibleVentaFlag != null ?
                new ObjectParameter("DisponibleVentaFlag", disponibleVentaFlag) :
                new ObjectParameter("DisponibleVentaFlag", typeof(string));
    
            var manejoxLoteFlagParameter = manejoxLoteFlag != null ?
                new ObjectParameter("ManejoxLoteFlag", manejoxLoteFlag) :
                new ObjectParameter("ManejoxLoteFlag", typeof(string));
    
            var manejoxSerieFlagParameter = manejoxSerieFlag != null ?
                new ObjectParameter("ManejoxSerieFlag", manejoxSerieFlag) :
                new ObjectParameter("ManejoxSerieFlag", typeof(string));
    
            var manejoxKitFlagParameter = manejoxKitFlag != null ?
                new ObjectParameter("ManejoxKitFlag", manejoxKitFlag) :
                new ObjectParameter("ManejoxKitFlag", typeof(string));
    
            var manejoxKitSplitFlagParameter = manejoxKitSplitFlag != null ?
                new ObjectParameter("ManejoxKitSplitFlag", manejoxKitSplitFlag) :
                new ObjectParameter("ManejoxKitSplitFlag", typeof(string));
    
            var manejoxUnidadFlagParameter = manejoxUnidadFlag != null ?
                new ObjectParameter("ManejoxUnidadFlag", manejoxUnidadFlag) :
                new ObjectParameter("ManejoxUnidadFlag", typeof(string));
    
            var afectoImpuestoVentasFlagParameter = afectoImpuestoVentasFlag != null ?
                new ObjectParameter("AfectoImpuestoVentasFlag", afectoImpuestoVentasFlag) :
                new ObjectParameter("AfectoImpuestoVentasFlag", typeof(string));
    
            var afectoImpuesto2FlagParameter = afectoImpuesto2Flag != null ?
                new ObjectParameter("AfectoImpuesto2Flag", afectoImpuesto2Flag) :
                new ObjectParameter("AfectoImpuesto2Flag", typeof(string));
    
            var requisicionamientoAutomaticoFlParameter = requisicionamientoAutomaticoFl != null ?
                new ObjectParameter("RequisicionamientoAutomaticoFl", requisicionamientoAutomaticoFl) :
                new ObjectParameter("RequisicionamientoAutomaticoFl", typeof(string));
    
            var controlCalidadFlagParameter = controlCalidadFlag != null ?
                new ObjectParameter("ControlCalidadFlag", controlCalidadFlag) :
                new ObjectParameter("ControlCalidadFlag", typeof(string));
    
            var disponibleTransferenciaFlagParameter = disponibleTransferenciaFlag != null ?
                new ObjectParameter("DisponibleTransferenciaFlag", disponibleTransferenciaFlag) :
                new ObjectParameter("DisponibleTransferenciaFlag", typeof(string));
    
            var disponibleConsumoFlagParameter = disponibleConsumoFlag != null ?
                new ObjectParameter("DisponibleConsumoFlag", disponibleConsumoFlag) :
                new ObjectParameter("DisponibleConsumoFlag", typeof(string));
    
            var formularioFlagParameter = formularioFlag != null ?
                new ObjectParameter("FormularioFlag", formularioFlag) :
                new ObjectParameter("FormularioFlag", typeof(string));
    
            var formularioNroJuegosParameter = formularioNroJuegos.HasValue ?
                new ObjectParameter("FormularioNroJuegos", formularioNroJuegos) :
                new ObjectParameter("FormularioNroJuegos", typeof(int));
    
            var iSOAplicableFlagParameter = iSOAplicableFlag != null ?
                new ObjectParameter("ISOAplicableFlag", iSOAplicableFlag) :
                new ObjectParameter("ISOAplicableFlag", typeof(string));
    
            var iSONormaInternaParameter = iSONormaInterna != null ?
                new ObjectParameter("ISONormaInterna", iSONormaInterna) :
                new ObjectParameter("ISONormaInterna", typeof(string));
    
            var cantidadDobleFlagParameter = cantidadDobleFlag != null ?
                new ObjectParameter("CantidadDobleFlag", cantidadDobleFlag) :
                new ObjectParameter("CantidadDobleFlag", typeof(string));
    
            var cantidadDobleFactorParameter = cantidadDobleFactor.HasValue ?
                new ObjectParameter("CantidadDobleFactor", cantidadDobleFactor) :
                new ObjectParameter("CantidadDobleFactor", typeof(decimal));
    
            var unidadCodigoDobleParameter = unidadCodigoDoble != null ?
                new ObjectParameter("UnidadCodigoDoble", unidadCodigoDoble) :
                new ObjectParameter("UnidadCodigoDoble", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var imageFileParameter = imageFile != null ?
                new ObjectParameter("ImageFile", imageFile) :
                new ObjectParameter("ImageFile", typeof(string));
    
            var mapaFileParameter = mapaFile != null ?
                new ObjectParameter("MapaFile", mapaFile) :
                new ObjectParameter("MapaFile", typeof(string));
    
            var cuentaInventarioParameter = cuentaInventario != null ?
                new ObjectParameter("CuentaInventario", cuentaInventario) :
                new ObjectParameter("CuentaInventario", typeof(string));
    
            var cuentaGastoParameter = cuentaGasto != null ?
                new ObjectParameter("CuentaGasto", cuentaGasto) :
                new ObjectParameter("CuentaGasto", typeof(string));
    
            var cuentaInversionParameter = cuentaInversion != null ?
                new ObjectParameter("CuentaInversion", cuentaInversion) :
                new ObjectParameter("CuentaInversion", typeof(string));
    
            var cuentaServicioTecnicoParameter = cuentaServicioTecnico != null ?
                new ObjectParameter("CuentaServicioTecnico", cuentaServicioTecnico) :
                new ObjectParameter("CuentaServicioTecnico", typeof(string));
    
            var cuentaSalidaTercerosParameter = cuentaSalidaTerceros != null ?
                new ObjectParameter("CuentaSalidaTerceros", cuentaSalidaTerceros) :
                new ObjectParameter("CuentaSalidaTerceros", typeof(string));
    
            var cuentaVentasParameter = cuentaVentas != null ?
                new ObjectParameter("CuentaVentas", cuentaVentas) :
                new ObjectParameter("CuentaVentas", typeof(string));
    
            var cuentaTransitoParameter = cuentaTransito != null ?
                new ObjectParameter("CuentaTransito", cuentaTransito) :
                new ObjectParameter("CuentaTransito", typeof(string));
    
            var elementoGastoParameter = elementoGasto != null ?
                new ObjectParameter("ElementoGasto", elementoGasto) :
                new ObjectParameter("ElementoGasto", typeof(string));
    
            var elementoInversionParameter = elementoInversion != null ?
                new ObjectParameter("ElementoInversion", elementoInversion) :
                new ObjectParameter("ElementoInversion", typeof(string));
    
            var partidaPresupuestalParameter = partidaPresupuestal != null ?
                new ObjectParameter("PartidaPresupuestal", partidaPresupuestal) :
                new ObjectParameter("PartidaPresupuestal", typeof(string));
    
            var flujodeCajaParameter = flujodeCaja != null ?
                new ObjectParameter("FlujodeCaja", flujodeCaja) :
                new ObjectParameter("FlujodeCaja", typeof(string));
    
            var lotedeCompraParameter = lotedeCompra.HasValue ?
                new ObjectParameter("LotedeCompra", lotedeCompra) :
                new ObjectParameter("LotedeCompra", typeof(int));
    
            var lotedeDespachoParameter = lotedeDespacho.HasValue ?
                new ObjectParameter("LotedeDespacho", lotedeDespacho) :
                new ObjectParameter("LotedeDespacho", typeof(decimal));
    
            var lotedeCompraM3Parameter = lotedeCompraM3.HasValue ?
                new ObjectParameter("LotedeCompraM3", lotedeCompraM3) :
                new ObjectParameter("LotedeCompraM3", typeof(decimal));
    
            var lotedeCompraKGParameter = lotedeCompraKG.HasValue ?
                new ObjectParameter("LotedeCompraKG", lotedeCompraKG) :
                new ObjectParameter("LotedeCompraKG", typeof(decimal));
    
            var periodicidadCompraMesesParameter = periodicidadCompraMeses.HasValue ?
                new ObjectParameter("PeriodicidadCompraMeses", periodicidadCompraMeses) :
                new ObjectParameter("PeriodicidadCompraMeses", typeof(decimal));
    
            var especificacionTecnicaParameter = especificacionTecnica != null ?
                new ObjectParameter("EspecificacionTecnica", especificacionTecnica) :
                new ObjectParameter("EspecificacionTecnica", typeof(string));
    
            var dimensionesParameter = dimensiones != null ?
                new ObjectParameter("Dimensiones", dimensiones) :
                new ObjectParameter("Dimensiones", typeof(string));
    
            var factorEquivalenciaComercialParameter = factorEquivalenciaComercial.HasValue ?
                new ObjectParameter("FactorEquivalenciaComercial", factorEquivalenciaComercial) :
                new ObjectParameter("FactorEquivalenciaComercial", typeof(decimal));
    
            var aBCCodigoParameter = aBCCodigo != null ?
                new ObjectParameter("ABCCodigo", aBCCodigo) :
                new ObjectParameter("ABCCodigo", typeof(string));
    
            var inventarioToleranciaParameter = inventarioTolerancia.HasValue ?
                new ObjectParameter("InventarioTolerancia", inventarioTolerancia) :
                new ObjectParameter("InventarioTolerancia", typeof(decimal));
    
            var stockMinimoParameter = stockMinimo.HasValue ?
                new ObjectParameter("StockMinimo", stockMinimo) :
                new ObjectParameter("StockMinimo", typeof(decimal));
    
            var stockMaximoParameter = stockMaximo.HasValue ?
                new ObjectParameter("StockMaximo", stockMaximo) :
                new ObjectParameter("StockMaximo", typeof(decimal));
    
            var lotedeVentaParameter = lotedeVenta.HasValue ?
                new ObjectParameter("LotedeVenta", lotedeVenta) :
                new ObjectParameter("LotedeVenta", typeof(int));
    
            var descripcionAdicionalParameter = descripcionAdicional != null ?
                new ObjectParameter("DescripcionAdicional", descripcionAdicional) :
                new ObjectParameter("DescripcionAdicional", typeof(string));
    
            var codigoPrecioParameter = codigoPrecio != null ?
                new ObjectParameter("CodigoPrecio", codigoPrecio) :
                new ObjectParameter("CodigoPrecio", typeof(string));
    
            var caracteristicaValor01Parameter = caracteristicaValor01 != null ?
                new ObjectParameter("CaracteristicaValor01", caracteristicaValor01) :
                new ObjectParameter("CaracteristicaValor01", typeof(string));
    
            var caracteristicaValor02Parameter = caracteristicaValor02 != null ?
                new ObjectParameter("CaracteristicaValor02", caracteristicaValor02) :
                new ObjectParameter("CaracteristicaValor02", typeof(string));
    
            var caracteristicaValor03Parameter = caracteristicaValor03 != null ?
                new ObjectParameter("CaracteristicaValor03", caracteristicaValor03) :
                new ObjectParameter("CaracteristicaValor03", typeof(string));
    
            var caracteristicaValor04Parameter = caracteristicaValor04 != null ?
                new ObjectParameter("CaracteristicaValor04", caracteristicaValor04) :
                new ObjectParameter("CaracteristicaValor04", typeof(string));
    
            var caracteristicaValor05Parameter = caracteristicaValor05 != null ?
                new ObjectParameter("CaracteristicaValor05", caracteristicaValor05) :
                new ObjectParameter("CaracteristicaValor05", typeof(string));
    
            var referenciaFiscal02Parameter = referenciaFiscal02 != null ?
                new ObjectParameter("ReferenciaFiscal02", referenciaFiscal02) :
                new ObjectParameter("ReferenciaFiscal02", typeof(string));
    
            var referenciaFiscalIngreso02Parameter = referenciaFiscalIngreso02 != null ?
                new ObjectParameter("ReferenciaFiscalIngreso02", referenciaFiscalIngreso02) :
                new ObjectParameter("ReferenciaFiscalIngreso02", typeof(string));
    
            var detraccionCodigoParameter = detraccionCodigo != null ?
                new ObjectParameter("DetraccionCodigo", detraccionCodigo) :
                new ObjectParameter("DetraccionCodigo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var periodicidadCompraParameter = periodicidadCompra != null ?
                new ObjectParameter("PeriodicidadCompra", periodicidadCompra) :
                new ObjectParameter("PeriodicidadCompra", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var centrocostoParameter = centrocosto != null ?
                new ObjectParameter("Centrocosto", centrocosto) :
                new ObjectParameter("Centrocosto", typeof(string));
    
            var conceptoGastoParameter = conceptoGasto != null ?
                new ObjectParameter("ConceptoGasto", conceptoGasto) :
                new ObjectParameter("ConceptoGasto", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var flujodeCajaIngresoParameter = flujodeCajaIngreso != null ?
                new ObjectParameter("FlujodeCajaIngreso", flujodeCajaIngreso) :
                new ObjectParameter("FlujodeCajaIngreso", typeof(string));
    
            var mapaCodigoParameter = mapaCodigo != null ?
                new ObjectParameter("MapaCodigo", mapaCodigo) :
                new ObjectParameter("MapaCodigo", typeof(string));
    
            var paisfabricacionParameter = paisfabricacion != null ?
                new ObjectParameter("paisfabricacion", paisfabricacion) :
                new ObjectParameter("paisfabricacion", typeof(string));
    
            var aBCCodigoINParameter = aBCCodigoIN != null ?
                new ObjectParameter("ABCCodigoIN", aBCCodigoIN) :
                new ObjectParameter("ABCCodigoIN", typeof(string));
    
            var lecturaParameter = lectura != null ?
                new ObjectParameter("Lectura", lectura) :
                new ObjectParameter("Lectura", typeof(string));
    
            var idGrupoComponenteParameter = idGrupoComponente.HasValue ?
                new ObjectParameter("IdGrupoComponente", idGrupoComponente) :
                new ObjectParameter("IdGrupoComponente", typeof(int));
    
            var idRegimenVentaParameter = idRegimenVenta.HasValue ?
                new ObjectParameter("IdRegimenVenta", idRegimenVenta) :
                new ObjectParameter("IdRegimenVenta", typeof(int));
    
            var indicadorReemplazoParameter = indicadorReemplazo.HasValue ?
                new ObjectParameter("IndicadorReemplazo", indicadorReemplazo) :
                new ObjectParameter("IndicadorReemplazo", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var cuentaVentaComercialParameter = cuentaVentaComercial != null ?
                new ObjectParameter("CuentaVentaComercial", cuentaVentaComercial) :
                new ObjectParameter("CuentaVentaComercial", typeof(string));
    
            var cuentaDescuentoVentaComercialParameter = cuentaDescuentoVentaComercial != null ?
                new ObjectParameter("CuentaDescuentoVentaComercial", cuentaDescuentoVentaComercial) :
                new ObjectParameter("CuentaDescuentoVentaComercial", typeof(string));
    
            var indicadorCuentaVentaParameter = indicadorCuentaVenta.HasValue ?
                new ObjectParameter("IndicadorCuentaVenta", indicadorCuentaVenta) :
                new ObjectParameter("IndicadorCuentaVenta", typeof(int));
    
            var tipoRepuestoParameter = tipoRepuesto != null ?
                new ObjectParameter("TipoRepuesto", tipoRepuesto) :
                new ObjectParameter("TipoRepuesto", typeof(string));
    
            var cantidadkitParameter = cantidadkit.HasValue ?
                new ObjectParameter("Cantidadkit", cantidadkit) :
                new ObjectParameter("Cantidadkit", typeof(int));
    
            var periodoInicioReposicionParameter = periodoInicioReposicion.HasValue ?
                new ObjectParameter("PeriodoInicioReposicion", periodoInicioReposicion) :
                new ObjectParameter("PeriodoInicioReposicion", typeof(int));
    
            var periodosReposicionParameter = periodosReposicion.HasValue ?
                new ObjectParameter("PeriodosReposicion", periodosReposicion) :
                new ObjectParameter("PeriodosReposicion", typeof(int));
    
            var indicadorClasificacionParameter = indicadorClasificacion.HasValue ?
                new ObjectParameter("IndicadorClasificacion", indicadorClasificacion) :
                new ObjectParameter("IndicadorClasificacion", typeof(int));
    
            var peridoInicioReposicionParameter = peridoInicioReposicion.HasValue ?
                new ObjectParameter("PeridoInicioReposicion", peridoInicioReposicion) :
                new ObjectParameter("PeridoInicioReposicion", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var cantidadReposicionParameter = cantidadReposicion.HasValue ?
                new ObjectParameter("cantidadReposicion", cantidadReposicion) :
                new ObjectParameter("cantidadReposicion", typeof(decimal));
    
            var grupoReposicionParameter = grupoReposicion != null ?
                new ObjectParameter("grupoReposicion", grupoReposicion) :
                new ObjectParameter("grupoReposicion", typeof(string));
    
            var indicadorReposicionParameter = indicadorReposicion.HasValue ?
                new ObjectParameter("IndicadorReposicion", indicadorReposicion) :
                new ObjectParameter("IndicadorReposicion", typeof(int));
    
            var indicadorPrecioManualParameter = indicadorPrecioManual.HasValue ?
                new ObjectParameter("IndicadorPrecioManual", indicadorPrecioManual) :
                new ObjectParameter("IndicadorPrecioManual", typeof(int));
    
            var indicadorConsumoFraccionadoParameter = indicadorConsumoFraccionado.HasValue ?
                new ObjectParameter("IndicadorConsumoFraccionado", indicadorConsumoFraccionado) :
                new ObjectParameter("IndicadorConsumoFraccionado", typeof(int));
    
            var nombreLaboratorioParameter = nombreLaboratorio != null ?
                new ObjectParameter("nombreLaboratorio", nombreLaboratorio) :
                new ObjectParameter("nombreLaboratorio", typeof(string));
    
            var estadoAnteriorParameter = estadoAnterior != null ?
                new ObjectParameter("estadoAnterior", estadoAnterior) :
                new ObjectParameter("estadoAnterior", typeof(string));
    
            var cuentaComprasParameter = cuentaCompras != null ?
                new ObjectParameter("CuentaCompras", cuentaCompras) :
                new ObjectParameter("CuentaCompras", typeof(string));
    
            var precioCostoAntParameter = precioCostoAnt.HasValue ?
                new ObjectParameter("PrecioCostoAnt", precioCostoAnt) :
                new ObjectParameter("PrecioCostoAnt", typeof(decimal));
    
            var ultimaOCParameter = ultimaOC != null ?
                new ObjectParameter("UltimaOC", ultimaOC) :
                new ObjectParameter("UltimaOC", typeof(string));
    
            var previaOCParameter = previaOC != null ?
                new ObjectParameter("PreviaOC", previaOC) :
                new ObjectParameter("PreviaOC", typeof(string));
    
            var tipomedicamentoParameter = tipomedicamento != null ?
                new ObjectParameter("tipomedicamento", tipomedicamento) :
                new ObjectParameter("tipomedicamento", typeof(string));
    
            var codigoDigemidParameter = codigoDigemid != null ?
                new ObjectParameter("CodigoDigemid", codigoDigemid) :
                new ObjectParameter("CodigoDigemid", typeof(string));
    
            var eAN13Parameter = eAN13 != null ?
                new ObjectParameter("EAN13", eAN13) :
                new ObjectParameter("EAN13", typeof(string));
    
            var medicamentoCodigoParameter = medicamentoCodigo != null ?
                new ObjectParameter("MedicamentoCodigo", medicamentoCodigo) :
                new ObjectParameter("MedicamentoCodigo", typeof(string));
    
            var medicamentoCodigoPadreParameter = medicamentoCodigoPadre != null ?
                new ObjectParameter("MedicamentoCodigoPadre", medicamentoCodigoPadre) :
                new ObjectParameter("MedicamentoCodigoPadre", typeof(string));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var tipofolderParameter = tipofolder.HasValue ?
                new ObjectParameter("tipofolder", tipofolder) :
                new ObjectParameter("tipofolder", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WH_ItemMast>("USP_WH_ItemMastListar", mergeOption, itemParameter, itemTipoParameter, lineaParameter, familiaParameter, subFamiliaParameter, subFamiliaInferiorParameter, descripcionLocalParameter, descripcionInglesParameter, descripcionCompletaParameter, numeroDeParteParameter, codigoInternoParameter, unidadCodigoParameter, unidadCompraParameter, unidadEmbalajeParameter, colorParameter, modeloParameter, marcaCodigoParameter, itemProcedenciaParameter, clasificacionComercialParameter, partidaArancelariaParameter, codigoBarrasParameter, codigoBarrasFabricanteParameter, codigoBarras2Parameter, monedaCodigoParameter, precioCostoParameter, precioUnitarioLocalParameter, precioUnitarioDolaresParameter, itemPrecioFlagParameter, itemPrecioCodigoParameter, disponibleVentaFlagParameter, manejoxLoteFlagParameter, manejoxSerieFlagParameter, manejoxKitFlagParameter, manejoxKitSplitFlagParameter, manejoxUnidadFlagParameter, afectoImpuestoVentasFlagParameter, afectoImpuesto2FlagParameter, requisicionamientoAutomaticoFlParameter, controlCalidadFlagParameter, disponibleTransferenciaFlagParameter, disponibleConsumoFlagParameter, formularioFlagParameter, formularioNroJuegosParameter, iSOAplicableFlagParameter, iSONormaInternaParameter, cantidadDobleFlagParameter, cantidadDobleFactorParameter, unidadCodigoDobleParameter, unidadReplicacionParameter, imageFileParameter, mapaFileParameter, cuentaInventarioParameter, cuentaGastoParameter, cuentaInversionParameter, cuentaServicioTecnicoParameter, cuentaSalidaTercerosParameter, cuentaVentasParameter, cuentaTransitoParameter, elementoGastoParameter, elementoInversionParameter, partidaPresupuestalParameter, flujodeCajaParameter, lotedeCompraParameter, lotedeDespachoParameter, lotedeCompraM3Parameter, lotedeCompraKGParameter, periodicidadCompraMesesParameter, especificacionTecnicaParameter, dimensionesParameter, factorEquivalenciaComercialParameter, aBCCodigoParameter, inventarioToleranciaParameter, stockMinimoParameter, stockMaximoParameter, lotedeVentaParameter, descripcionAdicionalParameter, codigoPrecioParameter, caracteristicaValor01Parameter, caracteristicaValor02Parameter, caracteristicaValor03Parameter, caracteristicaValor04Parameter, caracteristicaValor05Parameter, referenciaFiscal02Parameter, referenciaFiscalIngreso02Parameter, detraccionCodigoParameter, estadoParameter, periodicidadCompraParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, centrocostoParameter, conceptoGastoParameter, clasificadorMovimientoParameter, flujodeCajaIngresoParameter, mapaCodigoParameter, paisfabricacionParameter, aBCCodigoINParameter, lecturaParameter, idGrupoComponenteParameter, idRegimenVentaParameter, indicadorReemplazoParameter, usuarioCreacionParameter, fechaCreacionParameter, cuentaVentaComercialParameter, cuentaDescuentoVentaComercialParameter, indicadorCuentaVentaParameter, tipoRepuestoParameter, cantidadkitParameter, periodoInicioReposicionParameter, periodosReposicionParameter, indicadorClasificacionParameter, peridoInicioReposicionParameter, idClasificacionParameter, cantidadReposicionParameter, grupoReposicionParameter, indicadorReposicionParameter, indicadorPrecioManualParameter, indicadorConsumoFraccionadoParameter, nombreLaboratorioParameter, estadoAnteriorParameter, cuentaComprasParameter, precioCostoAntParameter, ultimaOCParameter, previaOCParameter, tipomedicamentoParameter, codigoDigemidParameter, eAN13Parameter, medicamentoCodigoParameter, medicamentoCodigoPadreParameter, nombreTablaParameter, tipofolderParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<CM_CO_ListaBaseComponente> USP_CM_CO_ListaBaseComponente_lista(Nullable<int> idListaBase, string tipoComponente, string codigoComponente, Nullable<int> periodo, string moneda, Nullable<decimal> precioUnitarioLista, Nullable<decimal> precioUnitarioListaLocal, Nullable<decimal> precioUnitarioBase, Nullable<decimal> precioUnitarioBaseLocal, Nullable<System.DateTime> fechaValidezInicio, Nullable<System.DateTime> fechaValidezFin, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> indicadorPrecioCero, Nullable<decimal> factor, string tipoFactor, Nullable<int> indicadorFactor, Nullable<decimal> precioCosto, Nullable<decimal> factorCosto, Nullable<decimal> precioKairos, Nullable<decimal> factorKairos, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(CM_CO_ListaBaseComponente).Assembly);
    
            var idListaBaseParameter = idListaBase.HasValue ?
                new ObjectParameter("IdListaBase", idListaBase) :
                new ObjectParameter("IdListaBase", typeof(int));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var precioUnitarioListaParameter = precioUnitarioLista.HasValue ?
                new ObjectParameter("PrecioUnitarioLista", precioUnitarioLista) :
                new ObjectParameter("PrecioUnitarioLista", typeof(decimal));
    
            var precioUnitarioListaLocalParameter = precioUnitarioListaLocal.HasValue ?
                new ObjectParameter("PrecioUnitarioListaLocal", precioUnitarioListaLocal) :
                new ObjectParameter("PrecioUnitarioListaLocal", typeof(decimal));
    
            var precioUnitarioBaseParameter = precioUnitarioBase.HasValue ?
                new ObjectParameter("PrecioUnitarioBase", precioUnitarioBase) :
                new ObjectParameter("PrecioUnitarioBase", typeof(decimal));
    
            var precioUnitarioBaseLocalParameter = precioUnitarioBaseLocal.HasValue ?
                new ObjectParameter("PrecioUnitarioBaseLocal", precioUnitarioBaseLocal) :
                new ObjectParameter("PrecioUnitarioBaseLocal", typeof(decimal));
    
            var fechaValidezInicioParameter = fechaValidezInicio.HasValue ?
                new ObjectParameter("FechaValidezInicio", fechaValidezInicio) :
                new ObjectParameter("FechaValidezInicio", typeof(System.DateTime));
    
            var fechaValidezFinParameter = fechaValidezFin.HasValue ?
                new ObjectParameter("FechaValidezFin", fechaValidezFin) :
                new ObjectParameter("FechaValidezFin", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var indicadorPrecioCeroParameter = indicadorPrecioCero.HasValue ?
                new ObjectParameter("IndicadorPrecioCero", indicadorPrecioCero) :
                new ObjectParameter("IndicadorPrecioCero", typeof(int));
    
            var factorParameter = factor.HasValue ?
                new ObjectParameter("Factor", factor) :
                new ObjectParameter("Factor", typeof(decimal));
    
            var tipoFactorParameter = tipoFactor != null ?
                new ObjectParameter("TipoFactor", tipoFactor) :
                new ObjectParameter("TipoFactor", typeof(string));
    
            var indicadorFactorParameter = indicadorFactor.HasValue ?
                new ObjectParameter("IndicadorFactor", indicadorFactor) :
                new ObjectParameter("IndicadorFactor", typeof(int));
    
            var precioCostoParameter = precioCosto.HasValue ?
                new ObjectParameter("PrecioCosto", precioCosto) :
                new ObjectParameter("PrecioCosto", typeof(decimal));
    
            var factorCostoParameter = factorCosto.HasValue ?
                new ObjectParameter("FactorCosto", factorCosto) :
                new ObjectParameter("FactorCosto", typeof(decimal));
    
            var precioKairosParameter = precioKairos.HasValue ?
                new ObjectParameter("PrecioKairos", precioKairos) :
                new ObjectParameter("PrecioKairos", typeof(decimal));
    
            var factorKairosParameter = factorKairos.HasValue ?
                new ObjectParameter("FactorKairos", factorKairos) :
                new ObjectParameter("FactorKairos", typeof(decimal));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CM_CO_ListaBaseComponente>("USP_CM_CO_ListaBaseComponente_lista", idListaBaseParameter, tipoComponenteParameter, codigoComponenteParameter, periodoParameter, monedaParameter, precioUnitarioListaParameter, precioUnitarioListaLocalParameter, precioUnitarioBaseParameter, precioUnitarioBaseLocalParameter, fechaValidezInicioParameter, fechaValidezFinParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, indicadorPrecioCeroParameter, factorParameter, tipoFactorParameter, indicadorFactorParameter, precioCostoParameter, factorCostoParameter, precioKairosParameter, factorKairosParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<CM_CO_ListaBaseComponente> USP_CM_CO_ListaBaseComponente_lista(Nullable<int> idListaBase, string tipoComponente, string codigoComponente, Nullable<int> periodo, string moneda, Nullable<decimal> precioUnitarioLista, Nullable<decimal> precioUnitarioListaLocal, Nullable<decimal> precioUnitarioBase, Nullable<decimal> precioUnitarioBaseLocal, Nullable<System.DateTime> fechaValidezInicio, Nullable<System.DateTime> fechaValidezFin, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> indicadorPrecioCero, Nullable<decimal> factor, string tipoFactor, Nullable<int> indicadorFactor, Nullable<decimal> precioCosto, Nullable<decimal> factorCosto, Nullable<decimal> precioKairos, Nullable<decimal> factorKairos, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(CM_CO_ListaBaseComponente).Assembly);
    
            var idListaBaseParameter = idListaBase.HasValue ?
                new ObjectParameter("IdListaBase", idListaBase) :
                new ObjectParameter("IdListaBase", typeof(int));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var precioUnitarioListaParameter = precioUnitarioLista.HasValue ?
                new ObjectParameter("PrecioUnitarioLista", precioUnitarioLista) :
                new ObjectParameter("PrecioUnitarioLista", typeof(decimal));
    
            var precioUnitarioListaLocalParameter = precioUnitarioListaLocal.HasValue ?
                new ObjectParameter("PrecioUnitarioListaLocal", precioUnitarioListaLocal) :
                new ObjectParameter("PrecioUnitarioListaLocal", typeof(decimal));
    
            var precioUnitarioBaseParameter = precioUnitarioBase.HasValue ?
                new ObjectParameter("PrecioUnitarioBase", precioUnitarioBase) :
                new ObjectParameter("PrecioUnitarioBase", typeof(decimal));
    
            var precioUnitarioBaseLocalParameter = precioUnitarioBaseLocal.HasValue ?
                new ObjectParameter("PrecioUnitarioBaseLocal", precioUnitarioBaseLocal) :
                new ObjectParameter("PrecioUnitarioBaseLocal", typeof(decimal));
    
            var fechaValidezInicioParameter = fechaValidezInicio.HasValue ?
                new ObjectParameter("FechaValidezInicio", fechaValidezInicio) :
                new ObjectParameter("FechaValidezInicio", typeof(System.DateTime));
    
            var fechaValidezFinParameter = fechaValidezFin.HasValue ?
                new ObjectParameter("FechaValidezFin", fechaValidezFin) :
                new ObjectParameter("FechaValidezFin", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var indicadorPrecioCeroParameter = indicadorPrecioCero.HasValue ?
                new ObjectParameter("IndicadorPrecioCero", indicadorPrecioCero) :
                new ObjectParameter("IndicadorPrecioCero", typeof(int));
    
            var factorParameter = factor.HasValue ?
                new ObjectParameter("Factor", factor) :
                new ObjectParameter("Factor", typeof(decimal));
    
            var tipoFactorParameter = tipoFactor != null ?
                new ObjectParameter("TipoFactor", tipoFactor) :
                new ObjectParameter("TipoFactor", typeof(string));
    
            var indicadorFactorParameter = indicadorFactor.HasValue ?
                new ObjectParameter("IndicadorFactor", indicadorFactor) :
                new ObjectParameter("IndicadorFactor", typeof(int));
    
            var precioCostoParameter = precioCosto.HasValue ?
                new ObjectParameter("PrecioCosto", precioCosto) :
                new ObjectParameter("PrecioCosto", typeof(decimal));
    
            var factorCostoParameter = factorCosto.HasValue ?
                new ObjectParameter("FactorCosto", factorCosto) :
                new ObjectParameter("FactorCosto", typeof(decimal));
    
            var precioKairosParameter = precioKairos.HasValue ?
                new ObjectParameter("PrecioKairos", precioKairos) :
                new ObjectParameter("PrecioKairos", typeof(decimal));
    
            var factorKairosParameter = factorKairos.HasValue ?
                new ObjectParameter("FactorKairos", factorKairos) :
                new ObjectParameter("FactorKairos", typeof(decimal));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CM_CO_ListaBaseComponente>("USP_CM_CO_ListaBaseComponente_lista", mergeOption, idListaBaseParameter, tipoComponenteParameter, codigoComponenteParameter, periodoParameter, monedaParameter, precioUnitarioListaParameter, precioUnitarioListaLocalParameter, precioUnitarioBaseParameter, precioUnitarioBaseLocalParameter, fechaValidezInicioParameter, fechaValidezFinParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, indicadorPrecioCeroParameter, factorParameter, tipoFactorParameter, indicadorFactorParameter, precioCostoParameter, factorCostoParameter, precioKairosParameter, factorKairosParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CM_CO_ListaBaseComponente_mantenimiento(Nullable<int> idListaBase, string tipoComponente, string codigoComponente, Nullable<int> periodo, string moneda, Nullable<decimal> precioUnitarioLista, Nullable<decimal> precioUnitarioListaLocal, Nullable<decimal> precioUnitarioBase, Nullable<decimal> precioUnitarioBaseLocal, Nullable<System.DateTime> fechaValidezInicio, Nullable<System.DateTime> fechaValidezFin, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> indicadorPrecioCero, Nullable<decimal> factor, string tipoFactor, Nullable<int> indicadorFactor, Nullable<decimal> precioCosto, Nullable<decimal> factorCosto, Nullable<decimal> precioKairos, Nullable<decimal> factorKairos, string accion)
        {
            var idListaBaseParameter = idListaBase.HasValue ?
                new ObjectParameter("IdListaBase", idListaBase) :
                new ObjectParameter("IdListaBase", typeof(int));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("Moneda", moneda) :
                new ObjectParameter("Moneda", typeof(string));
    
            var precioUnitarioListaParameter = precioUnitarioLista.HasValue ?
                new ObjectParameter("PrecioUnitarioLista", precioUnitarioLista) :
                new ObjectParameter("PrecioUnitarioLista", typeof(decimal));
    
            var precioUnitarioListaLocalParameter = precioUnitarioListaLocal.HasValue ?
                new ObjectParameter("PrecioUnitarioListaLocal", precioUnitarioListaLocal) :
                new ObjectParameter("PrecioUnitarioListaLocal", typeof(decimal));
    
            var precioUnitarioBaseParameter = precioUnitarioBase.HasValue ?
                new ObjectParameter("PrecioUnitarioBase", precioUnitarioBase) :
                new ObjectParameter("PrecioUnitarioBase", typeof(decimal));
    
            var precioUnitarioBaseLocalParameter = precioUnitarioBaseLocal.HasValue ?
                new ObjectParameter("PrecioUnitarioBaseLocal", precioUnitarioBaseLocal) :
                new ObjectParameter("PrecioUnitarioBaseLocal", typeof(decimal));
    
            var fechaValidezInicioParameter = fechaValidezInicio.HasValue ?
                new ObjectParameter("FechaValidezInicio", fechaValidezInicio) :
                new ObjectParameter("FechaValidezInicio", typeof(System.DateTime));
    
            var fechaValidezFinParameter = fechaValidezFin.HasValue ?
                new ObjectParameter("FechaValidezFin", fechaValidezFin) :
                new ObjectParameter("FechaValidezFin", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var indicadorPrecioCeroParameter = indicadorPrecioCero.HasValue ?
                new ObjectParameter("IndicadorPrecioCero", indicadorPrecioCero) :
                new ObjectParameter("IndicadorPrecioCero", typeof(int));
    
            var factorParameter = factor.HasValue ?
                new ObjectParameter("Factor", factor) :
                new ObjectParameter("Factor", typeof(decimal));
    
            var tipoFactorParameter = tipoFactor != null ?
                new ObjectParameter("TipoFactor", tipoFactor) :
                new ObjectParameter("TipoFactor", typeof(string));
    
            var indicadorFactorParameter = indicadorFactor.HasValue ?
                new ObjectParameter("IndicadorFactor", indicadorFactor) :
                new ObjectParameter("IndicadorFactor", typeof(int));
    
            var precioCostoParameter = precioCosto.HasValue ?
                new ObjectParameter("PrecioCosto", precioCosto) :
                new ObjectParameter("PrecioCosto", typeof(decimal));
    
            var factorCostoParameter = factorCosto.HasValue ?
                new ObjectParameter("FactorCosto", factorCosto) :
                new ObjectParameter("FactorCosto", typeof(decimal));
    
            var precioKairosParameter = precioKairos.HasValue ?
                new ObjectParameter("PrecioKairos", precioKairos) :
                new ObjectParameter("PrecioKairos", typeof(decimal));
    
            var factorKairosParameter = factorKairos.HasValue ?
                new ObjectParameter("FactorKairos", factorKairos) :
                new ObjectParameter("FactorKairos", typeof(decimal));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CM_CO_ListaBaseComponente_mantenimiento", idListaBaseParameter, tipoComponenteParameter, codigoComponenteParameter, periodoParameter, monedaParameter, precioUnitarioListaParameter, precioUnitarioListaLocalParameter, precioUnitarioBaseParameter, precioUnitarioBaseLocalParameter, fechaValidezInicioParameter, fechaValidezFinParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, indicadorPrecioCeroParameter, factorParameter, tipoFactorParameter, indicadorFactorParameter, precioCostoParameter, factorCostoParameter, precioKairosParameter, factorKairosParameter, accionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_GE_TipoAtencion(Nullable<int> idTipoAtencion, string codigo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string clasificadorMovimiento, string accion, string version)
        {
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("IdTipoAtencion", idTipoAtencion) :
                new ObjectParameter("IdTipoAtencion", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_GE_TipoAtencion", idTipoAtencionParameter, codigoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, clasificadorMovimientoParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_GE_TipoAtencion> USP_SS_HC_GE_TipoAtencionListar(Nullable<int> idTipoAtencion, string codigo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string clasificadorMovimiento, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_TipoAtencion).Assembly);
    
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("IdTipoAtencion", idTipoAtencion) :
                new ObjectParameter("IdTipoAtencion", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_TipoAtencion>("USP_SS_HC_GE_TipoAtencionListar", idTipoAtencionParameter, codigoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, clasificadorMovimientoParameter, iNICIOParameter, nUMEROFILASParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_GE_TipoAtencion> USP_SS_HC_GE_TipoAtencionListar(Nullable<int> idTipoAtencion, string codigo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string clasificadorMovimiento, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_TipoAtencion).Assembly);
    
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("IdTipoAtencion", idTipoAtencion) :
                new ObjectParameter("IdTipoAtencion", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_TipoAtencion>("USP_SS_HC_GE_TipoAtencionListar", mergeOption, idTipoAtencionParameter, codigoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, clasificadorMovimientoParameter, iNICIOParameter, nUMEROFILASParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_GE_ClasificadorMovimiento(string clasificadorMovimiento, string clasificadorMovimientoGrupo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string flujodeCaja, string centroCosto, string accion, string version)
        {
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var clasificadorMovimientoGrupoParameter = clasificadorMovimientoGrupo != null ?
                new ObjectParameter("ClasificadorMovimientoGrupo", clasificadorMovimientoGrupo) :
                new ObjectParameter("ClasificadorMovimientoGrupo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var flujodeCajaParameter = flujodeCaja != null ?
                new ObjectParameter("FlujodeCaja", flujodeCaja) :
                new ObjectParameter("FlujodeCaja", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_GE_ClasificadorMovimiento", clasificadorMovimientoParameter, clasificadorMovimientoGrupoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, flujodeCajaParameter, centroCostoParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<GE_ClasificadorMovimiento> USP_SS_HC_GE_ClasificadorMovimientoListar(string clasificadorMovimiento, string clasificadorMovimientoGrupo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string flujodeCaja, string centroCosto, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GE_ClasificadorMovimiento).Assembly);
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var clasificadorMovimientoGrupoParameter = clasificadorMovimientoGrupo != null ?
                new ObjectParameter("ClasificadorMovimientoGrupo", clasificadorMovimientoGrupo) :
                new ObjectParameter("ClasificadorMovimientoGrupo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var flujodeCajaParameter = flujodeCaja != null ?
                new ObjectParameter("FlujodeCaja", flujodeCaja) :
                new ObjectParameter("FlujodeCaja", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GE_ClasificadorMovimiento>("USP_SS_HC_GE_ClasificadorMovimientoListar", clasificadorMovimientoParameter, clasificadorMovimientoGrupoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, flujodeCajaParameter, centroCostoParameter, iNICIOParameter, nUMEROFILASParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<GE_ClasificadorMovimiento> USP_SS_HC_GE_ClasificadorMovimientoListar(string clasificadorMovimiento, string clasificadorMovimientoGrupo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string flujodeCaja, string centroCosto, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GE_ClasificadorMovimiento).Assembly);
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var clasificadorMovimientoGrupoParameter = clasificadorMovimientoGrupo != null ?
                new ObjectParameter("ClasificadorMovimientoGrupo", clasificadorMovimientoGrupo) :
                new ObjectParameter("ClasificadorMovimientoGrupo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var flujodeCajaParameter = flujodeCaja != null ?
                new ObjectParameter("FlujodeCaja", flujodeCaja) :
                new ObjectParameter("FlujodeCaja", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GE_ClasificadorMovimiento>("USP_SS_HC_GE_ClasificadorMovimientoListar", mergeOption, clasificadorMovimientoParameter, clasificadorMovimientoGrupoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, flujodeCajaParameter, centroCostoParameter, iNICIOParameter, nUMEROFILASParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_GE_Especialidad> USP_SS_GE_Especialidad_listar(Nullable<int> idEspecialidad, string codigo, string nombre, string descripcion, Nullable<decimal> tiempoPromedioAtencion, Nullable<int> formularioInicial, Nullable<int> formularioFinal, Nullable<int> formularioInforme, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> cantidadCitasAdicional, Nullable<int> atencionPeriodoCronico, Nullable<int> indicadorValidarFlujo, Nullable<int> reporteCita, string foto, string descripcion_det, Nullable<int> indicadorWeb, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_Especialidad).Assembly);
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tiempoPromedioAtencionParameter = tiempoPromedioAtencion.HasValue ?
                new ObjectParameter("TiempoPromedioAtencion", tiempoPromedioAtencion) :
                new ObjectParameter("TiempoPromedioAtencion", typeof(decimal));
    
            var formularioInicialParameter = formularioInicial.HasValue ?
                new ObjectParameter("FormularioInicial", formularioInicial) :
                new ObjectParameter("FormularioInicial", typeof(int));
    
            var formularioFinalParameter = formularioFinal.HasValue ?
                new ObjectParameter("FormularioFinal", formularioFinal) :
                new ObjectParameter("FormularioFinal", typeof(int));
    
            var formularioInformeParameter = formularioInforme.HasValue ?
                new ObjectParameter("FormularioInforme", formularioInforme) :
                new ObjectParameter("FormularioInforme", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var cantidadCitasAdicionalParameter = cantidadCitasAdicional.HasValue ?
                new ObjectParameter("CantidadCitasAdicional", cantidadCitasAdicional) :
                new ObjectParameter("CantidadCitasAdicional", typeof(int));
    
            var atencionPeriodoCronicoParameter = atencionPeriodoCronico.HasValue ?
                new ObjectParameter("AtencionPeriodoCronico", atencionPeriodoCronico) :
                new ObjectParameter("AtencionPeriodoCronico", typeof(int));
    
            var indicadorValidarFlujoParameter = indicadorValidarFlujo.HasValue ?
                new ObjectParameter("IndicadorValidarFlujo", indicadorValidarFlujo) :
                new ObjectParameter("IndicadorValidarFlujo", typeof(int));
    
            var reporteCitaParameter = reporteCita.HasValue ?
                new ObjectParameter("ReporteCita", reporteCita) :
                new ObjectParameter("ReporteCita", typeof(int));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(string));
    
            var descripcion_detParameter = descripcion_det != null ?
                new ObjectParameter("descripcion_det", descripcion_det) :
                new ObjectParameter("descripcion_det", typeof(string));
    
            var indicadorWebParameter = indicadorWeb.HasValue ?
                new ObjectParameter("IndicadorWeb", indicadorWeb) :
                new ObjectParameter("IndicadorWeb", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_Especialidad>("USP_SS_GE_Especialidad_listar", idEspecialidadParameter, codigoParameter, nombreParameter, descripcionParameter, tiempoPromedioAtencionParameter, formularioInicialParameter, formularioFinalParameter, formularioInformeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, cantidadCitasAdicionalParameter, atencionPeriodoCronicoParameter, indicadorValidarFlujoParameter, reporteCitaParameter, fotoParameter, descripcion_detParameter, indicadorWebParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_GE_Especialidad> USP_SS_GE_Especialidad_listar(Nullable<int> idEspecialidad, string codigo, string nombre, string descripcion, Nullable<decimal> tiempoPromedioAtencion, Nullable<int> formularioInicial, Nullable<int> formularioFinal, Nullable<int> formularioInforme, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> cantidadCitasAdicional, Nullable<int> atencionPeriodoCronico, Nullable<int> indicadorValidarFlujo, Nullable<int> reporteCita, string foto, string descripcion_det, Nullable<int> indicadorWeb, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_Especialidad).Assembly);
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tiempoPromedioAtencionParameter = tiempoPromedioAtencion.HasValue ?
                new ObjectParameter("TiempoPromedioAtencion", tiempoPromedioAtencion) :
                new ObjectParameter("TiempoPromedioAtencion", typeof(decimal));
    
            var formularioInicialParameter = formularioInicial.HasValue ?
                new ObjectParameter("FormularioInicial", formularioInicial) :
                new ObjectParameter("FormularioInicial", typeof(int));
    
            var formularioFinalParameter = formularioFinal.HasValue ?
                new ObjectParameter("FormularioFinal", formularioFinal) :
                new ObjectParameter("FormularioFinal", typeof(int));
    
            var formularioInformeParameter = formularioInforme.HasValue ?
                new ObjectParameter("FormularioInforme", formularioInforme) :
                new ObjectParameter("FormularioInforme", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var cantidadCitasAdicionalParameter = cantidadCitasAdicional.HasValue ?
                new ObjectParameter("CantidadCitasAdicional", cantidadCitasAdicional) :
                new ObjectParameter("CantidadCitasAdicional", typeof(int));
    
            var atencionPeriodoCronicoParameter = atencionPeriodoCronico.HasValue ?
                new ObjectParameter("AtencionPeriodoCronico", atencionPeriodoCronico) :
                new ObjectParameter("AtencionPeriodoCronico", typeof(int));
    
            var indicadorValidarFlujoParameter = indicadorValidarFlujo.HasValue ?
                new ObjectParameter("IndicadorValidarFlujo", indicadorValidarFlujo) :
                new ObjectParameter("IndicadorValidarFlujo", typeof(int));
    
            var reporteCitaParameter = reporteCita.HasValue ?
                new ObjectParameter("ReporteCita", reporteCita) :
                new ObjectParameter("ReporteCita", typeof(int));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(string));
    
            var descripcion_detParameter = descripcion_det != null ?
                new ObjectParameter("descripcion_det", descripcion_det) :
                new ObjectParameter("descripcion_det", typeof(string));
    
            var indicadorWebParameter = indicadorWeb.HasValue ?
                new ObjectParameter("IndicadorWeb", indicadorWeb) :
                new ObjectParameter("IndicadorWeb", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_Especialidad>("USP_SS_GE_Especialidad_listar", mergeOption, idEspecialidadParameter, codigoParameter, nombreParameter, descripcionParameter, tiempoPromedioAtencionParameter, formularioInicialParameter, formularioFinalParameter, formularioInformeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, cantidadCitasAdicionalParameter, atencionPeriodoCronicoParameter, indicadorValidarFlujoParameter, reporteCitaParameter, fotoParameter, descripcion_detParameter, indicadorWebParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_GE_Especialidad_mantenimiento(Nullable<int> idEspecialidad, string codigo, string nombre, string descripcion, Nullable<decimal> tiempoPromedioAtencion, Nullable<int> formularioInicial, Nullable<int> formularioFinal, Nullable<int> formularioInforme, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> cantidadCitasAdicional, Nullable<int> atencionPeriodoCronico, Nullable<int> indicadorValidarFlujo, Nullable<int> reporteCita, string foto, string descripcion_det, Nullable<int> indicadorWeb, string accion)
        {
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tiempoPromedioAtencionParameter = tiempoPromedioAtencion.HasValue ?
                new ObjectParameter("TiempoPromedioAtencion", tiempoPromedioAtencion) :
                new ObjectParameter("TiempoPromedioAtencion", typeof(decimal));
    
            var formularioInicialParameter = formularioInicial.HasValue ?
                new ObjectParameter("FormularioInicial", formularioInicial) :
                new ObjectParameter("FormularioInicial", typeof(int));
    
            var formularioFinalParameter = formularioFinal.HasValue ?
                new ObjectParameter("FormularioFinal", formularioFinal) :
                new ObjectParameter("FormularioFinal", typeof(int));
    
            var formularioInformeParameter = formularioInforme.HasValue ?
                new ObjectParameter("FormularioInforme", formularioInforme) :
                new ObjectParameter("FormularioInforme", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var cantidadCitasAdicionalParameter = cantidadCitasAdicional.HasValue ?
                new ObjectParameter("CantidadCitasAdicional", cantidadCitasAdicional) :
                new ObjectParameter("CantidadCitasAdicional", typeof(int));
    
            var atencionPeriodoCronicoParameter = atencionPeriodoCronico.HasValue ?
                new ObjectParameter("AtencionPeriodoCronico", atencionPeriodoCronico) :
                new ObjectParameter("AtencionPeriodoCronico", typeof(int));
    
            var indicadorValidarFlujoParameter = indicadorValidarFlujo.HasValue ?
                new ObjectParameter("IndicadorValidarFlujo", indicadorValidarFlujo) :
                new ObjectParameter("IndicadorValidarFlujo", typeof(int));
    
            var reporteCitaParameter = reporteCita.HasValue ?
                new ObjectParameter("ReporteCita", reporteCita) :
                new ObjectParameter("ReporteCita", typeof(int));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(string));
    
            var descripcion_detParameter = descripcion_det != null ?
                new ObjectParameter("descripcion_det", descripcion_det) :
                new ObjectParameter("descripcion_det", typeof(string));
    
            var indicadorWebParameter = indicadorWeb.HasValue ?
                new ObjectParameter("IndicadorWeb", indicadorWeb) :
                new ObjectParameter("IndicadorWeb", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_GE_Especialidad_mantenimiento", idEspecialidadParameter, codigoParameter, nombreParameter, descripcionParameter, tiempoPromedioAtencionParameter, formularioInicialParameter, formularioFinalParameter, formularioInformeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, cantidadCitasAdicionalParameter, atencionPeriodoCronicoParameter, indicadorValidarFlujoParameter, reporteCitaParameter, fotoParameter, descripcion_detParameter, indicadorWebParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_GE_EspecialidadOrdenMedica> USP_SS_GE_EspecialidadOrdenMedica_Lista(Nullable<int> idEspecialidad, Nullable<int> secuencial, Nullable<int> tipoOrdenMedica, Nullable<int> estado, Nullable<System.DateTime> fechaCreacion, string usuarioCreacion, Nullable<System.DateTime> fechaModificacion, string usuarioModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_EspecialidadOrdenMedica).Assembly);
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var tipoOrdenMedicaParameter = tipoOrdenMedica.HasValue ?
                new ObjectParameter("TipoOrdenMedica", tipoOrdenMedica) :
                new ObjectParameter("TipoOrdenMedica", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_EspecialidadOrdenMedica>("USP_SS_GE_EspecialidadOrdenMedica_Lista", idEspecialidadParameter, secuencialParameter, tipoOrdenMedicaParameter, estadoParameter, fechaCreacionParameter, usuarioCreacionParameter, fechaModificacionParameter, usuarioModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_GE_EspecialidadOrdenMedica> USP_SS_GE_EspecialidadOrdenMedica_Lista(Nullable<int> idEspecialidad, Nullable<int> secuencial, Nullable<int> tipoOrdenMedica, Nullable<int> estado, Nullable<System.DateTime> fechaCreacion, string usuarioCreacion, Nullable<System.DateTime> fechaModificacion, string usuarioModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_EspecialidadOrdenMedica).Assembly);
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var tipoOrdenMedicaParameter = tipoOrdenMedica.HasValue ?
                new ObjectParameter("TipoOrdenMedica", tipoOrdenMedica) :
                new ObjectParameter("TipoOrdenMedica", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_EspecialidadOrdenMedica>("USP_SS_GE_EspecialidadOrdenMedica_Lista", mergeOption, idEspecialidadParameter, secuencialParameter, tipoOrdenMedicaParameter, estadoParameter, fechaCreacionParameter, usuarioCreacionParameter, fechaModificacionParameter, usuarioModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_GE_EspecialidadOrdenMedica_mantenimiento(Nullable<int> idEspecialidad, Nullable<int> secuencial, Nullable<int> tipoOrdenMedica, Nullable<int> estado, Nullable<System.DateTime> fechaCreacion, string usuarioCreacion, Nullable<System.DateTime> fechaModificacion, string usuarioModificacion, string accion)
        {
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var tipoOrdenMedicaParameter = tipoOrdenMedica.HasValue ?
                new ObjectParameter("TipoOrdenMedica", tipoOrdenMedica) :
                new ObjectParameter("TipoOrdenMedica", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_GE_EspecialidadOrdenMedica_mantenimiento", idEspecialidadParameter, secuencialParameter, tipoOrdenMedicaParameter, estadoParameter, fechaCreacionParameter, usuarioCreacionParameter, fechaModificacionParameter, usuarioModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_SG_Grupo(Nullable<int> idGrupo, Nullable<int> idGrupoPadre, string codigoGrupo, string cadenaRecursividad, Nullable<int> nivelGrupo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string aCCION)
        {
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var idGrupoPadreParameter = idGrupoPadre.HasValue ?
                new ObjectParameter("IdGrupoPadre", idGrupoPadre) :
                new ObjectParameter("IdGrupoPadre", typeof(int));
    
            var codigoGrupoParameter = codigoGrupo != null ?
                new ObjectParameter("CodigoGrupo", codigoGrupo) :
                new ObjectParameter("CodigoGrupo", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelGrupoParameter = nivelGrupo.HasValue ?
                new ObjectParameter("NivelGrupo", nivelGrupo) :
                new ObjectParameter("NivelGrupo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_SG_Grupo", idGrupoParameter, idGrupoPadreParameter, codigoGrupoParameter, cadenaRecursividadParameter, nivelGrupoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SG_Grupo> USP_SS_HC_SG_Grupo_LISTAR(Nullable<int> idGrupo, Nullable<int> idGrupoPadre, string codigoGrupo, string cadenaRecursividad, Nullable<int> nivelGrupo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SG_Grupo).Assembly);
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var idGrupoPadreParameter = idGrupoPadre.HasValue ?
                new ObjectParameter("IdGrupoPadre", idGrupoPadre) :
                new ObjectParameter("IdGrupoPadre", typeof(int));
    
            var codigoGrupoParameter = codigoGrupo != null ?
                new ObjectParameter("CodigoGrupo", codigoGrupo) :
                new ObjectParameter("CodigoGrupo", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelGrupoParameter = nivelGrupo.HasValue ?
                new ObjectParameter("NivelGrupo", nivelGrupo) :
                new ObjectParameter("NivelGrupo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SG_Grupo>("USP_SS_HC_SG_Grupo_LISTAR", idGrupoParameter, idGrupoPadreParameter, codigoGrupoParameter, cadenaRecursividadParameter, nivelGrupoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SG_Grupo> USP_SS_HC_SG_Grupo_LISTAR(Nullable<int> idGrupo, Nullable<int> idGrupoPadre, string codigoGrupo, string cadenaRecursividad, Nullable<int> nivelGrupo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SG_Grupo).Assembly);
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var idGrupoPadreParameter = idGrupoPadre.HasValue ?
                new ObjectParameter("IdGrupoPadre", idGrupoPadre) :
                new ObjectParameter("IdGrupoPadre", typeof(int));
    
            var codigoGrupoParameter = codigoGrupo != null ?
                new ObjectParameter("CodigoGrupo", codigoGrupo) :
                new ObjectParameter("CodigoGrupo", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelGrupoParameter = nivelGrupo.HasValue ?
                new ObjectParameter("NivelGrupo", nivelGrupo) :
                new ObjectParameter("NivelGrupo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SG_Grupo>("USP_SS_HC_SG_Grupo_LISTAR", mergeOption, idGrupoParameter, idGrupoPadreParameter, codigoGrupoParameter, cadenaRecursividadParameter, nivelGrupoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_SG_MaestroCobertura(Nullable<int> idCobertura, string codigoCobertura, string nombre, string descripcion, Nullable<int> indicadorAmbulatorio, Nullable<int> indicadorEmergencia, Nullable<int> indicadorHospitalario, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string coderam, Nullable<int> tipoTabla, string aCCION, string vERSION)
        {
            var idCoberturaParameter = idCobertura.HasValue ?
                new ObjectParameter("IdCobertura", idCobertura) :
                new ObjectParameter("IdCobertura", typeof(int));
    
            var codigoCoberturaParameter = codigoCobertura != null ?
                new ObjectParameter("CodigoCobertura", codigoCobertura) :
                new ObjectParameter("CodigoCobertura", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var indicadorAmbulatorioParameter = indicadorAmbulatorio.HasValue ?
                new ObjectParameter("IndicadorAmbulatorio", indicadorAmbulatorio) :
                new ObjectParameter("IndicadorAmbulatorio", typeof(int));
    
            var indicadorEmergenciaParameter = indicadorEmergencia.HasValue ?
                new ObjectParameter("IndicadorEmergencia", indicadorEmergencia) :
                new ObjectParameter("IndicadorEmergencia", typeof(int));
    
            var indicadorHospitalarioParameter = indicadorHospitalario.HasValue ?
                new ObjectParameter("IndicadorHospitalario", indicadorHospitalario) :
                new ObjectParameter("IndicadorHospitalario", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var coderamParameter = coderam != null ?
                new ObjectParameter("Coderam", coderam) :
                new ObjectParameter("Coderam", typeof(string));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var vERSIONParameter = vERSION != null ?
                new ObjectParameter("VERSION", vERSION) :
                new ObjectParameter("VERSION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_SG_MaestroCobertura", idCoberturaParameter, codigoCoberturaParameter, nombreParameter, descripcionParameter, indicadorAmbulatorioParameter, indicadorEmergenciaParameter, indicadorHospitalarioParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, coderamParameter, tipoTablaParameter, aCCIONParameter, vERSIONParameter);
        }
    
        public virtual ObjectResult<SS_SG_MaestroCobertura> USP_SS_HC_SG_MaestroCoberturaListar(Nullable<int> idCobertura, string codigoCobertura, string nombre, string descripcion, Nullable<int> indicadorAmbulatorio, Nullable<int> indicadorEmergencia, Nullable<int> indicadorHospitalario, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string coderam, Nullable<int> tipoTabla, string aCCION, string vERSION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_SG_MaestroCobertura).Assembly);
    
            var idCoberturaParameter = idCobertura.HasValue ?
                new ObjectParameter("IdCobertura", idCobertura) :
                new ObjectParameter("IdCobertura", typeof(int));
    
            var codigoCoberturaParameter = codigoCobertura != null ?
                new ObjectParameter("CodigoCobertura", codigoCobertura) :
                new ObjectParameter("CodigoCobertura", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var indicadorAmbulatorioParameter = indicadorAmbulatorio.HasValue ?
                new ObjectParameter("IndicadorAmbulatorio", indicadorAmbulatorio) :
                new ObjectParameter("IndicadorAmbulatorio", typeof(int));
    
            var indicadorEmergenciaParameter = indicadorEmergencia.HasValue ?
                new ObjectParameter("IndicadorEmergencia", indicadorEmergencia) :
                new ObjectParameter("IndicadorEmergencia", typeof(int));
    
            var indicadorHospitalarioParameter = indicadorHospitalario.HasValue ?
                new ObjectParameter("IndicadorHospitalario", indicadorHospitalario) :
                new ObjectParameter("IndicadorHospitalario", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var coderamParameter = coderam != null ?
                new ObjectParameter("Coderam", coderam) :
                new ObjectParameter("Coderam", typeof(string));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var vERSIONParameter = vERSION != null ?
                new ObjectParameter("VERSION", vERSION) :
                new ObjectParameter("VERSION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_SG_MaestroCobertura>("USP_SS_HC_SG_MaestroCoberturaListar", idCoberturaParameter, codigoCoberturaParameter, nombreParameter, descripcionParameter, indicadorAmbulatorioParameter, indicadorEmergenciaParameter, indicadorHospitalarioParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, coderamParameter, tipoTablaParameter, aCCIONParameter, vERSIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_SG_MaestroCobertura> USP_SS_HC_SG_MaestroCoberturaListar(Nullable<int> idCobertura, string codigoCobertura, string nombre, string descripcion, Nullable<int> indicadorAmbulatorio, Nullable<int> indicadorEmergencia, Nullable<int> indicadorHospitalario, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string coderam, Nullable<int> tipoTabla, string aCCION, string vERSION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_SG_MaestroCobertura).Assembly);
    
            var idCoberturaParameter = idCobertura.HasValue ?
                new ObjectParameter("IdCobertura", idCobertura) :
                new ObjectParameter("IdCobertura", typeof(int));
    
            var codigoCoberturaParameter = codigoCobertura != null ?
                new ObjectParameter("CodigoCobertura", codigoCobertura) :
                new ObjectParameter("CodigoCobertura", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var indicadorAmbulatorioParameter = indicadorAmbulatorio.HasValue ?
                new ObjectParameter("IndicadorAmbulatorio", indicadorAmbulatorio) :
                new ObjectParameter("IndicadorAmbulatorio", typeof(int));
    
            var indicadorEmergenciaParameter = indicadorEmergencia.HasValue ?
                new ObjectParameter("IndicadorEmergencia", indicadorEmergencia) :
                new ObjectParameter("IndicadorEmergencia", typeof(int));
    
            var indicadorHospitalarioParameter = indicadorHospitalario.HasValue ?
                new ObjectParameter("IndicadorHospitalario", indicadorHospitalario) :
                new ObjectParameter("IndicadorHospitalario", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var coderamParameter = coderam != null ?
                new ObjectParameter("Coderam", coderam) :
                new ObjectParameter("Coderam", typeof(string));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var vERSIONParameter = vERSION != null ?
                new ObjectParameter("VERSION", vERSION) :
                new ObjectParameter("VERSION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_SG_MaestroCobertura>("USP_SS_HC_SG_MaestroCoberturaListar", mergeOption, idCoberturaParameter, codigoCoberturaParameter, nombreParameter, descripcionParameter, indicadorAmbulatorioParameter, indicadorEmergenciaParameter, indicadorHospitalarioParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, coderamParameter, tipoTablaParameter, aCCIONParameter, vERSIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_SG_Opcion(Nullable<int> idOpcion, Nullable<int> idOpcionPadre, string codigoOpcion, string cadenaRecursividad, Nullable<int> nivelOpcion, string nombre, string descripcion, string sistema, string modulo, string subModulo, Nullable<int> orden, string tipoOpcion, Nullable<int> tipoIcono, Nullable<int> indicadorPrioridad, Nullable<int> indicadorObjeto, Nullable<int> idObjetoAsociado, string tipoDato, string valorTexto, Nullable<decimal> valorNumerico, Nullable<System.DateTime> valorFecha, string urlOpcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string compania, Nullable<int> indicadorCompania, Nullable<int> idTipoAtencion, string tipoTrabajador, Nullable<int> indicadorFormato, Nullable<int> idFormato, Nullable<int> indicadorAsignacion, Nullable<int> tipoProceso, string version, Nullable<int> estado, string aCCION)
        {
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var idOpcionPadreParameter = idOpcionPadre.HasValue ?
                new ObjectParameter("IdOpcionPadre", idOpcionPadre) :
                new ObjectParameter("IdOpcionPadre", typeof(int));
    
            var codigoOpcionParameter = codigoOpcion != null ?
                new ObjectParameter("CodigoOpcion", codigoOpcion) :
                new ObjectParameter("CodigoOpcion", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelOpcionParameter = nivelOpcion.HasValue ?
                new ObjectParameter("NivelOpcion", nivelOpcion) :
                new ObjectParameter("NivelOpcion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var subModuloParameter = subModulo != null ?
                new ObjectParameter("SubModulo", subModulo) :
                new ObjectParameter("SubModulo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var tipoOpcionParameter = tipoOpcion != null ?
                new ObjectParameter("TipoOpcion", tipoOpcion) :
                new ObjectParameter("TipoOpcion", typeof(string));
    
            var tipoIconoParameter = tipoIcono.HasValue ?
                new ObjectParameter("TipoIcono", tipoIcono) :
                new ObjectParameter("TipoIcono", typeof(int));
    
            var indicadorPrioridadParameter = indicadorPrioridad.HasValue ?
                new ObjectParameter("IndicadorPrioridad", indicadorPrioridad) :
                new ObjectParameter("IndicadorPrioridad", typeof(int));
    
            var indicadorObjetoParameter = indicadorObjeto.HasValue ?
                new ObjectParameter("IndicadorObjeto", indicadorObjeto) :
                new ObjectParameter("IndicadorObjeto", typeof(int));
    
            var idObjetoAsociadoParameter = idObjetoAsociado.HasValue ?
                new ObjectParameter("IdObjetoAsociado", idObjetoAsociado) :
                new ObjectParameter("IdObjetoAsociado", typeof(int));
    
            var tipoDatoParameter = tipoDato != null ?
                new ObjectParameter("TipoDato", tipoDato) :
                new ObjectParameter("TipoDato", typeof(string));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var urlOpcionParameter = urlOpcion != null ?
                new ObjectParameter("UrlOpcion", urlOpcion) :
                new ObjectParameter("UrlOpcion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var indicadorCompaniaParameter = indicadorCompania.HasValue ?
                new ObjectParameter("IndicadorCompania", indicadorCompania) :
                new ObjectParameter("IndicadorCompania", typeof(int));
    
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("idTipoAtencion", idTipoAtencion) :
                new ObjectParameter("idTipoAtencion", typeof(int));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("TipoTrabajador", tipoTrabajador) :
                new ObjectParameter("TipoTrabajador", typeof(string));
    
            var indicadorFormatoParameter = indicadorFormato.HasValue ?
                new ObjectParameter("IndicadorFormato", indicadorFormato) :
                new ObjectParameter("IndicadorFormato", typeof(int));
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var indicadorAsignacionParameter = indicadorAsignacion.HasValue ?
                new ObjectParameter("IndicadorAsignacion", indicadorAsignacion) :
                new ObjectParameter("IndicadorAsignacion", typeof(int));
    
            var tipoProcesoParameter = tipoProceso.HasValue ?
                new ObjectParameter("TipoProceso", tipoProceso) :
                new ObjectParameter("TipoProceso", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_SG_Opcion", idOpcionParameter, idOpcionPadreParameter, codigoOpcionParameter, cadenaRecursividadParameter, nivelOpcionParameter, nombreParameter, descripcionParameter, sistemaParameter, moduloParameter, subModuloParameter, ordenParameter, tipoOpcionParameter, tipoIconoParameter, indicadorPrioridadParameter, indicadorObjetoParameter, idObjetoAsociadoParameter, tipoDatoParameter, valorTextoParameter, valorNumericoParameter, valorFechaParameter, urlOpcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, companiaParameter, indicadorCompaniaParameter, idTipoAtencionParameter, tipoTrabajadorParameter, indicadorFormatoParameter, idFormatoParameter, indicadorAsignacionParameter, tipoProcesoParameter, versionParameter, estadoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SG_Opcion> USP_SS_HC_SG_Opcion_LISTAR(Nullable<int> idOpcion, Nullable<int> idOpcionPadre, string codigoOpcion, string cadenaRecursividad, Nullable<int> nivelOpcion, string nombre, string descripcion, string sistema, string modulo, string subModulo, Nullable<int> orden, string tipoOpcion, Nullable<int> tipoIcono, Nullable<int> indicadorPrioridad, Nullable<int> indicadorObjeto, Nullable<int> idObjetoAsociado, string tipoDato, string valorTexto, Nullable<decimal> valorNumerico, Nullable<System.DateTime> valorFecha, string urlOpcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string compania, Nullable<int> indicadorCompania, Nullable<int> idTipoAtencion, string tipoTrabajador, Nullable<int> indicadorFormato, Nullable<int> idFormato, Nullable<int> indicadorAsignacion, Nullable<int> tipoProceso, string version, Nullable<int> estado, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SG_Opcion).Assembly);
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var idOpcionPadreParameter = idOpcionPadre.HasValue ?
                new ObjectParameter("IdOpcionPadre", idOpcionPadre) :
                new ObjectParameter("IdOpcionPadre", typeof(int));
    
            var codigoOpcionParameter = codigoOpcion != null ?
                new ObjectParameter("CodigoOpcion", codigoOpcion) :
                new ObjectParameter("CodigoOpcion", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelOpcionParameter = nivelOpcion.HasValue ?
                new ObjectParameter("NivelOpcion", nivelOpcion) :
                new ObjectParameter("NivelOpcion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var subModuloParameter = subModulo != null ?
                new ObjectParameter("SubModulo", subModulo) :
                new ObjectParameter("SubModulo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var tipoOpcionParameter = tipoOpcion != null ?
                new ObjectParameter("TipoOpcion", tipoOpcion) :
                new ObjectParameter("TipoOpcion", typeof(string));
    
            var tipoIconoParameter = tipoIcono.HasValue ?
                new ObjectParameter("TipoIcono", tipoIcono) :
                new ObjectParameter("TipoIcono", typeof(int));
    
            var indicadorPrioridadParameter = indicadorPrioridad.HasValue ?
                new ObjectParameter("IndicadorPrioridad", indicadorPrioridad) :
                new ObjectParameter("IndicadorPrioridad", typeof(int));
    
            var indicadorObjetoParameter = indicadorObjeto.HasValue ?
                new ObjectParameter("IndicadorObjeto", indicadorObjeto) :
                new ObjectParameter("IndicadorObjeto", typeof(int));
    
            var idObjetoAsociadoParameter = idObjetoAsociado.HasValue ?
                new ObjectParameter("IdObjetoAsociado", idObjetoAsociado) :
                new ObjectParameter("IdObjetoAsociado", typeof(int));
    
            var tipoDatoParameter = tipoDato != null ?
                new ObjectParameter("TipoDato", tipoDato) :
                new ObjectParameter("TipoDato", typeof(string));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var urlOpcionParameter = urlOpcion != null ?
                new ObjectParameter("UrlOpcion", urlOpcion) :
                new ObjectParameter("UrlOpcion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var indicadorCompaniaParameter = indicadorCompania.HasValue ?
                new ObjectParameter("IndicadorCompania", indicadorCompania) :
                new ObjectParameter("IndicadorCompania", typeof(int));
    
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("idTipoAtencion", idTipoAtencion) :
                new ObjectParameter("idTipoAtencion", typeof(int));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("TipoTrabajador", tipoTrabajador) :
                new ObjectParameter("TipoTrabajador", typeof(string));
    
            var indicadorFormatoParameter = indicadorFormato.HasValue ?
                new ObjectParameter("IndicadorFormato", indicadorFormato) :
                new ObjectParameter("IndicadorFormato", typeof(int));
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var indicadorAsignacionParameter = indicadorAsignacion.HasValue ?
                new ObjectParameter("IndicadorAsignacion", indicadorAsignacion) :
                new ObjectParameter("IndicadorAsignacion", typeof(int));
    
            var tipoProcesoParameter = tipoProceso.HasValue ?
                new ObjectParameter("TipoProceso", tipoProceso) :
                new ObjectParameter("TipoProceso", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SG_Opcion>("USP_SS_HC_SG_Opcion_LISTAR", idOpcionParameter, idOpcionPadreParameter, codigoOpcionParameter, cadenaRecursividadParameter, nivelOpcionParameter, nombreParameter, descripcionParameter, sistemaParameter, moduloParameter, subModuloParameter, ordenParameter, tipoOpcionParameter, tipoIconoParameter, indicadorPrioridadParameter, indicadorObjetoParameter, idObjetoAsociadoParameter, tipoDatoParameter, valorTextoParameter, valorNumericoParameter, valorFechaParameter, urlOpcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, companiaParameter, indicadorCompaniaParameter, idTipoAtencionParameter, tipoTrabajadorParameter, indicadorFormatoParameter, idFormatoParameter, indicadorAsignacionParameter, tipoProcesoParameter, versionParameter, estadoParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SG_Opcion> USP_SS_HC_SG_Opcion_LISTAR(Nullable<int> idOpcion, Nullable<int> idOpcionPadre, string codigoOpcion, string cadenaRecursividad, Nullable<int> nivelOpcion, string nombre, string descripcion, string sistema, string modulo, string subModulo, Nullable<int> orden, string tipoOpcion, Nullable<int> tipoIcono, Nullable<int> indicadorPrioridad, Nullable<int> indicadorObjeto, Nullable<int> idObjetoAsociado, string tipoDato, string valorTexto, Nullable<decimal> valorNumerico, Nullable<System.DateTime> valorFecha, string urlOpcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string compania, Nullable<int> indicadorCompania, Nullable<int> idTipoAtencion, string tipoTrabajador, Nullable<int> indicadorFormato, Nullable<int> idFormato, Nullable<int> indicadorAsignacion, Nullable<int> tipoProceso, string version, Nullable<int> estado, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SG_Opcion).Assembly);
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var idOpcionPadreParameter = idOpcionPadre.HasValue ?
                new ObjectParameter("IdOpcionPadre", idOpcionPadre) :
                new ObjectParameter("IdOpcionPadre", typeof(int));
    
            var codigoOpcionParameter = codigoOpcion != null ?
                new ObjectParameter("CodigoOpcion", codigoOpcion) :
                new ObjectParameter("CodigoOpcion", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelOpcionParameter = nivelOpcion.HasValue ?
                new ObjectParameter("NivelOpcion", nivelOpcion) :
                new ObjectParameter("NivelOpcion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var subModuloParameter = subModulo != null ?
                new ObjectParameter("SubModulo", subModulo) :
                new ObjectParameter("SubModulo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var tipoOpcionParameter = tipoOpcion != null ?
                new ObjectParameter("TipoOpcion", tipoOpcion) :
                new ObjectParameter("TipoOpcion", typeof(string));
    
            var tipoIconoParameter = tipoIcono.HasValue ?
                new ObjectParameter("TipoIcono", tipoIcono) :
                new ObjectParameter("TipoIcono", typeof(int));
    
            var indicadorPrioridadParameter = indicadorPrioridad.HasValue ?
                new ObjectParameter("IndicadorPrioridad", indicadorPrioridad) :
                new ObjectParameter("IndicadorPrioridad", typeof(int));
    
            var indicadorObjetoParameter = indicadorObjeto.HasValue ?
                new ObjectParameter("IndicadorObjeto", indicadorObjeto) :
                new ObjectParameter("IndicadorObjeto", typeof(int));
    
            var idObjetoAsociadoParameter = idObjetoAsociado.HasValue ?
                new ObjectParameter("IdObjetoAsociado", idObjetoAsociado) :
                new ObjectParameter("IdObjetoAsociado", typeof(int));
    
            var tipoDatoParameter = tipoDato != null ?
                new ObjectParameter("TipoDato", tipoDato) :
                new ObjectParameter("TipoDato", typeof(string));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var urlOpcionParameter = urlOpcion != null ?
                new ObjectParameter("UrlOpcion", urlOpcion) :
                new ObjectParameter("UrlOpcion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var indicadorCompaniaParameter = indicadorCompania.HasValue ?
                new ObjectParameter("IndicadorCompania", indicadorCompania) :
                new ObjectParameter("IndicadorCompania", typeof(int));
    
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("idTipoAtencion", idTipoAtencion) :
                new ObjectParameter("idTipoAtencion", typeof(int));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("TipoTrabajador", tipoTrabajador) :
                new ObjectParameter("TipoTrabajador", typeof(string));
    
            var indicadorFormatoParameter = indicadorFormato.HasValue ?
                new ObjectParameter("IndicadorFormato", indicadorFormato) :
                new ObjectParameter("IndicadorFormato", typeof(int));
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var indicadorAsignacionParameter = indicadorAsignacion.HasValue ?
                new ObjectParameter("IndicadorAsignacion", indicadorAsignacion) :
                new ObjectParameter("IndicadorAsignacion", typeof(int));
    
            var tipoProcesoParameter = tipoProceso.HasValue ?
                new ObjectParameter("TipoProceso", tipoProceso) :
                new ObjectParameter("TipoProceso", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SG_Opcion>("USP_SS_HC_SG_Opcion_LISTAR", mergeOption, idOpcionParameter, idOpcionPadreParameter, codigoOpcionParameter, cadenaRecursividadParameter, nivelOpcionParameter, nombreParameter, descripcionParameter, sistemaParameter, moduloParameter, subModuloParameter, ordenParameter, tipoOpcionParameter, tipoIconoParameter, indicadorPrioridadParameter, indicadorObjetoParameter, idObjetoAsociadoParameter, tipoDatoParameter, valorTextoParameter, valorNumericoParameter, valorFechaParameter, urlOpcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, companiaParameter, indicadorCompaniaParameter, idTipoAtencionParameter, tipoTrabajadorParameter, indicadorFormatoParameter, idFormatoParameter, indicadorAsignacionParameter, tipoProcesoParameter, versionParameter, estadoParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_FormatoRecursoCampo> USP_SS_HC_FormatoRecursoCampo_Listar(Nullable<int> idFormato, Nullable<int> secuenciaCampo, Nullable<int> idFavoritoTabla, string nombreCampoRecurso, string accion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FormatoRecursoCampo).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var nombreCampoRecursoParameter = nombreCampoRecurso != null ?
                new ObjectParameter("NombreCampoRecurso", nombreCampoRecurso) :
                new ObjectParameter("NombreCampoRecurso", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FormatoRecursoCampo>("USP_SS_HC_FormatoRecursoCampo_Listar", idFormatoParameter, secuenciaCampoParameter, idFavoritoTablaParameter, nombreCampoRecursoParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_FormatoRecursoCampo> USP_SS_HC_FormatoRecursoCampo_Listar(Nullable<int> idFormato, Nullable<int> secuenciaCampo, Nullable<int> idFavoritoTabla, string nombreCampoRecurso, string accion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FormatoRecursoCampo).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var nombreCampoRecursoParameter = nombreCampoRecurso != null ?
                new ObjectParameter("NombreCampoRecurso", nombreCampoRecurso) :
                new ObjectParameter("NombreCampoRecurso", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FormatoRecursoCampo>("USP_SS_HC_FormatoRecursoCampo_Listar", mergeOption, idFormatoParameter, secuenciaCampoParameter, idFavoritoTablaParameter, nombreCampoRecursoParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_FormatoRecursoCampo_Mantenimiento(Nullable<int> idFormato, Nullable<int> secuenciaCampo, Nullable<int> idFavoritoTabla, string nombreCampoRecurso, string accion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var nombreCampoRecursoParameter = nombreCampoRecurso != null ?
                new ObjectParameter("NombreCampoRecurso", nombreCampoRecurso) :
                new ObjectParameter("NombreCampoRecurso", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_FormatoRecursoCampo_Mantenimiento", idFormatoParameter, secuenciaCampoParameter, idFavoritoTablaParameter, nombreCampoRecursoParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Tabla> USP_SS_HC_Tabla_Lista(Nullable<int> idFavoritoTabla, string nombreTabla, string descripcion, string descripcionExtranjera, Nullable<int> tipoClavePrimaria, Nullable<int> tipoTabla, string condicion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Tabla).Assembly);
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoClavePrimariaParameter = tipoClavePrimaria.HasValue ?
                new ObjectParameter("TipoClavePrimaria", tipoClavePrimaria) :
                new ObjectParameter("TipoClavePrimaria", typeof(int));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(int));
    
            var condicionParameter = condicion != null ?
                new ObjectParameter("Condicion", condicion) :
                new ObjectParameter("Condicion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Tabla>("USP_SS_HC_Tabla_Lista", idFavoritoTablaParameter, nombreTablaParameter, descripcionParameter, descripcionExtranjeraParameter, tipoClavePrimariaParameter, tipoTablaParameter, condicionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_Tabla> USP_SS_HC_Tabla_Lista(Nullable<int> idFavoritoTabla, string nombreTabla, string descripcion, string descripcionExtranjera, Nullable<int> tipoClavePrimaria, Nullable<int> tipoTabla, string condicion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Tabla).Assembly);
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoClavePrimariaParameter = tipoClavePrimaria.HasValue ?
                new ObjectParameter("TipoClavePrimaria", tipoClavePrimaria) :
                new ObjectParameter("TipoClavePrimaria", typeof(int));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(int));
    
            var condicionParameter = condicion != null ?
                new ObjectParameter("Condicion", condicion) :
                new ObjectParameter("Condicion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Tabla>("USP_SS_HC_Tabla_Lista", mergeOption, idFavoritoTablaParameter, nombreTablaParameter, descripcionParameter, descripcionExtranjeraParameter, tipoClavePrimariaParameter, tipoTablaParameter, condicionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_Tabla_Mantenimiento(Nullable<int> idFavoritoTabla, string nombreTabla, string descripcion, string descripcionExtranjera, Nullable<int> tipoClavePrimaria, Nullable<int> tipoTabla, string condicion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoClavePrimariaParameter = tipoClavePrimaria.HasValue ?
                new ObjectParameter("TipoClavePrimaria", tipoClavePrimaria) :
                new ObjectParameter("TipoClavePrimaria", typeof(int));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(int));
    
            var condicionParameter = condicion != null ?
                new ObjectParameter("Condicion", condicion) :
                new ObjectParameter("Condicion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_Tabla_Mantenimiento", idFavoritoTablaParameter, nombreTablaParameter, descripcionParameter, descripcionExtranjeraParameter, tipoClavePrimariaParameter, tipoTablaParameter, condicionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_TablaCampo> USP_SS_HC_TablaCampo_Lista(Nullable<int> idFavoritoTabla, Nullable<int> idCampo, string nombreCampo, Nullable<int> orden, string descripcion, string descripcionExtranjera, Nullable<int> tipoCampo, Nullable<int> longitud, Nullable<int> decimales, Nullable<int> numeroClavePrimaria, Nullable<int> tipoCampoDescripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_TablaCampo).Assembly);
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var idCampoParameter = idCampo.HasValue ?
                new ObjectParameter("IdCampo", idCampo) :
                new ObjectParameter("IdCampo", typeof(int));
    
            var nombreCampoParameter = nombreCampo != null ?
                new ObjectParameter("NombreCampo", nombreCampo) :
                new ObjectParameter("NombreCampo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoCampoParameter = tipoCampo.HasValue ?
                new ObjectParameter("TipoCampo", tipoCampo) :
                new ObjectParameter("TipoCampo", typeof(int));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(int));
    
            var decimalesParameter = decimales.HasValue ?
                new ObjectParameter("Decimales", decimales) :
                new ObjectParameter("Decimales", typeof(int));
    
            var numeroClavePrimariaParameter = numeroClavePrimaria.HasValue ?
                new ObjectParameter("NumeroClavePrimaria", numeroClavePrimaria) :
                new ObjectParameter("NumeroClavePrimaria", typeof(int));
    
            var tipoCampoDescripcionParameter = tipoCampoDescripcion.HasValue ?
                new ObjectParameter("TipoCampoDescripcion", tipoCampoDescripcion) :
                new ObjectParameter("TipoCampoDescripcion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_TablaCampo>("USP_SS_HC_TablaCampo_Lista", idFavoritoTablaParameter, idCampoParameter, nombreCampoParameter, ordenParameter, descripcionParameter, descripcionExtranjeraParameter, tipoCampoParameter, longitudParameter, decimalesParameter, numeroClavePrimariaParameter, tipoCampoDescripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_TablaCampo> USP_SS_HC_TablaCampo_Lista(Nullable<int> idFavoritoTabla, Nullable<int> idCampo, string nombreCampo, Nullable<int> orden, string descripcion, string descripcionExtranjera, Nullable<int> tipoCampo, Nullable<int> longitud, Nullable<int> decimales, Nullable<int> numeroClavePrimaria, Nullable<int> tipoCampoDescripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_TablaCampo).Assembly);
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var idCampoParameter = idCampo.HasValue ?
                new ObjectParameter("IdCampo", idCampo) :
                new ObjectParameter("IdCampo", typeof(int));
    
            var nombreCampoParameter = nombreCampo != null ?
                new ObjectParameter("NombreCampo", nombreCampo) :
                new ObjectParameter("NombreCampo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoCampoParameter = tipoCampo.HasValue ?
                new ObjectParameter("TipoCampo", tipoCampo) :
                new ObjectParameter("TipoCampo", typeof(int));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(int));
    
            var decimalesParameter = decimales.HasValue ?
                new ObjectParameter("Decimales", decimales) :
                new ObjectParameter("Decimales", typeof(int));
    
            var numeroClavePrimariaParameter = numeroClavePrimaria.HasValue ?
                new ObjectParameter("NumeroClavePrimaria", numeroClavePrimaria) :
                new ObjectParameter("NumeroClavePrimaria", typeof(int));
    
            var tipoCampoDescripcionParameter = tipoCampoDescripcion.HasValue ?
                new ObjectParameter("TipoCampoDescripcion", tipoCampoDescripcion) :
                new ObjectParameter("TipoCampoDescripcion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_TablaCampo>("USP_SS_HC_TablaCampo_Lista", mergeOption, idFavoritoTablaParameter, idCampoParameter, nombreCampoParameter, ordenParameter, descripcionParameter, descripcionExtranjeraParameter, tipoCampoParameter, longitudParameter, decimalesParameter, numeroClavePrimariaParameter, tipoCampoDescripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_TablaCampo_Mantenimiento(Nullable<int> idFavoritoTabla, Nullable<int> idCampo, string nombreCampo, Nullable<int> orden, string descripcion, string descripcionExtranjera, Nullable<int> tipoCampo, Nullable<int> longitud, Nullable<int> decimales, Nullable<int> numeroClavePrimaria, Nullable<int> tipoCampoDescripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var idCampoParameter = idCampo.HasValue ?
                new ObjectParameter("IdCampo", idCampo) :
                new ObjectParameter("IdCampo", typeof(int));
    
            var nombreCampoParameter = nombreCampo != null ?
                new ObjectParameter("NombreCampo", nombreCampo) :
                new ObjectParameter("NombreCampo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoCampoParameter = tipoCampo.HasValue ?
                new ObjectParameter("TipoCampo", tipoCampo) :
                new ObjectParameter("TipoCampo", typeof(int));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(int));
    
            var decimalesParameter = decimales.HasValue ?
                new ObjectParameter("Decimales", decimales) :
                new ObjectParameter("Decimales", typeof(int));
    
            var numeroClavePrimariaParameter = numeroClavePrimaria.HasValue ?
                new ObjectParameter("NumeroClavePrimaria", numeroClavePrimaria) :
                new ObjectParameter("NumeroClavePrimaria", typeof(int));
    
            var tipoCampoDescripcionParameter = tipoCampoDescripcion.HasValue ?
                new ObjectParameter("TipoCampoDescripcion", tipoCampoDescripcion) :
                new ObjectParameter("TipoCampoDescripcion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_TablaCampo_Mantenimiento", idFavoritoTablaParameter, idCampoParameter, nombreCampoParameter, ordenParameter, descripcionParameter, descripcionExtranjeraParameter, tipoCampoParameter, longitudParameter, decimalesParameter, numeroClavePrimariaParameter, tipoCampoDescripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_Sucursal(string sucursal, string sucursalGrupo, string descripcionLocal, string descripcionIngles, string cuentaContableDefecto, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string direccionComun, string direccionAdicional, string telefono1, string telefono2, string telefono3, string fax1, string fax2, string compania, string cIIU, string logoSucursal, string aCCION)
        {
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var sucursalGrupoParameter = sucursalGrupo != null ?
                new ObjectParameter("SucursalGrupo", sucursalGrupo) :
                new ObjectParameter("SucursalGrupo", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var cuentaContableDefectoParameter = cuentaContableDefecto != null ?
                new ObjectParameter("CuentaContableDefecto", cuentaContableDefecto) :
                new ObjectParameter("CuentaContableDefecto", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var direccionComunParameter = direccionComun != null ?
                new ObjectParameter("DireccionComun", direccionComun) :
                new ObjectParameter("DireccionComun", typeof(string));
    
            var direccionAdicionalParameter = direccionAdicional != null ?
                new ObjectParameter("DireccionAdicional", direccionAdicional) :
                new ObjectParameter("DireccionAdicional", typeof(string));
    
            var telefono1Parameter = telefono1 != null ?
                new ObjectParameter("Telefono1", telefono1) :
                new ObjectParameter("Telefono1", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var telefono3Parameter = telefono3 != null ?
                new ObjectParameter("Telefono3", telefono3) :
                new ObjectParameter("Telefono3", typeof(string));
    
            var fax1Parameter = fax1 != null ?
                new ObjectParameter("Fax1", fax1) :
                new ObjectParameter("Fax1", typeof(string));
    
            var fax2Parameter = fax2 != null ?
                new ObjectParameter("Fax2", fax2) :
                new ObjectParameter("Fax2", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var cIIUParameter = cIIU != null ?
                new ObjectParameter("CIIU", cIIU) :
                new ObjectParameter("CIIU", typeof(string));
    
            var logoSucursalParameter = logoSucursal != null ?
                new ObjectParameter("LogoSucursal", logoSucursal) :
                new ObjectParameter("LogoSucursal", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_Sucursal", sucursalParameter, sucursalGrupoParameter, descripcionLocalParameter, descripcionInglesParameter, cuentaContableDefectoParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, usuarioCreacionParameter, fechaCreacionParameter, direccionComunParameter, direccionAdicionalParameter, telefono1Parameter, telefono2Parameter, telefono3Parameter, fax1Parameter, fax2Parameter, companiaParameter, cIIUParameter, logoSucursalParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<AC_Sucursal> USP_SS_HC_SucursalListar(string sucursal, string sucursalGrupo, string descripcionLocal, string descripcionIngles, string cuentaContableDefecto, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string direccionComun, string direccionAdicional, string telefono1, string telefono2, string telefono3, string fax1, string fax2, string compania, string cIIU, string logoSucursal, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(AC_Sucursal).Assembly);
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var sucursalGrupoParameter = sucursalGrupo != null ?
                new ObjectParameter("SucursalGrupo", sucursalGrupo) :
                new ObjectParameter("SucursalGrupo", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var cuentaContableDefectoParameter = cuentaContableDefecto != null ?
                new ObjectParameter("CuentaContableDefecto", cuentaContableDefecto) :
                new ObjectParameter("CuentaContableDefecto", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var direccionComunParameter = direccionComun != null ?
                new ObjectParameter("DireccionComun", direccionComun) :
                new ObjectParameter("DireccionComun", typeof(string));
    
            var direccionAdicionalParameter = direccionAdicional != null ?
                new ObjectParameter("DireccionAdicional", direccionAdicional) :
                new ObjectParameter("DireccionAdicional", typeof(string));
    
            var telefono1Parameter = telefono1 != null ?
                new ObjectParameter("Telefono1", telefono1) :
                new ObjectParameter("Telefono1", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var telefono3Parameter = telefono3 != null ?
                new ObjectParameter("Telefono3", telefono3) :
                new ObjectParameter("Telefono3", typeof(string));
    
            var fax1Parameter = fax1 != null ?
                new ObjectParameter("Fax1", fax1) :
                new ObjectParameter("Fax1", typeof(string));
    
            var fax2Parameter = fax2 != null ?
                new ObjectParameter("Fax2", fax2) :
                new ObjectParameter("Fax2", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var cIIUParameter = cIIU != null ?
                new ObjectParameter("CIIU", cIIU) :
                new ObjectParameter("CIIU", typeof(string));
    
            var logoSucursalParameter = logoSucursal != null ?
                new ObjectParameter("LogoSucursal", logoSucursal) :
                new ObjectParameter("LogoSucursal", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AC_Sucursal>("USP_SS_HC_SucursalListar", sucursalParameter, sucursalGrupoParameter, descripcionLocalParameter, descripcionInglesParameter, cuentaContableDefectoParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, usuarioCreacionParameter, fechaCreacionParameter, direccionComunParameter, direccionAdicionalParameter, telefono1Parameter, telefono2Parameter, telefono3Parameter, fax1Parameter, fax2Parameter, companiaParameter, cIIUParameter, logoSucursalParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<AC_Sucursal> USP_SS_HC_SucursalListar(string sucursal, string sucursalGrupo, string descripcionLocal, string descripcionIngles, string cuentaContableDefecto, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string direccionComun, string direccionAdicional, string telefono1, string telefono2, string telefono3, string fax1, string fax2, string compania, string cIIU, string logoSucursal, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(AC_Sucursal).Assembly);
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var sucursalGrupoParameter = sucursalGrupo != null ?
                new ObjectParameter("SucursalGrupo", sucursalGrupo) :
                new ObjectParameter("SucursalGrupo", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var cuentaContableDefectoParameter = cuentaContableDefecto != null ?
                new ObjectParameter("CuentaContableDefecto", cuentaContableDefecto) :
                new ObjectParameter("CuentaContableDefecto", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var direccionComunParameter = direccionComun != null ?
                new ObjectParameter("DireccionComun", direccionComun) :
                new ObjectParameter("DireccionComun", typeof(string));
    
            var direccionAdicionalParameter = direccionAdicional != null ?
                new ObjectParameter("DireccionAdicional", direccionAdicional) :
                new ObjectParameter("DireccionAdicional", typeof(string));
    
            var telefono1Parameter = telefono1 != null ?
                new ObjectParameter("Telefono1", telefono1) :
                new ObjectParameter("Telefono1", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("Telefono2", telefono2) :
                new ObjectParameter("Telefono2", typeof(string));
    
            var telefono3Parameter = telefono3 != null ?
                new ObjectParameter("Telefono3", telefono3) :
                new ObjectParameter("Telefono3", typeof(string));
    
            var fax1Parameter = fax1 != null ?
                new ObjectParameter("Fax1", fax1) :
                new ObjectParameter("Fax1", typeof(string));
    
            var fax2Parameter = fax2 != null ?
                new ObjectParameter("Fax2", fax2) :
                new ObjectParameter("Fax2", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var cIIUParameter = cIIU != null ?
                new ObjectParameter("CIIU", cIIU) :
                new ObjectParameter("CIIU", typeof(string));
    
            var logoSucursalParameter = logoSucursal != null ?
                new ObjectParameter("LogoSucursal", logoSucursal) :
                new ObjectParameter("LogoSucursal", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AC_Sucursal>("USP_SS_HC_SucursalListar", mergeOption, sucursalParameter, sucursalGrupoParameter, descripcionLocalParameter, descripcionInglesParameter, cuentaContableDefectoParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, usuarioCreacionParameter, fechaCreacionParameter, direccionComunParameter, direccionAdicionalParameter, telefono1Parameter, telefono2Parameter, telefono3Parameter, fax1Parameter, fax2Parameter, companiaParameter, cIIUParameter, logoSucursalParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_Formato_Mantenimiento(Nullable<int> idFormato, Nullable<int> idFormatoPadre, string codigoFormato, string codigoFormatoPadre, string cadenaRecursividad, Nullable<int> nivel, string descripcion, string descripcionExtranjera, Nullable<int> tipoFormato, string versionFormatoFijo, Nullable<int> idFormatoDinamico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var codigoFormatoPadreParameter = codigoFormatoPadre != null ?
                new ObjectParameter("CodigoFormatoPadre", codigoFormatoPadre) :
                new ObjectParameter("CodigoFormatoPadre", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var versionFormatoFijoParameter = versionFormatoFijo != null ?
                new ObjectParameter("VersionFormatoFijo", versionFormatoFijo) :
                new ObjectParameter("VersionFormatoFijo", typeof(string));
    
            var idFormatoDinamicoParameter = idFormatoDinamico.HasValue ?
                new ObjectParameter("IdFormatoDinamico", idFormatoDinamico) :
                new ObjectParameter("IdFormatoDinamico", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_Formato_Mantenimiento", idFormatoParameter, idFormatoPadreParameter, codigoFormatoParameter, codigoFormatoPadreParameter, cadenaRecursividadParameter, nivelParameter, descripcionParameter, descripcionExtranjeraParameter, tipoFormatoParameter, versionFormatoFijoParameter, idFormatoDinamicoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_FormatoCampo> USP_SS_HC_FormatoCampo_Lista(Nullable<int> idFormato, Nullable<int> secuenciaCampo, Nullable<int> idFavoritoTabla, Nullable<int> idCampo, Nullable<int> idSeccionFormato, Nullable<int> tipoCampo, string valorPorDefecto, Nullable<int> indicadorObligatorio, Nullable<int> indicadorCampoCalculado, string formula, Nullable<int> indicadorValoresVarios, string tablaValoresVarios, Nullable<int> indicadorRango, Nullable<decimal> rangoDesde, Nullable<decimal> rangoHasta, string indicadorReglaNegocio, string reglaNegocio, string observaciones, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string descripcionLocal, string descripcionExtranjera, Nullable<int> idConcepto, Nullable<int> idAgrupadorNivel, Nullable<int> idObjetoAgrupador, Nullable<int> idColumna, Nullable<int> idFila, Nullable<int> idEvento, Nullable<int> idParameterEnvio, Nullable<int> orden, Nullable<int> idAgrupadorNivelPadre, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FormatoCampo).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var idCampoParameter = idCampo.HasValue ?
                new ObjectParameter("IdCampo", idCampo) :
                new ObjectParameter("IdCampo", typeof(int));
    
            var idSeccionFormatoParameter = idSeccionFormato.HasValue ?
                new ObjectParameter("IdSeccionFormato", idSeccionFormato) :
                new ObjectParameter("IdSeccionFormato", typeof(int));
    
            var tipoCampoParameter = tipoCampo.HasValue ?
                new ObjectParameter("TipoCampo", tipoCampo) :
                new ObjectParameter("TipoCampo", typeof(int));
    
            var valorPorDefectoParameter = valorPorDefecto != null ?
                new ObjectParameter("ValorPorDefecto", valorPorDefecto) :
                new ObjectParameter("ValorPorDefecto", typeof(string));
    
            var indicadorObligatorioParameter = indicadorObligatorio.HasValue ?
                new ObjectParameter("IndicadorObligatorio", indicadorObligatorio) :
                new ObjectParameter("IndicadorObligatorio", typeof(int));
    
            var indicadorCampoCalculadoParameter = indicadorCampoCalculado.HasValue ?
                new ObjectParameter("IndicadorCampoCalculado", indicadorCampoCalculado) :
                new ObjectParameter("IndicadorCampoCalculado", typeof(int));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var indicadorValoresVariosParameter = indicadorValoresVarios.HasValue ?
                new ObjectParameter("IndicadorValoresVarios", indicadorValoresVarios) :
                new ObjectParameter("IndicadorValoresVarios", typeof(int));
    
            var tablaValoresVariosParameter = tablaValoresVarios != null ?
                new ObjectParameter("TablaValoresVarios", tablaValoresVarios) :
                new ObjectParameter("TablaValoresVarios", typeof(string));
    
            var indicadorRangoParameter = indicadorRango.HasValue ?
                new ObjectParameter("IndicadorRango", indicadorRango) :
                new ObjectParameter("IndicadorRango", typeof(int));
    
            var rangoDesdeParameter = rangoDesde.HasValue ?
                new ObjectParameter("RangoDesde", rangoDesde) :
                new ObjectParameter("RangoDesde", typeof(decimal));
    
            var rangoHastaParameter = rangoHasta.HasValue ?
                new ObjectParameter("RangoHasta", rangoHasta) :
                new ObjectParameter("RangoHasta", typeof(decimal));
    
            var indicadorReglaNegocioParameter = indicadorReglaNegocio != null ?
                new ObjectParameter("IndicadorReglaNegocio", indicadorReglaNegocio) :
                new ObjectParameter("IndicadorReglaNegocio", typeof(string));
    
            var reglaNegocioParameter = reglaNegocio != null ?
                new ObjectParameter("ReglaNegocio", reglaNegocio) :
                new ObjectParameter("ReglaNegocio", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var idConceptoParameter = idConcepto.HasValue ?
                new ObjectParameter("IdConcepto", idConcepto) :
                new ObjectParameter("IdConcepto", typeof(int));
    
            var idAgrupadorNivelParameter = idAgrupadorNivel.HasValue ?
                new ObjectParameter("IdAgrupadorNivel", idAgrupadorNivel) :
                new ObjectParameter("IdAgrupadorNivel", typeof(int));
    
            var idObjetoAgrupadorParameter = idObjetoAgrupador.HasValue ?
                new ObjectParameter("IdObjetoAgrupador", idObjetoAgrupador) :
                new ObjectParameter("IdObjetoAgrupador", typeof(int));
    
            var idColumnaParameter = idColumna.HasValue ?
                new ObjectParameter("IdColumna", idColumna) :
                new ObjectParameter("IdColumna", typeof(int));
    
            var idFilaParameter = idFila.HasValue ?
                new ObjectParameter("IdFila", idFila) :
                new ObjectParameter("IdFila", typeof(int));
    
            var idEventoParameter = idEvento.HasValue ?
                new ObjectParameter("IdEvento", idEvento) :
                new ObjectParameter("IdEvento", typeof(int));
    
            var idParameterEnvioParameter = idParameterEnvio.HasValue ?
                new ObjectParameter("IdParameterEnvio", idParameterEnvio) :
                new ObjectParameter("IdParameterEnvio", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var idAgrupadorNivelPadreParameter = idAgrupadorNivelPadre.HasValue ?
                new ObjectParameter("IdAgrupadorNivelPadre", idAgrupadorNivelPadre) :
                new ObjectParameter("IdAgrupadorNivelPadre", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FormatoCampo>("USP_SS_HC_FormatoCampo_Lista", idFormatoParameter, secuenciaCampoParameter, idFavoritoTablaParameter, idCampoParameter, idSeccionFormatoParameter, tipoCampoParameter, valorPorDefectoParameter, indicadorObligatorioParameter, indicadorCampoCalculadoParameter, formulaParameter, indicadorValoresVariosParameter, tablaValoresVariosParameter, indicadorRangoParameter, rangoDesdeParameter, rangoHastaParameter, indicadorReglaNegocioParameter, reglaNegocioParameter, observacionesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, descripcionLocalParameter, descripcionExtranjeraParameter, idConceptoParameter, idAgrupadorNivelParameter, idObjetoAgrupadorParameter, idColumnaParameter, idFilaParameter, idEventoParameter, idParameterEnvioParameter, ordenParameter, idAgrupadorNivelPadreParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_FormatoCampo> USP_SS_HC_FormatoCampo_Lista(Nullable<int> idFormato, Nullable<int> secuenciaCampo, Nullable<int> idFavoritoTabla, Nullable<int> idCampo, Nullable<int> idSeccionFormato, Nullable<int> tipoCampo, string valorPorDefecto, Nullable<int> indicadorObligatorio, Nullable<int> indicadorCampoCalculado, string formula, Nullable<int> indicadorValoresVarios, string tablaValoresVarios, Nullable<int> indicadorRango, Nullable<decimal> rangoDesde, Nullable<decimal> rangoHasta, string indicadorReglaNegocio, string reglaNegocio, string observaciones, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string descripcionLocal, string descripcionExtranjera, Nullable<int> idConcepto, Nullable<int> idAgrupadorNivel, Nullable<int> idObjetoAgrupador, Nullable<int> idColumna, Nullable<int> idFila, Nullable<int> idEvento, Nullable<int> idParameterEnvio, Nullable<int> orden, Nullable<int> idAgrupadorNivelPadre, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FormatoCampo).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var idCampoParameter = idCampo.HasValue ?
                new ObjectParameter("IdCampo", idCampo) :
                new ObjectParameter("IdCampo", typeof(int));
    
            var idSeccionFormatoParameter = idSeccionFormato.HasValue ?
                new ObjectParameter("IdSeccionFormato", idSeccionFormato) :
                new ObjectParameter("IdSeccionFormato", typeof(int));
    
            var tipoCampoParameter = tipoCampo.HasValue ?
                new ObjectParameter("TipoCampo", tipoCampo) :
                new ObjectParameter("TipoCampo", typeof(int));
    
            var valorPorDefectoParameter = valorPorDefecto != null ?
                new ObjectParameter("ValorPorDefecto", valorPorDefecto) :
                new ObjectParameter("ValorPorDefecto", typeof(string));
    
            var indicadorObligatorioParameter = indicadorObligatorio.HasValue ?
                new ObjectParameter("IndicadorObligatorio", indicadorObligatorio) :
                new ObjectParameter("IndicadorObligatorio", typeof(int));
    
            var indicadorCampoCalculadoParameter = indicadorCampoCalculado.HasValue ?
                new ObjectParameter("IndicadorCampoCalculado", indicadorCampoCalculado) :
                new ObjectParameter("IndicadorCampoCalculado", typeof(int));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var indicadorValoresVariosParameter = indicadorValoresVarios.HasValue ?
                new ObjectParameter("IndicadorValoresVarios", indicadorValoresVarios) :
                new ObjectParameter("IndicadorValoresVarios", typeof(int));
    
            var tablaValoresVariosParameter = tablaValoresVarios != null ?
                new ObjectParameter("TablaValoresVarios", tablaValoresVarios) :
                new ObjectParameter("TablaValoresVarios", typeof(string));
    
            var indicadorRangoParameter = indicadorRango.HasValue ?
                new ObjectParameter("IndicadorRango", indicadorRango) :
                new ObjectParameter("IndicadorRango", typeof(int));
    
            var rangoDesdeParameter = rangoDesde.HasValue ?
                new ObjectParameter("RangoDesde", rangoDesde) :
                new ObjectParameter("RangoDesde", typeof(decimal));
    
            var rangoHastaParameter = rangoHasta.HasValue ?
                new ObjectParameter("RangoHasta", rangoHasta) :
                new ObjectParameter("RangoHasta", typeof(decimal));
    
            var indicadorReglaNegocioParameter = indicadorReglaNegocio != null ?
                new ObjectParameter("IndicadorReglaNegocio", indicadorReglaNegocio) :
                new ObjectParameter("IndicadorReglaNegocio", typeof(string));
    
            var reglaNegocioParameter = reglaNegocio != null ?
                new ObjectParameter("ReglaNegocio", reglaNegocio) :
                new ObjectParameter("ReglaNegocio", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var idConceptoParameter = idConcepto.HasValue ?
                new ObjectParameter("IdConcepto", idConcepto) :
                new ObjectParameter("IdConcepto", typeof(int));
    
            var idAgrupadorNivelParameter = idAgrupadorNivel.HasValue ?
                new ObjectParameter("IdAgrupadorNivel", idAgrupadorNivel) :
                new ObjectParameter("IdAgrupadorNivel", typeof(int));
    
            var idObjetoAgrupadorParameter = idObjetoAgrupador.HasValue ?
                new ObjectParameter("IdObjetoAgrupador", idObjetoAgrupador) :
                new ObjectParameter("IdObjetoAgrupador", typeof(int));
    
            var idColumnaParameter = idColumna.HasValue ?
                new ObjectParameter("IdColumna", idColumna) :
                new ObjectParameter("IdColumna", typeof(int));
    
            var idFilaParameter = idFila.HasValue ?
                new ObjectParameter("IdFila", idFila) :
                new ObjectParameter("IdFila", typeof(int));
    
            var idEventoParameter = idEvento.HasValue ?
                new ObjectParameter("IdEvento", idEvento) :
                new ObjectParameter("IdEvento", typeof(int));
    
            var idParameterEnvioParameter = idParameterEnvio.HasValue ?
                new ObjectParameter("IdParameterEnvio", idParameterEnvio) :
                new ObjectParameter("IdParameterEnvio", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var idAgrupadorNivelPadreParameter = idAgrupadorNivelPadre.HasValue ?
                new ObjectParameter("IdAgrupadorNivelPadre", idAgrupadorNivelPadre) :
                new ObjectParameter("IdAgrupadorNivelPadre", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FormatoCampo>("USP_SS_HC_FormatoCampo_Lista", mergeOption, idFormatoParameter, secuenciaCampoParameter, idFavoritoTablaParameter, idCampoParameter, idSeccionFormatoParameter, tipoCampoParameter, valorPorDefectoParameter, indicadorObligatorioParameter, indicadorCampoCalculadoParameter, formulaParameter, indicadorValoresVariosParameter, tablaValoresVariosParameter, indicadorRangoParameter, rangoDesdeParameter, rangoHastaParameter, indicadorReglaNegocioParameter, reglaNegocioParameter, observacionesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, descripcionLocalParameter, descripcionExtranjeraParameter, idConceptoParameter, idAgrupadorNivelParameter, idObjetoAgrupadorParameter, idColumnaParameter, idFilaParameter, idEventoParameter, idParameterEnvioParameter, ordenParameter, idAgrupadorNivelPadreParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_FormatoCampo_Mantenimiento(Nullable<int> idFormato, Nullable<int> secuenciaCampo, Nullable<int> idFavoritoTabla, Nullable<int> idCampo, Nullable<int> idSeccionFormato, Nullable<int> tipoCampo, string valorPorDefecto, Nullable<int> indicadorObligatorio, Nullable<int> indicadorCampoCalculado, string formula, Nullable<int> indicadorValoresVarios, string tablaValoresVarios, Nullable<int> indicadorRango, Nullable<decimal> rangoDesde, Nullable<decimal> rangoHasta, string indicadorReglaNegocio, string reglaNegocio, string observaciones, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string descripcionLocal, string descripcionExtranjera, Nullable<int> idConcepto, Nullable<int> idAgrupadorNivel, Nullable<int> idObjetoAgrupador, Nullable<int> idColumna, Nullable<int> idFila, Nullable<int> idEvento, Nullable<int> idParameterEnvio, Nullable<int> orden, Nullable<int> idAgrupadorNivelPadre)
        {
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var idCampoParameter = idCampo.HasValue ?
                new ObjectParameter("IdCampo", idCampo) :
                new ObjectParameter("IdCampo", typeof(int));
    
            var idSeccionFormatoParameter = idSeccionFormato.HasValue ?
                new ObjectParameter("IdSeccionFormato", idSeccionFormato) :
                new ObjectParameter("IdSeccionFormato", typeof(int));
    
            var tipoCampoParameter = tipoCampo.HasValue ?
                new ObjectParameter("TipoCampo", tipoCampo) :
                new ObjectParameter("TipoCampo", typeof(int));
    
            var valorPorDefectoParameter = valorPorDefecto != null ?
                new ObjectParameter("ValorPorDefecto", valorPorDefecto) :
                new ObjectParameter("ValorPorDefecto", typeof(string));
    
            var indicadorObligatorioParameter = indicadorObligatorio.HasValue ?
                new ObjectParameter("IndicadorObligatorio", indicadorObligatorio) :
                new ObjectParameter("IndicadorObligatorio", typeof(int));
    
            var indicadorCampoCalculadoParameter = indicadorCampoCalculado.HasValue ?
                new ObjectParameter("IndicadorCampoCalculado", indicadorCampoCalculado) :
                new ObjectParameter("IndicadorCampoCalculado", typeof(int));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var indicadorValoresVariosParameter = indicadorValoresVarios.HasValue ?
                new ObjectParameter("IndicadorValoresVarios", indicadorValoresVarios) :
                new ObjectParameter("IndicadorValoresVarios", typeof(int));
    
            var tablaValoresVariosParameter = tablaValoresVarios != null ?
                new ObjectParameter("TablaValoresVarios", tablaValoresVarios) :
                new ObjectParameter("TablaValoresVarios", typeof(string));
    
            var indicadorRangoParameter = indicadorRango.HasValue ?
                new ObjectParameter("IndicadorRango", indicadorRango) :
                new ObjectParameter("IndicadorRango", typeof(int));
    
            var rangoDesdeParameter = rangoDesde.HasValue ?
                new ObjectParameter("RangoDesde", rangoDesde) :
                new ObjectParameter("RangoDesde", typeof(decimal));
    
            var rangoHastaParameter = rangoHasta.HasValue ?
                new ObjectParameter("RangoHasta", rangoHasta) :
                new ObjectParameter("RangoHasta", typeof(decimal));
    
            var indicadorReglaNegocioParameter = indicadorReglaNegocio != null ?
                new ObjectParameter("IndicadorReglaNegocio", indicadorReglaNegocio) :
                new ObjectParameter("IndicadorReglaNegocio", typeof(string));
    
            var reglaNegocioParameter = reglaNegocio != null ?
                new ObjectParameter("ReglaNegocio", reglaNegocio) :
                new ObjectParameter("ReglaNegocio", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var idConceptoParameter = idConcepto.HasValue ?
                new ObjectParameter("IdConcepto", idConcepto) :
                new ObjectParameter("IdConcepto", typeof(int));
    
            var idAgrupadorNivelParameter = idAgrupadorNivel.HasValue ?
                new ObjectParameter("IdAgrupadorNivel", idAgrupadorNivel) :
                new ObjectParameter("IdAgrupadorNivel", typeof(int));
    
            var idObjetoAgrupadorParameter = idObjetoAgrupador.HasValue ?
                new ObjectParameter("IdObjetoAgrupador", idObjetoAgrupador) :
                new ObjectParameter("IdObjetoAgrupador", typeof(int));
    
            var idColumnaParameter = idColumna.HasValue ?
                new ObjectParameter("IdColumna", idColumna) :
                new ObjectParameter("IdColumna", typeof(int));
    
            var idFilaParameter = idFila.HasValue ?
                new ObjectParameter("IdFila", idFila) :
                new ObjectParameter("IdFila", typeof(int));
    
            var idEventoParameter = idEvento.HasValue ?
                new ObjectParameter("IdEvento", idEvento) :
                new ObjectParameter("IdEvento", typeof(int));
    
            var idParameterEnvioParameter = idParameterEnvio.HasValue ?
                new ObjectParameter("IdParameterEnvio", idParameterEnvio) :
                new ObjectParameter("IdParameterEnvio", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var idAgrupadorNivelPadreParameter = idAgrupadorNivelPadre.HasValue ?
                new ObjectParameter("IdAgrupadorNivelPadre", idAgrupadorNivelPadre) :
                new ObjectParameter("IdAgrupadorNivelPadre", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_FormatoCampo_Mantenimiento", idFormatoParameter, secuenciaCampoParameter, idFavoritoTablaParameter, idCampoParameter, idSeccionFormatoParameter, tipoCampoParameter, valorPorDefectoParameter, indicadorObligatorioParameter, indicadorCampoCalculadoParameter, formulaParameter, indicadorValoresVariosParameter, tablaValoresVariosParameter, indicadorRangoParameter, rangoDesdeParameter, rangoHastaParameter, indicadorReglaNegocioParameter, reglaNegocioParameter, observacionesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, descripcionLocalParameter, descripcionExtranjeraParameter, idConceptoParameter, idAgrupadorNivelParameter, idObjetoAgrupadorParameter, idColumnaParameter, idFilaParameter, idEventoParameter, idParameterEnvioParameter, ordenParameter, idAgrupadorNivelPadreParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_companyowner(string companyowner, string description, string englishdescription, Nullable<float> percentage, string company, string owner, Nullable<float> changeRate, string lastuser, Nullable<System.DateTime> lastdate, string aCCION)
        {
            var companyownerParameter = companyowner != null ?
                new ObjectParameter("companyowner", companyowner) :
                new ObjectParameter("companyowner", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var englishdescriptionParameter = englishdescription != null ?
                new ObjectParameter("englishdescription", englishdescription) :
                new ObjectParameter("englishdescription", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("percentage", percentage) :
                new ObjectParameter("percentage", typeof(float));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var changeRateParameter = changeRate.HasValue ?
                new ObjectParameter("ChangeRate", changeRate) :
                new ObjectParameter("ChangeRate", typeof(float));
    
            var lastuserParameter = lastuser != null ?
                new ObjectParameter("lastuser", lastuser) :
                new ObjectParameter("lastuser", typeof(string));
    
            var lastdateParameter = lastdate.HasValue ?
                new ObjectParameter("lastdate", lastdate) :
                new ObjectParameter("lastdate", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_companyowner", companyownerParameter, descriptionParameter, englishdescriptionParameter, percentageParameter, companyParameter, ownerParameter, changeRateParameter, lastuserParameter, lastdateParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<companyowner> USP_SS_HC_companyowner_LISTAR(string companyowner, string description, string englishdescription, Nullable<float> percentage, string company, string owner, Nullable<float> changeRate, string lastuser, Nullable<System.DateTime> lastdate, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(companyowner).Assembly);
    
            var companyownerParameter = companyowner != null ?
                new ObjectParameter("companyowner", companyowner) :
                new ObjectParameter("companyowner", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var englishdescriptionParameter = englishdescription != null ?
                new ObjectParameter("englishdescription", englishdescription) :
                new ObjectParameter("englishdescription", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("percentage", percentage) :
                new ObjectParameter("percentage", typeof(float));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var changeRateParameter = changeRate.HasValue ?
                new ObjectParameter("ChangeRate", changeRate) :
                new ObjectParameter("ChangeRate", typeof(float));
    
            var lastuserParameter = lastuser != null ?
                new ObjectParameter("lastuser", lastuser) :
                new ObjectParameter("lastuser", typeof(string));
    
            var lastdateParameter = lastdate.HasValue ?
                new ObjectParameter("lastdate", lastdate) :
                new ObjectParameter("lastdate", typeof(System.DateTime));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<companyowner>("USP_SS_HC_companyowner_LISTAR", companyownerParameter, descriptionParameter, englishdescriptionParameter, percentageParameter, companyParameter, ownerParameter, changeRateParameter, lastuserParameter, lastdateParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<companyowner> USP_SS_HC_companyowner_LISTAR(string companyowner, string description, string englishdescription, Nullable<float> percentage, string company, string owner, Nullable<float> changeRate, string lastuser, Nullable<System.DateTime> lastdate, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(companyowner).Assembly);
    
            var companyownerParameter = companyowner != null ?
                new ObjectParameter("companyowner", companyowner) :
                new ObjectParameter("companyowner", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var englishdescriptionParameter = englishdescription != null ?
                new ObjectParameter("englishdescription", englishdescription) :
                new ObjectParameter("englishdescription", typeof(string));
    
            var percentageParameter = percentage.HasValue ?
                new ObjectParameter("percentage", percentage) :
                new ObjectParameter("percentage", typeof(float));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("owner", owner) :
                new ObjectParameter("owner", typeof(string));
    
            var changeRateParameter = changeRate.HasValue ?
                new ObjectParameter("ChangeRate", changeRate) :
                new ObjectParameter("ChangeRate", typeof(float));
    
            var lastuserParameter = lastuser != null ?
                new ObjectParameter("lastuser", lastuser) :
                new ObjectParameter("lastuser", typeof(string));
    
            var lastdateParameter = lastdate.HasValue ?
                new ObjectParameter("lastdate", lastdate) :
                new ObjectParameter("lastdate", typeof(System.DateTime));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<companyowner>("USP_SS_HC_companyowner_LISTAR", mergeOption, companyownerParameter, descriptionParameter, englishdescriptionParameter, percentageParameter, companyParameter, ownerParameter, changeRateParameter, lastuserParameter, lastdateParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_VW_SS_GE_EmpresaSeguro(Nullable<int> iDEMPRESA, string cODIGO, string dESCRIPCION, string tIPOEMPRESA, Nullable<int> tIPOSEGURO, Nullable<int> eSTADO, string uSUARIOCREACION, Nullable<System.DateTime> fECHACREACION, string uSUARIOMODIFICACION, Nullable<System.DateTime> fECHAMODIFICACION, string aCCION, Nullable<int> pERSONA, string nOMBRECOMPLETO, string dOCUMENTOFISCAL, string dIRECCION, string tELEFONO, string tIPOEMPRESANOMBRE, string tIPOSEGURONOMBRE)
        {
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            var cODIGOParameter = cODIGO != null ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var tIPOEMPRESAParameter = tIPOEMPRESA != null ?
                new ObjectParameter("TIPOEMPRESA", tIPOEMPRESA) :
                new ObjectParameter("TIPOEMPRESA", typeof(string));
    
            var tIPOSEGUROParameter = tIPOSEGURO.HasValue ?
                new ObjectParameter("TIPOSEGURO", tIPOSEGURO) :
                new ObjectParameter("TIPOSEGURO", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var uSUARIOCREACIONParameter = uSUARIOCREACION != null ?
                new ObjectParameter("USUARIOCREACION", uSUARIOCREACION) :
                new ObjectParameter("USUARIOCREACION", typeof(string));
    
            var fECHACREACIONParameter = fECHACREACION.HasValue ?
                new ObjectParameter("FECHACREACION", fECHACREACION) :
                new ObjectParameter("FECHACREACION", typeof(System.DateTime));
    
            var uSUARIOMODIFICACIONParameter = uSUARIOMODIFICACION != null ?
                new ObjectParameter("USUARIOMODIFICACION", uSUARIOMODIFICACION) :
                new ObjectParameter("USUARIOMODIFICACION", typeof(string));
    
            var fECHAMODIFICACIONParameter = fECHAMODIFICACION.HasValue ?
                new ObjectParameter("FECHAMODIFICACION", fECHAMODIFICACION) :
                new ObjectParameter("FECHAMODIFICACION", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var dOCUMENTOFISCALParameter = dOCUMENTOFISCAL != null ?
                new ObjectParameter("DOCUMENTOFISCAL", dOCUMENTOFISCAL) :
                new ObjectParameter("DOCUMENTOFISCAL", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var tELEFONOParameter = tELEFONO != null ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(string));
    
            var tIPOEMPRESANOMBREParameter = tIPOEMPRESANOMBRE != null ?
                new ObjectParameter("TIPOEMPRESANOMBRE", tIPOEMPRESANOMBRE) :
                new ObjectParameter("TIPOEMPRESANOMBRE", typeof(string));
    
            var tIPOSEGURONOMBREParameter = tIPOSEGURONOMBRE != null ?
                new ObjectParameter("TIPOSEGURONOMBRE", tIPOSEGURONOMBRE) :
                new ObjectParameter("TIPOSEGURONOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_VW_SS_GE_EmpresaSeguro", iDEMPRESAParameter, cODIGOParameter, dESCRIPCIONParameter, tIPOEMPRESAParameter, tIPOSEGUROParameter, eSTADOParameter, uSUARIOCREACIONParameter, fECHACREACIONParameter, uSUARIOMODIFICACIONParameter, fECHAMODIFICACIONParameter, aCCIONParameter, pERSONAParameter, nOMBRECOMPLETOParameter, dOCUMENTOFISCALParameter, dIRECCIONParameter, tELEFONOParameter, tIPOEMPRESANOMBREParameter, tIPOSEGURONOMBREParameter);
        }
    
        public virtual ObjectResult<VW_SS_GE_EMPRESASEGURO> USP_VW_SS_GE_EmpresaSeguroListar(Nullable<int> iDEMPRESA, string cODIGO, string dESCRIPCION, string tIPOEMPRESA, Nullable<int> tIPOSEGURO, Nullable<int> eSTADO, string uSUARIOCREACION, Nullable<System.DateTime> fECHACREACION, string uSUARIOMODIFICACION, Nullable<System.DateTime> fECHAMODIFICACION, string aCCION, Nullable<int> pERSONA, string nOMBRECOMPLETO, string dOCUMENTOFISCAL, string dIRECCION, string tELEFONO, string tIPOEMPRESANOMBRE, string tIPOSEGURONOMBRE, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_SS_GE_EMPRESASEGURO).Assembly);
    
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            var cODIGOParameter = cODIGO != null ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var tIPOEMPRESAParameter = tIPOEMPRESA != null ?
                new ObjectParameter("TIPOEMPRESA", tIPOEMPRESA) :
                new ObjectParameter("TIPOEMPRESA", typeof(string));
    
            var tIPOSEGUROParameter = tIPOSEGURO.HasValue ?
                new ObjectParameter("TIPOSEGURO", tIPOSEGURO) :
                new ObjectParameter("TIPOSEGURO", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var uSUARIOCREACIONParameter = uSUARIOCREACION != null ?
                new ObjectParameter("USUARIOCREACION", uSUARIOCREACION) :
                new ObjectParameter("USUARIOCREACION", typeof(string));
    
            var fECHACREACIONParameter = fECHACREACION.HasValue ?
                new ObjectParameter("FECHACREACION", fECHACREACION) :
                new ObjectParameter("FECHACREACION", typeof(System.DateTime));
    
            var uSUARIOMODIFICACIONParameter = uSUARIOMODIFICACION != null ?
                new ObjectParameter("USUARIOMODIFICACION", uSUARIOMODIFICACION) :
                new ObjectParameter("USUARIOMODIFICACION", typeof(string));
    
            var fECHAMODIFICACIONParameter = fECHAMODIFICACION.HasValue ?
                new ObjectParameter("FECHAMODIFICACION", fECHAMODIFICACION) :
                new ObjectParameter("FECHAMODIFICACION", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var dOCUMENTOFISCALParameter = dOCUMENTOFISCAL != null ?
                new ObjectParameter("DOCUMENTOFISCAL", dOCUMENTOFISCAL) :
                new ObjectParameter("DOCUMENTOFISCAL", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var tELEFONOParameter = tELEFONO != null ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(string));
    
            var tIPOEMPRESANOMBREParameter = tIPOEMPRESANOMBRE != null ?
                new ObjectParameter("TIPOEMPRESANOMBRE", tIPOEMPRESANOMBRE) :
                new ObjectParameter("TIPOEMPRESANOMBRE", typeof(string));
    
            var tIPOSEGURONOMBREParameter = tIPOSEGURONOMBRE != null ?
                new ObjectParameter("TIPOSEGURONOMBRE", tIPOSEGURONOMBRE) :
                new ObjectParameter("TIPOSEGURONOMBRE", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_SS_GE_EMPRESASEGURO>("USP_VW_SS_GE_EmpresaSeguroListar", iDEMPRESAParameter, cODIGOParameter, dESCRIPCIONParameter, tIPOEMPRESAParameter, tIPOSEGUROParameter, eSTADOParameter, uSUARIOCREACIONParameter, fECHACREACIONParameter, uSUARIOMODIFICACIONParameter, fECHAMODIFICACIONParameter, aCCIONParameter, pERSONAParameter, nOMBRECOMPLETOParameter, dOCUMENTOFISCALParameter, dIRECCIONParameter, tELEFONOParameter, tIPOEMPRESANOMBREParameter, tIPOSEGURONOMBREParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_SS_GE_EMPRESASEGURO> USP_VW_SS_GE_EmpresaSeguroListar(Nullable<int> iDEMPRESA, string cODIGO, string dESCRIPCION, string tIPOEMPRESA, Nullable<int> tIPOSEGURO, Nullable<int> eSTADO, string uSUARIOCREACION, Nullable<System.DateTime> fECHACREACION, string uSUARIOMODIFICACION, Nullable<System.DateTime> fECHAMODIFICACION, string aCCION, Nullable<int> pERSONA, string nOMBRECOMPLETO, string dOCUMENTOFISCAL, string dIRECCION, string tELEFONO, string tIPOEMPRESANOMBRE, string tIPOSEGURONOMBRE, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_SS_GE_EMPRESASEGURO).Assembly);
    
            var iDEMPRESAParameter = iDEMPRESA.HasValue ?
                new ObjectParameter("IDEMPRESA", iDEMPRESA) :
                new ObjectParameter("IDEMPRESA", typeof(int));
    
            var cODIGOParameter = cODIGO != null ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var tIPOEMPRESAParameter = tIPOEMPRESA != null ?
                new ObjectParameter("TIPOEMPRESA", tIPOEMPRESA) :
                new ObjectParameter("TIPOEMPRESA", typeof(string));
    
            var tIPOSEGUROParameter = tIPOSEGURO.HasValue ?
                new ObjectParameter("TIPOSEGURO", tIPOSEGURO) :
                new ObjectParameter("TIPOSEGURO", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var uSUARIOCREACIONParameter = uSUARIOCREACION != null ?
                new ObjectParameter("USUARIOCREACION", uSUARIOCREACION) :
                new ObjectParameter("USUARIOCREACION", typeof(string));
    
            var fECHACREACIONParameter = fECHACREACION.HasValue ?
                new ObjectParameter("FECHACREACION", fECHACREACION) :
                new ObjectParameter("FECHACREACION", typeof(System.DateTime));
    
            var uSUARIOMODIFICACIONParameter = uSUARIOMODIFICACION != null ?
                new ObjectParameter("USUARIOMODIFICACION", uSUARIOMODIFICACION) :
                new ObjectParameter("USUARIOMODIFICACION", typeof(string));
    
            var fECHAMODIFICACIONParameter = fECHAMODIFICACION.HasValue ?
                new ObjectParameter("FECHAMODIFICACION", fECHAMODIFICACION) :
                new ObjectParameter("FECHAMODIFICACION", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var dOCUMENTOFISCALParameter = dOCUMENTOFISCAL != null ?
                new ObjectParameter("DOCUMENTOFISCAL", dOCUMENTOFISCAL) :
                new ObjectParameter("DOCUMENTOFISCAL", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var tELEFONOParameter = tELEFONO != null ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(string));
    
            var tIPOEMPRESANOMBREParameter = tIPOEMPRESANOMBRE != null ?
                new ObjectParameter("TIPOEMPRESANOMBRE", tIPOEMPRESANOMBRE) :
                new ObjectParameter("TIPOEMPRESANOMBRE", typeof(string));
    
            var tIPOSEGURONOMBREParameter = tIPOSEGURONOMBRE != null ?
                new ObjectParameter("TIPOSEGURONOMBRE", tIPOSEGURONOMBRE) :
                new ObjectParameter("TIPOSEGURONOMBRE", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_SS_GE_EMPRESASEGURO>("USP_VW_SS_GE_EmpresaSeguroListar", mergeOption, iDEMPRESAParameter, cODIGOParameter, dESCRIPCIONParameter, tIPOEMPRESAParameter, tIPOSEGUROParameter, eSTADOParameter, uSUARIOCREACIONParameter, fECHACREACIONParameter, uSUARIOMODIFICACIONParameter, fECHAMODIFICACIONParameter, aCCIONParameter, pERSONAParameter, nOMBRECOMPLETOParameter, dOCUMENTOFISCALParameter, dIRECCIONParameter, tELEFONOParameter, tIPOEMPRESANOMBREParameter, tIPOSEGURONOMBREParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual int USP_VW_SS_HC_FORMATORECURSOCAMPO(Nullable<int> iDFORMATO, Nullable<int> sECUENCIACAMPO, string cODIGOFORMATO, string dESCRIPCION, Nullable<int> iDFAVORITOTABLA, string nOMBRECAMPO, string nOMBRETABLA, Nullable<int> eSTADO, string aCCION)
        {
            var iDFORMATOParameter = iDFORMATO.HasValue ?
                new ObjectParameter("IDFORMATO", iDFORMATO) :
                new ObjectParameter("IDFORMATO", typeof(int));
    
            var sECUENCIACAMPOParameter = sECUENCIACAMPO.HasValue ?
                new ObjectParameter("SECUENCIACAMPO", sECUENCIACAMPO) :
                new ObjectParameter("SECUENCIACAMPO", typeof(int));
    
            var cODIGOFORMATOParameter = cODIGOFORMATO != null ?
                new ObjectParameter("CODIGOFORMATO", cODIGOFORMATO) :
                new ObjectParameter("CODIGOFORMATO", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var iDFAVORITOTABLAParameter = iDFAVORITOTABLA.HasValue ?
                new ObjectParameter("IDFAVORITOTABLA", iDFAVORITOTABLA) :
                new ObjectParameter("IDFAVORITOTABLA", typeof(int));
    
            var nOMBRECAMPOParameter = nOMBRECAMPO != null ?
                new ObjectParameter("NOMBRECAMPO", nOMBRECAMPO) :
                new ObjectParameter("NOMBRECAMPO", typeof(string));
    
            var nOMBRETABLAParameter = nOMBRETABLA != null ?
                new ObjectParameter("NOMBRETABLA", nOMBRETABLA) :
                new ObjectParameter("NOMBRETABLA", typeof(string));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_VW_SS_HC_FORMATORECURSOCAMPO", iDFORMATOParameter, sECUENCIACAMPOParameter, cODIGOFORMATOParameter, dESCRIPCIONParameter, iDFAVORITOTABLAParameter, nOMBRECAMPOParameter, nOMBRETABLAParameter, eSTADOParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_VW_SS_GE_EspecialidadMedico(Nullable<int> pERSONA, string oRIGEN, string nOMBRES, string nOMBRECOMPLETO, string bUSQUEDA, string tIPODOCUMENTOIDENTIDAD, string dOCUMENTOIDENTIDAD, string eSCLIENTE, string eSPROVEEDOR, string eSEMPLEADO, string eSOTRO, string tIPOPERSONA, Nullable<System.DateTime> fECHANACIMIENTO, string cIUDADNACIMIENTO, string dOCUMENTOFISCAL, string dOCUMENTO, string pERSONAANT, string cORREOELECTRONICO, string cLASEPERSONACODIGO, string eSTADO, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string tIPOPERSONAUSUARIO, string cMP, string fOTO, string nUMEROREGISTROESPECIALIDAD, Nullable<int> tIPOGENERACIONCITA, Nullable<decimal> tIEMPOPROMEDIOATENCION, Nullable<int> iDESPECIALIDAD, string nOMBRE, string aCCION, string sEXO, string dIRECCION, string tELEFONO, Nullable<int> pROGRAMADO, Nullable<int> sERVICIO, string tIPOHORARIO, Nullable<int> iDHORARIO, string cODIGOUSUARIO)
        {
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var oRIGENParameter = oRIGEN != null ?
                new ObjectParameter("ORIGEN", oRIGEN) :
                new ObjectParameter("ORIGEN", typeof(string));
    
            var nOMBRESParameter = nOMBRES != null ?
                new ObjectParameter("NOMBRES", nOMBRES) :
                new ObjectParameter("NOMBRES", typeof(string));
    
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var bUSQUEDAParameter = bUSQUEDA != null ?
                new ObjectParameter("BUSQUEDA", bUSQUEDA) :
                new ObjectParameter("BUSQUEDA", typeof(string));
    
            var tIPODOCUMENTOIDENTIDADParameter = tIPODOCUMENTOIDENTIDAD != null ?
                new ObjectParameter("TIPODOCUMENTOIDENTIDAD", tIPODOCUMENTOIDENTIDAD) :
                new ObjectParameter("TIPODOCUMENTOIDENTIDAD", typeof(string));
    
            var dOCUMENTOIDENTIDADParameter = dOCUMENTOIDENTIDAD != null ?
                new ObjectParameter("DOCUMENTOIDENTIDAD", dOCUMENTOIDENTIDAD) :
                new ObjectParameter("DOCUMENTOIDENTIDAD", typeof(string));
    
            var eSCLIENTEParameter = eSCLIENTE != null ?
                new ObjectParameter("ESCLIENTE", eSCLIENTE) :
                new ObjectParameter("ESCLIENTE", typeof(string));
    
            var eSPROVEEDORParameter = eSPROVEEDOR != null ?
                new ObjectParameter("ESPROVEEDOR", eSPROVEEDOR) :
                new ObjectParameter("ESPROVEEDOR", typeof(string));
    
            var eSEMPLEADOParameter = eSEMPLEADO != null ?
                new ObjectParameter("ESEMPLEADO", eSEMPLEADO) :
                new ObjectParameter("ESEMPLEADO", typeof(string));
    
            var eSOTROParameter = eSOTRO != null ?
                new ObjectParameter("ESOTRO", eSOTRO) :
                new ObjectParameter("ESOTRO", typeof(string));
    
            var tIPOPERSONAParameter = tIPOPERSONA != null ?
                new ObjectParameter("TIPOPERSONA", tIPOPERSONA) :
                new ObjectParameter("TIPOPERSONA", typeof(string));
    
            var fECHANACIMIENTOParameter = fECHANACIMIENTO.HasValue ?
                new ObjectParameter("FECHANACIMIENTO", fECHANACIMIENTO) :
                new ObjectParameter("FECHANACIMIENTO", typeof(System.DateTime));
    
            var cIUDADNACIMIENTOParameter = cIUDADNACIMIENTO != null ?
                new ObjectParameter("CIUDADNACIMIENTO", cIUDADNACIMIENTO) :
                new ObjectParameter("CIUDADNACIMIENTO", typeof(string));
    
            var dOCUMENTOFISCALParameter = dOCUMENTOFISCAL != null ?
                new ObjectParameter("DOCUMENTOFISCAL", dOCUMENTOFISCAL) :
                new ObjectParameter("DOCUMENTOFISCAL", typeof(string));
    
            var dOCUMENTOParameter = dOCUMENTO != null ?
                new ObjectParameter("DOCUMENTO", dOCUMENTO) :
                new ObjectParameter("DOCUMENTO", typeof(string));
    
            var pERSONAANTParameter = pERSONAANT != null ?
                new ObjectParameter("PERSONAANT", pERSONAANT) :
                new ObjectParameter("PERSONAANT", typeof(string));
    
            var cORREOELECTRONICOParameter = cORREOELECTRONICO != null ?
                new ObjectParameter("CORREOELECTRONICO", cORREOELECTRONICO) :
                new ObjectParameter("CORREOELECTRONICO", typeof(string));
    
            var cLASEPERSONACODIGOParameter = cLASEPERSONACODIGO != null ?
                new ObjectParameter("CLASEPERSONACODIGO", cLASEPERSONACODIGO) :
                new ObjectParameter("CLASEPERSONACODIGO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var tIPOPERSONAUSUARIOParameter = tIPOPERSONAUSUARIO != null ?
                new ObjectParameter("TIPOPERSONAUSUARIO", tIPOPERSONAUSUARIO) :
                new ObjectParameter("TIPOPERSONAUSUARIO", typeof(string));
    
            var cMPParameter = cMP != null ?
                new ObjectParameter("CMP", cMP) :
                new ObjectParameter("CMP", typeof(string));
    
            var fOTOParameter = fOTO != null ?
                new ObjectParameter("FOTO", fOTO) :
                new ObjectParameter("FOTO", typeof(string));
    
            var nUMEROREGISTROESPECIALIDADParameter = nUMEROREGISTROESPECIALIDAD != null ?
                new ObjectParameter("NUMEROREGISTROESPECIALIDAD", nUMEROREGISTROESPECIALIDAD) :
                new ObjectParameter("NUMEROREGISTROESPECIALIDAD", typeof(string));
    
            var tIPOGENERACIONCITAParameter = tIPOGENERACIONCITA.HasValue ?
                new ObjectParameter("TIPOGENERACIONCITA", tIPOGENERACIONCITA) :
                new ObjectParameter("TIPOGENERACIONCITA", typeof(int));
    
            var tIEMPOPROMEDIOATENCIONParameter = tIEMPOPROMEDIOATENCION.HasValue ?
                new ObjectParameter("TIEMPOPROMEDIOATENCION", tIEMPOPROMEDIOATENCION) :
                new ObjectParameter("TIEMPOPROMEDIOATENCION", typeof(decimal));
    
            var iDESPECIALIDADParameter = iDESPECIALIDAD.HasValue ?
                new ObjectParameter("IDESPECIALIDAD", iDESPECIALIDAD) :
                new ObjectParameter("IDESPECIALIDAD", typeof(int));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var sEXOParameter = sEXO != null ?
                new ObjectParameter("SEXO", sEXO) :
                new ObjectParameter("SEXO", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var tELEFONOParameter = tELEFONO != null ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(string));
    
            var pROGRAMADOParameter = pROGRAMADO.HasValue ?
                new ObjectParameter("PROGRAMADO", pROGRAMADO) :
                new ObjectParameter("PROGRAMADO", typeof(int));
    
            var sERVICIOParameter = sERVICIO.HasValue ?
                new ObjectParameter("SERVICIO", sERVICIO) :
                new ObjectParameter("SERVICIO", typeof(int));
    
            var tIPOHORARIOParameter = tIPOHORARIO != null ?
                new ObjectParameter("TIPOHORARIO", tIPOHORARIO) :
                new ObjectParameter("TIPOHORARIO", typeof(string));
    
            var iDHORARIOParameter = iDHORARIO.HasValue ?
                new ObjectParameter("IDHORARIO", iDHORARIO) :
                new ObjectParameter("IDHORARIO", typeof(int));
    
            var cODIGOUSUARIOParameter = cODIGOUSUARIO != null ?
                new ObjectParameter("CODIGOUSUARIO", cODIGOUSUARIO) :
                new ObjectParameter("CODIGOUSUARIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_VW_SS_GE_EspecialidadMedico", pERSONAParameter, oRIGENParameter, nOMBRESParameter, nOMBRECOMPLETOParameter, bUSQUEDAParameter, tIPODOCUMENTOIDENTIDADParameter, dOCUMENTOIDENTIDADParameter, eSCLIENTEParameter, eSPROVEEDORParameter, eSEMPLEADOParameter, eSOTROParameter, tIPOPERSONAParameter, fECHANACIMIENTOParameter, cIUDADNACIMIENTOParameter, dOCUMENTOFISCALParameter, dOCUMENTOParameter, pERSONAANTParameter, cORREOELECTRONICOParameter, cLASEPERSONACODIGOParameter, eSTADOParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, tIPOPERSONAUSUARIOParameter, cMPParameter, fOTOParameter, nUMEROREGISTROESPECIALIDADParameter, tIPOGENERACIONCITAParameter, tIEMPOPROMEDIOATENCIONParameter, iDESPECIALIDADParameter, nOMBREParameter, aCCIONParameter, sEXOParameter, dIRECCIONParameter, tELEFONOParameter, pROGRAMADOParameter, sERVICIOParameter, tIPOHORARIOParameter, iDHORARIOParameter, cODIGOUSUARIOParameter);
        }
    
        public virtual ObjectResult<VW_SS_GE_ESPECIALIDADMEDICO> USP_VW_SS_GE_EspecialidadMedicoListar(Nullable<int> pERSONA, string oRIGEN, string nOMBRES, string nOMBRECOMPLETO, string bUSQUEDA, string tIPODOCUMENTOIDENTIDAD, string dOCUMENTOIDENTIDAD, string eSCLIENTE, string eSPROVEEDOR, string eSEMPLEADO, string eSOTRO, string tIPOPERSONA, Nullable<System.DateTime> fECHANACIMIENTO, string cIUDADNACIMIENTO, string dOCUMENTOFISCAL, string dOCUMENTO, string pERSONAANT, string cORREOELECTRONICO, string cLASEPERSONACODIGO, string eSTADO, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string tIPOPERSONAUSUARIO, string cMP, string fOTO, string nUMEROREGISTROESPECIALIDAD, Nullable<int> tIPOGENERACIONCITA, Nullable<decimal> tIEMPOPROMEDIOATENCION, Nullable<int> iDESPECIALIDAD, string nOMBRE, string aCCION, string sEXO, string dIRECCION, string tELEFONO, Nullable<int> pROGRAMADO, Nullable<int> sERVICIO, string tIPOHORARIO, Nullable<int> iDHORARIO, string cODIGOUSUARIO, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_SS_GE_ESPECIALIDADMEDICO).Assembly);
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var oRIGENParameter = oRIGEN != null ?
                new ObjectParameter("ORIGEN", oRIGEN) :
                new ObjectParameter("ORIGEN", typeof(string));
    
            var nOMBRESParameter = nOMBRES != null ?
                new ObjectParameter("NOMBRES", nOMBRES) :
                new ObjectParameter("NOMBRES", typeof(string));
    
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var bUSQUEDAParameter = bUSQUEDA != null ?
                new ObjectParameter("BUSQUEDA", bUSQUEDA) :
                new ObjectParameter("BUSQUEDA", typeof(string));
    
            var tIPODOCUMENTOIDENTIDADParameter = tIPODOCUMENTOIDENTIDAD != null ?
                new ObjectParameter("TIPODOCUMENTOIDENTIDAD", tIPODOCUMENTOIDENTIDAD) :
                new ObjectParameter("TIPODOCUMENTOIDENTIDAD", typeof(string));
    
            var dOCUMENTOIDENTIDADParameter = dOCUMENTOIDENTIDAD != null ?
                new ObjectParameter("DOCUMENTOIDENTIDAD", dOCUMENTOIDENTIDAD) :
                new ObjectParameter("DOCUMENTOIDENTIDAD", typeof(string));
    
            var eSCLIENTEParameter = eSCLIENTE != null ?
                new ObjectParameter("ESCLIENTE", eSCLIENTE) :
                new ObjectParameter("ESCLIENTE", typeof(string));
    
            var eSPROVEEDORParameter = eSPROVEEDOR != null ?
                new ObjectParameter("ESPROVEEDOR", eSPROVEEDOR) :
                new ObjectParameter("ESPROVEEDOR", typeof(string));
    
            var eSEMPLEADOParameter = eSEMPLEADO != null ?
                new ObjectParameter("ESEMPLEADO", eSEMPLEADO) :
                new ObjectParameter("ESEMPLEADO", typeof(string));
    
            var eSOTROParameter = eSOTRO != null ?
                new ObjectParameter("ESOTRO", eSOTRO) :
                new ObjectParameter("ESOTRO", typeof(string));
    
            var tIPOPERSONAParameter = tIPOPERSONA != null ?
                new ObjectParameter("TIPOPERSONA", tIPOPERSONA) :
                new ObjectParameter("TIPOPERSONA", typeof(string));
    
            var fECHANACIMIENTOParameter = fECHANACIMIENTO.HasValue ?
                new ObjectParameter("FECHANACIMIENTO", fECHANACIMIENTO) :
                new ObjectParameter("FECHANACIMIENTO", typeof(System.DateTime));
    
            var cIUDADNACIMIENTOParameter = cIUDADNACIMIENTO != null ?
                new ObjectParameter("CIUDADNACIMIENTO", cIUDADNACIMIENTO) :
                new ObjectParameter("CIUDADNACIMIENTO", typeof(string));
    
            var dOCUMENTOFISCALParameter = dOCUMENTOFISCAL != null ?
                new ObjectParameter("DOCUMENTOFISCAL", dOCUMENTOFISCAL) :
                new ObjectParameter("DOCUMENTOFISCAL", typeof(string));
    
            var dOCUMENTOParameter = dOCUMENTO != null ?
                new ObjectParameter("DOCUMENTO", dOCUMENTO) :
                new ObjectParameter("DOCUMENTO", typeof(string));
    
            var pERSONAANTParameter = pERSONAANT != null ?
                new ObjectParameter("PERSONAANT", pERSONAANT) :
                new ObjectParameter("PERSONAANT", typeof(string));
    
            var cORREOELECTRONICOParameter = cORREOELECTRONICO != null ?
                new ObjectParameter("CORREOELECTRONICO", cORREOELECTRONICO) :
                new ObjectParameter("CORREOELECTRONICO", typeof(string));
    
            var cLASEPERSONACODIGOParameter = cLASEPERSONACODIGO != null ?
                new ObjectParameter("CLASEPERSONACODIGO", cLASEPERSONACODIGO) :
                new ObjectParameter("CLASEPERSONACODIGO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var tIPOPERSONAUSUARIOParameter = tIPOPERSONAUSUARIO != null ?
                new ObjectParameter("TIPOPERSONAUSUARIO", tIPOPERSONAUSUARIO) :
                new ObjectParameter("TIPOPERSONAUSUARIO", typeof(string));
    
            var cMPParameter = cMP != null ?
                new ObjectParameter("CMP", cMP) :
                new ObjectParameter("CMP", typeof(string));
    
            var fOTOParameter = fOTO != null ?
                new ObjectParameter("FOTO", fOTO) :
                new ObjectParameter("FOTO", typeof(string));
    
            var nUMEROREGISTROESPECIALIDADParameter = nUMEROREGISTROESPECIALIDAD != null ?
                new ObjectParameter("NUMEROREGISTROESPECIALIDAD", nUMEROREGISTROESPECIALIDAD) :
                new ObjectParameter("NUMEROREGISTROESPECIALIDAD", typeof(string));
    
            var tIPOGENERACIONCITAParameter = tIPOGENERACIONCITA.HasValue ?
                new ObjectParameter("TIPOGENERACIONCITA", tIPOGENERACIONCITA) :
                new ObjectParameter("TIPOGENERACIONCITA", typeof(int));
    
            var tIEMPOPROMEDIOATENCIONParameter = tIEMPOPROMEDIOATENCION.HasValue ?
                new ObjectParameter("TIEMPOPROMEDIOATENCION", tIEMPOPROMEDIOATENCION) :
                new ObjectParameter("TIEMPOPROMEDIOATENCION", typeof(decimal));
    
            var iDESPECIALIDADParameter = iDESPECIALIDAD.HasValue ?
                new ObjectParameter("IDESPECIALIDAD", iDESPECIALIDAD) :
                new ObjectParameter("IDESPECIALIDAD", typeof(int));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var sEXOParameter = sEXO != null ?
                new ObjectParameter("SEXO", sEXO) :
                new ObjectParameter("SEXO", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var tELEFONOParameter = tELEFONO != null ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(string));
    
            var pROGRAMADOParameter = pROGRAMADO.HasValue ?
                new ObjectParameter("PROGRAMADO", pROGRAMADO) :
                new ObjectParameter("PROGRAMADO", typeof(int));
    
            var sERVICIOParameter = sERVICIO.HasValue ?
                new ObjectParameter("SERVICIO", sERVICIO) :
                new ObjectParameter("SERVICIO", typeof(int));
    
            var tIPOHORARIOParameter = tIPOHORARIO != null ?
                new ObjectParameter("TIPOHORARIO", tIPOHORARIO) :
                new ObjectParameter("TIPOHORARIO", typeof(string));
    
            var iDHORARIOParameter = iDHORARIO.HasValue ?
                new ObjectParameter("IDHORARIO", iDHORARIO) :
                new ObjectParameter("IDHORARIO", typeof(int));
    
            var cODIGOUSUARIOParameter = cODIGOUSUARIO != null ?
                new ObjectParameter("CODIGOUSUARIO", cODIGOUSUARIO) :
                new ObjectParameter("CODIGOUSUARIO", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_SS_GE_ESPECIALIDADMEDICO>("USP_VW_SS_GE_EspecialidadMedicoListar", pERSONAParameter, oRIGENParameter, nOMBRESParameter, nOMBRECOMPLETOParameter, bUSQUEDAParameter, tIPODOCUMENTOIDENTIDADParameter, dOCUMENTOIDENTIDADParameter, eSCLIENTEParameter, eSPROVEEDORParameter, eSEMPLEADOParameter, eSOTROParameter, tIPOPERSONAParameter, fECHANACIMIENTOParameter, cIUDADNACIMIENTOParameter, dOCUMENTOFISCALParameter, dOCUMENTOParameter, pERSONAANTParameter, cORREOELECTRONICOParameter, cLASEPERSONACODIGOParameter, eSTADOParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, tIPOPERSONAUSUARIOParameter, cMPParameter, fOTOParameter, nUMEROREGISTROESPECIALIDADParameter, tIPOGENERACIONCITAParameter, tIEMPOPROMEDIOATENCIONParameter, iDESPECIALIDADParameter, nOMBREParameter, aCCIONParameter, sEXOParameter, dIRECCIONParameter, tELEFONOParameter, pROGRAMADOParameter, sERVICIOParameter, tIPOHORARIOParameter, iDHORARIOParameter, cODIGOUSUARIOParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_SS_GE_ESPECIALIDADMEDICO> USP_VW_SS_GE_EspecialidadMedicoListar(Nullable<int> pERSONA, string oRIGEN, string nOMBRES, string nOMBRECOMPLETO, string bUSQUEDA, string tIPODOCUMENTOIDENTIDAD, string dOCUMENTOIDENTIDAD, string eSCLIENTE, string eSPROVEEDOR, string eSEMPLEADO, string eSOTRO, string tIPOPERSONA, Nullable<System.DateTime> fECHANACIMIENTO, string cIUDADNACIMIENTO, string dOCUMENTOFISCAL, string dOCUMENTO, string pERSONAANT, string cORREOELECTRONICO, string cLASEPERSONACODIGO, string eSTADO, string uLTIMOUSUARIO, Nullable<System.DateTime> uLTIMAFECHAMODIF, string tIPOPERSONAUSUARIO, string cMP, string fOTO, string nUMEROREGISTROESPECIALIDAD, Nullable<int> tIPOGENERACIONCITA, Nullable<decimal> tIEMPOPROMEDIOATENCION, Nullable<int> iDESPECIALIDAD, string nOMBRE, string aCCION, string sEXO, string dIRECCION, string tELEFONO, Nullable<int> pROGRAMADO, Nullable<int> sERVICIO, string tIPOHORARIO, Nullable<int> iDHORARIO, string cODIGOUSUARIO, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_SS_GE_ESPECIALIDADMEDICO).Assembly);
    
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            var oRIGENParameter = oRIGEN != null ?
                new ObjectParameter("ORIGEN", oRIGEN) :
                new ObjectParameter("ORIGEN", typeof(string));
    
            var nOMBRESParameter = nOMBRES != null ?
                new ObjectParameter("NOMBRES", nOMBRES) :
                new ObjectParameter("NOMBRES", typeof(string));
    
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var bUSQUEDAParameter = bUSQUEDA != null ?
                new ObjectParameter("BUSQUEDA", bUSQUEDA) :
                new ObjectParameter("BUSQUEDA", typeof(string));
    
            var tIPODOCUMENTOIDENTIDADParameter = tIPODOCUMENTOIDENTIDAD != null ?
                new ObjectParameter("TIPODOCUMENTOIDENTIDAD", tIPODOCUMENTOIDENTIDAD) :
                new ObjectParameter("TIPODOCUMENTOIDENTIDAD", typeof(string));
    
            var dOCUMENTOIDENTIDADParameter = dOCUMENTOIDENTIDAD != null ?
                new ObjectParameter("DOCUMENTOIDENTIDAD", dOCUMENTOIDENTIDAD) :
                new ObjectParameter("DOCUMENTOIDENTIDAD", typeof(string));
    
            var eSCLIENTEParameter = eSCLIENTE != null ?
                new ObjectParameter("ESCLIENTE", eSCLIENTE) :
                new ObjectParameter("ESCLIENTE", typeof(string));
    
            var eSPROVEEDORParameter = eSPROVEEDOR != null ?
                new ObjectParameter("ESPROVEEDOR", eSPROVEEDOR) :
                new ObjectParameter("ESPROVEEDOR", typeof(string));
    
            var eSEMPLEADOParameter = eSEMPLEADO != null ?
                new ObjectParameter("ESEMPLEADO", eSEMPLEADO) :
                new ObjectParameter("ESEMPLEADO", typeof(string));
    
            var eSOTROParameter = eSOTRO != null ?
                new ObjectParameter("ESOTRO", eSOTRO) :
                new ObjectParameter("ESOTRO", typeof(string));
    
            var tIPOPERSONAParameter = tIPOPERSONA != null ?
                new ObjectParameter("TIPOPERSONA", tIPOPERSONA) :
                new ObjectParameter("TIPOPERSONA", typeof(string));
    
            var fECHANACIMIENTOParameter = fECHANACIMIENTO.HasValue ?
                new ObjectParameter("FECHANACIMIENTO", fECHANACIMIENTO) :
                new ObjectParameter("FECHANACIMIENTO", typeof(System.DateTime));
    
            var cIUDADNACIMIENTOParameter = cIUDADNACIMIENTO != null ?
                new ObjectParameter("CIUDADNACIMIENTO", cIUDADNACIMIENTO) :
                new ObjectParameter("CIUDADNACIMIENTO", typeof(string));
    
            var dOCUMENTOFISCALParameter = dOCUMENTOFISCAL != null ?
                new ObjectParameter("DOCUMENTOFISCAL", dOCUMENTOFISCAL) :
                new ObjectParameter("DOCUMENTOFISCAL", typeof(string));
    
            var dOCUMENTOParameter = dOCUMENTO != null ?
                new ObjectParameter("DOCUMENTO", dOCUMENTO) :
                new ObjectParameter("DOCUMENTO", typeof(string));
    
            var pERSONAANTParameter = pERSONAANT != null ?
                new ObjectParameter("PERSONAANT", pERSONAANT) :
                new ObjectParameter("PERSONAANT", typeof(string));
    
            var cORREOELECTRONICOParameter = cORREOELECTRONICO != null ?
                new ObjectParameter("CORREOELECTRONICO", cORREOELECTRONICO) :
                new ObjectParameter("CORREOELECTRONICO", typeof(string));
    
            var cLASEPERSONACODIGOParameter = cLASEPERSONACODIGO != null ?
                new ObjectParameter("CLASEPERSONACODIGO", cLASEPERSONACODIGO) :
                new ObjectParameter("CLASEPERSONACODIGO", typeof(string));
    
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var uLTIMOUSUARIOParameter = uLTIMOUSUARIO != null ?
                new ObjectParameter("ULTIMOUSUARIO", uLTIMOUSUARIO) :
                new ObjectParameter("ULTIMOUSUARIO", typeof(string));
    
            var uLTIMAFECHAMODIFParameter = uLTIMAFECHAMODIF.HasValue ?
                new ObjectParameter("ULTIMAFECHAMODIF", uLTIMAFECHAMODIF) :
                new ObjectParameter("ULTIMAFECHAMODIF", typeof(System.DateTime));
    
            var tIPOPERSONAUSUARIOParameter = tIPOPERSONAUSUARIO != null ?
                new ObjectParameter("TIPOPERSONAUSUARIO", tIPOPERSONAUSUARIO) :
                new ObjectParameter("TIPOPERSONAUSUARIO", typeof(string));
    
            var cMPParameter = cMP != null ?
                new ObjectParameter("CMP", cMP) :
                new ObjectParameter("CMP", typeof(string));
    
            var fOTOParameter = fOTO != null ?
                new ObjectParameter("FOTO", fOTO) :
                new ObjectParameter("FOTO", typeof(string));
    
            var nUMEROREGISTROESPECIALIDADParameter = nUMEROREGISTROESPECIALIDAD != null ?
                new ObjectParameter("NUMEROREGISTROESPECIALIDAD", nUMEROREGISTROESPECIALIDAD) :
                new ObjectParameter("NUMEROREGISTROESPECIALIDAD", typeof(string));
    
            var tIPOGENERACIONCITAParameter = tIPOGENERACIONCITA.HasValue ?
                new ObjectParameter("TIPOGENERACIONCITA", tIPOGENERACIONCITA) :
                new ObjectParameter("TIPOGENERACIONCITA", typeof(int));
    
            var tIEMPOPROMEDIOATENCIONParameter = tIEMPOPROMEDIOATENCION.HasValue ?
                new ObjectParameter("TIEMPOPROMEDIOATENCION", tIEMPOPROMEDIOATENCION) :
                new ObjectParameter("TIEMPOPROMEDIOATENCION", typeof(decimal));
    
            var iDESPECIALIDADParameter = iDESPECIALIDAD.HasValue ?
                new ObjectParameter("IDESPECIALIDAD", iDESPECIALIDAD) :
                new ObjectParameter("IDESPECIALIDAD", typeof(int));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var sEXOParameter = sEXO != null ?
                new ObjectParameter("SEXO", sEXO) :
                new ObjectParameter("SEXO", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var tELEFONOParameter = tELEFONO != null ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(string));
    
            var pROGRAMADOParameter = pROGRAMADO.HasValue ?
                new ObjectParameter("PROGRAMADO", pROGRAMADO) :
                new ObjectParameter("PROGRAMADO", typeof(int));
    
            var sERVICIOParameter = sERVICIO.HasValue ?
                new ObjectParameter("SERVICIO", sERVICIO) :
                new ObjectParameter("SERVICIO", typeof(int));
    
            var tIPOHORARIOParameter = tIPOHORARIO != null ?
                new ObjectParameter("TIPOHORARIO", tIPOHORARIO) :
                new ObjectParameter("TIPOHORARIO", typeof(string));
    
            var iDHORARIOParameter = iDHORARIO.HasValue ?
                new ObjectParameter("IDHORARIO", iDHORARIO) :
                new ObjectParameter("IDHORARIO", typeof(int));
    
            var cODIGOUSUARIOParameter = cODIGOUSUARIO != null ?
                new ObjectParameter("CODIGOUSUARIO", cODIGOUSUARIO) :
                new ObjectParameter("CODIGOUSUARIO", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_SS_GE_ESPECIALIDADMEDICO>("USP_VW_SS_GE_EspecialidadMedicoListar", mergeOption, pERSONAParameter, oRIGENParameter, nOMBRESParameter, nOMBRECOMPLETOParameter, bUSQUEDAParameter, tIPODOCUMENTOIDENTIDADParameter, dOCUMENTOIDENTIDADParameter, eSCLIENTEParameter, eSPROVEEDORParameter, eSEMPLEADOParameter, eSOTROParameter, tIPOPERSONAParameter, fECHANACIMIENTOParameter, cIUDADNACIMIENTOParameter, dOCUMENTOFISCALParameter, dOCUMENTOParameter, pERSONAANTParameter, cORREOELECTRONICOParameter, cLASEPERSONACODIGOParameter, eSTADOParameter, uLTIMOUSUARIOParameter, uLTIMAFECHAMODIFParameter, tIPOPERSONAUSUARIOParameter, cMPParameter, fOTOParameter, nUMEROREGISTROESPECIALIDADParameter, tIPOGENERACIONCITAParameter, tIEMPOPROMEDIOATENCIONParameter, iDESPECIALIDADParameter, nOMBREParameter, aCCIONParameter, sEXOParameter, dIRECCIONParameter, tELEFONOParameter, pROGRAMADOParameter, sERVICIOParameter, tIPOHORARIOParameter, iDHORARIOParameter, cODIGOUSUARIOParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_FAVORITO(Nullable<int> idFavorito, string descripcion, string descripcionExtranjera, Nullable<int> tipoFavorito, Nullable<int> idFavoritoTabla, Nullable<int> idAgente, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoFavoritoParameter = tipoFavorito.HasValue ?
                new ObjectParameter("TipoFavorito", tipoFavorito) :
                new ObjectParameter("TipoFavorito", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_FAVORITO", idFavoritoParameter, descripcionParameter, descripcionExtranjeraParameter, tipoFavoritoParameter, idFavoritoTablaParameter, idAgenteParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Favorito> USP_SS_HC_FAVORITO_LISTAR(Nullable<int> idFavorito, string descripcion, string descripcionExtranjera, Nullable<int> tipoFavorito, Nullable<int> idFavoritoTabla, Nullable<int> idAgente, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Favorito).Assembly);
    
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoFavoritoParameter = tipoFavorito.HasValue ?
                new ObjectParameter("TipoFavorito", tipoFavorito) :
                new ObjectParameter("TipoFavorito", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Favorito>("USP_SS_HC_FAVORITO_LISTAR", idFavoritoParameter, descripcionParameter, descripcionExtranjeraParameter, tipoFavoritoParameter, idFavoritoTablaParameter, idAgenteParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_Favorito> USP_SS_HC_FAVORITO_LISTAR(Nullable<int> idFavorito, string descripcion, string descripcionExtranjera, Nullable<int> tipoFavorito, Nullable<int> idFavoritoTabla, Nullable<int> idAgente, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Favorito).Assembly);
    
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoFavoritoParameter = tipoFavorito.HasValue ?
                new ObjectParameter("TipoFavorito", tipoFavorito) :
                new ObjectParameter("TipoFavorito", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Favorito>("USP_SS_HC_FAVORITO_LISTAR", mergeOption, idFavoritoParameter, descripcionParameter, descripcionExtranjeraParameter, tipoFavoritoParameter, idFavoritoTablaParameter, idAgenteParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_Formato> USP_SS_HC_FormatoListar(Nullable<int> idFormato, Nullable<int> idFormatoPadre, string codigoFormato, string codigoFormatoPadre, string cadenaRecursividad, Nullable<int> nivel, string descripcion, string descripcionExtranjera, Nullable<int> tipoFormato, string versionFormatoFijo, Nullable<int> idFormatoDinamico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string modulo, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Formato).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var codigoFormatoPadreParameter = codigoFormatoPadre != null ?
                new ObjectParameter("CodigoFormatoPadre", codigoFormatoPadre) :
                new ObjectParameter("CodigoFormatoPadre", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var versionFormatoFijoParameter = versionFormatoFijo != null ?
                new ObjectParameter("VersionFormatoFijo", versionFormatoFijo) :
                new ObjectParameter("VersionFormatoFijo", typeof(string));
    
            var idFormatoDinamicoParameter = idFormatoDinamico.HasValue ?
                new ObjectParameter("IdFormatoDinamico", idFormatoDinamico) :
                new ObjectParameter("IdFormatoDinamico", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Formato>("USP_SS_HC_FormatoListar", idFormatoParameter, idFormatoPadreParameter, codigoFormatoParameter, codigoFormatoPadreParameter, cadenaRecursividadParameter, nivelParameter, descripcionParameter, descripcionExtranjeraParameter, tipoFormatoParameter, versionFormatoFijoParameter, idFormatoDinamicoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, moduloParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_Formato> USP_SS_HC_FormatoListar(Nullable<int> idFormato, Nullable<int> idFormatoPadre, string codigoFormato, string codigoFormatoPadre, string cadenaRecursividad, Nullable<int> nivel, string descripcion, string descripcionExtranjera, Nullable<int> tipoFormato, string versionFormatoFijo, Nullable<int> idFormatoDinamico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string modulo, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Formato).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var codigoFormatoPadreParameter = codigoFormatoPadre != null ?
                new ObjectParameter("CodigoFormatoPadre", codigoFormatoPadre) :
                new ObjectParameter("CodigoFormatoPadre", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var versionFormatoFijoParameter = versionFormatoFijo != null ?
                new ObjectParameter("VersionFormatoFijo", versionFormatoFijo) :
                new ObjectParameter("VersionFormatoFijo", typeof(string));
    
            var idFormatoDinamicoParameter = idFormatoDinamico.HasValue ?
                new ObjectParameter("IdFormatoDinamico", idFormatoDinamico) :
                new ObjectParameter("IdFormatoDinamico", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Formato>("USP_SS_HC_FormatoListar", mergeOption, idFormatoParameter, idFormatoPadreParameter, codigoFormatoParameter, codigoFormatoPadreParameter, cadenaRecursividadParameter, nivelParameter, descripcionParameter, descripcionExtranjeraParameter, tipoFormatoParameter, versionFormatoFijoParameter, idFormatoDinamicoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, moduloParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_HC_UnidadesMast(string unidadCodigo, string descripcionCorta, string descripcionExtranjera, string unidadTipo, Nullable<int> numeroDecimales, string estado, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, Nullable<int> idUnidadMedida, Nullable<int> indicadorMedidaBase, Nullable<decimal> factorConversion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, Nullable<int> indAfectocalculocantidad, string codigoFiscal, string aCCION)
        {
            var unidadCodigoParameter = unidadCodigo != null ?
                new ObjectParameter("UnidadCodigo", unidadCodigo) :
                new ObjectParameter("UnidadCodigo", typeof(string));
    
            var descripcionCortaParameter = descripcionCorta != null ?
                new ObjectParameter("DescripcionCorta", descripcionCorta) :
                new ObjectParameter("DescripcionCorta", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var unidadTipoParameter = unidadTipo != null ?
                new ObjectParameter("UnidadTipo", unidadTipo) :
                new ObjectParameter("UnidadTipo", typeof(string));
    
            var numeroDecimalesParameter = numeroDecimales.HasValue ?
                new ObjectParameter("NumeroDecimales", numeroDecimales) :
                new ObjectParameter("NumeroDecimales", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));
    
            var indicadorMedidaBaseParameter = indicadorMedidaBase.HasValue ?
                new ObjectParameter("IndicadorMedidaBase", indicadorMedidaBase) :
                new ObjectParameter("IndicadorMedidaBase", typeof(int));
    
            var factorConversionParameter = factorConversion.HasValue ?
                new ObjectParameter("FactorConversion", factorConversion) :
                new ObjectParameter("FactorConversion", typeof(decimal));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var indAfectocalculocantidadParameter = indAfectocalculocantidad.HasValue ?
                new ObjectParameter("indAfectocalculocantidad", indAfectocalculocantidad) :
                new ObjectParameter("indAfectocalculocantidad", typeof(int));
    
            var codigoFiscalParameter = codigoFiscal != null ?
                new ObjectParameter("CodigoFiscal", codigoFiscal) :
                new ObjectParameter("CodigoFiscal", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_HC_UnidadesMast", unidadCodigoParameter, descripcionCortaParameter, descripcionExtranjeraParameter, unidadTipoParameter, numeroDecimalesParameter, estadoParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, idUnidadMedidaParameter, indicadorMedidaBaseParameter, factorConversionParameter, usuarioCreacionParameter, fechaCreacionParameter, indAfectocalculocantidadParameter, codigoFiscalParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<UnidadesMast> USP_HC_UnidadesMastListar(string unidadCodigo, string descripcionCorta, string descripcionExtranjera, string unidadTipo, Nullable<int> numeroDecimales, string estado, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, Nullable<int> idUnidadMedida, Nullable<int> indicadorMedidaBase, Nullable<decimal> factorConversion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, Nullable<int> indAfectocalculocantidad, string codigoFiscal, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UnidadesMast).Assembly);
    
            var unidadCodigoParameter = unidadCodigo != null ?
                new ObjectParameter("UnidadCodigo", unidadCodigo) :
                new ObjectParameter("UnidadCodigo", typeof(string));
    
            var descripcionCortaParameter = descripcionCorta != null ?
                new ObjectParameter("DescripcionCorta", descripcionCorta) :
                new ObjectParameter("DescripcionCorta", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var unidadTipoParameter = unidadTipo != null ?
                new ObjectParameter("UnidadTipo", unidadTipo) :
                new ObjectParameter("UnidadTipo", typeof(string));
    
            var numeroDecimalesParameter = numeroDecimales.HasValue ?
                new ObjectParameter("NumeroDecimales", numeroDecimales) :
                new ObjectParameter("NumeroDecimales", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));
    
            var indicadorMedidaBaseParameter = indicadorMedidaBase.HasValue ?
                new ObjectParameter("IndicadorMedidaBase", indicadorMedidaBase) :
                new ObjectParameter("IndicadorMedidaBase", typeof(int));
    
            var factorConversionParameter = factorConversion.HasValue ?
                new ObjectParameter("FactorConversion", factorConversion) :
                new ObjectParameter("FactorConversion", typeof(decimal));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var indAfectocalculocantidadParameter = indAfectocalculocantidad.HasValue ?
                new ObjectParameter("indAfectocalculocantidad", indAfectocalculocantidad) :
                new ObjectParameter("indAfectocalculocantidad", typeof(int));
    
            var codigoFiscalParameter = codigoFiscal != null ?
                new ObjectParameter("CodigoFiscal", codigoFiscal) :
                new ObjectParameter("CodigoFiscal", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnidadesMast>("USP_HC_UnidadesMastListar", unidadCodigoParameter, descripcionCortaParameter, descripcionExtranjeraParameter, unidadTipoParameter, numeroDecimalesParameter, estadoParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, idUnidadMedidaParameter, indicadorMedidaBaseParameter, factorConversionParameter, usuarioCreacionParameter, fechaCreacionParameter, indAfectocalculocantidadParameter, codigoFiscalParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<UnidadesMast> USP_HC_UnidadesMastListar(string unidadCodigo, string descripcionCorta, string descripcionExtranjera, string unidadTipo, Nullable<int> numeroDecimales, string estado, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, Nullable<int> idUnidadMedida, Nullable<int> indicadorMedidaBase, Nullable<decimal> factorConversion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, Nullable<int> indAfectocalculocantidad, string codigoFiscal, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(UnidadesMast).Assembly);
    
            var unidadCodigoParameter = unidadCodigo != null ?
                new ObjectParameter("UnidadCodigo", unidadCodigo) :
                new ObjectParameter("UnidadCodigo", typeof(string));
    
            var descripcionCortaParameter = descripcionCorta != null ?
                new ObjectParameter("DescripcionCorta", descripcionCorta) :
                new ObjectParameter("DescripcionCorta", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var unidadTipoParameter = unidadTipo != null ?
                new ObjectParameter("UnidadTipo", unidadTipo) :
                new ObjectParameter("UnidadTipo", typeof(string));
    
            var numeroDecimalesParameter = numeroDecimales.HasValue ?
                new ObjectParameter("NumeroDecimales", numeroDecimales) :
                new ObjectParameter("NumeroDecimales", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));
    
            var indicadorMedidaBaseParameter = indicadorMedidaBase.HasValue ?
                new ObjectParameter("IndicadorMedidaBase", indicadorMedidaBase) :
                new ObjectParameter("IndicadorMedidaBase", typeof(int));
    
            var factorConversionParameter = factorConversion.HasValue ?
                new ObjectParameter("FactorConversion", factorConversion) :
                new ObjectParameter("FactorConversion", typeof(decimal));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var indAfectocalculocantidadParameter = indAfectocalculocantidad.HasValue ?
                new ObjectParameter("indAfectocalculocantidad", indAfectocalculocantidad) :
                new ObjectParameter("indAfectocalculocantidad", typeof(int));
    
            var codigoFiscalParameter = codigoFiscal != null ?
                new ObjectParameter("CodigoFiscal", codigoFiscal) :
                new ObjectParameter("CodigoFiscal", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnidadesMast>("USP_HC_UnidadesMastListar", mergeOption, unidadCodigoParameter, descripcionCortaParameter, descripcionExtranjeraParameter, unidadTipoParameter, numeroDecimalesParameter, estadoParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, idUnidadMedidaParameter, indicadorMedidaBaseParameter, factorConversionParameter, usuarioCreacionParameter, fechaCreacionParameter, indAfectocalculocantidadParameter, codigoFiscalParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_GE_Medicamento(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, Nullable<decimal> dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));
    
            var dosisParameter = dosis.HasValue ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(decimal));
    
            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));
    
            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));
    
            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));
    
            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));
    
            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_GE_Medicamento", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Medicamento> USP_SS_GE_MedicamentoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, Nullable<decimal> dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Medicamento).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));
    
            var dosisParameter = dosis.HasValue ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(decimal));
    
            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));
    
            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));
    
            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));
    
            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));
    
            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Medicamento>("USP_SS_GE_MedicamentoListar", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Medicamento> USP_SS_GE_MedicamentoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, Nullable<decimal> dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Medicamento).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));
    
            var dosisParameter = dosis.HasValue ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(decimal));
    
            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));
    
            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));
    
            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));
    
            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));
    
            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Medicamento>("USP_SS_GE_MedicamentoListar", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_SG_PerfilUsuario(Nullable<int> idPerfil, Nullable<int> idUsuario, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string aCCION)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_SG_PerfilUsuario", idPerfilParameter, idUsuarioParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SG_PerfilUsuario> USP_SS_HC_SG_PerfilUsuario_LISTAR(Nullable<int> idPerfil, Nullable<int> idUsuario, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SG_PerfilUsuario).Assembly);
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SG_PerfilUsuario>("USP_SS_HC_SG_PerfilUsuario_LISTAR", idPerfilParameter, idUsuarioParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SG_PerfilUsuario> USP_SS_HC_SG_PerfilUsuario_LISTAR(Nullable<int> idPerfil, Nullable<int> idUsuario, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SG_PerfilUsuario).Assembly);
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SG_PerfilUsuario>("USP_SS_HC_SG_PerfilUsuario_LISTAR", mergeOption, idPerfilParameter, idUsuarioParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_FAVORITOCODIGOID(Nullable<int> idFavorito, Nullable<int> campoCodigoId, Nullable<int> indicadorCodigoId, string valorTexto, Nullable<int> valorId, Nullable<System.DateTime> valorFecha, Nullable<decimal> valorDecimal, Nullable<int> estado, string accion, string version)
        {
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var campoCodigoIdParameter = campoCodigoId.HasValue ?
                new ObjectParameter("CampoCodigoId", campoCodigoId) :
                new ObjectParameter("CampoCodigoId", typeof(int));
    
            var indicadorCodigoIdParameter = indicadorCodigoId.HasValue ?
                new ObjectParameter("IndicadorCodigoId", indicadorCodigoId) :
                new ObjectParameter("IndicadorCodigoId", typeof(int));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorIdParameter = valorId.HasValue ?
                new ObjectParameter("ValorId", valorId) :
                new ObjectParameter("ValorId", typeof(int));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var valorDecimalParameter = valorDecimal.HasValue ?
                new ObjectParameter("ValorDecimal", valorDecimal) :
                new ObjectParameter("ValorDecimal", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_FAVORITOCODIGOID", idFavoritoParameter, campoCodigoIdParameter, indicadorCodigoIdParameter, valorTextoParameter, valorIdParameter, valorFechaParameter, valorDecimalParameter, estadoParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_FavoritoCodigoId> USP_SS_HC_FAVORITOCODIGOID_LISTAR(Nullable<int> idFavorito, Nullable<int> campoCodigoId, Nullable<int> indicadorCodigoId, string valorTexto, Nullable<int> valorId, Nullable<System.DateTime> valorFecha, Nullable<decimal> valorDecimal, Nullable<int> estado, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FavoritoCodigoId).Assembly);
    
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var campoCodigoIdParameter = campoCodigoId.HasValue ?
                new ObjectParameter("CampoCodigoId", campoCodigoId) :
                new ObjectParameter("CampoCodigoId", typeof(int));
    
            var indicadorCodigoIdParameter = indicadorCodigoId.HasValue ?
                new ObjectParameter("IndicadorCodigoId", indicadorCodigoId) :
                new ObjectParameter("IndicadorCodigoId", typeof(int));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorIdParameter = valorId.HasValue ?
                new ObjectParameter("ValorId", valorId) :
                new ObjectParameter("ValorId", typeof(int));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var valorDecimalParameter = valorDecimal.HasValue ?
                new ObjectParameter("ValorDecimal", valorDecimal) :
                new ObjectParameter("ValorDecimal", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FavoritoCodigoId>("USP_SS_HC_FAVORITOCODIGOID_LISTAR", idFavoritoParameter, campoCodigoIdParameter, indicadorCodigoIdParameter, valorTextoParameter, valorIdParameter, valorFechaParameter, valorDecimalParameter, estadoParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_FavoritoCodigoId> USP_SS_HC_FAVORITOCODIGOID_LISTAR(Nullable<int> idFavorito, Nullable<int> campoCodigoId, Nullable<int> indicadorCodigoId, string valorTexto, Nullable<int> valorId, Nullable<System.DateTime> valorFecha, Nullable<decimal> valorDecimal, Nullable<int> estado, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FavoritoCodigoId).Assembly);
    
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var campoCodigoIdParameter = campoCodigoId.HasValue ?
                new ObjectParameter("CampoCodigoId", campoCodigoId) :
                new ObjectParameter("CampoCodigoId", typeof(int));
    
            var indicadorCodigoIdParameter = indicadorCodigoId.HasValue ?
                new ObjectParameter("IndicadorCodigoId", indicadorCodigoId) :
                new ObjectParameter("IndicadorCodigoId", typeof(int));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorIdParameter = valorId.HasValue ?
                new ObjectParameter("ValorId", valorId) :
                new ObjectParameter("ValorId", typeof(int));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var valorDecimalParameter = valorDecimal.HasValue ?
                new ObjectParameter("ValorDecimal", valorDecimal) :
                new ObjectParameter("ValorDecimal", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FavoritoCodigoId>("USP_SS_HC_FAVORITOCODIGOID_LISTAR", mergeOption, idFavoritoParameter, campoCodigoIdParameter, indicadorCodigoIdParameter, valorTextoParameter, valorIdParameter, valorFechaParameter, valorDecimalParameter, estadoParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CM_HC_CO_TablaMaestro(Nullable<int> idTablaMaestro, string codigoTabla, string nombre, string descripcion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var idTablaMaestroParameter = idTablaMaestro.HasValue ?
                new ObjectParameter("IdTablaMaestro", idTablaMaestro) :
                new ObjectParameter("IdTablaMaestro", typeof(int));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CM_HC_CO_TablaMaestro", idTablaMaestroParameter, codigoTablaParameter, nombreParameter, descripcionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<CM_CO_TablaMaestro> USP_CM_HC_CO_TablaMaestroListar(Nullable<int> idTablaMaestro, string codigoTabla, string nombre, string descripcion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(CM_CO_TablaMaestro).Assembly);
    
            var idTablaMaestroParameter = idTablaMaestro.HasValue ?
                new ObjectParameter("IdTablaMaestro", idTablaMaestro) :
                new ObjectParameter("IdTablaMaestro", typeof(int));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CM_CO_TablaMaestro>("USP_CM_HC_CO_TablaMaestroListar", idTablaMaestroParameter, codigoTablaParameter, nombreParameter, descripcionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<CM_CO_TablaMaestro> USP_CM_HC_CO_TablaMaestroListar(Nullable<int> idTablaMaestro, string codigoTabla, string nombre, string descripcion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(CM_CO_TablaMaestro).Assembly);
    
            var idTablaMaestroParameter = idTablaMaestro.HasValue ?
                new ObjectParameter("IdTablaMaestro", idTablaMaestro) :
                new ObjectParameter("IdTablaMaestro", typeof(int));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CM_CO_TablaMaestro>("USP_CM_HC_CO_TablaMaestroListar", mergeOption, idTablaMaestroParameter, codigoTablaParameter, nombreParameter, descripcionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CM_CH_CO_TablaMaestroDetalle(Nullable<int> idTablaMaestro, Nullable<int> idCodigo, string codigo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var idTablaMaestroParameter = idTablaMaestro.HasValue ?
                new ObjectParameter("IdTablaMaestro", idTablaMaestro) :
                new ObjectParameter("IdTablaMaestro", typeof(int));
    
            var idCodigoParameter = idCodigo.HasValue ?
                new ObjectParameter("IdCodigo", idCodigo) :
                new ObjectParameter("IdCodigo", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CM_CH_CO_TablaMaestroDetalle", idTablaMaestroParameter, idCodigoParameter, codigoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<CM_CO_TablaMaestroDetalle> USP_CM_CH_CO_TablaMaestroDetalleListar(Nullable<int> idTablaMaestro, Nullable<int> idCodigo, string codigo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(CM_CO_TablaMaestroDetalle).Assembly);
    
            var idTablaMaestroParameter = idTablaMaestro.HasValue ?
                new ObjectParameter("IdTablaMaestro", idTablaMaestro) :
                new ObjectParameter("IdTablaMaestro", typeof(int));
    
            var idCodigoParameter = idCodigo.HasValue ?
                new ObjectParameter("IdCodigo", idCodigo) :
                new ObjectParameter("IdCodigo", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CM_CO_TablaMaestroDetalle>("USP_CM_CH_CO_TablaMaestroDetalleListar", idTablaMaestroParameter, idCodigoParameter, codigoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<CM_CO_TablaMaestroDetalle> USP_CM_CH_CO_TablaMaestroDetalleListar(Nullable<int> idTablaMaestro, Nullable<int> idCodigo, string codigo, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(CM_CO_TablaMaestroDetalle).Assembly);
    
            var idTablaMaestroParameter = idTablaMaestro.HasValue ?
                new ObjectParameter("IdTablaMaestro", idTablaMaestro) :
                new ObjectParameter("IdTablaMaestro", typeof(int));
    
            var idCodigoParameter = idCodigo.HasValue ?
                new ObjectParameter("IdCodigo", idCodigo) :
                new ObjectParameter("IdCodigo", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CM_CO_TablaMaestroDetalle>("USP_CM_CH_CO_TablaMaestroDetalleListar", mergeOption, idTablaMaestroParameter, idCodigoParameter, codigoParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_VW_ServicioPrestacion(string componente, Nullable<decimal> valorMedida, Nullable<decimal> cantidadAsistentes, Nullable<int> instrumentistas, Nullable<decimal> diasHospitalizacion, string codigoSegus, string codigoNuevo, Nullable<int> estado, string nombre, string descripcion, string compania, string centroCosto, string clasificadorMovimiento, string conceptoGasto, Nullable<int> indicadorImpuesto, Nullable<int> idClasificacion, string codClasificacion, string nomClasificacion, Nullable<int> orden, Nullable<int> tipoPrestacion, Nullable<int> indicadorCita, Nullable<int> indicadorHC, string cadenaRecursividad, Nullable<int> indicadorPrestacionPrincipal, Nullable<int> indicadorRequierePersonal, Nullable<int> idServicio, Nullable<int> idGrupoAtencion, string codigo, Nullable<int> tipoOrdenAtencion, string aCCION)
        {
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var valorMedidaParameter = valorMedida.HasValue ?
                new ObjectParameter("ValorMedida", valorMedida) :
                new ObjectParameter("ValorMedida", typeof(decimal));
    
            var cantidadAsistentesParameter = cantidadAsistentes.HasValue ?
                new ObjectParameter("CantidadAsistentes", cantidadAsistentes) :
                new ObjectParameter("CantidadAsistentes", typeof(decimal));
    
            var instrumentistasParameter = instrumentistas.HasValue ?
                new ObjectParameter("Instrumentistas", instrumentistas) :
                new ObjectParameter("Instrumentistas", typeof(int));
    
            var diasHospitalizacionParameter = diasHospitalizacion.HasValue ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(decimal));
    
            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));
    
            var codigoNuevoParameter = codigoNuevo != null ?
                new ObjectParameter("CodigoNuevo", codigoNuevo) :
                new ObjectParameter("CodigoNuevo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var conceptoGastoParameter = conceptoGasto != null ?
                new ObjectParameter("ConceptoGasto", conceptoGasto) :
                new ObjectParameter("ConceptoGasto", typeof(string));
    
            var indicadorImpuestoParameter = indicadorImpuesto.HasValue ?
                new ObjectParameter("IndicadorImpuesto", indicadorImpuesto) :
                new ObjectParameter("IndicadorImpuesto", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var codClasificacionParameter = codClasificacion != null ?
                new ObjectParameter("CodClasificacion", codClasificacion) :
                new ObjectParameter("CodClasificacion", typeof(string));
    
            var nomClasificacionParameter = nomClasificacion != null ?
                new ObjectParameter("NomClasificacion", nomClasificacion) :
                new ObjectParameter("NomClasificacion", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var tipoPrestacionParameter = tipoPrestacion.HasValue ?
                new ObjectParameter("TipoPrestacion", tipoPrestacion) :
                new ObjectParameter("TipoPrestacion", typeof(int));
    
            var indicadorCitaParameter = indicadorCita.HasValue ?
                new ObjectParameter("IndicadorCita", indicadorCita) :
                new ObjectParameter("IndicadorCita", typeof(int));
    
            var indicadorHCParameter = indicadorHC.HasValue ?
                new ObjectParameter("IndicadorHC", indicadorHC) :
                new ObjectParameter("IndicadorHC", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var indicadorPrestacionPrincipalParameter = indicadorPrestacionPrincipal.HasValue ?
                new ObjectParameter("IndicadorPrestacionPrincipal", indicadorPrestacionPrincipal) :
                new ObjectParameter("IndicadorPrestacionPrincipal", typeof(int));
    
            var indicadorRequierePersonalParameter = indicadorRequierePersonal.HasValue ?
                new ObjectParameter("IndicadorRequierePersonal", indicadorRequierePersonal) :
                new ObjectParameter("IndicadorRequierePersonal", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var idGrupoAtencionParameter = idGrupoAtencion.HasValue ?
                new ObjectParameter("IdGrupoAtencion", idGrupoAtencion) :
                new ObjectParameter("IdGrupoAtencion", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_VW_ServicioPrestacion", componenteParameter, valorMedidaParameter, cantidadAsistentesParameter, instrumentistasParameter, diasHospitalizacionParameter, codigoSegusParameter, codigoNuevoParameter, estadoParameter, nombreParameter, descripcionParameter, companiaParameter, centroCostoParameter, clasificadorMovimientoParameter, conceptoGastoParameter, indicadorImpuestoParameter, idClasificacionParameter, codClasificacionParameter, nomClasificacionParameter, ordenParameter, tipoPrestacionParameter, indicadorCitaParameter, indicadorHCParameter, cadenaRecursividadParameter, indicadorPrestacionPrincipalParameter, indicadorRequierePersonalParameter, idServicioParameter, idGrupoAtencionParameter, codigoParameter, tipoOrdenAtencionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<VW_ServicioPrestacion> USP_SS_VW_ServicioPrestacionListar(string componente, Nullable<decimal> valorMedida, Nullable<decimal> cantidadAsistentes, Nullable<int> instrumentistas, Nullable<decimal> diasHospitalizacion, string codigoSegus, string codigoNuevo, Nullable<int> estado, string nombre, string descripcion, string compania, string centroCosto, string clasificadorMovimiento, string conceptoGasto, Nullable<int> indicadorImpuesto, Nullable<int> idClasificacion, string codClasificacion, string nomClasificacion, Nullable<int> orden, Nullable<int> tipoPrestacion, Nullable<int> indicadorCita, Nullable<int> indicadorHC, string cadenaRecursividad, Nullable<int> indicadorPrestacionPrincipal, Nullable<int> indicadorRequierePersonal, Nullable<int> idServicio, Nullable<int> idGrupoAtencion, string codigo, Nullable<int> tipoOrdenAtencion, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_ServicioPrestacion).Assembly);
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var valorMedidaParameter = valorMedida.HasValue ?
                new ObjectParameter("ValorMedida", valorMedida) :
                new ObjectParameter("ValorMedida", typeof(decimal));
    
            var cantidadAsistentesParameter = cantidadAsistentes.HasValue ?
                new ObjectParameter("CantidadAsistentes", cantidadAsistentes) :
                new ObjectParameter("CantidadAsistentes", typeof(decimal));
    
            var instrumentistasParameter = instrumentistas.HasValue ?
                new ObjectParameter("Instrumentistas", instrumentistas) :
                new ObjectParameter("Instrumentistas", typeof(int));
    
            var diasHospitalizacionParameter = diasHospitalizacion.HasValue ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(decimal));
    
            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));
    
            var codigoNuevoParameter = codigoNuevo != null ?
                new ObjectParameter("CodigoNuevo", codigoNuevo) :
                new ObjectParameter("CodigoNuevo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var conceptoGastoParameter = conceptoGasto != null ?
                new ObjectParameter("ConceptoGasto", conceptoGasto) :
                new ObjectParameter("ConceptoGasto", typeof(string));
    
            var indicadorImpuestoParameter = indicadorImpuesto.HasValue ?
                new ObjectParameter("IndicadorImpuesto", indicadorImpuesto) :
                new ObjectParameter("IndicadorImpuesto", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var codClasificacionParameter = codClasificacion != null ?
                new ObjectParameter("CodClasificacion", codClasificacion) :
                new ObjectParameter("CodClasificacion", typeof(string));
    
            var nomClasificacionParameter = nomClasificacion != null ?
                new ObjectParameter("NomClasificacion", nomClasificacion) :
                new ObjectParameter("NomClasificacion", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var tipoPrestacionParameter = tipoPrestacion.HasValue ?
                new ObjectParameter("TipoPrestacion", tipoPrestacion) :
                new ObjectParameter("TipoPrestacion", typeof(int));
    
            var indicadorCitaParameter = indicadorCita.HasValue ?
                new ObjectParameter("IndicadorCita", indicadorCita) :
                new ObjectParameter("IndicadorCita", typeof(int));
    
            var indicadorHCParameter = indicadorHC.HasValue ?
                new ObjectParameter("IndicadorHC", indicadorHC) :
                new ObjectParameter("IndicadorHC", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var indicadorPrestacionPrincipalParameter = indicadorPrestacionPrincipal.HasValue ?
                new ObjectParameter("IndicadorPrestacionPrincipal", indicadorPrestacionPrincipal) :
                new ObjectParameter("IndicadorPrestacionPrincipal", typeof(int));
    
            var indicadorRequierePersonalParameter = indicadorRequierePersonal.HasValue ?
                new ObjectParameter("IndicadorRequierePersonal", indicadorRequierePersonal) :
                new ObjectParameter("IndicadorRequierePersonal", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var idGrupoAtencionParameter = idGrupoAtencion.HasValue ?
                new ObjectParameter("IdGrupoAtencion", idGrupoAtencion) :
                new ObjectParameter("IdGrupoAtencion", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_ServicioPrestacion>("USP_SS_VW_ServicioPrestacionListar", componenteParameter, valorMedidaParameter, cantidadAsistentesParameter, instrumentistasParameter, diasHospitalizacionParameter, codigoSegusParameter, codigoNuevoParameter, estadoParameter, nombreParameter, descripcionParameter, companiaParameter, centroCostoParameter, clasificadorMovimientoParameter, conceptoGastoParameter, indicadorImpuestoParameter, idClasificacionParameter, codClasificacionParameter, nomClasificacionParameter, ordenParameter, tipoPrestacionParameter, indicadorCitaParameter, indicadorHCParameter, cadenaRecursividadParameter, indicadorPrestacionPrincipalParameter, indicadorRequierePersonalParameter, idServicioParameter, idGrupoAtencionParameter, codigoParameter, tipoOrdenAtencionParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_ServicioPrestacion> USP_SS_VW_ServicioPrestacionListar(string componente, Nullable<decimal> valorMedida, Nullable<decimal> cantidadAsistentes, Nullable<int> instrumentistas, Nullable<decimal> diasHospitalizacion, string codigoSegus, string codigoNuevo, Nullable<int> estado, string nombre, string descripcion, string compania, string centroCosto, string clasificadorMovimiento, string conceptoGasto, Nullable<int> indicadorImpuesto, Nullable<int> idClasificacion, string codClasificacion, string nomClasificacion, Nullable<int> orden, Nullable<int> tipoPrestacion, Nullable<int> indicadorCita, Nullable<int> indicadorHC, string cadenaRecursividad, Nullable<int> indicadorPrestacionPrincipal, Nullable<int> indicadorRequierePersonal, Nullable<int> idServicio, Nullable<int> idGrupoAtencion, string codigo, Nullable<int> tipoOrdenAtencion, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_ServicioPrestacion).Assembly);
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var valorMedidaParameter = valorMedida.HasValue ?
                new ObjectParameter("ValorMedida", valorMedida) :
                new ObjectParameter("ValorMedida", typeof(decimal));
    
            var cantidadAsistentesParameter = cantidadAsistentes.HasValue ?
                new ObjectParameter("CantidadAsistentes", cantidadAsistentes) :
                new ObjectParameter("CantidadAsistentes", typeof(decimal));
    
            var instrumentistasParameter = instrumentistas.HasValue ?
                new ObjectParameter("Instrumentistas", instrumentistas) :
                new ObjectParameter("Instrumentistas", typeof(int));
    
            var diasHospitalizacionParameter = diasHospitalizacion.HasValue ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(decimal));
    
            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));
    
            var codigoNuevoParameter = codigoNuevo != null ?
                new ObjectParameter("CodigoNuevo", codigoNuevo) :
                new ObjectParameter("CodigoNuevo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var conceptoGastoParameter = conceptoGasto != null ?
                new ObjectParameter("ConceptoGasto", conceptoGasto) :
                new ObjectParameter("ConceptoGasto", typeof(string));
    
            var indicadorImpuestoParameter = indicadorImpuesto.HasValue ?
                new ObjectParameter("IndicadorImpuesto", indicadorImpuesto) :
                new ObjectParameter("IndicadorImpuesto", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var codClasificacionParameter = codClasificacion != null ?
                new ObjectParameter("CodClasificacion", codClasificacion) :
                new ObjectParameter("CodClasificacion", typeof(string));
    
            var nomClasificacionParameter = nomClasificacion != null ?
                new ObjectParameter("NomClasificacion", nomClasificacion) :
                new ObjectParameter("NomClasificacion", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var tipoPrestacionParameter = tipoPrestacion.HasValue ?
                new ObjectParameter("TipoPrestacion", tipoPrestacion) :
                new ObjectParameter("TipoPrestacion", typeof(int));
    
            var indicadorCitaParameter = indicadorCita.HasValue ?
                new ObjectParameter("IndicadorCita", indicadorCita) :
                new ObjectParameter("IndicadorCita", typeof(int));
    
            var indicadorHCParameter = indicadorHC.HasValue ?
                new ObjectParameter("IndicadorHC", indicadorHC) :
                new ObjectParameter("IndicadorHC", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var indicadorPrestacionPrincipalParameter = indicadorPrestacionPrincipal.HasValue ?
                new ObjectParameter("IndicadorPrestacionPrincipal", indicadorPrestacionPrincipal) :
                new ObjectParameter("IndicadorPrestacionPrincipal", typeof(int));
    
            var indicadorRequierePersonalParameter = indicadorRequierePersonal.HasValue ?
                new ObjectParameter("IndicadorRequierePersonal", indicadorRequierePersonal) :
                new ObjectParameter("IndicadorRequierePersonal", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var idGrupoAtencionParameter = idGrupoAtencion.HasValue ?
                new ObjectParameter("IdGrupoAtencion", idGrupoAtencion) :
                new ObjectParameter("IdGrupoAtencion", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_ServicioPrestacion>("USP_SS_VW_ServicioPrestacionListar", mergeOption, componenteParameter, valorMedidaParameter, cantidadAsistentesParameter, instrumentistasParameter, diasHospitalizacionParameter, codigoSegusParameter, codigoNuevoParameter, estadoParameter, nombreParameter, descripcionParameter, companiaParameter, centroCostoParameter, clasificadorMovimientoParameter, conceptoGastoParameter, indicadorImpuestoParameter, idClasificacionParameter, codClasificacionParameter, nomClasificacionParameter, ordenParameter, tipoPrestacionParameter, indicadorCitaParameter, indicadorHCParameter, cadenaRecursividadParameter, indicadorPrestacionPrincipalParameter, indicadorRequierePersonalParameter, idServicioParameter, idGrupoAtencionParameter, codigoParameter, tipoOrdenAtencionParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_WH_ClaseFamilia(string linea, string familia, string descripcionLocal, string descripcionIngles, string descripcionCompleta, string cuentaInventario, string cuentaGasto, string elementoGasto, string partidaPresupuestal, string flujodeCaja, string lineaFamilia, string loteValidacionFlag, string medicinaGrupoAFlag, string medicinaGrupoHFlag, string medicinaGrupoEFlag, string medicinaGrupoRFlag, string cuentaVentas, string cuentaTransito, string cuentaCostoVentas, string caracteristica01, string caracteristica02, string caracteristica03, string caracteristica04, string caracteristica05, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string referenciaFiscal01, string referenciaFiscal02, string referenciaFiscal03, string contactoEMail, string contactoFax, string contactoNombre, string contactoTelefono, string cuentaVentaComercial, string cuentaCompras, string centroCosto, string cuentaServicioTecnico, string aCCION)
        {
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var descripcionCompletaParameter = descripcionCompleta != null ?
                new ObjectParameter("DescripcionCompleta", descripcionCompleta) :
                new ObjectParameter("DescripcionCompleta", typeof(string));
    
            var cuentaInventarioParameter = cuentaInventario != null ?
                new ObjectParameter("CuentaInventario", cuentaInventario) :
                new ObjectParameter("CuentaInventario", typeof(string));
    
            var cuentaGastoParameter = cuentaGasto != null ?
                new ObjectParameter("CuentaGasto", cuentaGasto) :
                new ObjectParameter("CuentaGasto", typeof(string));
    
            var elementoGastoParameter = elementoGasto != null ?
                new ObjectParameter("ElementoGasto", elementoGasto) :
                new ObjectParameter("ElementoGasto", typeof(string));
    
            var partidaPresupuestalParameter = partidaPresupuestal != null ?
                new ObjectParameter("PartidaPresupuestal", partidaPresupuestal) :
                new ObjectParameter("PartidaPresupuestal", typeof(string));
    
            var flujodeCajaParameter = flujodeCaja != null ?
                new ObjectParameter("FlujodeCaja", flujodeCaja) :
                new ObjectParameter("FlujodeCaja", typeof(string));
    
            var lineaFamiliaParameter = lineaFamilia != null ?
                new ObjectParameter("LineaFamilia", lineaFamilia) :
                new ObjectParameter("LineaFamilia", typeof(string));
    
            var loteValidacionFlagParameter = loteValidacionFlag != null ?
                new ObjectParameter("LoteValidacionFlag", loteValidacionFlag) :
                new ObjectParameter("LoteValidacionFlag", typeof(string));
    
            var medicinaGrupoAFlagParameter = medicinaGrupoAFlag != null ?
                new ObjectParameter("MedicinaGrupoAFlag", medicinaGrupoAFlag) :
                new ObjectParameter("MedicinaGrupoAFlag", typeof(string));
    
            var medicinaGrupoHFlagParameter = medicinaGrupoHFlag != null ?
                new ObjectParameter("MedicinaGrupoHFlag", medicinaGrupoHFlag) :
                new ObjectParameter("MedicinaGrupoHFlag", typeof(string));
    
            var medicinaGrupoEFlagParameter = medicinaGrupoEFlag != null ?
                new ObjectParameter("MedicinaGrupoEFlag", medicinaGrupoEFlag) :
                new ObjectParameter("MedicinaGrupoEFlag", typeof(string));
    
            var medicinaGrupoRFlagParameter = medicinaGrupoRFlag != null ?
                new ObjectParameter("MedicinaGrupoRFlag", medicinaGrupoRFlag) :
                new ObjectParameter("MedicinaGrupoRFlag", typeof(string));
    
            var cuentaVentasParameter = cuentaVentas != null ?
                new ObjectParameter("CuentaVentas", cuentaVentas) :
                new ObjectParameter("CuentaVentas", typeof(string));
    
            var cuentaTransitoParameter = cuentaTransito != null ?
                new ObjectParameter("CuentaTransito", cuentaTransito) :
                new ObjectParameter("CuentaTransito", typeof(string));
    
            var cuentaCostoVentasParameter = cuentaCostoVentas != null ?
                new ObjectParameter("CuentaCostoVentas", cuentaCostoVentas) :
                new ObjectParameter("CuentaCostoVentas", typeof(string));
    
            var caracteristica01Parameter = caracteristica01 != null ?
                new ObjectParameter("Caracteristica01", caracteristica01) :
                new ObjectParameter("Caracteristica01", typeof(string));
    
            var caracteristica02Parameter = caracteristica02 != null ?
                new ObjectParameter("Caracteristica02", caracteristica02) :
                new ObjectParameter("Caracteristica02", typeof(string));
    
            var caracteristica03Parameter = caracteristica03 != null ?
                new ObjectParameter("Caracteristica03", caracteristica03) :
                new ObjectParameter("Caracteristica03", typeof(string));
    
            var caracteristica04Parameter = caracteristica04 != null ?
                new ObjectParameter("Caracteristica04", caracteristica04) :
                new ObjectParameter("Caracteristica04", typeof(string));
    
            var caracteristica05Parameter = caracteristica05 != null ?
                new ObjectParameter("Caracteristica05", caracteristica05) :
                new ObjectParameter("Caracteristica05", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var referenciaFiscal01Parameter = referenciaFiscal01 != null ?
                new ObjectParameter("ReferenciaFiscal01", referenciaFiscal01) :
                new ObjectParameter("ReferenciaFiscal01", typeof(string));
    
            var referenciaFiscal02Parameter = referenciaFiscal02 != null ?
                new ObjectParameter("ReferenciaFiscal02", referenciaFiscal02) :
                new ObjectParameter("ReferenciaFiscal02", typeof(string));
    
            var referenciaFiscal03Parameter = referenciaFiscal03 != null ?
                new ObjectParameter("ReferenciaFiscal03", referenciaFiscal03) :
                new ObjectParameter("ReferenciaFiscal03", typeof(string));
    
            var contactoEMailParameter = contactoEMail != null ?
                new ObjectParameter("ContactoEMail", contactoEMail) :
                new ObjectParameter("ContactoEMail", typeof(string));
    
            var contactoFaxParameter = contactoFax != null ?
                new ObjectParameter("ContactoFax", contactoFax) :
                new ObjectParameter("ContactoFax", typeof(string));
    
            var contactoNombreParameter = contactoNombre != null ?
                new ObjectParameter("ContactoNombre", contactoNombre) :
                new ObjectParameter("ContactoNombre", typeof(string));
    
            var contactoTelefonoParameter = contactoTelefono != null ?
                new ObjectParameter("ContactoTelefono", contactoTelefono) :
                new ObjectParameter("ContactoTelefono", typeof(string));
    
            var cuentaVentaComercialParameter = cuentaVentaComercial != null ?
                new ObjectParameter("CuentaVentaComercial", cuentaVentaComercial) :
                new ObjectParameter("CuentaVentaComercial", typeof(string));
    
            var cuentaComprasParameter = cuentaCompras != null ?
                new ObjectParameter("CuentaCompras", cuentaCompras) :
                new ObjectParameter("CuentaCompras", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var cuentaServicioTecnicoParameter = cuentaServicioTecnico != null ?
                new ObjectParameter("CuentaServicioTecnico", cuentaServicioTecnico) :
                new ObjectParameter("CuentaServicioTecnico", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_WH_ClaseFamilia", lineaParameter, familiaParameter, descripcionLocalParameter, descripcionInglesParameter, descripcionCompletaParameter, cuentaInventarioParameter, cuentaGastoParameter, elementoGastoParameter, partidaPresupuestalParameter, flujodeCajaParameter, lineaFamiliaParameter, loteValidacionFlagParameter, medicinaGrupoAFlagParameter, medicinaGrupoHFlagParameter, medicinaGrupoEFlagParameter, medicinaGrupoRFlagParameter, cuentaVentasParameter, cuentaTransitoParameter, cuentaCostoVentasParameter, caracteristica01Parameter, caracteristica02Parameter, caracteristica03Parameter, caracteristica04Parameter, caracteristica05Parameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, referenciaFiscal01Parameter, referenciaFiscal02Parameter, referenciaFiscal03Parameter, contactoEMailParameter, contactoFaxParameter, contactoNombreParameter, contactoTelefonoParameter, cuentaVentaComercialParameter, cuentaComprasParameter, centroCostoParameter, cuentaServicioTecnicoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_WH_ClaseLinea(string linea, string descripcionLocal, string descripcionIngles, string grupoLinea, string manejoColorSerieFlag, string estado, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, string aCCION)
        {
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var grupoLineaParameter = grupoLinea != null ?
                new ObjectParameter("GrupoLinea", grupoLinea) :
                new ObjectParameter("GrupoLinea", typeof(string));
    
            var manejoColorSerieFlagParameter = manejoColorSerieFlag != null ?
                new ObjectParameter("ManejoColorSerieFlag", manejoColorSerieFlag) :
                new ObjectParameter("ManejoColorSerieFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_WH_ClaseLinea", lineaParameter, descripcionLocalParameter, descripcionInglesParameter, grupoLineaParameter, manejoColorSerieFlagParameter, estadoParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_WH_ClaseSubFamilia(string linea, string familia, string subFamilia, string descripcionLocal, string descripcionIngles, string descripcionCompleta, string itemTipo, string transaccionOperacion, string estado, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, string aCCION)
        {
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var descripcionCompletaParameter = descripcionCompleta != null ?
                new ObjectParameter("DescripcionCompleta", descripcionCompleta) :
                new ObjectParameter("DescripcionCompleta", typeof(string));
    
            var itemTipoParameter = itemTipo != null ?
                new ObjectParameter("ItemTipo", itemTipo) :
                new ObjectParameter("ItemTipo", typeof(string));
    
            var transaccionOperacionParameter = transaccionOperacion != null ?
                new ObjectParameter("TransaccionOperacion", transaccionOperacion) :
                new ObjectParameter("TransaccionOperacion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_WH_ClaseSubFamilia", lineaParameter, familiaParameter, subFamiliaParameter, descripcionLocalParameter, descripcionInglesParameter, descripcionCompletaParameter, itemTipoParameter, transaccionOperacionParameter, estadoParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<WH_ClaseSubFamilia> USP_SS_WH_ClaseSubFamiliaListar(string linea, string familia, string subFamilia, string descripcionLocal, string descripcionIngles, string descripcionCompleta, string itemTipo, string transaccionOperacion, string estado, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(WH_ClaseSubFamilia).Assembly);
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var descripcionCompletaParameter = descripcionCompleta != null ?
                new ObjectParameter("DescripcionCompleta", descripcionCompleta) :
                new ObjectParameter("DescripcionCompleta", typeof(string));
    
            var itemTipoParameter = itemTipo != null ?
                new ObjectParameter("ItemTipo", itemTipo) :
                new ObjectParameter("ItemTipo", typeof(string));
    
            var transaccionOperacionParameter = transaccionOperacion != null ?
                new ObjectParameter("TransaccionOperacion", transaccionOperacion) :
                new ObjectParameter("TransaccionOperacion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WH_ClaseSubFamilia>("USP_SS_WH_ClaseSubFamiliaListar", lineaParameter, familiaParameter, subFamiliaParameter, descripcionLocalParameter, descripcionInglesParameter, descripcionCompletaParameter, itemTipoParameter, transaccionOperacionParameter, estadoParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<WH_ClaseSubFamilia> USP_SS_WH_ClaseSubFamiliaListar(string linea, string familia, string subFamilia, string descripcionLocal, string descripcionIngles, string descripcionCompleta, string itemTipo, string transaccionOperacion, string estado, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(WH_ClaseSubFamilia).Assembly);
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var descripcionCompletaParameter = descripcionCompleta != null ?
                new ObjectParameter("DescripcionCompleta", descripcionCompleta) :
                new ObjectParameter("DescripcionCompleta", typeof(string));
    
            var itemTipoParameter = itemTipo != null ?
                new ObjectParameter("ItemTipo", itemTipo) :
                new ObjectParameter("ItemTipo", typeof(string));
    
            var transaccionOperacionParameter = transaccionOperacion != null ?
                new ObjectParameter("TransaccionOperacion", transaccionOperacion) :
                new ObjectParameter("TransaccionOperacion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WH_ClaseSubFamilia>("USP_SS_WH_ClaseSubFamiliaListar", mergeOption, lineaParameter, familiaParameter, subFamiliaParameter, descripcionLocalParameter, descripcionInglesParameter, descripcionCompletaParameter, itemTipoParameter, transaccionOperacionParameter, estadoParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<WH_ClaseFamilia> USP_WH_ClaseFamilia_Listado(string linea, string familia, string descripcionLocal, string descripcionIngles, string descripcionCompleta, string cuentaInventario, string cuentaGasto, string elementoGasto, string partidaPresupuestal, string flujodeCaja, string lineaFamilia, string loteValidacionFlag, string medicinaGrupoAFlag, string medicinaGrupoHFlag, string medicinaGrupoEFlag, string medicinaGrupoRFlag, string cuentaVentas, string cuentaTransito, string cuentaCostoVentas, string caracteristica01, string caracteristica02, string caracteristica03, string caracteristica04, string caracteristica05, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string referenciaFiscal01, string referenciaFiscal02, string referenciaFiscal03, string contactoEMail, string contactoFax, string contactoNombre, string contactoTelefono, string cuentaVentaComercial, string cuentaCompras, string centroCosto, string cuentaServicioTecnico, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(WH_ClaseFamilia).Assembly);
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var descripcionCompletaParameter = descripcionCompleta != null ?
                new ObjectParameter("DescripcionCompleta", descripcionCompleta) :
                new ObjectParameter("DescripcionCompleta", typeof(string));
    
            var cuentaInventarioParameter = cuentaInventario != null ?
                new ObjectParameter("CuentaInventario", cuentaInventario) :
                new ObjectParameter("CuentaInventario", typeof(string));
    
            var cuentaGastoParameter = cuentaGasto != null ?
                new ObjectParameter("CuentaGasto", cuentaGasto) :
                new ObjectParameter("CuentaGasto", typeof(string));
    
            var elementoGastoParameter = elementoGasto != null ?
                new ObjectParameter("ElementoGasto", elementoGasto) :
                new ObjectParameter("ElementoGasto", typeof(string));
    
            var partidaPresupuestalParameter = partidaPresupuestal != null ?
                new ObjectParameter("PartidaPresupuestal", partidaPresupuestal) :
                new ObjectParameter("PartidaPresupuestal", typeof(string));
    
            var flujodeCajaParameter = flujodeCaja != null ?
                new ObjectParameter("FlujodeCaja", flujodeCaja) :
                new ObjectParameter("FlujodeCaja", typeof(string));
    
            var lineaFamiliaParameter = lineaFamilia != null ?
                new ObjectParameter("LineaFamilia", lineaFamilia) :
                new ObjectParameter("LineaFamilia", typeof(string));
    
            var loteValidacionFlagParameter = loteValidacionFlag != null ?
                new ObjectParameter("LoteValidacionFlag", loteValidacionFlag) :
                new ObjectParameter("LoteValidacionFlag", typeof(string));
    
            var medicinaGrupoAFlagParameter = medicinaGrupoAFlag != null ?
                new ObjectParameter("MedicinaGrupoAFlag", medicinaGrupoAFlag) :
                new ObjectParameter("MedicinaGrupoAFlag", typeof(string));
    
            var medicinaGrupoHFlagParameter = medicinaGrupoHFlag != null ?
                new ObjectParameter("MedicinaGrupoHFlag", medicinaGrupoHFlag) :
                new ObjectParameter("MedicinaGrupoHFlag", typeof(string));
    
            var medicinaGrupoEFlagParameter = medicinaGrupoEFlag != null ?
                new ObjectParameter("MedicinaGrupoEFlag", medicinaGrupoEFlag) :
                new ObjectParameter("MedicinaGrupoEFlag", typeof(string));
    
            var medicinaGrupoRFlagParameter = medicinaGrupoRFlag != null ?
                new ObjectParameter("MedicinaGrupoRFlag", medicinaGrupoRFlag) :
                new ObjectParameter("MedicinaGrupoRFlag", typeof(string));
    
            var cuentaVentasParameter = cuentaVentas != null ?
                new ObjectParameter("CuentaVentas", cuentaVentas) :
                new ObjectParameter("CuentaVentas", typeof(string));
    
            var cuentaTransitoParameter = cuentaTransito != null ?
                new ObjectParameter("CuentaTransito", cuentaTransito) :
                new ObjectParameter("CuentaTransito", typeof(string));
    
            var cuentaCostoVentasParameter = cuentaCostoVentas != null ?
                new ObjectParameter("CuentaCostoVentas", cuentaCostoVentas) :
                new ObjectParameter("CuentaCostoVentas", typeof(string));
    
            var caracteristica01Parameter = caracteristica01 != null ?
                new ObjectParameter("Caracteristica01", caracteristica01) :
                new ObjectParameter("Caracteristica01", typeof(string));
    
            var caracteristica02Parameter = caracteristica02 != null ?
                new ObjectParameter("Caracteristica02", caracteristica02) :
                new ObjectParameter("Caracteristica02", typeof(string));
    
            var caracteristica03Parameter = caracteristica03 != null ?
                new ObjectParameter("Caracteristica03", caracteristica03) :
                new ObjectParameter("Caracteristica03", typeof(string));
    
            var caracteristica04Parameter = caracteristica04 != null ?
                new ObjectParameter("Caracteristica04", caracteristica04) :
                new ObjectParameter("Caracteristica04", typeof(string));
    
            var caracteristica05Parameter = caracteristica05 != null ?
                new ObjectParameter("Caracteristica05", caracteristica05) :
                new ObjectParameter("Caracteristica05", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var referenciaFiscal01Parameter = referenciaFiscal01 != null ?
                new ObjectParameter("ReferenciaFiscal01", referenciaFiscal01) :
                new ObjectParameter("ReferenciaFiscal01", typeof(string));
    
            var referenciaFiscal02Parameter = referenciaFiscal02 != null ?
                new ObjectParameter("ReferenciaFiscal02", referenciaFiscal02) :
                new ObjectParameter("ReferenciaFiscal02", typeof(string));
    
            var referenciaFiscal03Parameter = referenciaFiscal03 != null ?
                new ObjectParameter("ReferenciaFiscal03", referenciaFiscal03) :
                new ObjectParameter("ReferenciaFiscal03", typeof(string));
    
            var contactoEMailParameter = contactoEMail != null ?
                new ObjectParameter("ContactoEMail", contactoEMail) :
                new ObjectParameter("ContactoEMail", typeof(string));
    
            var contactoFaxParameter = contactoFax != null ?
                new ObjectParameter("ContactoFax", contactoFax) :
                new ObjectParameter("ContactoFax", typeof(string));
    
            var contactoNombreParameter = contactoNombre != null ?
                new ObjectParameter("ContactoNombre", contactoNombre) :
                new ObjectParameter("ContactoNombre", typeof(string));
    
            var contactoTelefonoParameter = contactoTelefono != null ?
                new ObjectParameter("ContactoTelefono", contactoTelefono) :
                new ObjectParameter("ContactoTelefono", typeof(string));
    
            var cuentaVentaComercialParameter = cuentaVentaComercial != null ?
                new ObjectParameter("CuentaVentaComercial", cuentaVentaComercial) :
                new ObjectParameter("CuentaVentaComercial", typeof(string));
    
            var cuentaComprasParameter = cuentaCompras != null ?
                new ObjectParameter("CuentaCompras", cuentaCompras) :
                new ObjectParameter("CuentaCompras", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var cuentaServicioTecnicoParameter = cuentaServicioTecnico != null ?
                new ObjectParameter("CuentaServicioTecnico", cuentaServicioTecnico) :
                new ObjectParameter("CuentaServicioTecnico", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WH_ClaseFamilia>("USP_WH_ClaseFamilia_Listado", lineaParameter, familiaParameter, descripcionLocalParameter, descripcionInglesParameter, descripcionCompletaParameter, cuentaInventarioParameter, cuentaGastoParameter, elementoGastoParameter, partidaPresupuestalParameter, flujodeCajaParameter, lineaFamiliaParameter, loteValidacionFlagParameter, medicinaGrupoAFlagParameter, medicinaGrupoHFlagParameter, medicinaGrupoEFlagParameter, medicinaGrupoRFlagParameter, cuentaVentasParameter, cuentaTransitoParameter, cuentaCostoVentasParameter, caracteristica01Parameter, caracteristica02Parameter, caracteristica03Parameter, caracteristica04Parameter, caracteristica05Parameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, referenciaFiscal01Parameter, referenciaFiscal02Parameter, referenciaFiscal03Parameter, contactoEMailParameter, contactoFaxParameter, contactoNombreParameter, contactoTelefonoParameter, cuentaVentaComercialParameter, cuentaComprasParameter, centroCostoParameter, cuentaServicioTecnicoParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<WH_ClaseFamilia> USP_WH_ClaseFamilia_Listado(string linea, string familia, string descripcionLocal, string descripcionIngles, string descripcionCompleta, string cuentaInventario, string cuentaGasto, string elementoGasto, string partidaPresupuestal, string flujodeCaja, string lineaFamilia, string loteValidacionFlag, string medicinaGrupoAFlag, string medicinaGrupoHFlag, string medicinaGrupoEFlag, string medicinaGrupoRFlag, string cuentaVentas, string cuentaTransito, string cuentaCostoVentas, string caracteristica01, string caracteristica02, string caracteristica03, string caracteristica04, string caracteristica05, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string referenciaFiscal01, string referenciaFiscal02, string referenciaFiscal03, string contactoEMail, string contactoFax, string contactoNombre, string contactoTelefono, string cuentaVentaComercial, string cuentaCompras, string centroCosto, string cuentaServicioTecnico, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(WH_ClaseFamilia).Assembly);
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var descripcionCompletaParameter = descripcionCompleta != null ?
                new ObjectParameter("DescripcionCompleta", descripcionCompleta) :
                new ObjectParameter("DescripcionCompleta", typeof(string));
    
            var cuentaInventarioParameter = cuentaInventario != null ?
                new ObjectParameter("CuentaInventario", cuentaInventario) :
                new ObjectParameter("CuentaInventario", typeof(string));
    
            var cuentaGastoParameter = cuentaGasto != null ?
                new ObjectParameter("CuentaGasto", cuentaGasto) :
                new ObjectParameter("CuentaGasto", typeof(string));
    
            var elementoGastoParameter = elementoGasto != null ?
                new ObjectParameter("ElementoGasto", elementoGasto) :
                new ObjectParameter("ElementoGasto", typeof(string));
    
            var partidaPresupuestalParameter = partidaPresupuestal != null ?
                new ObjectParameter("PartidaPresupuestal", partidaPresupuestal) :
                new ObjectParameter("PartidaPresupuestal", typeof(string));
    
            var flujodeCajaParameter = flujodeCaja != null ?
                new ObjectParameter("FlujodeCaja", flujodeCaja) :
                new ObjectParameter("FlujodeCaja", typeof(string));
    
            var lineaFamiliaParameter = lineaFamilia != null ?
                new ObjectParameter("LineaFamilia", lineaFamilia) :
                new ObjectParameter("LineaFamilia", typeof(string));
    
            var loteValidacionFlagParameter = loteValidacionFlag != null ?
                new ObjectParameter("LoteValidacionFlag", loteValidacionFlag) :
                new ObjectParameter("LoteValidacionFlag", typeof(string));
    
            var medicinaGrupoAFlagParameter = medicinaGrupoAFlag != null ?
                new ObjectParameter("MedicinaGrupoAFlag", medicinaGrupoAFlag) :
                new ObjectParameter("MedicinaGrupoAFlag", typeof(string));
    
            var medicinaGrupoHFlagParameter = medicinaGrupoHFlag != null ?
                new ObjectParameter("MedicinaGrupoHFlag", medicinaGrupoHFlag) :
                new ObjectParameter("MedicinaGrupoHFlag", typeof(string));
    
            var medicinaGrupoEFlagParameter = medicinaGrupoEFlag != null ?
                new ObjectParameter("MedicinaGrupoEFlag", medicinaGrupoEFlag) :
                new ObjectParameter("MedicinaGrupoEFlag", typeof(string));
    
            var medicinaGrupoRFlagParameter = medicinaGrupoRFlag != null ?
                new ObjectParameter("MedicinaGrupoRFlag", medicinaGrupoRFlag) :
                new ObjectParameter("MedicinaGrupoRFlag", typeof(string));
    
            var cuentaVentasParameter = cuentaVentas != null ?
                new ObjectParameter("CuentaVentas", cuentaVentas) :
                new ObjectParameter("CuentaVentas", typeof(string));
    
            var cuentaTransitoParameter = cuentaTransito != null ?
                new ObjectParameter("CuentaTransito", cuentaTransito) :
                new ObjectParameter("CuentaTransito", typeof(string));
    
            var cuentaCostoVentasParameter = cuentaCostoVentas != null ?
                new ObjectParameter("CuentaCostoVentas", cuentaCostoVentas) :
                new ObjectParameter("CuentaCostoVentas", typeof(string));
    
            var caracteristica01Parameter = caracteristica01 != null ?
                new ObjectParameter("Caracteristica01", caracteristica01) :
                new ObjectParameter("Caracteristica01", typeof(string));
    
            var caracteristica02Parameter = caracteristica02 != null ?
                new ObjectParameter("Caracteristica02", caracteristica02) :
                new ObjectParameter("Caracteristica02", typeof(string));
    
            var caracteristica03Parameter = caracteristica03 != null ?
                new ObjectParameter("Caracteristica03", caracteristica03) :
                new ObjectParameter("Caracteristica03", typeof(string));
    
            var caracteristica04Parameter = caracteristica04 != null ?
                new ObjectParameter("Caracteristica04", caracteristica04) :
                new ObjectParameter("Caracteristica04", typeof(string));
    
            var caracteristica05Parameter = caracteristica05 != null ?
                new ObjectParameter("Caracteristica05", caracteristica05) :
                new ObjectParameter("Caracteristica05", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var referenciaFiscal01Parameter = referenciaFiscal01 != null ?
                new ObjectParameter("ReferenciaFiscal01", referenciaFiscal01) :
                new ObjectParameter("ReferenciaFiscal01", typeof(string));
    
            var referenciaFiscal02Parameter = referenciaFiscal02 != null ?
                new ObjectParameter("ReferenciaFiscal02", referenciaFiscal02) :
                new ObjectParameter("ReferenciaFiscal02", typeof(string));
    
            var referenciaFiscal03Parameter = referenciaFiscal03 != null ?
                new ObjectParameter("ReferenciaFiscal03", referenciaFiscal03) :
                new ObjectParameter("ReferenciaFiscal03", typeof(string));
    
            var contactoEMailParameter = contactoEMail != null ?
                new ObjectParameter("ContactoEMail", contactoEMail) :
                new ObjectParameter("ContactoEMail", typeof(string));
    
            var contactoFaxParameter = contactoFax != null ?
                new ObjectParameter("ContactoFax", contactoFax) :
                new ObjectParameter("ContactoFax", typeof(string));
    
            var contactoNombreParameter = contactoNombre != null ?
                new ObjectParameter("ContactoNombre", contactoNombre) :
                new ObjectParameter("ContactoNombre", typeof(string));
    
            var contactoTelefonoParameter = contactoTelefono != null ?
                new ObjectParameter("ContactoTelefono", contactoTelefono) :
                new ObjectParameter("ContactoTelefono", typeof(string));
    
            var cuentaVentaComercialParameter = cuentaVentaComercial != null ?
                new ObjectParameter("CuentaVentaComercial", cuentaVentaComercial) :
                new ObjectParameter("CuentaVentaComercial", typeof(string));
    
            var cuentaComprasParameter = cuentaCompras != null ?
                new ObjectParameter("CuentaCompras", cuentaCompras) :
                new ObjectParameter("CuentaCompras", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var cuentaServicioTecnicoParameter = cuentaServicioTecnico != null ?
                new ObjectParameter("CuentaServicioTecnico", cuentaServicioTecnico) :
                new ObjectParameter("CuentaServicioTecnico", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WH_ClaseFamilia>("USP_WH_ClaseFamilia_Listado", mergeOption, lineaParameter, familiaParameter, descripcionLocalParameter, descripcionInglesParameter, descripcionCompletaParameter, cuentaInventarioParameter, cuentaGastoParameter, elementoGastoParameter, partidaPresupuestalParameter, flujodeCajaParameter, lineaFamiliaParameter, loteValidacionFlagParameter, medicinaGrupoAFlagParameter, medicinaGrupoHFlagParameter, medicinaGrupoEFlagParameter, medicinaGrupoRFlagParameter, cuentaVentasParameter, cuentaTransitoParameter, cuentaCostoVentasParameter, caracteristica01Parameter, caracteristica02Parameter, caracteristica03Parameter, caracteristica04Parameter, caracteristica05Parameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, referenciaFiscal01Parameter, referenciaFiscal02Parameter, referenciaFiscal03Parameter, contactoEMailParameter, contactoFaxParameter, contactoNombreParameter, contactoTelefonoParameter, cuentaVentaComercialParameter, cuentaComprasParameter, centroCostoParameter, cuentaServicioTecnicoParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<WH_ClaseLinea> USP_WH_ClaseLinea_Listado(string linea, string descripcionLocal, string descripcionIngles, string grupoLinea, string manejoColorSerieFlag, string estado, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(WH_ClaseLinea).Assembly);
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var grupoLineaParameter = grupoLinea != null ?
                new ObjectParameter("GrupoLinea", grupoLinea) :
                new ObjectParameter("GrupoLinea", typeof(string));
    
            var manejoColorSerieFlagParameter = manejoColorSerieFlag != null ?
                new ObjectParameter("ManejoColorSerieFlag", manejoColorSerieFlag) :
                new ObjectParameter("ManejoColorSerieFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WH_ClaseLinea>("USP_WH_ClaseLinea_Listado", lineaParameter, descripcionLocalParameter, descripcionInglesParameter, grupoLineaParameter, manejoColorSerieFlagParameter, estadoParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<WH_ClaseLinea> USP_WH_ClaseLinea_Listado(string linea, string descripcionLocal, string descripcionIngles, string grupoLinea, string manejoColorSerieFlag, string estado, Nullable<System.DateTime> ultimaFechaModif, string ultimoUsuario, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(WH_ClaseLinea).Assembly);
    
            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionInglesParameter = descripcionIngles != null ?
                new ObjectParameter("DescripcionIngles", descripcionIngles) :
                new ObjectParameter("DescripcionIngles", typeof(string));
    
            var grupoLineaParameter = grupoLinea != null ?
                new ObjectParameter("GrupoLinea", grupoLinea) :
                new ObjectParameter("GrupoLinea", typeof(string));
    
            var manejoColorSerieFlagParameter = manejoColorSerieFlag != null ?
                new ObjectParameter("ManejoColorSerieFlag", manejoColorSerieFlag) :
                new ObjectParameter("ManejoColorSerieFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WH_ClaseLinea>("USP_WH_ClaseLinea_Listado", mergeOption, lineaParameter, descripcionLocalParameter, descripcionInglesParameter, grupoLineaParameter, manejoColorSerieFlagParameter, estadoParameter, ultimaFechaModifParameter, ultimoUsuarioParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_NIC(Nullable<int> idNIC, string codigo, string codigoPadre, string descripcion, string descripcionCorta, Nullable<int> nivel, string cadenaRecursiva, Nullable<int> orden, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var idNICParameter = idNIC.HasValue ?
                new ObjectParameter("IdNIC", idNIC) :
                new ObjectParameter("IdNIC", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionCortaParameter = descripcionCorta != null ?
                new ObjectParameter("DescripcionCorta", descripcionCorta) :
                new ObjectParameter("DescripcionCorta", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_NIC", idNICParameter, codigoParameter, codigoPadreParameter, descripcionParameter, descripcionCortaParameter, nivelParameter, cadenaRecursivaParameter, ordenParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_NIC> USP_SS_HC_NICListar(Nullable<int> idNIC, string codigo, string codigoPadre, string descripcion, string descripcionCorta, Nullable<int> nivel, string cadenaRecursiva, Nullable<int> orden, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_NIC).Assembly);
    
            var idNICParameter = idNIC.HasValue ?
                new ObjectParameter("IdNIC", idNIC) :
                new ObjectParameter("IdNIC", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionCortaParameter = descripcionCorta != null ?
                new ObjectParameter("DescripcionCorta", descripcionCorta) :
                new ObjectParameter("DescripcionCorta", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_NIC>("USP_SS_HC_NICListar", idNICParameter, codigoParameter, codigoPadreParameter, descripcionParameter, descripcionCortaParameter, nivelParameter, cadenaRecursivaParameter, ordenParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_NIC> USP_SS_HC_NICListar(Nullable<int> idNIC, string codigo, string codigoPadre, string descripcion, string descripcionCorta, Nullable<int> nivel, string cadenaRecursiva, Nullable<int> orden, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_NIC).Assembly);
    
            var idNICParameter = idNIC.HasValue ?
                new ObjectParameter("IdNIC", idNIC) :
                new ObjectParameter("IdNIC", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionCortaParameter = descripcionCorta != null ?
                new ObjectParameter("DescripcionCorta", descripcionCorta) :
                new ObjectParameter("DescripcionCorta", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var cadenaRecursivaParameter = cadenaRecursiva != null ?
                new ObjectParameter("CadenaRecursiva", cadenaRecursiva) :
                new ObjectParameter("CadenaRecursiva", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_NIC>("USP_SS_HC_NICListar", mergeOption, idNICParameter, codigoParameter, codigoPadreParameter, descripcionParameter, descripcionCortaParameter, nivelParameter, cadenaRecursivaParameter, ordenParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CM_CO_ESTABLECIMIENTO(Nullable<int> idEstablecimiento, string codigo, string nombre, string descripcion, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string sucursal, string compania, string direccion, string accion)
        {
            var idEstablecimientoParameter = idEstablecimiento.HasValue ?
                new ObjectParameter("IdEstablecimiento", idEstablecimiento) :
                new ObjectParameter("IdEstablecimiento", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CM_CO_ESTABLECIMIENTO", idEstablecimientoParameter, codigoParameter, nombreParameter, descripcionParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, sucursalParameter, companiaParameter, direccionParameter, accionParameter);
        }
    
        public virtual ObjectResult<CM_CO_Establecimiento> USP_CM_CO_ESTABLECIMIENTO_Lista(Nullable<int> idEstablecimiento, string codigo, string nombre, string descripcion, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string sucursal, string compania, string direccion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(CM_CO_Establecimiento).Assembly);
    
            var idEstablecimientoParameter = idEstablecimiento.HasValue ?
                new ObjectParameter("IdEstablecimiento", idEstablecimiento) :
                new ObjectParameter("IdEstablecimiento", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CM_CO_Establecimiento>("USP_CM_CO_ESTABLECIMIENTO_Lista", idEstablecimientoParameter, codigoParameter, nombreParameter, descripcionParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, sucursalParameter, companiaParameter, direccionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<CM_CO_Establecimiento> USP_CM_CO_ESTABLECIMIENTO_Lista(Nullable<int> idEstablecimiento, string codigo, string nombre, string descripcion, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string sucursal, string compania, string direccion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(CM_CO_Establecimiento).Assembly);
    
            var idEstablecimientoParameter = idEstablecimiento.HasValue ?
                new ObjectParameter("IdEstablecimiento", idEstablecimiento) :
                new ObjectParameter("IdEstablecimiento", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CM_CO_Establecimiento>("USP_CM_CO_ESTABLECIMIENTO_Lista", mergeOption, idEstablecimientoParameter, codigoParameter, nombreParameter, descripcionParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, sucursalParameter, companiaParameter, direccionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SG_Modulo(string sistema, string modulo, Nullable<int> orden, string nombre, string descripcion, Nullable<int> plataforma, string urlModulo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var plataformaParameter = plataforma.HasValue ?
                new ObjectParameter("Plataforma", plataforma) :
                new ObjectParameter("Plataforma", typeof(int));
    
            var urlModuloParameter = urlModulo != null ?
                new ObjectParameter("UrlModulo", urlModulo) :
                new ObjectParameter("UrlModulo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SG_Modulo", sistemaParameter, moduloParameter, ordenParameter, nombreParameter, descripcionParameter, plataformaParameter, urlModuloParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<SG_Modulo> USP_SG_Modulo_Lista(string sistema, string modulo, Nullable<int> orden, string nombre, string descripcion, Nullable<int> plataforma, string urlModulo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SG_Modulo).Assembly);
    
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var plataformaParameter = plataforma.HasValue ?
                new ObjectParameter("Plataforma", plataforma) :
                new ObjectParameter("Plataforma", typeof(int));
    
            var urlModuloParameter = urlModulo != null ?
                new ObjectParameter("UrlModulo", urlModulo) :
                new ObjectParameter("UrlModulo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SG_Modulo>("USP_SG_Modulo_Lista", sistemaParameter, moduloParameter, ordenParameter, nombreParameter, descripcionParameter, plataformaParameter, urlModuloParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SG_Modulo> USP_SG_Modulo_Lista(string sistema, string modulo, Nullable<int> orden, string nombre, string descripcion, Nullable<int> plataforma, string urlModulo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SG_Modulo).Assembly);
    
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var plataformaParameter = plataforma.HasValue ?
                new ObjectParameter("Plataforma", plataforma) :
                new ObjectParameter("Plataforma", typeof(int));
    
            var urlModuloParameter = urlModulo != null ?
                new ObjectParameter("UrlModulo", urlModulo) :
                new ObjectParameter("UrlModulo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SG_Modulo>("USP_SG_Modulo_Lista", mergeOption, sistemaParameter, moduloParameter, ordenParameter, nombreParameter, descripcionParameter, plataformaParameter, urlModuloParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_PERSONAPACIENTE> USP_VW_PERSONAPACIENTE_LISTAR(Nullable<int> persona, string nombreCompleto, string tipoDocumento, string documento, string esCliente, string esEmpleado, string esOtro, string esProveedor, string esPaciente, string esEmpresa, Nullable<System.DateTime> fechaNacimiento, string sexo, string estadoCivil, string nivelInstruccion, string codigoPostal, string provincia, string departamento, Nullable<int> tipoMedico, string estado, string estadoEmpleado, Nullable<System.DateTime> fechaIngreso, string companiaSocio, string centroCostos, string aFE, string gradoSalario, Nullable<int> codigoCargo, string departamentoOperacional, string paciente, string historiaClinica, string usuario, string uSUARIOPERFIL, string tipoPersona, string nombres, string personaAnt, string busqueda, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_PERSONAPACIENTE).Assembly);
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var tipoMedicoParameter = tipoMedico.HasValue ?
                new ObjectParameter("TipoMedico", tipoMedico) :
                new ObjectParameter("TipoMedico", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var estadoEmpleadoParameter = estadoEmpleado != null ?
                new ObjectParameter("EstadoEmpleado", estadoEmpleado) :
                new ObjectParameter("EstadoEmpleado", typeof(string));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var companiaSocioParameter = companiaSocio != null ?
                new ObjectParameter("CompaniaSocio", companiaSocio) :
                new ObjectParameter("CompaniaSocio", typeof(string));
    
            var centroCostosParameter = centroCostos != null ?
                new ObjectParameter("CentroCostos", centroCostos) :
                new ObjectParameter("CentroCostos", typeof(string));
    
            var aFEParameter = aFE != null ?
                new ObjectParameter("AFE", aFE) :
                new ObjectParameter("AFE", typeof(string));
    
            var gradoSalarioParameter = gradoSalario != null ?
                new ObjectParameter("GradoSalario", gradoSalario) :
                new ObjectParameter("GradoSalario", typeof(string));
    
            var codigoCargoParameter = codigoCargo.HasValue ?
                new ObjectParameter("CodigoCargo", codigoCargo) :
                new ObjectParameter("CodigoCargo", typeof(int));
    
            var departamentoOperacionalParameter = departamentoOperacional != null ?
                new ObjectParameter("DepartamentoOperacional", departamentoOperacional) :
                new ObjectParameter("DepartamentoOperacional", typeof(string));
    
            var pacienteParameter = paciente != null ?
                new ObjectParameter("Paciente", paciente) :
                new ObjectParameter("Paciente", typeof(string));
    
            var historiaClinicaParameter = historiaClinica != null ?
                new ObjectParameter("HistoriaClinica", historiaClinica) :
                new ObjectParameter("HistoriaClinica", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var uSUARIOPERFILParameter = uSUARIOPERFIL != null ?
                new ObjectParameter("USUARIOPERFIL", uSUARIOPERFIL) :
                new ObjectParameter("USUARIOPERFIL", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var personaAntParameter = personaAnt != null ?
                new ObjectParameter("PersonaAnt", personaAnt) :
                new ObjectParameter("PersonaAnt", typeof(string));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_PERSONAPACIENTE>("USP_VW_PERSONAPACIENTE_LISTAR", personaParameter, nombreCompletoParameter, tipoDocumentoParameter, documentoParameter, esClienteParameter, esEmpleadoParameter, esOtroParameter, esProveedorParameter, esPacienteParameter, esEmpresaParameter, fechaNacimientoParameter, sexoParameter, estadoCivilParameter, nivelInstruccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, tipoMedicoParameter, estadoParameter, estadoEmpleadoParameter, fechaIngresoParameter, companiaSocioParameter, centroCostosParameter, aFEParameter, gradoSalarioParameter, codigoCargoParameter, departamentoOperacionalParameter, pacienteParameter, historiaClinicaParameter, usuarioParameter, uSUARIOPERFILParameter, tipoPersonaParameter, nombresParameter, personaAntParameter, busquedaParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<VW_PERSONAPACIENTE> USP_VW_PERSONAPACIENTE_LISTAR(Nullable<int> persona, string nombreCompleto, string tipoDocumento, string documento, string esCliente, string esEmpleado, string esOtro, string esProveedor, string esPaciente, string esEmpresa, Nullable<System.DateTime> fechaNacimiento, string sexo, string estadoCivil, string nivelInstruccion, string codigoPostal, string provincia, string departamento, Nullable<int> tipoMedico, string estado, string estadoEmpleado, Nullable<System.DateTime> fechaIngreso, string companiaSocio, string centroCostos, string aFE, string gradoSalario, Nullable<int> codigoCargo, string departamentoOperacional, string paciente, string historiaClinica, string usuario, string uSUARIOPERFIL, string tipoPersona, string nombres, string personaAnt, string busqueda, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_PERSONAPACIENTE).Assembly);
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var tipoMedicoParameter = tipoMedico.HasValue ?
                new ObjectParameter("TipoMedico", tipoMedico) :
                new ObjectParameter("TipoMedico", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var estadoEmpleadoParameter = estadoEmpleado != null ?
                new ObjectParameter("EstadoEmpleado", estadoEmpleado) :
                new ObjectParameter("EstadoEmpleado", typeof(string));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var companiaSocioParameter = companiaSocio != null ?
                new ObjectParameter("CompaniaSocio", companiaSocio) :
                new ObjectParameter("CompaniaSocio", typeof(string));
    
            var centroCostosParameter = centroCostos != null ?
                new ObjectParameter("CentroCostos", centroCostos) :
                new ObjectParameter("CentroCostos", typeof(string));
    
            var aFEParameter = aFE != null ?
                new ObjectParameter("AFE", aFE) :
                new ObjectParameter("AFE", typeof(string));
    
            var gradoSalarioParameter = gradoSalario != null ?
                new ObjectParameter("GradoSalario", gradoSalario) :
                new ObjectParameter("GradoSalario", typeof(string));
    
            var codigoCargoParameter = codigoCargo.HasValue ?
                new ObjectParameter("CodigoCargo", codigoCargo) :
                new ObjectParameter("CodigoCargo", typeof(int));
    
            var departamentoOperacionalParameter = departamentoOperacional != null ?
                new ObjectParameter("DepartamentoOperacional", departamentoOperacional) :
                new ObjectParameter("DepartamentoOperacional", typeof(string));
    
            var pacienteParameter = paciente != null ?
                new ObjectParameter("Paciente", paciente) :
                new ObjectParameter("Paciente", typeof(string));
    
            var historiaClinicaParameter = historiaClinica != null ?
                new ObjectParameter("HistoriaClinica", historiaClinica) :
                new ObjectParameter("HistoriaClinica", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var uSUARIOPERFILParameter = uSUARIOPERFIL != null ?
                new ObjectParameter("USUARIOPERFIL", uSUARIOPERFIL) :
                new ObjectParameter("USUARIOPERFIL", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var personaAntParameter = personaAnt != null ?
                new ObjectParameter("PersonaAnt", personaAnt) :
                new ObjectParameter("PersonaAnt", typeof(string));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_PERSONAPACIENTE>("USP_VW_PERSONAPACIENTE_LISTAR", mergeOption, personaParameter, nombreCompletoParameter, tipoDocumentoParameter, documentoParameter, esClienteParameter, esEmpleadoParameter, esOtroParameter, esProveedorParameter, esPacienteParameter, esEmpresaParameter, fechaNacimientoParameter, sexoParameter, estadoCivilParameter, nivelInstruccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, tipoMedicoParameter, estadoParameter, estadoEmpleadoParameter, fechaIngresoParameter, companiaSocioParameter, centroCostosParameter, aFEParameter, gradoSalarioParameter, codigoCargoParameter, departamentoOperacionalParameter, pacienteParameter, historiaClinicaParameter, usuarioParameter, uSUARIOPERFILParameter, tipoPersonaParameter, nombresParameter, personaAntParameter, busquedaParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_HC_Personamast(Nullable<int> persona, string origen, string apellidoPaterno, string apellidoMaterno, string nombres, string nombreCompleto, string busqueda, string grupoEmpresarial, string tipoDocumento, string documento, string codigoBarras, string esCliente, string esProveedor, string esEmpleado, string esOtro, string tipoPersona, Nullable<System.DateTime> fechaNacimiento, string ciudadNacimiento, string sexo, string nacionalidad, string estadoCivil, string nivelInstruccion, string direccion, string codigoPostal, string provincia, string departamento, string telefono, string fax, string documentoFiscal, string documentoIdentidad, string carnetExtranjeria, string documentoMilitarFA, string tipoBrevete, string brevete, string pasaporte, string nombreEmergencia, string direccionEmergencia, string telefonoEmergencia, string bancoMonedaLocal, string tipoCuentaLocal, string cuentaMonedaLocal, string bancoMonedaExtranjera, string tipoCuentaExtranjera, string cuentaMonedaExtranjera, string personaAnt, string correoElectronico, string clasePersonaCodigo, string personaClasificacion, string enfermedadGraveFlag, Nullable<System.DateTime> ingresoFechaRegistro, string ingresoAplicacionCodigo, string ingresoUsuario, string pYMEFlag, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string tipoPersonaUsuario, string direccionReferencia, string celular, string parentescoEmergencia, string celularEmergencia, string lugarNacimiento, string suspensionFonaviFlag, string flagRepetido, string codDiscamec, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, string codLicArma, string marcaArma, string serieArma, Nullable<System.DateTime> inicioArma, Nullable<System.DateTime> vencimientoArma, string seguroDiscamec, string correlativoSCTR, string cuentaMonedaExtranjera_tmp, string cuentaMonedaLocal_tmp, string flagActualizacion, string tarjetadeCredito, string pais, string esPaciente, string esEmpresa, Nullable<int> persona_Old, Nullable<int> personanew, string cmp, string sUNATNacionalidad, string sUNATVia, string sUNATZona, string sUNATUbigeo, string sUNATDomiciliado, Nullable<int> indicadorAutogenerado, string rutaFirma, string tipoDocumentoIdentidad, Nullable<int> idPersonaUnificado, Nullable<int> idpersona_ok, Nullable<int> edad, string rangoEtario, Nullable<int> tipoMedico, Nullable<int> correcion, Nullable<int> idEmpresaAnteriorUnificacion, Nullable<System.DateTime> brevete_fecvcto, Nullable<System.DateTime> carnetextranjeria_fecvcto, string estado_BK, string estado_Bks, Nullable<int> indicadorVinculada, string paisEmisor, string codigoLDN, string sunatConvenio, Nullable<int> indicadorRegistroManual, Nullable<int> indicadorFallecido, Nullable<int> indicadorSinCorreo, string aCCION)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var grupoEmpresarialParameter = grupoEmpresarial != null ?
                new ObjectParameter("GrupoEmpresarial", grupoEmpresarial) :
                new ObjectParameter("GrupoEmpresarial", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var codigoBarrasParameter = codigoBarras != null ?
                new ObjectParameter("CodigoBarras", codigoBarras) :
                new ObjectParameter("CodigoBarras", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var ciudadNacimientoParameter = ciudadNacimiento != null ?
                new ObjectParameter("CiudadNacimiento", ciudadNacimiento) :
                new ObjectParameter("CiudadNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var documentoFiscalParameter = documentoFiscal != null ?
                new ObjectParameter("DocumentoFiscal", documentoFiscal) :
                new ObjectParameter("DocumentoFiscal", typeof(string));
    
            var documentoIdentidadParameter = documentoIdentidad != null ?
                new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
                new ObjectParameter("DocumentoIdentidad", typeof(string));
    
            var carnetExtranjeriaParameter = carnetExtranjeria != null ?
                new ObjectParameter("CarnetExtranjeria", carnetExtranjeria) :
                new ObjectParameter("CarnetExtranjeria", typeof(string));
    
            var documentoMilitarFAParameter = documentoMilitarFA != null ?
                new ObjectParameter("DocumentoMilitarFA", documentoMilitarFA) :
                new ObjectParameter("DocumentoMilitarFA", typeof(string));
    
            var tipoBreveteParameter = tipoBrevete != null ?
                new ObjectParameter("TipoBrevete", tipoBrevete) :
                new ObjectParameter("TipoBrevete", typeof(string));
    
            var breveteParameter = brevete != null ?
                new ObjectParameter("Brevete", brevete) :
                new ObjectParameter("Brevete", typeof(string));
    
            var pasaporteParameter = pasaporte != null ?
                new ObjectParameter("Pasaporte", pasaporte) :
                new ObjectParameter("Pasaporte", typeof(string));
    
            var nombreEmergenciaParameter = nombreEmergencia != null ?
                new ObjectParameter("NombreEmergencia", nombreEmergencia) :
                new ObjectParameter("NombreEmergencia", typeof(string));
    
            var direccionEmergenciaParameter = direccionEmergencia != null ?
                new ObjectParameter("DireccionEmergencia", direccionEmergencia) :
                new ObjectParameter("DireccionEmergencia", typeof(string));
    
            var telefonoEmergenciaParameter = telefonoEmergencia != null ?
                new ObjectParameter("TelefonoEmergencia", telefonoEmergencia) :
                new ObjectParameter("TelefonoEmergencia", typeof(string));
    
            var bancoMonedaLocalParameter = bancoMonedaLocal != null ?
                new ObjectParameter("BancoMonedaLocal", bancoMonedaLocal) :
                new ObjectParameter("BancoMonedaLocal", typeof(string));
    
            var tipoCuentaLocalParameter = tipoCuentaLocal != null ?
                new ObjectParameter("TipoCuentaLocal", tipoCuentaLocal) :
                new ObjectParameter("TipoCuentaLocal", typeof(string));
    
            var cuentaMonedaLocalParameter = cuentaMonedaLocal != null ?
                new ObjectParameter("CuentaMonedaLocal", cuentaMonedaLocal) :
                new ObjectParameter("CuentaMonedaLocal", typeof(string));
    
            var bancoMonedaExtranjeraParameter = bancoMonedaExtranjera != null ?
                new ObjectParameter("BancoMonedaExtranjera", bancoMonedaExtranjera) :
                new ObjectParameter("BancoMonedaExtranjera", typeof(string));
    
            var tipoCuentaExtranjeraParameter = tipoCuentaExtranjera != null ?
                new ObjectParameter("TipoCuentaExtranjera", tipoCuentaExtranjera) :
                new ObjectParameter("TipoCuentaExtranjera", typeof(string));
    
            var cuentaMonedaExtranjeraParameter = cuentaMonedaExtranjera != null ?
                new ObjectParameter("CuentaMonedaExtranjera", cuentaMonedaExtranjera) :
                new ObjectParameter("CuentaMonedaExtranjera", typeof(string));
    
            var personaAntParameter = personaAnt != null ?
                new ObjectParameter("PersonaAnt", personaAnt) :
                new ObjectParameter("PersonaAnt", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var clasePersonaCodigoParameter = clasePersonaCodigo != null ?
                new ObjectParameter("ClasePersonaCodigo", clasePersonaCodigo) :
                new ObjectParameter("ClasePersonaCodigo", typeof(string));
    
            var personaClasificacionParameter = personaClasificacion != null ?
                new ObjectParameter("PersonaClasificacion", personaClasificacion) :
                new ObjectParameter("PersonaClasificacion", typeof(string));
    
            var enfermedadGraveFlagParameter = enfermedadGraveFlag != null ?
                new ObjectParameter("EnfermedadGraveFlag", enfermedadGraveFlag) :
                new ObjectParameter("EnfermedadGraveFlag", typeof(string));
    
            var ingresoFechaRegistroParameter = ingresoFechaRegistro.HasValue ?
                new ObjectParameter("IngresoFechaRegistro", ingresoFechaRegistro) :
                new ObjectParameter("IngresoFechaRegistro", typeof(System.DateTime));
    
            var ingresoAplicacionCodigoParameter = ingresoAplicacionCodigo != null ?
                new ObjectParameter("IngresoAplicacionCodigo", ingresoAplicacionCodigo) :
                new ObjectParameter("IngresoAplicacionCodigo", typeof(string));
    
            var ingresoUsuarioParameter = ingresoUsuario != null ?
                new ObjectParameter("IngresoUsuario", ingresoUsuario) :
                new ObjectParameter("IngresoUsuario", typeof(string));
    
            var pYMEFlagParameter = pYMEFlag != null ?
                new ObjectParameter("PYMEFlag", pYMEFlag) :
                new ObjectParameter("PYMEFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var tipoPersonaUsuarioParameter = tipoPersonaUsuario != null ?
                new ObjectParameter("TipoPersonaUsuario", tipoPersonaUsuario) :
                new ObjectParameter("TipoPersonaUsuario", typeof(string));
    
            var direccionReferenciaParameter = direccionReferencia != null ?
                new ObjectParameter("DireccionReferencia", direccionReferencia) :
                new ObjectParameter("DireccionReferencia", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var parentescoEmergenciaParameter = parentescoEmergencia != null ?
                new ObjectParameter("ParentescoEmergencia", parentescoEmergencia) :
                new ObjectParameter("ParentescoEmergencia", typeof(string));
    
            var celularEmergenciaParameter = celularEmergencia != null ?
                new ObjectParameter("CelularEmergencia", celularEmergencia) :
                new ObjectParameter("CelularEmergencia", typeof(string));
    
            var lugarNacimientoParameter = lugarNacimiento != null ?
                new ObjectParameter("LugarNacimiento", lugarNacimiento) :
                new ObjectParameter("LugarNacimiento", typeof(string));
    
            var suspensionFonaviFlagParameter = suspensionFonaviFlag != null ?
                new ObjectParameter("SuspensionFonaviFlag", suspensionFonaviFlag) :
                new ObjectParameter("SuspensionFonaviFlag", typeof(string));
    
            var flagRepetidoParameter = flagRepetido != null ?
                new ObjectParameter("FlagRepetido", flagRepetido) :
                new ObjectParameter("FlagRepetido", typeof(string));
    
            var codDiscamecParameter = codDiscamec != null ?
                new ObjectParameter("CodDiscamec", codDiscamec) :
                new ObjectParameter("CodDiscamec", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var codLicArmaParameter = codLicArma != null ?
                new ObjectParameter("CodLicArma", codLicArma) :
                new ObjectParameter("CodLicArma", typeof(string));
    
            var marcaArmaParameter = marcaArma != null ?
                new ObjectParameter("MarcaArma", marcaArma) :
                new ObjectParameter("MarcaArma", typeof(string));
    
            var serieArmaParameter = serieArma != null ?
                new ObjectParameter("SerieArma", serieArma) :
                new ObjectParameter("SerieArma", typeof(string));
    
            var inicioArmaParameter = inicioArma.HasValue ?
                new ObjectParameter("InicioArma", inicioArma) :
                new ObjectParameter("InicioArma", typeof(System.DateTime));
    
            var vencimientoArmaParameter = vencimientoArma.HasValue ?
                new ObjectParameter("VencimientoArma", vencimientoArma) :
                new ObjectParameter("VencimientoArma", typeof(System.DateTime));
    
            var seguroDiscamecParameter = seguroDiscamec != null ?
                new ObjectParameter("SeguroDiscamec", seguroDiscamec) :
                new ObjectParameter("SeguroDiscamec", typeof(string));
    
            var correlativoSCTRParameter = correlativoSCTR != null ?
                new ObjectParameter("CorrelativoSCTR", correlativoSCTR) :
                new ObjectParameter("CorrelativoSCTR", typeof(string));
    
            var cuentaMonedaExtranjera_tmpParameter = cuentaMonedaExtranjera_tmp != null ?
                new ObjectParameter("CuentaMonedaExtranjera_tmp", cuentaMonedaExtranjera_tmp) :
                new ObjectParameter("CuentaMonedaExtranjera_tmp", typeof(string));
    
            var cuentaMonedaLocal_tmpParameter = cuentaMonedaLocal_tmp != null ?
                new ObjectParameter("CuentaMonedaLocal_tmp", cuentaMonedaLocal_tmp) :
                new ObjectParameter("CuentaMonedaLocal_tmp", typeof(string));
    
            var flagActualizacionParameter = flagActualizacion != null ?
                new ObjectParameter("FlagActualizacion", flagActualizacion) :
                new ObjectParameter("FlagActualizacion", typeof(string));
    
            var tarjetadeCreditoParameter = tarjetadeCredito != null ?
                new ObjectParameter("TarjetadeCredito", tarjetadeCredito) :
                new ObjectParameter("TarjetadeCredito", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var persona_OldParameter = persona_Old.HasValue ?
                new ObjectParameter("Persona_Old", persona_Old) :
                new ObjectParameter("Persona_Old", typeof(int));
    
            var personanewParameter = personanew.HasValue ?
                new ObjectParameter("personanew", personanew) :
                new ObjectParameter("personanew", typeof(int));
    
            var cmpParameter = cmp != null ?
                new ObjectParameter("cmp", cmp) :
                new ObjectParameter("cmp", typeof(string));
    
            var sUNATNacionalidadParameter = sUNATNacionalidad != null ?
                new ObjectParameter("SUNATNacionalidad", sUNATNacionalidad) :
                new ObjectParameter("SUNATNacionalidad", typeof(string));
    
            var sUNATViaParameter = sUNATVia != null ?
                new ObjectParameter("SUNATVia", sUNATVia) :
                new ObjectParameter("SUNATVia", typeof(string));
    
            var sUNATZonaParameter = sUNATZona != null ?
                new ObjectParameter("SUNATZona", sUNATZona) :
                new ObjectParameter("SUNATZona", typeof(string));
    
            var sUNATUbigeoParameter = sUNATUbigeo != null ?
                new ObjectParameter("SUNATUbigeo", sUNATUbigeo) :
                new ObjectParameter("SUNATUbigeo", typeof(string));
    
            var sUNATDomiciliadoParameter = sUNATDomiciliado != null ?
                new ObjectParameter("SUNATDomiciliado", sUNATDomiciliado) :
                new ObjectParameter("SUNATDomiciliado", typeof(string));
    
            var indicadorAutogeneradoParameter = indicadorAutogenerado.HasValue ?
                new ObjectParameter("IndicadorAutogenerado", indicadorAutogenerado) :
                new ObjectParameter("IndicadorAutogenerado", typeof(int));
    
            var rutaFirmaParameter = rutaFirma != null ?
                new ObjectParameter("RutaFirma", rutaFirma) :
                new ObjectParameter("RutaFirma", typeof(string));
    
            var tipoDocumentoIdentidadParameter = tipoDocumentoIdentidad != null ?
                new ObjectParameter("TipoDocumentoIdentidad", tipoDocumentoIdentidad) :
                new ObjectParameter("TipoDocumentoIdentidad", typeof(string));
    
            var idPersonaUnificadoParameter = idPersonaUnificado.HasValue ?
                new ObjectParameter("IdPersonaUnificado", idPersonaUnificado) :
                new ObjectParameter("IdPersonaUnificado", typeof(int));
    
            var idpersona_okParameter = idpersona_ok.HasValue ?
                new ObjectParameter("idpersona_ok", idpersona_ok) :
                new ObjectParameter("idpersona_ok", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var rangoEtarioParameter = rangoEtario != null ?
                new ObjectParameter("rangoEtario", rangoEtario) :
                new ObjectParameter("rangoEtario", typeof(string));
    
            var tipoMedicoParameter = tipoMedico.HasValue ?
                new ObjectParameter("TipoMedico", tipoMedico) :
                new ObjectParameter("TipoMedico", typeof(int));
    
            var correcionParameter = correcion.HasValue ?
                new ObjectParameter("Correcion", correcion) :
                new ObjectParameter("Correcion", typeof(int));
    
            var idEmpresaAnteriorUnificacionParameter = idEmpresaAnteriorUnificacion.HasValue ?
                new ObjectParameter("IdEmpresaAnteriorUnificacion", idEmpresaAnteriorUnificacion) :
                new ObjectParameter("IdEmpresaAnteriorUnificacion", typeof(int));
    
            var brevete_fecvctoParameter = brevete_fecvcto.HasValue ?
                new ObjectParameter("brevete_fecvcto", brevete_fecvcto) :
                new ObjectParameter("brevete_fecvcto", typeof(System.DateTime));
    
            var carnetextranjeria_fecvctoParameter = carnetextranjeria_fecvcto.HasValue ?
                new ObjectParameter("carnetextranjeria_fecvcto", carnetextranjeria_fecvcto) :
                new ObjectParameter("carnetextranjeria_fecvcto", typeof(System.DateTime));
    
            var estado_BKParameter = estado_BK != null ?
                new ObjectParameter("Estado_BK", estado_BK) :
                new ObjectParameter("Estado_BK", typeof(string));
    
            var estado_BksParameter = estado_Bks != null ?
                new ObjectParameter("Estado_Bks", estado_Bks) :
                new ObjectParameter("Estado_Bks", typeof(string));
    
            var indicadorVinculadaParameter = indicadorVinculada.HasValue ?
                new ObjectParameter("IndicadorVinculada", indicadorVinculada) :
                new ObjectParameter("IndicadorVinculada", typeof(int));
    
            var paisEmisorParameter = paisEmisor != null ?
                new ObjectParameter("PaisEmisor", paisEmisor) :
                new ObjectParameter("PaisEmisor", typeof(string));
    
            var codigoLDNParameter = codigoLDN != null ?
                new ObjectParameter("CodigoLDN", codigoLDN) :
                new ObjectParameter("CodigoLDN", typeof(string));
    
            var sunatConvenioParameter = sunatConvenio != null ?
                new ObjectParameter("SunatConvenio", sunatConvenio) :
                new ObjectParameter("SunatConvenio", typeof(string));
    
            var indicadorRegistroManualParameter = indicadorRegistroManual.HasValue ?
                new ObjectParameter("IndicadorRegistroManual", indicadorRegistroManual) :
                new ObjectParameter("IndicadorRegistroManual", typeof(int));
    
            var indicadorFallecidoParameter = indicadorFallecido.HasValue ?
                new ObjectParameter("IndicadorFallecido", indicadorFallecido) :
                new ObjectParameter("IndicadorFallecido", typeof(int));
    
            var indicadorSinCorreoParameter = indicadorSinCorreo.HasValue ?
                new ObjectParameter("IndicadorSinCorreo", indicadorSinCorreo) :
                new ObjectParameter("IndicadorSinCorreo", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_HC_Personamast", personaParameter, origenParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombresParameter, nombreCompletoParameter, busquedaParameter, grupoEmpresarialParameter, tipoDocumentoParameter, documentoParameter, codigoBarrasParameter, esClienteParameter, esProveedorParameter, esEmpleadoParameter, esOtroParameter, tipoPersonaParameter, fechaNacimientoParameter, ciudadNacimientoParameter, sexoParameter, nacionalidadParameter, estadoCivilParameter, nivelInstruccionParameter, direccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, telefonoParameter, faxParameter, documentoFiscalParameter, documentoIdentidadParameter, carnetExtranjeriaParameter, documentoMilitarFAParameter, tipoBreveteParameter, breveteParameter, pasaporteParameter, nombreEmergenciaParameter, direccionEmergenciaParameter, telefonoEmergenciaParameter, bancoMonedaLocalParameter, tipoCuentaLocalParameter, cuentaMonedaLocalParameter, bancoMonedaExtranjeraParameter, tipoCuentaExtranjeraParameter, cuentaMonedaExtranjeraParameter, personaAntParameter, correoElectronicoParameter, clasePersonaCodigoParameter, personaClasificacionParameter, enfermedadGraveFlagParameter, ingresoFechaRegistroParameter, ingresoAplicacionCodigoParameter, ingresoUsuarioParameter, pYMEFlagParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, tipoPersonaUsuarioParameter, direccionReferenciaParameter, celularParameter, parentescoEmergenciaParameter, celularEmergenciaParameter, lugarNacimientoParameter, suspensionFonaviFlagParameter, flagRepetidoParameter, codDiscamecParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, codLicArmaParameter, marcaArmaParameter, serieArmaParameter, inicioArmaParameter, vencimientoArmaParameter, seguroDiscamecParameter, correlativoSCTRParameter, cuentaMonedaExtranjera_tmpParameter, cuentaMonedaLocal_tmpParameter, flagActualizacionParameter, tarjetadeCreditoParameter, paisParameter, esPacienteParameter, esEmpresaParameter, persona_OldParameter, personanewParameter, cmpParameter, sUNATNacionalidadParameter, sUNATViaParameter, sUNATZonaParameter, sUNATUbigeoParameter, sUNATDomiciliadoParameter, indicadorAutogeneradoParameter, rutaFirmaParameter, tipoDocumentoIdentidadParameter, idPersonaUnificadoParameter, idpersona_okParameter, edadParameter, rangoEtarioParameter, tipoMedicoParameter, correcionParameter, idEmpresaAnteriorUnificacionParameter, brevete_fecvctoParameter, carnetextranjeria_fecvctoParameter, estado_BKParameter, estado_BksParameter, indicadorVinculadaParameter, paisEmisorParameter, codigoLDNParameter, sunatConvenioParameter, indicadorRegistroManualParameter, indicadorFallecidoParameter, indicadorSinCorreoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<PERSONAMAST> USP_HC_Personamast_Listar(Nullable<int> persona, string origen, string apellidoPaterno, string apellidoMaterno, string nombres, string nombreCompleto, string busqueda, string grupoEmpresarial, string tipoDocumento, string documento, string codigoBarras, string esCliente, string esProveedor, string esEmpleado, string esOtro, string tipoPersona, Nullable<System.DateTime> fechaNacimiento, string ciudadNacimiento, string sexo, string nacionalidad, string estadoCivil, string nivelInstruccion, string direccion, string codigoPostal, string provincia, string departamento, string telefono, string fax, string documentoFiscal, string documentoIdentidad, string carnetExtranjeria, string documentoMilitarFA, string tipoBrevete, string brevete, string pasaporte, string nombreEmergencia, string direccionEmergencia, string telefonoEmergencia, string bancoMonedaLocal, string tipoCuentaLocal, string cuentaMonedaLocal, string bancoMonedaExtranjera, string tipoCuentaExtranjera, string cuentaMonedaExtranjera, string personaAnt, string correoElectronico, string clasePersonaCodigo, string personaClasificacion, string enfermedadGraveFlag, Nullable<System.DateTime> ingresoFechaRegistro, string ingresoAplicacionCodigo, string ingresoUsuario, string pYMEFlag, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string tipoPersonaUsuario, string direccionReferencia, string celular, string parentescoEmergencia, string celularEmergencia, string lugarNacimiento, string suspensionFonaviFlag, string flagRepetido, string codDiscamec, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, string codLicArma, string marcaArma, string serieArma, Nullable<System.DateTime> inicioArma, Nullable<System.DateTime> vencimientoArma, string seguroDiscamec, string correlativoSCTR, string cuentaMonedaExtranjera_tmp, string cuentaMonedaLocal_tmp, string flagActualizacion, string tarjetadeCredito, string pais, string esPaciente, string esEmpresa, Nullable<int> persona_Old, Nullable<int> personanew, string cmp, string sUNATNacionalidad, string sUNATVia, string sUNATZona, string sUNATUbigeo, string sUNATDomiciliado, Nullable<int> indicadorAutogenerado, string rutaFirma, string tipoDocumentoIdentidad, Nullable<int> idPersonaUnificado, Nullable<int> idpersona_ok, Nullable<int> edad, string rangoEtario, Nullable<int> tipoMedico, Nullable<int> correcion, Nullable<int> idEmpresaAnteriorUnificacion, Nullable<System.DateTime> brevete_fecvcto, Nullable<System.DateTime> carnetextranjeria_fecvcto, string estado_BK, string estado_Bks, Nullable<int> indicadorVinculada, string paisEmisor, string codigoLDN, string sunatConvenio, Nullable<int> indicadorRegistroManual, Nullable<int> indicadorFallecido, Nullable<int> indicadorSinCorreo, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PERSONAMAST).Assembly);
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var grupoEmpresarialParameter = grupoEmpresarial != null ?
                new ObjectParameter("GrupoEmpresarial", grupoEmpresarial) :
                new ObjectParameter("GrupoEmpresarial", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var codigoBarrasParameter = codigoBarras != null ?
                new ObjectParameter("CodigoBarras", codigoBarras) :
                new ObjectParameter("CodigoBarras", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var ciudadNacimientoParameter = ciudadNacimiento != null ?
                new ObjectParameter("CiudadNacimiento", ciudadNacimiento) :
                new ObjectParameter("CiudadNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var documentoFiscalParameter = documentoFiscal != null ?
                new ObjectParameter("DocumentoFiscal", documentoFiscal) :
                new ObjectParameter("DocumentoFiscal", typeof(string));
    
            var documentoIdentidadParameter = documentoIdentidad != null ?
                new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
                new ObjectParameter("DocumentoIdentidad", typeof(string));
    
            var carnetExtranjeriaParameter = carnetExtranjeria != null ?
                new ObjectParameter("CarnetExtranjeria", carnetExtranjeria) :
                new ObjectParameter("CarnetExtranjeria", typeof(string));
    
            var documentoMilitarFAParameter = documentoMilitarFA != null ?
                new ObjectParameter("DocumentoMilitarFA", documentoMilitarFA) :
                new ObjectParameter("DocumentoMilitarFA", typeof(string));
    
            var tipoBreveteParameter = tipoBrevete != null ?
                new ObjectParameter("TipoBrevete", tipoBrevete) :
                new ObjectParameter("TipoBrevete", typeof(string));
    
            var breveteParameter = brevete != null ?
                new ObjectParameter("Brevete", brevete) :
                new ObjectParameter("Brevete", typeof(string));
    
            var pasaporteParameter = pasaporte != null ?
                new ObjectParameter("Pasaporte", pasaporte) :
                new ObjectParameter("Pasaporte", typeof(string));
    
            var nombreEmergenciaParameter = nombreEmergencia != null ?
                new ObjectParameter("NombreEmergencia", nombreEmergencia) :
                new ObjectParameter("NombreEmergencia", typeof(string));
    
            var direccionEmergenciaParameter = direccionEmergencia != null ?
                new ObjectParameter("DireccionEmergencia", direccionEmergencia) :
                new ObjectParameter("DireccionEmergencia", typeof(string));
    
            var telefonoEmergenciaParameter = telefonoEmergencia != null ?
                new ObjectParameter("TelefonoEmergencia", telefonoEmergencia) :
                new ObjectParameter("TelefonoEmergencia", typeof(string));
    
            var bancoMonedaLocalParameter = bancoMonedaLocal != null ?
                new ObjectParameter("BancoMonedaLocal", bancoMonedaLocal) :
                new ObjectParameter("BancoMonedaLocal", typeof(string));
    
            var tipoCuentaLocalParameter = tipoCuentaLocal != null ?
                new ObjectParameter("TipoCuentaLocal", tipoCuentaLocal) :
                new ObjectParameter("TipoCuentaLocal", typeof(string));
    
            var cuentaMonedaLocalParameter = cuentaMonedaLocal != null ?
                new ObjectParameter("CuentaMonedaLocal", cuentaMonedaLocal) :
                new ObjectParameter("CuentaMonedaLocal", typeof(string));
    
            var bancoMonedaExtranjeraParameter = bancoMonedaExtranjera != null ?
                new ObjectParameter("BancoMonedaExtranjera", bancoMonedaExtranjera) :
                new ObjectParameter("BancoMonedaExtranjera", typeof(string));
    
            var tipoCuentaExtranjeraParameter = tipoCuentaExtranjera != null ?
                new ObjectParameter("TipoCuentaExtranjera", tipoCuentaExtranjera) :
                new ObjectParameter("TipoCuentaExtranjera", typeof(string));
    
            var cuentaMonedaExtranjeraParameter = cuentaMonedaExtranjera != null ?
                new ObjectParameter("CuentaMonedaExtranjera", cuentaMonedaExtranjera) :
                new ObjectParameter("CuentaMonedaExtranjera", typeof(string));
    
            var personaAntParameter = personaAnt != null ?
                new ObjectParameter("PersonaAnt", personaAnt) :
                new ObjectParameter("PersonaAnt", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var clasePersonaCodigoParameter = clasePersonaCodigo != null ?
                new ObjectParameter("ClasePersonaCodigo", clasePersonaCodigo) :
                new ObjectParameter("ClasePersonaCodigo", typeof(string));
    
            var personaClasificacionParameter = personaClasificacion != null ?
                new ObjectParameter("PersonaClasificacion", personaClasificacion) :
                new ObjectParameter("PersonaClasificacion", typeof(string));
    
            var enfermedadGraveFlagParameter = enfermedadGraveFlag != null ?
                new ObjectParameter("EnfermedadGraveFlag", enfermedadGraveFlag) :
                new ObjectParameter("EnfermedadGraveFlag", typeof(string));
    
            var ingresoFechaRegistroParameter = ingresoFechaRegistro.HasValue ?
                new ObjectParameter("IngresoFechaRegistro", ingresoFechaRegistro) :
                new ObjectParameter("IngresoFechaRegistro", typeof(System.DateTime));
    
            var ingresoAplicacionCodigoParameter = ingresoAplicacionCodigo != null ?
                new ObjectParameter("IngresoAplicacionCodigo", ingresoAplicacionCodigo) :
                new ObjectParameter("IngresoAplicacionCodigo", typeof(string));
    
            var ingresoUsuarioParameter = ingresoUsuario != null ?
                new ObjectParameter("IngresoUsuario", ingresoUsuario) :
                new ObjectParameter("IngresoUsuario", typeof(string));
    
            var pYMEFlagParameter = pYMEFlag != null ?
                new ObjectParameter("PYMEFlag", pYMEFlag) :
                new ObjectParameter("PYMEFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var tipoPersonaUsuarioParameter = tipoPersonaUsuario != null ?
                new ObjectParameter("TipoPersonaUsuario", tipoPersonaUsuario) :
                new ObjectParameter("TipoPersonaUsuario", typeof(string));
    
            var direccionReferenciaParameter = direccionReferencia != null ?
                new ObjectParameter("DireccionReferencia", direccionReferencia) :
                new ObjectParameter("DireccionReferencia", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var parentescoEmergenciaParameter = parentescoEmergencia != null ?
                new ObjectParameter("ParentescoEmergencia", parentescoEmergencia) :
                new ObjectParameter("ParentescoEmergencia", typeof(string));
    
            var celularEmergenciaParameter = celularEmergencia != null ?
                new ObjectParameter("CelularEmergencia", celularEmergencia) :
                new ObjectParameter("CelularEmergencia", typeof(string));
    
            var lugarNacimientoParameter = lugarNacimiento != null ?
                new ObjectParameter("LugarNacimiento", lugarNacimiento) :
                new ObjectParameter("LugarNacimiento", typeof(string));
    
            var suspensionFonaviFlagParameter = suspensionFonaviFlag != null ?
                new ObjectParameter("SuspensionFonaviFlag", suspensionFonaviFlag) :
                new ObjectParameter("SuspensionFonaviFlag", typeof(string));
    
            var flagRepetidoParameter = flagRepetido != null ?
                new ObjectParameter("FlagRepetido", flagRepetido) :
                new ObjectParameter("FlagRepetido", typeof(string));
    
            var codDiscamecParameter = codDiscamec != null ?
                new ObjectParameter("CodDiscamec", codDiscamec) :
                new ObjectParameter("CodDiscamec", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var codLicArmaParameter = codLicArma != null ?
                new ObjectParameter("CodLicArma", codLicArma) :
                new ObjectParameter("CodLicArma", typeof(string));
    
            var marcaArmaParameter = marcaArma != null ?
                new ObjectParameter("MarcaArma", marcaArma) :
                new ObjectParameter("MarcaArma", typeof(string));
    
            var serieArmaParameter = serieArma != null ?
                new ObjectParameter("SerieArma", serieArma) :
                new ObjectParameter("SerieArma", typeof(string));
    
            var inicioArmaParameter = inicioArma.HasValue ?
                new ObjectParameter("InicioArma", inicioArma) :
                new ObjectParameter("InicioArma", typeof(System.DateTime));
    
            var vencimientoArmaParameter = vencimientoArma.HasValue ?
                new ObjectParameter("VencimientoArma", vencimientoArma) :
                new ObjectParameter("VencimientoArma", typeof(System.DateTime));
    
            var seguroDiscamecParameter = seguroDiscamec != null ?
                new ObjectParameter("SeguroDiscamec", seguroDiscamec) :
                new ObjectParameter("SeguroDiscamec", typeof(string));
    
            var correlativoSCTRParameter = correlativoSCTR != null ?
                new ObjectParameter("CorrelativoSCTR", correlativoSCTR) :
                new ObjectParameter("CorrelativoSCTR", typeof(string));
    
            var cuentaMonedaExtranjera_tmpParameter = cuentaMonedaExtranjera_tmp != null ?
                new ObjectParameter("CuentaMonedaExtranjera_tmp", cuentaMonedaExtranjera_tmp) :
                new ObjectParameter("CuentaMonedaExtranjera_tmp", typeof(string));
    
            var cuentaMonedaLocal_tmpParameter = cuentaMonedaLocal_tmp != null ?
                new ObjectParameter("CuentaMonedaLocal_tmp", cuentaMonedaLocal_tmp) :
                new ObjectParameter("CuentaMonedaLocal_tmp", typeof(string));
    
            var flagActualizacionParameter = flagActualizacion != null ?
                new ObjectParameter("FlagActualizacion", flagActualizacion) :
                new ObjectParameter("FlagActualizacion", typeof(string));
    
            var tarjetadeCreditoParameter = tarjetadeCredito != null ?
                new ObjectParameter("TarjetadeCredito", tarjetadeCredito) :
                new ObjectParameter("TarjetadeCredito", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var persona_OldParameter = persona_Old.HasValue ?
                new ObjectParameter("Persona_Old", persona_Old) :
                new ObjectParameter("Persona_Old", typeof(int));
    
            var personanewParameter = personanew.HasValue ?
                new ObjectParameter("personanew", personanew) :
                new ObjectParameter("personanew", typeof(int));
    
            var cmpParameter = cmp != null ?
                new ObjectParameter("cmp", cmp) :
                new ObjectParameter("cmp", typeof(string));
    
            var sUNATNacionalidadParameter = sUNATNacionalidad != null ?
                new ObjectParameter("SUNATNacionalidad", sUNATNacionalidad) :
                new ObjectParameter("SUNATNacionalidad", typeof(string));
    
            var sUNATViaParameter = sUNATVia != null ?
                new ObjectParameter("SUNATVia", sUNATVia) :
                new ObjectParameter("SUNATVia", typeof(string));
    
            var sUNATZonaParameter = sUNATZona != null ?
                new ObjectParameter("SUNATZona", sUNATZona) :
                new ObjectParameter("SUNATZona", typeof(string));
    
            var sUNATUbigeoParameter = sUNATUbigeo != null ?
                new ObjectParameter("SUNATUbigeo", sUNATUbigeo) :
                new ObjectParameter("SUNATUbigeo", typeof(string));
    
            var sUNATDomiciliadoParameter = sUNATDomiciliado != null ?
                new ObjectParameter("SUNATDomiciliado", sUNATDomiciliado) :
                new ObjectParameter("SUNATDomiciliado", typeof(string));
    
            var indicadorAutogeneradoParameter = indicadorAutogenerado.HasValue ?
                new ObjectParameter("IndicadorAutogenerado", indicadorAutogenerado) :
                new ObjectParameter("IndicadorAutogenerado", typeof(int));
    
            var rutaFirmaParameter = rutaFirma != null ?
                new ObjectParameter("RutaFirma", rutaFirma) :
                new ObjectParameter("RutaFirma", typeof(string));
    
            var tipoDocumentoIdentidadParameter = tipoDocumentoIdentidad != null ?
                new ObjectParameter("TipoDocumentoIdentidad", tipoDocumentoIdentidad) :
                new ObjectParameter("TipoDocumentoIdentidad", typeof(string));
    
            var idPersonaUnificadoParameter = idPersonaUnificado.HasValue ?
                new ObjectParameter("IdPersonaUnificado", idPersonaUnificado) :
                new ObjectParameter("IdPersonaUnificado", typeof(int));
    
            var idpersona_okParameter = idpersona_ok.HasValue ?
                new ObjectParameter("idpersona_ok", idpersona_ok) :
                new ObjectParameter("idpersona_ok", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var rangoEtarioParameter = rangoEtario != null ?
                new ObjectParameter("rangoEtario", rangoEtario) :
                new ObjectParameter("rangoEtario", typeof(string));
    
            var tipoMedicoParameter = tipoMedico.HasValue ?
                new ObjectParameter("TipoMedico", tipoMedico) :
                new ObjectParameter("TipoMedico", typeof(int));
    
            var correcionParameter = correcion.HasValue ?
                new ObjectParameter("Correcion", correcion) :
                new ObjectParameter("Correcion", typeof(int));
    
            var idEmpresaAnteriorUnificacionParameter = idEmpresaAnteriorUnificacion.HasValue ?
                new ObjectParameter("IdEmpresaAnteriorUnificacion", idEmpresaAnteriorUnificacion) :
                new ObjectParameter("IdEmpresaAnteriorUnificacion", typeof(int));
    
            var brevete_fecvctoParameter = brevete_fecvcto.HasValue ?
                new ObjectParameter("brevete_fecvcto", brevete_fecvcto) :
                new ObjectParameter("brevete_fecvcto", typeof(System.DateTime));
    
            var carnetextranjeria_fecvctoParameter = carnetextranjeria_fecvcto.HasValue ?
                new ObjectParameter("carnetextranjeria_fecvcto", carnetextranjeria_fecvcto) :
                new ObjectParameter("carnetextranjeria_fecvcto", typeof(System.DateTime));
    
            var estado_BKParameter = estado_BK != null ?
                new ObjectParameter("Estado_BK", estado_BK) :
                new ObjectParameter("Estado_BK", typeof(string));
    
            var estado_BksParameter = estado_Bks != null ?
                new ObjectParameter("Estado_Bks", estado_Bks) :
                new ObjectParameter("Estado_Bks", typeof(string));
    
            var indicadorVinculadaParameter = indicadorVinculada.HasValue ?
                new ObjectParameter("IndicadorVinculada", indicadorVinculada) :
                new ObjectParameter("IndicadorVinculada", typeof(int));
    
            var paisEmisorParameter = paisEmisor != null ?
                new ObjectParameter("PaisEmisor", paisEmisor) :
                new ObjectParameter("PaisEmisor", typeof(string));
    
            var codigoLDNParameter = codigoLDN != null ?
                new ObjectParameter("CodigoLDN", codigoLDN) :
                new ObjectParameter("CodigoLDN", typeof(string));
    
            var sunatConvenioParameter = sunatConvenio != null ?
                new ObjectParameter("SunatConvenio", sunatConvenio) :
                new ObjectParameter("SunatConvenio", typeof(string));
    
            var indicadorRegistroManualParameter = indicadorRegistroManual.HasValue ?
                new ObjectParameter("IndicadorRegistroManual", indicadorRegistroManual) :
                new ObjectParameter("IndicadorRegistroManual", typeof(int));
    
            var indicadorFallecidoParameter = indicadorFallecido.HasValue ?
                new ObjectParameter("IndicadorFallecido", indicadorFallecido) :
                new ObjectParameter("IndicadorFallecido", typeof(int));
    
            var indicadorSinCorreoParameter = indicadorSinCorreo.HasValue ?
                new ObjectParameter("IndicadorSinCorreo", indicadorSinCorreo) :
                new ObjectParameter("IndicadorSinCorreo", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERSONAMAST>("USP_HC_Personamast_Listar", personaParameter, origenParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombresParameter, nombreCompletoParameter, busquedaParameter, grupoEmpresarialParameter, tipoDocumentoParameter, documentoParameter, codigoBarrasParameter, esClienteParameter, esProveedorParameter, esEmpleadoParameter, esOtroParameter, tipoPersonaParameter, fechaNacimientoParameter, ciudadNacimientoParameter, sexoParameter, nacionalidadParameter, estadoCivilParameter, nivelInstruccionParameter, direccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, telefonoParameter, faxParameter, documentoFiscalParameter, documentoIdentidadParameter, carnetExtranjeriaParameter, documentoMilitarFAParameter, tipoBreveteParameter, breveteParameter, pasaporteParameter, nombreEmergenciaParameter, direccionEmergenciaParameter, telefonoEmergenciaParameter, bancoMonedaLocalParameter, tipoCuentaLocalParameter, cuentaMonedaLocalParameter, bancoMonedaExtranjeraParameter, tipoCuentaExtranjeraParameter, cuentaMonedaExtranjeraParameter, personaAntParameter, correoElectronicoParameter, clasePersonaCodigoParameter, personaClasificacionParameter, enfermedadGraveFlagParameter, ingresoFechaRegistroParameter, ingresoAplicacionCodigoParameter, ingresoUsuarioParameter, pYMEFlagParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, tipoPersonaUsuarioParameter, direccionReferenciaParameter, celularParameter, parentescoEmergenciaParameter, celularEmergenciaParameter, lugarNacimientoParameter, suspensionFonaviFlagParameter, flagRepetidoParameter, codDiscamecParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, codLicArmaParameter, marcaArmaParameter, serieArmaParameter, inicioArmaParameter, vencimientoArmaParameter, seguroDiscamecParameter, correlativoSCTRParameter, cuentaMonedaExtranjera_tmpParameter, cuentaMonedaLocal_tmpParameter, flagActualizacionParameter, tarjetadeCreditoParameter, paisParameter, esPacienteParameter, esEmpresaParameter, persona_OldParameter, personanewParameter, cmpParameter, sUNATNacionalidadParameter, sUNATViaParameter, sUNATZonaParameter, sUNATUbigeoParameter, sUNATDomiciliadoParameter, indicadorAutogeneradoParameter, rutaFirmaParameter, tipoDocumentoIdentidadParameter, idPersonaUnificadoParameter, idpersona_okParameter, edadParameter, rangoEtarioParameter, tipoMedicoParameter, correcionParameter, idEmpresaAnteriorUnificacionParameter, brevete_fecvctoParameter, carnetextranjeria_fecvctoParameter, estado_BKParameter, estado_BksParameter, indicadorVinculadaParameter, paisEmisorParameter, codigoLDNParameter, sunatConvenioParameter, indicadorRegistroManualParameter, indicadorFallecidoParameter, indicadorSinCorreoParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<PERSONAMAST> USP_HC_Personamast_Listar(Nullable<int> persona, string origen, string apellidoPaterno, string apellidoMaterno, string nombres, string nombreCompleto, string busqueda, string grupoEmpresarial, string tipoDocumento, string documento, string codigoBarras, string esCliente, string esProveedor, string esEmpleado, string esOtro, string tipoPersona, Nullable<System.DateTime> fechaNacimiento, string ciudadNacimiento, string sexo, string nacionalidad, string estadoCivil, string nivelInstruccion, string direccion, string codigoPostal, string provincia, string departamento, string telefono, string fax, string documentoFiscal, string documentoIdentidad, string carnetExtranjeria, string documentoMilitarFA, string tipoBrevete, string brevete, string pasaporte, string nombreEmergencia, string direccionEmergencia, string telefonoEmergencia, string bancoMonedaLocal, string tipoCuentaLocal, string cuentaMonedaLocal, string bancoMonedaExtranjera, string tipoCuentaExtranjera, string cuentaMonedaExtranjera, string personaAnt, string correoElectronico, string clasePersonaCodigo, string personaClasificacion, string enfermedadGraveFlag, Nullable<System.DateTime> ingresoFechaRegistro, string ingresoAplicacionCodigo, string ingresoUsuario, string pYMEFlag, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string tipoPersonaUsuario, string direccionReferencia, string celular, string parentescoEmergencia, string celularEmergencia, string lugarNacimiento, string suspensionFonaviFlag, string flagRepetido, string codDiscamec, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, string codLicArma, string marcaArma, string serieArma, Nullable<System.DateTime> inicioArma, Nullable<System.DateTime> vencimientoArma, string seguroDiscamec, string correlativoSCTR, string cuentaMonedaExtranjera_tmp, string cuentaMonedaLocal_tmp, string flagActualizacion, string tarjetadeCredito, string pais, string esPaciente, string esEmpresa, Nullable<int> persona_Old, Nullable<int> personanew, string cmp, string sUNATNacionalidad, string sUNATVia, string sUNATZona, string sUNATUbigeo, string sUNATDomiciliado, Nullable<int> indicadorAutogenerado, string rutaFirma, string tipoDocumentoIdentidad, Nullable<int> idPersonaUnificado, Nullable<int> idpersona_ok, Nullable<int> edad, string rangoEtario, Nullable<int> tipoMedico, Nullable<int> correcion, Nullable<int> idEmpresaAnteriorUnificacion, Nullable<System.DateTime> brevete_fecvcto, Nullable<System.DateTime> carnetextranjeria_fecvcto, string estado_BK, string estado_Bks, Nullable<int> indicadorVinculada, string paisEmisor, string codigoLDN, string sunatConvenio, Nullable<int> indicadorRegistroManual, Nullable<int> indicadorFallecido, Nullable<int> indicadorSinCorreo, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PERSONAMAST).Assembly);
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var grupoEmpresarialParameter = grupoEmpresarial != null ?
                new ObjectParameter("GrupoEmpresarial", grupoEmpresarial) :
                new ObjectParameter("GrupoEmpresarial", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var codigoBarrasParameter = codigoBarras != null ?
                new ObjectParameter("CodigoBarras", codigoBarras) :
                new ObjectParameter("CodigoBarras", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var ciudadNacimientoParameter = ciudadNacimiento != null ?
                new ObjectParameter("CiudadNacimiento", ciudadNacimiento) :
                new ObjectParameter("CiudadNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var documentoFiscalParameter = documentoFiscal != null ?
                new ObjectParameter("DocumentoFiscal", documentoFiscal) :
                new ObjectParameter("DocumentoFiscal", typeof(string));
    
            var documentoIdentidadParameter = documentoIdentidad != null ?
                new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
                new ObjectParameter("DocumentoIdentidad", typeof(string));
    
            var carnetExtranjeriaParameter = carnetExtranjeria != null ?
                new ObjectParameter("CarnetExtranjeria", carnetExtranjeria) :
                new ObjectParameter("CarnetExtranjeria", typeof(string));
    
            var documentoMilitarFAParameter = documentoMilitarFA != null ?
                new ObjectParameter("DocumentoMilitarFA", documentoMilitarFA) :
                new ObjectParameter("DocumentoMilitarFA", typeof(string));
    
            var tipoBreveteParameter = tipoBrevete != null ?
                new ObjectParameter("TipoBrevete", tipoBrevete) :
                new ObjectParameter("TipoBrevete", typeof(string));
    
            var breveteParameter = brevete != null ?
                new ObjectParameter("Brevete", brevete) :
                new ObjectParameter("Brevete", typeof(string));
    
            var pasaporteParameter = pasaporte != null ?
                new ObjectParameter("Pasaporte", pasaporte) :
                new ObjectParameter("Pasaporte", typeof(string));
    
            var nombreEmergenciaParameter = nombreEmergencia != null ?
                new ObjectParameter("NombreEmergencia", nombreEmergencia) :
                new ObjectParameter("NombreEmergencia", typeof(string));
    
            var direccionEmergenciaParameter = direccionEmergencia != null ?
                new ObjectParameter("DireccionEmergencia", direccionEmergencia) :
                new ObjectParameter("DireccionEmergencia", typeof(string));
    
            var telefonoEmergenciaParameter = telefonoEmergencia != null ?
                new ObjectParameter("TelefonoEmergencia", telefonoEmergencia) :
                new ObjectParameter("TelefonoEmergencia", typeof(string));
    
            var bancoMonedaLocalParameter = bancoMonedaLocal != null ?
                new ObjectParameter("BancoMonedaLocal", bancoMonedaLocal) :
                new ObjectParameter("BancoMonedaLocal", typeof(string));
    
            var tipoCuentaLocalParameter = tipoCuentaLocal != null ?
                new ObjectParameter("TipoCuentaLocal", tipoCuentaLocal) :
                new ObjectParameter("TipoCuentaLocal", typeof(string));
    
            var cuentaMonedaLocalParameter = cuentaMonedaLocal != null ?
                new ObjectParameter("CuentaMonedaLocal", cuentaMonedaLocal) :
                new ObjectParameter("CuentaMonedaLocal", typeof(string));
    
            var bancoMonedaExtranjeraParameter = bancoMonedaExtranjera != null ?
                new ObjectParameter("BancoMonedaExtranjera", bancoMonedaExtranjera) :
                new ObjectParameter("BancoMonedaExtranjera", typeof(string));
    
            var tipoCuentaExtranjeraParameter = tipoCuentaExtranjera != null ?
                new ObjectParameter("TipoCuentaExtranjera", tipoCuentaExtranjera) :
                new ObjectParameter("TipoCuentaExtranjera", typeof(string));
    
            var cuentaMonedaExtranjeraParameter = cuentaMonedaExtranjera != null ?
                new ObjectParameter("CuentaMonedaExtranjera", cuentaMonedaExtranjera) :
                new ObjectParameter("CuentaMonedaExtranjera", typeof(string));
    
            var personaAntParameter = personaAnt != null ?
                new ObjectParameter("PersonaAnt", personaAnt) :
                new ObjectParameter("PersonaAnt", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var clasePersonaCodigoParameter = clasePersonaCodigo != null ?
                new ObjectParameter("ClasePersonaCodigo", clasePersonaCodigo) :
                new ObjectParameter("ClasePersonaCodigo", typeof(string));
    
            var personaClasificacionParameter = personaClasificacion != null ?
                new ObjectParameter("PersonaClasificacion", personaClasificacion) :
                new ObjectParameter("PersonaClasificacion", typeof(string));
    
            var enfermedadGraveFlagParameter = enfermedadGraveFlag != null ?
                new ObjectParameter("EnfermedadGraveFlag", enfermedadGraveFlag) :
                new ObjectParameter("EnfermedadGraveFlag", typeof(string));
    
            var ingresoFechaRegistroParameter = ingresoFechaRegistro.HasValue ?
                new ObjectParameter("IngresoFechaRegistro", ingresoFechaRegistro) :
                new ObjectParameter("IngresoFechaRegistro", typeof(System.DateTime));
    
            var ingresoAplicacionCodigoParameter = ingresoAplicacionCodigo != null ?
                new ObjectParameter("IngresoAplicacionCodigo", ingresoAplicacionCodigo) :
                new ObjectParameter("IngresoAplicacionCodigo", typeof(string));
    
            var ingresoUsuarioParameter = ingresoUsuario != null ?
                new ObjectParameter("IngresoUsuario", ingresoUsuario) :
                new ObjectParameter("IngresoUsuario", typeof(string));
    
            var pYMEFlagParameter = pYMEFlag != null ?
                new ObjectParameter("PYMEFlag", pYMEFlag) :
                new ObjectParameter("PYMEFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var tipoPersonaUsuarioParameter = tipoPersonaUsuario != null ?
                new ObjectParameter("TipoPersonaUsuario", tipoPersonaUsuario) :
                new ObjectParameter("TipoPersonaUsuario", typeof(string));
    
            var direccionReferenciaParameter = direccionReferencia != null ?
                new ObjectParameter("DireccionReferencia", direccionReferencia) :
                new ObjectParameter("DireccionReferencia", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var parentescoEmergenciaParameter = parentescoEmergencia != null ?
                new ObjectParameter("ParentescoEmergencia", parentescoEmergencia) :
                new ObjectParameter("ParentescoEmergencia", typeof(string));
    
            var celularEmergenciaParameter = celularEmergencia != null ?
                new ObjectParameter("CelularEmergencia", celularEmergencia) :
                new ObjectParameter("CelularEmergencia", typeof(string));
    
            var lugarNacimientoParameter = lugarNacimiento != null ?
                new ObjectParameter("LugarNacimiento", lugarNacimiento) :
                new ObjectParameter("LugarNacimiento", typeof(string));
    
            var suspensionFonaviFlagParameter = suspensionFonaviFlag != null ?
                new ObjectParameter("SuspensionFonaviFlag", suspensionFonaviFlag) :
                new ObjectParameter("SuspensionFonaviFlag", typeof(string));
    
            var flagRepetidoParameter = flagRepetido != null ?
                new ObjectParameter("FlagRepetido", flagRepetido) :
                new ObjectParameter("FlagRepetido", typeof(string));
    
            var codDiscamecParameter = codDiscamec != null ?
                new ObjectParameter("CodDiscamec", codDiscamec) :
                new ObjectParameter("CodDiscamec", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var codLicArmaParameter = codLicArma != null ?
                new ObjectParameter("CodLicArma", codLicArma) :
                new ObjectParameter("CodLicArma", typeof(string));
    
            var marcaArmaParameter = marcaArma != null ?
                new ObjectParameter("MarcaArma", marcaArma) :
                new ObjectParameter("MarcaArma", typeof(string));
    
            var serieArmaParameter = serieArma != null ?
                new ObjectParameter("SerieArma", serieArma) :
                new ObjectParameter("SerieArma", typeof(string));
    
            var inicioArmaParameter = inicioArma.HasValue ?
                new ObjectParameter("InicioArma", inicioArma) :
                new ObjectParameter("InicioArma", typeof(System.DateTime));
    
            var vencimientoArmaParameter = vencimientoArma.HasValue ?
                new ObjectParameter("VencimientoArma", vencimientoArma) :
                new ObjectParameter("VencimientoArma", typeof(System.DateTime));
    
            var seguroDiscamecParameter = seguroDiscamec != null ?
                new ObjectParameter("SeguroDiscamec", seguroDiscamec) :
                new ObjectParameter("SeguroDiscamec", typeof(string));
    
            var correlativoSCTRParameter = correlativoSCTR != null ?
                new ObjectParameter("CorrelativoSCTR", correlativoSCTR) :
                new ObjectParameter("CorrelativoSCTR", typeof(string));
    
            var cuentaMonedaExtranjera_tmpParameter = cuentaMonedaExtranjera_tmp != null ?
                new ObjectParameter("CuentaMonedaExtranjera_tmp", cuentaMonedaExtranjera_tmp) :
                new ObjectParameter("CuentaMonedaExtranjera_tmp", typeof(string));
    
            var cuentaMonedaLocal_tmpParameter = cuentaMonedaLocal_tmp != null ?
                new ObjectParameter("CuentaMonedaLocal_tmp", cuentaMonedaLocal_tmp) :
                new ObjectParameter("CuentaMonedaLocal_tmp", typeof(string));
    
            var flagActualizacionParameter = flagActualizacion != null ?
                new ObjectParameter("FlagActualizacion", flagActualizacion) :
                new ObjectParameter("FlagActualizacion", typeof(string));
    
            var tarjetadeCreditoParameter = tarjetadeCredito != null ?
                new ObjectParameter("TarjetadeCredito", tarjetadeCredito) :
                new ObjectParameter("TarjetadeCredito", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var persona_OldParameter = persona_Old.HasValue ?
                new ObjectParameter("Persona_Old", persona_Old) :
                new ObjectParameter("Persona_Old", typeof(int));
    
            var personanewParameter = personanew.HasValue ?
                new ObjectParameter("personanew", personanew) :
                new ObjectParameter("personanew", typeof(int));
    
            var cmpParameter = cmp != null ?
                new ObjectParameter("cmp", cmp) :
                new ObjectParameter("cmp", typeof(string));
    
            var sUNATNacionalidadParameter = sUNATNacionalidad != null ?
                new ObjectParameter("SUNATNacionalidad", sUNATNacionalidad) :
                new ObjectParameter("SUNATNacionalidad", typeof(string));
    
            var sUNATViaParameter = sUNATVia != null ?
                new ObjectParameter("SUNATVia", sUNATVia) :
                new ObjectParameter("SUNATVia", typeof(string));
    
            var sUNATZonaParameter = sUNATZona != null ?
                new ObjectParameter("SUNATZona", sUNATZona) :
                new ObjectParameter("SUNATZona", typeof(string));
    
            var sUNATUbigeoParameter = sUNATUbigeo != null ?
                new ObjectParameter("SUNATUbigeo", sUNATUbigeo) :
                new ObjectParameter("SUNATUbigeo", typeof(string));
    
            var sUNATDomiciliadoParameter = sUNATDomiciliado != null ?
                new ObjectParameter("SUNATDomiciliado", sUNATDomiciliado) :
                new ObjectParameter("SUNATDomiciliado", typeof(string));
    
            var indicadorAutogeneradoParameter = indicadorAutogenerado.HasValue ?
                new ObjectParameter("IndicadorAutogenerado", indicadorAutogenerado) :
                new ObjectParameter("IndicadorAutogenerado", typeof(int));
    
            var rutaFirmaParameter = rutaFirma != null ?
                new ObjectParameter("RutaFirma", rutaFirma) :
                new ObjectParameter("RutaFirma", typeof(string));
    
            var tipoDocumentoIdentidadParameter = tipoDocumentoIdentidad != null ?
                new ObjectParameter("TipoDocumentoIdentidad", tipoDocumentoIdentidad) :
                new ObjectParameter("TipoDocumentoIdentidad", typeof(string));
    
            var idPersonaUnificadoParameter = idPersonaUnificado.HasValue ?
                new ObjectParameter("IdPersonaUnificado", idPersonaUnificado) :
                new ObjectParameter("IdPersonaUnificado", typeof(int));
    
            var idpersona_okParameter = idpersona_ok.HasValue ?
                new ObjectParameter("idpersona_ok", idpersona_ok) :
                new ObjectParameter("idpersona_ok", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var rangoEtarioParameter = rangoEtario != null ?
                new ObjectParameter("rangoEtario", rangoEtario) :
                new ObjectParameter("rangoEtario", typeof(string));
    
            var tipoMedicoParameter = tipoMedico.HasValue ?
                new ObjectParameter("TipoMedico", tipoMedico) :
                new ObjectParameter("TipoMedico", typeof(int));
    
            var correcionParameter = correcion.HasValue ?
                new ObjectParameter("Correcion", correcion) :
                new ObjectParameter("Correcion", typeof(int));
    
            var idEmpresaAnteriorUnificacionParameter = idEmpresaAnteriorUnificacion.HasValue ?
                new ObjectParameter("IdEmpresaAnteriorUnificacion", idEmpresaAnteriorUnificacion) :
                new ObjectParameter("IdEmpresaAnteriorUnificacion", typeof(int));
    
            var brevete_fecvctoParameter = brevete_fecvcto.HasValue ?
                new ObjectParameter("brevete_fecvcto", brevete_fecvcto) :
                new ObjectParameter("brevete_fecvcto", typeof(System.DateTime));
    
            var carnetextranjeria_fecvctoParameter = carnetextranjeria_fecvcto.HasValue ?
                new ObjectParameter("carnetextranjeria_fecvcto", carnetextranjeria_fecvcto) :
                new ObjectParameter("carnetextranjeria_fecvcto", typeof(System.DateTime));
    
            var estado_BKParameter = estado_BK != null ?
                new ObjectParameter("Estado_BK", estado_BK) :
                new ObjectParameter("Estado_BK", typeof(string));
    
            var estado_BksParameter = estado_Bks != null ?
                new ObjectParameter("Estado_Bks", estado_Bks) :
                new ObjectParameter("Estado_Bks", typeof(string));
    
            var indicadorVinculadaParameter = indicadorVinculada.HasValue ?
                new ObjectParameter("IndicadorVinculada", indicadorVinculada) :
                new ObjectParameter("IndicadorVinculada", typeof(int));
    
            var paisEmisorParameter = paisEmisor != null ?
                new ObjectParameter("PaisEmisor", paisEmisor) :
                new ObjectParameter("PaisEmisor", typeof(string));
    
            var codigoLDNParameter = codigoLDN != null ?
                new ObjectParameter("CodigoLDN", codigoLDN) :
                new ObjectParameter("CodigoLDN", typeof(string));
    
            var sunatConvenioParameter = sunatConvenio != null ?
                new ObjectParameter("SunatConvenio", sunatConvenio) :
                new ObjectParameter("SunatConvenio", typeof(string));
    
            var indicadorRegistroManualParameter = indicadorRegistroManual.HasValue ?
                new ObjectParameter("IndicadorRegistroManual", indicadorRegistroManual) :
                new ObjectParameter("IndicadorRegistroManual", typeof(int));
    
            var indicadorFallecidoParameter = indicadorFallecido.HasValue ?
                new ObjectParameter("IndicadorFallecido", indicadorFallecido) :
                new ObjectParameter("IndicadorFallecido", typeof(int));
    
            var indicadorSinCorreoParameter = indicadorSinCorreo.HasValue ?
                new ObjectParameter("IndicadorSinCorreo", indicadorSinCorreo) :
                new ObjectParameter("IndicadorSinCorreo", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PERSONAMAST>("USP_HC_Personamast_Listar", mergeOption, personaParameter, origenParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombresParameter, nombreCompletoParameter, busquedaParameter, grupoEmpresarialParameter, tipoDocumentoParameter, documentoParameter, codigoBarrasParameter, esClienteParameter, esProveedorParameter, esEmpleadoParameter, esOtroParameter, tipoPersonaParameter, fechaNacimientoParameter, ciudadNacimientoParameter, sexoParameter, nacionalidadParameter, estadoCivilParameter, nivelInstruccionParameter, direccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, telefonoParameter, faxParameter, documentoFiscalParameter, documentoIdentidadParameter, carnetExtranjeriaParameter, documentoMilitarFAParameter, tipoBreveteParameter, breveteParameter, pasaporteParameter, nombreEmergenciaParameter, direccionEmergenciaParameter, telefonoEmergenciaParameter, bancoMonedaLocalParameter, tipoCuentaLocalParameter, cuentaMonedaLocalParameter, bancoMonedaExtranjeraParameter, tipoCuentaExtranjeraParameter, cuentaMonedaExtranjeraParameter, personaAntParameter, correoElectronicoParameter, clasePersonaCodigoParameter, personaClasificacionParameter, enfermedadGraveFlagParameter, ingresoFechaRegistroParameter, ingresoAplicacionCodigoParameter, ingresoUsuarioParameter, pYMEFlagParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, tipoPersonaUsuarioParameter, direccionReferenciaParameter, celularParameter, parentescoEmergenciaParameter, celularEmergenciaParameter, lugarNacimientoParameter, suspensionFonaviFlagParameter, flagRepetidoParameter, codDiscamecParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, codLicArmaParameter, marcaArmaParameter, serieArmaParameter, inicioArmaParameter, vencimientoArmaParameter, seguroDiscamecParameter, correlativoSCTRParameter, cuentaMonedaExtranjera_tmpParameter, cuentaMonedaLocal_tmpParameter, flagActualizacionParameter, tarjetadeCreditoParameter, paisParameter, esPacienteParameter, esEmpresaParameter, persona_OldParameter, personanewParameter, cmpParameter, sUNATNacionalidadParameter, sUNATViaParameter, sUNATZonaParameter, sUNATUbigeoParameter, sUNATDomiciliadoParameter, indicadorAutogeneradoParameter, rutaFirmaParameter, tipoDocumentoIdentidadParameter, idPersonaUnificadoParameter, idpersona_okParameter, edadParameter, rangoEtarioParameter, tipoMedicoParameter, correcionParameter, idEmpresaAnteriorUnificacionParameter, brevete_fecvctoParameter, carnetextranjeria_fecvctoParameter, estado_BKParameter, estado_BksParameter, indicadorVinculadaParameter, paisEmisorParameter, codigoLDNParameter, sunatConvenioParameter, indicadorRegistroManualParameter, indicadorFallecidoParameter, indicadorSinCorreoParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_FAVORITODETALLEDETALLE(Nullable<int> idFavorito, Nullable<int> numeroFavorito, Nullable<int> secuencia, Nullable<int> valorId, string valorTexto1, string valorTexto2, string valorTexto3, string valorTexto4, string valorTexto5, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string accion, string version, Nullable<int> idAgente, Nullable<int> tipoFavorito)
        {
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var numeroFavoritoParameter = numeroFavorito.HasValue ?
                new ObjectParameter("NumeroFavorito", numeroFavorito) :
                new ObjectParameter("NumeroFavorito", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var valorIdParameter = valorId.HasValue ?
                new ObjectParameter("ValorId", valorId) :
                new ObjectParameter("ValorId", typeof(int));
    
            var valorTexto1Parameter = valorTexto1 != null ?
                new ObjectParameter("ValorTexto1", valorTexto1) :
                new ObjectParameter("ValorTexto1", typeof(string));
    
            var valorTexto2Parameter = valorTexto2 != null ?
                new ObjectParameter("ValorTexto2", valorTexto2) :
                new ObjectParameter("ValorTexto2", typeof(string));
    
            var valorTexto3Parameter = valorTexto3 != null ?
                new ObjectParameter("ValorTexto3", valorTexto3) :
                new ObjectParameter("ValorTexto3", typeof(string));
    
            var valorTexto4Parameter = valorTexto4 != null ?
                new ObjectParameter("ValorTexto4", valorTexto4) :
                new ObjectParameter("ValorTexto4", typeof(string));
    
            var valorTexto5Parameter = valorTexto5 != null ?
                new ObjectParameter("ValorTexto5", valorTexto5) :
                new ObjectParameter("ValorTexto5", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var tipoFavoritoParameter = tipoFavorito.HasValue ?
                new ObjectParameter("TipoFavorito", tipoFavorito) :
                new ObjectParameter("TipoFavorito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_FAVORITODETALLEDETALLE", idFavoritoParameter, numeroFavoritoParameter, secuenciaParameter, valorIdParameter, valorTexto1Parameter, valorTexto2Parameter, valorTexto3Parameter, valorTexto4Parameter, valorTexto5Parameter, usuarioCreacionParameter, fechaCreacionParameter, accionParameter, versionParameter, idAgenteParameter, tipoFavoritoParameter);
        }
    
        public virtual ObjectResult<SS_HC_FavoritoDetalle> USP_SS_HC_FAVORITODETALLEDETALLE_LISTAR(Nullable<int> idFavorito, Nullable<int> numeroFavorito, Nullable<int> secuencia, Nullable<int> valorId, string valorTexto1, string valorTexto2, string valorTexto3, string valorTexto4, string valorTexto5, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string accion, string version, Nullable<int> idAgente, Nullable<int> tipoFavorito, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FavoritoDetalle).Assembly);
    
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var numeroFavoritoParameter = numeroFavorito.HasValue ?
                new ObjectParameter("NumeroFavorito", numeroFavorito) :
                new ObjectParameter("NumeroFavorito", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var valorIdParameter = valorId.HasValue ?
                new ObjectParameter("ValorId", valorId) :
                new ObjectParameter("ValorId", typeof(int));
    
            var valorTexto1Parameter = valorTexto1 != null ?
                new ObjectParameter("ValorTexto1", valorTexto1) :
                new ObjectParameter("ValorTexto1", typeof(string));
    
            var valorTexto2Parameter = valorTexto2 != null ?
                new ObjectParameter("ValorTexto2", valorTexto2) :
                new ObjectParameter("ValorTexto2", typeof(string));
    
            var valorTexto3Parameter = valorTexto3 != null ?
                new ObjectParameter("ValorTexto3", valorTexto3) :
                new ObjectParameter("ValorTexto3", typeof(string));
    
            var valorTexto4Parameter = valorTexto4 != null ?
                new ObjectParameter("ValorTexto4", valorTexto4) :
                new ObjectParameter("ValorTexto4", typeof(string));
    
            var valorTexto5Parameter = valorTexto5 != null ?
                new ObjectParameter("ValorTexto5", valorTexto5) :
                new ObjectParameter("ValorTexto5", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var tipoFavoritoParameter = tipoFavorito.HasValue ?
                new ObjectParameter("TipoFavorito", tipoFavorito) :
                new ObjectParameter("TipoFavorito", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FavoritoDetalle>("USP_SS_HC_FAVORITODETALLEDETALLE_LISTAR", idFavoritoParameter, numeroFavoritoParameter, secuenciaParameter, valorIdParameter, valorTexto1Parameter, valorTexto2Parameter, valorTexto3Parameter, valorTexto4Parameter, valorTexto5Parameter, usuarioCreacionParameter, fechaCreacionParameter, accionParameter, versionParameter, idAgenteParameter, tipoFavoritoParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_FavoritoDetalle> USP_SS_HC_FAVORITODETALLEDETALLE_LISTAR(Nullable<int> idFavorito, Nullable<int> numeroFavorito, Nullable<int> secuencia, Nullable<int> valorId, string valorTexto1, string valorTexto2, string valorTexto3, string valorTexto4, string valorTexto5, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string accion, string version, Nullable<int> idAgente, Nullable<int> tipoFavorito, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FavoritoDetalle).Assembly);
    
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var numeroFavoritoParameter = numeroFavorito.HasValue ?
                new ObjectParameter("NumeroFavorito", numeroFavorito) :
                new ObjectParameter("NumeroFavorito", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var valorIdParameter = valorId.HasValue ?
                new ObjectParameter("ValorId", valorId) :
                new ObjectParameter("ValorId", typeof(int));
    
            var valorTexto1Parameter = valorTexto1 != null ?
                new ObjectParameter("ValorTexto1", valorTexto1) :
                new ObjectParameter("ValorTexto1", typeof(string));
    
            var valorTexto2Parameter = valorTexto2 != null ?
                new ObjectParameter("ValorTexto2", valorTexto2) :
                new ObjectParameter("ValorTexto2", typeof(string));
    
            var valorTexto3Parameter = valorTexto3 != null ?
                new ObjectParameter("ValorTexto3", valorTexto3) :
                new ObjectParameter("ValorTexto3", typeof(string));
    
            var valorTexto4Parameter = valorTexto4 != null ?
                new ObjectParameter("ValorTexto4", valorTexto4) :
                new ObjectParameter("ValorTexto4", typeof(string));
    
            var valorTexto5Parameter = valorTexto5 != null ?
                new ObjectParameter("ValorTexto5", valorTexto5) :
                new ObjectParameter("ValorTexto5", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var tipoFavoritoParameter = tipoFavorito.HasValue ?
                new ObjectParameter("TipoFavorito", tipoFavorito) :
                new ObjectParameter("TipoFavorito", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FavoritoDetalle>("USP_SS_HC_FAVORITODETALLEDETALLE_LISTAR", mergeOption, idFavoritoParameter, numeroFavoritoParameter, secuenciaParameter, valorIdParameter, valorTexto1Parameter, valorTexto2Parameter, valorTexto3Parameter, valorTexto4Parameter, valorTexto5Parameter, usuarioCreacionParameter, fechaCreacionParameter, accionParameter, versionParameter, idAgenteParameter, tipoFavoritoParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_FavoritoNumero(Nullable<int> idFavorito, Nullable<int> numeroFavorito, string mnemotecnico, string descripcion, string descripcionExtranjera, Nullable<int> indicadorPorDefecto, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var numeroFavoritoParameter = numeroFavorito.HasValue ?
                new ObjectParameter("NumeroFavorito", numeroFavorito) :
                new ObjectParameter("NumeroFavorito", typeof(int));
    
            var mnemotecnicoParameter = mnemotecnico != null ?
                new ObjectParameter("Mnemotecnico", mnemotecnico) :
                new ObjectParameter("Mnemotecnico", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var indicadorPorDefectoParameter = indicadorPorDefecto.HasValue ?
                new ObjectParameter("IndicadorPorDefecto", indicadorPorDefecto) :
                new ObjectParameter("IndicadorPorDefecto", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_FavoritoNumero", idFavoritoParameter, numeroFavoritoParameter, mnemotecnicoParameter, descripcionParameter, descripcionExtranjeraParameter, indicadorPorDefectoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_FavoritoNumero> USP_SS_HC_FavoritoNumeroListar(Nullable<int> idFavorito, Nullable<int> numeroFavorito, string mnemotecnico, string descripcion, string descripcionExtranjera, Nullable<int> indicadorPorDefecto, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FavoritoNumero).Assembly);
    
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var numeroFavoritoParameter = numeroFavorito.HasValue ?
                new ObjectParameter("NumeroFavorito", numeroFavorito) :
                new ObjectParameter("NumeroFavorito", typeof(int));
    
            var mnemotecnicoParameter = mnemotecnico != null ?
                new ObjectParameter("Mnemotecnico", mnemotecnico) :
                new ObjectParameter("Mnemotecnico", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var indicadorPorDefectoParameter = indicadorPorDefecto.HasValue ?
                new ObjectParameter("IndicadorPorDefecto", indicadorPorDefecto) :
                new ObjectParameter("IndicadorPorDefecto", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FavoritoNumero>("USP_SS_HC_FavoritoNumeroListar", idFavoritoParameter, numeroFavoritoParameter, mnemotecnicoParameter, descripcionParameter, descripcionExtranjeraParameter, indicadorPorDefectoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_FavoritoNumero> USP_SS_HC_FavoritoNumeroListar(Nullable<int> idFavorito, Nullable<int> numeroFavorito, string mnemotecnico, string descripcion, string descripcionExtranjera, Nullable<int> indicadorPorDefecto, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FavoritoNumero).Assembly);
    
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            var numeroFavoritoParameter = numeroFavorito.HasValue ?
                new ObjectParameter("NumeroFavorito", numeroFavorito) :
                new ObjectParameter("NumeroFavorito", typeof(int));
    
            var mnemotecnicoParameter = mnemotecnico != null ?
                new ObjectParameter("Mnemotecnico", mnemotecnico) :
                new ObjectParameter("Mnemotecnico", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var indicadorPorDefectoParameter = indicadorPorDefecto.HasValue ?
                new ObjectParameter("IndicadorPorDefecto", indicadorPorDefecto) :
                new ObjectParameter("IndicadorPorDefecto", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FavoritoNumero>("USP_SS_HC_FavoritoNumeroListar", mergeOption, idFavoritoParameter, numeroFavoritoParameter, mnemotecnicoParameter, descripcionParameter, descripcionExtranjeraParameter, indicadorPorDefectoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_AsignacionMedico(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> tipoAsignacion, Nullable<int> idAsignacionMedico, Nullable<int> secuencia, Nullable<int> secuenciaReferida, string observaciones, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> estado, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoAsignacionParameter = tipoAsignacion.HasValue ?
                new ObjectParameter("TipoAsignacion", tipoAsignacion) :
                new ObjectParameter("TipoAsignacion", typeof(int));
    
            var idAsignacionMedicoParameter = idAsignacionMedico.HasValue ?
                new ObjectParameter("IdAsignacionMedico", idAsignacionMedico) :
                new ObjectParameter("IdAsignacionMedico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var secuenciaReferidaParameter = secuenciaReferida.HasValue ?
                new ObjectParameter("SecuenciaReferida", secuenciaReferida) :
                new ObjectParameter("SecuenciaReferida", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_AsignacionMedico", unidadReplicacionParameter, idPacienteParameter, tipoAsignacionParameter, idAsignacionMedicoParameter, secuenciaParameter, secuenciaReferidaParameter, observacionesParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, estadoParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_HC_AsignacionMedico> USP_SS_HC_AsignacionMedicoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> tipoAsignacion, Nullable<int> idAsignacionMedico, Nullable<int> secuencia, Nullable<int> secuenciaReferida, string observaciones, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> estado, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_AsignacionMedico).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoAsignacionParameter = tipoAsignacion.HasValue ?
                new ObjectParameter("TipoAsignacion", tipoAsignacion) :
                new ObjectParameter("TipoAsignacion", typeof(int));
    
            var idAsignacionMedicoParameter = idAsignacionMedico.HasValue ?
                new ObjectParameter("IdAsignacionMedico", idAsignacionMedico) :
                new ObjectParameter("IdAsignacionMedico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var secuenciaReferidaParameter = secuenciaReferida.HasValue ?
                new ObjectParameter("SecuenciaReferida", secuenciaReferida) :
                new ObjectParameter("SecuenciaReferida", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AsignacionMedico>("USP_SS_HC_AsignacionMedicoListar", unidadReplicacionParameter, idPacienteParameter, tipoAsignacionParameter, idAsignacionMedicoParameter, secuenciaParameter, secuenciaReferidaParameter, observacionesParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, estadoParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_AsignacionMedico> USP_SS_HC_AsignacionMedicoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> tipoAsignacion, Nullable<int> idAsignacionMedico, Nullable<int> secuencia, Nullable<int> secuenciaReferida, string observaciones, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> estado, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_AsignacionMedico).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoAsignacionParameter = tipoAsignacion.HasValue ?
                new ObjectParameter("TipoAsignacion", tipoAsignacion) :
                new ObjectParameter("TipoAsignacion", typeof(int));
    
            var idAsignacionMedicoParameter = idAsignacionMedico.HasValue ?
                new ObjectParameter("IdAsignacionMedico", idAsignacionMedico) :
                new ObjectParameter("IdAsignacionMedico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var secuenciaReferidaParameter = secuenciaReferida.HasValue ?
                new ObjectParameter("SecuenciaReferida", secuenciaReferida) :
                new ObjectParameter("SecuenciaReferida", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AsignacionMedico>("USP_SS_HC_AsignacionMedicoListar", mergeOption, unidadReplicacionParameter, idPacienteParameter, tipoAsignacionParameter, idAsignacionMedicoParameter, secuenciaParameter, secuenciaReferidaParameter, observacionesParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, estadoParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_SS_HC_ASIGNACIONMEDICO> USP_VW_SS_HC_AsignacionMedicoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> idAsignacionMedico, Nullable<int> tipoAsignacion, string observaciones, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string medico1, string nombrecompleto, string servicio, string codigoHC, string codigoHCAnterior, string codigoOA, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, Nullable<int> secuencia, Nullable<int> secuenciaReferida, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_SS_HC_ASIGNACIONMEDICO).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var idAsignacionMedicoParameter = idAsignacionMedico.HasValue ?
                new ObjectParameter("IdAsignacionMedico", idAsignacionMedico) :
                new ObjectParameter("IdAsignacionMedico", typeof(int));
    
            var tipoAsignacionParameter = tipoAsignacion.HasValue ?
                new ObjectParameter("TipoAsignacion", tipoAsignacion) :
                new ObjectParameter("TipoAsignacion", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var nombrecompletoParameter = nombrecompleto != null ?
                new ObjectParameter("nombrecompleto", nombrecompleto) :
                new ObjectParameter("nombrecompleto", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var secuenciaReferidaParameter = secuenciaReferida.HasValue ?
                new ObjectParameter("SecuenciaReferida", secuenciaReferida) :
                new ObjectParameter("SecuenciaReferida", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_SS_HC_ASIGNACIONMEDICO>("USP_VW_SS_HC_AsignacionMedicoListar", unidadReplicacionParameter, idPacienteParameter, idAsignacionMedicoParameter, tipoAsignacionParameter, observacionesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, medico1Parameter, nombrecompletoParameter, servicioParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoOAParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, secuenciaParameter, secuenciaReferidaParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_SS_HC_ASIGNACIONMEDICO> USP_VW_SS_HC_AsignacionMedicoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> idAsignacionMedico, Nullable<int> tipoAsignacion, string observaciones, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string medico1, string nombrecompleto, string servicio, string codigoHC, string codigoHCAnterior, string codigoOA, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, Nullable<int> secuencia, Nullable<int> secuenciaReferida, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_SS_HC_ASIGNACIONMEDICO).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var idAsignacionMedicoParameter = idAsignacionMedico.HasValue ?
                new ObjectParameter("IdAsignacionMedico", idAsignacionMedico) :
                new ObjectParameter("IdAsignacionMedico", typeof(int));
    
            var tipoAsignacionParameter = tipoAsignacion.HasValue ?
                new ObjectParameter("TipoAsignacion", tipoAsignacion) :
                new ObjectParameter("TipoAsignacion", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var nombrecompletoParameter = nombrecompleto != null ?
                new ObjectParameter("nombrecompleto", nombrecompleto) :
                new ObjectParameter("nombrecompleto", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var secuenciaReferidaParameter = secuenciaReferida.HasValue ?
                new ObjectParameter("SecuenciaReferida", secuenciaReferida) :
                new ObjectParameter("SecuenciaReferida", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_SS_HC_ASIGNACIONMEDICO>("USP_VW_SS_HC_AsignacionMedicoListar", mergeOption, unidadReplicacionParameter, idPacienteParameter, idAsignacionMedicoParameter, tipoAsignacionParameter, observacionesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, medico1Parameter, nombrecompletoParameter, servicioParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoOAParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, secuenciaParameter, secuenciaReferidaParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_VW_SS_HC_AsignacionMedico(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> idAsignacionMedico, Nullable<int> tipoAsignacion, string observaciones, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string medico1, string nombrecompleto, string servicio, string codigoHC, string codigoHCAnterior, string codigoOA, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, Nullable<int> secuencia, Nullable<int> secuenciaReferida, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var idAsignacionMedicoParameter = idAsignacionMedico.HasValue ?
                new ObjectParameter("IdAsignacionMedico", idAsignacionMedico) :
                new ObjectParameter("IdAsignacionMedico", typeof(int));
    
            var tipoAsignacionParameter = tipoAsignacion.HasValue ?
                new ObjectParameter("TipoAsignacion", tipoAsignacion) :
                new ObjectParameter("TipoAsignacion", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var nombrecompletoParameter = nombrecompleto != null ?
                new ObjectParameter("nombrecompleto", nombrecompleto) :
                new ObjectParameter("nombrecompleto", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var secuenciaReferidaParameter = secuenciaReferida.HasValue ?
                new ObjectParameter("SecuenciaReferida", secuenciaReferida) :
                new ObjectParameter("SecuenciaReferida", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_VW_SS_HC_AsignacionMedico", unidadReplicacionParameter, idPacienteParameter, idAsignacionMedicoParameter, tipoAsignacionParameter, observacionesParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, medico1Parameter, nombrecompletoParameter, servicioParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoOAParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, secuenciaParameter, secuenciaReferidaParameter, accionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_VW_TABLAFORMATO_VALIDACION(Nullable<int> idFormato, Nullable<int> formatoNivelID, Nullable<int> idFormatoPadre, string codigoFormato, string codigoFormatoPadre, string descripcionFormato, Nullable<int> tipoFormato, Nullable<int> estadoFormato, Nullable<int> idFavoritoTabla, string nombreTabla, string descripcionTabla, Nullable<int> tipoTabla, Nullable<int> estadoTabla, Nullable<int> idCampo, string nombreCampo, string descripcionCampo, Nullable<int> tipoCampo, Nullable<int> longitud, Nullable<int> decimales, Nullable<int> estadoTablaCampo, Nullable<int> secuenciaCampo, Nullable<int> idSeccionFormato, string valorPorDefecto, Nullable<int> indicadorObligatorio, Nullable<int> indicadorCampoCalculado, string formula, Nullable<int> indicadorValoresVarios, string tablaValoresVarios, Nullable<int> indicadorRango, Nullable<decimal> rangoDesde, Nullable<decimal> rangoHasta, string indicadorReglaNegocio, string reglaNegocio, string observaciones, Nullable<int> estadoFormatoCampo, Nullable<int> idConcepto, Nullable<int> idAgrupadorNivel, Nullable<int> idObjetoAgrupador, Nullable<int> idColumna, Nullable<int> idFila, Nullable<int> idEvento, Nullable<int> idParameterEnvio, Nullable<int> orden, Nullable<int> idAgrupadorNivelPadre, Nullable<int> secuenciaValidacion, Nullable<int> idComponente, Nullable<int> idAtributo, string tipoValidacion, string flagTipoDato, string valorTexto, Nullable<decimal> valorNumerico, Nullable<System.DateTime> valorDate, Nullable<int> secuenciaValidacionRef, Nullable<int> estadoValidacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string nombreComponente, string tipoComponente, Nullable<int> estadoComponente, string nombreAtributo, Nullable<int> estadoAtributo, string idiomaProperty, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var formatoNivelIDParameter = formatoNivelID.HasValue ?
                new ObjectParameter("FormatoNivelID", formatoNivelID) :
                new ObjectParameter("FormatoNivelID", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var codigoFormatoPadreParameter = codigoFormatoPadre != null ?
                new ObjectParameter("CodigoFormatoPadre", codigoFormatoPadre) :
                new ObjectParameter("CodigoFormatoPadre", typeof(string));
    
            var descripcionFormatoParameter = descripcionFormato != null ?
                new ObjectParameter("DescripcionFormato", descripcionFormato) :
                new ObjectParameter("DescripcionFormato", typeof(string));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var estadoFormatoParameter = estadoFormato.HasValue ?
                new ObjectParameter("EstadoFormato", estadoFormato) :
                new ObjectParameter("EstadoFormato", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var descripcionTablaParameter = descripcionTabla != null ?
                new ObjectParameter("DescripcionTabla", descripcionTabla) :
                new ObjectParameter("DescripcionTabla", typeof(string));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(int));
    
            var estadoTablaParameter = estadoTabla.HasValue ?
                new ObjectParameter("EstadoTabla", estadoTabla) :
                new ObjectParameter("EstadoTabla", typeof(int));
    
            var idCampoParameter = idCampo.HasValue ?
                new ObjectParameter("IdCampo", idCampo) :
                new ObjectParameter("IdCampo", typeof(int));
    
            var nombreCampoParameter = nombreCampo != null ?
                new ObjectParameter("NombreCampo", nombreCampo) :
                new ObjectParameter("NombreCampo", typeof(string));
    
            var descripcionCampoParameter = descripcionCampo != null ?
                new ObjectParameter("DescripcionCampo", descripcionCampo) :
                new ObjectParameter("DescripcionCampo", typeof(string));
    
            var tipoCampoParameter = tipoCampo.HasValue ?
                new ObjectParameter("TipoCampo", tipoCampo) :
                new ObjectParameter("TipoCampo", typeof(int));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(int));
    
            var decimalesParameter = decimales.HasValue ?
                new ObjectParameter("Decimales", decimales) :
                new ObjectParameter("Decimales", typeof(int));
    
            var estadoTablaCampoParameter = estadoTablaCampo.HasValue ?
                new ObjectParameter("EstadoTablaCampo", estadoTablaCampo) :
                new ObjectParameter("EstadoTablaCampo", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var idSeccionFormatoParameter = idSeccionFormato.HasValue ?
                new ObjectParameter("IdSeccionFormato", idSeccionFormato) :
                new ObjectParameter("IdSeccionFormato", typeof(int));
    
            var valorPorDefectoParameter = valorPorDefecto != null ?
                new ObjectParameter("ValorPorDefecto", valorPorDefecto) :
                new ObjectParameter("ValorPorDefecto", typeof(string));
    
            var indicadorObligatorioParameter = indicadorObligatorio.HasValue ?
                new ObjectParameter("IndicadorObligatorio", indicadorObligatorio) :
                new ObjectParameter("IndicadorObligatorio", typeof(int));
    
            var indicadorCampoCalculadoParameter = indicadorCampoCalculado.HasValue ?
                new ObjectParameter("IndicadorCampoCalculado", indicadorCampoCalculado) :
                new ObjectParameter("IndicadorCampoCalculado", typeof(int));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var indicadorValoresVariosParameter = indicadorValoresVarios.HasValue ?
                new ObjectParameter("IndicadorValoresVarios", indicadorValoresVarios) :
                new ObjectParameter("IndicadorValoresVarios", typeof(int));
    
            var tablaValoresVariosParameter = tablaValoresVarios != null ?
                new ObjectParameter("TablaValoresVarios", tablaValoresVarios) :
                new ObjectParameter("TablaValoresVarios", typeof(string));
    
            var indicadorRangoParameter = indicadorRango.HasValue ?
                new ObjectParameter("IndicadorRango", indicadorRango) :
                new ObjectParameter("IndicadorRango", typeof(int));
    
            var rangoDesdeParameter = rangoDesde.HasValue ?
                new ObjectParameter("RangoDesde", rangoDesde) :
                new ObjectParameter("RangoDesde", typeof(decimal));
    
            var rangoHastaParameter = rangoHasta.HasValue ?
                new ObjectParameter("RangoHasta", rangoHasta) :
                new ObjectParameter("RangoHasta", typeof(decimal));
    
            var indicadorReglaNegocioParameter = indicadorReglaNegocio != null ?
                new ObjectParameter("IndicadorReglaNegocio", indicadorReglaNegocio) :
                new ObjectParameter("IndicadorReglaNegocio", typeof(string));
    
            var reglaNegocioParameter = reglaNegocio != null ?
                new ObjectParameter("ReglaNegocio", reglaNegocio) :
                new ObjectParameter("ReglaNegocio", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoFormatoCampoParameter = estadoFormatoCampo.HasValue ?
                new ObjectParameter("EstadoFormatoCampo", estadoFormatoCampo) :
                new ObjectParameter("EstadoFormatoCampo", typeof(int));
    
            var idConceptoParameter = idConcepto.HasValue ?
                new ObjectParameter("IdConcepto", idConcepto) :
                new ObjectParameter("IdConcepto", typeof(int));
    
            var idAgrupadorNivelParameter = idAgrupadorNivel.HasValue ?
                new ObjectParameter("IdAgrupadorNivel", idAgrupadorNivel) :
                new ObjectParameter("IdAgrupadorNivel", typeof(int));
    
            var idObjetoAgrupadorParameter = idObjetoAgrupador.HasValue ?
                new ObjectParameter("IdObjetoAgrupador", idObjetoAgrupador) :
                new ObjectParameter("IdObjetoAgrupador", typeof(int));
    
            var idColumnaParameter = idColumna.HasValue ?
                new ObjectParameter("IdColumna", idColumna) :
                new ObjectParameter("IdColumna", typeof(int));
    
            var idFilaParameter = idFila.HasValue ?
                new ObjectParameter("IdFila", idFila) :
                new ObjectParameter("IdFila", typeof(int));
    
            var idEventoParameter = idEvento.HasValue ?
                new ObjectParameter("IdEvento", idEvento) :
                new ObjectParameter("IdEvento", typeof(int));
    
            var idParameterEnvioParameter = idParameterEnvio.HasValue ?
                new ObjectParameter("IdParameterEnvio", idParameterEnvio) :
                new ObjectParameter("IdParameterEnvio", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var idAgrupadorNivelPadreParameter = idAgrupadorNivelPadre.HasValue ?
                new ObjectParameter("IdAgrupadorNivelPadre", idAgrupadorNivelPadre) :
                new ObjectParameter("IdAgrupadorNivelPadre", typeof(int));
    
            var secuenciaValidacionParameter = secuenciaValidacion.HasValue ?
                new ObjectParameter("SecuenciaValidacion", secuenciaValidacion) :
                new ObjectParameter("SecuenciaValidacion", typeof(int));
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var idAtributoParameter = idAtributo.HasValue ?
                new ObjectParameter("IdAtributo", idAtributo) :
                new ObjectParameter("IdAtributo", typeof(int));
    
            var tipoValidacionParameter = tipoValidacion != null ?
                new ObjectParameter("TipoValidacion", tipoValidacion) :
                new ObjectParameter("TipoValidacion", typeof(string));
    
            var flagTipoDatoParameter = flagTipoDato != null ?
                new ObjectParameter("FlagTipoDato", flagTipoDato) :
                new ObjectParameter("FlagTipoDato", typeof(string));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorDateParameter = valorDate.HasValue ?
                new ObjectParameter("ValorDate", valorDate) :
                new ObjectParameter("ValorDate", typeof(System.DateTime));
    
            var secuenciaValidacionRefParameter = secuenciaValidacionRef.HasValue ?
                new ObjectParameter("SecuenciaValidacionRef", secuenciaValidacionRef) :
                new ObjectParameter("SecuenciaValidacionRef", typeof(int));
    
            var estadoValidacionParameter = estadoValidacion.HasValue ?
                new ObjectParameter("EstadoValidacion", estadoValidacion) :
                new ObjectParameter("EstadoValidacion", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var nombreComponenteParameter = nombreComponente != null ?
                new ObjectParameter("NombreComponente", nombreComponente) :
                new ObjectParameter("NombreComponente", typeof(string));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var estadoComponenteParameter = estadoComponente.HasValue ?
                new ObjectParameter("EstadoComponente", estadoComponente) :
                new ObjectParameter("EstadoComponente", typeof(int));
    
            var nombreAtributoParameter = nombreAtributo != null ?
                new ObjectParameter("NombreAtributo", nombreAtributo) :
                new ObjectParameter("NombreAtributo", typeof(string));
    
            var estadoAtributoParameter = estadoAtributo.HasValue ?
                new ObjectParameter("EstadoAtributo", estadoAtributo) :
                new ObjectParameter("EstadoAtributo", typeof(int));
    
            var idiomaPropertyParameter = idiomaProperty != null ?
                new ObjectParameter("IdiomaProperty", idiomaProperty) :
                new ObjectParameter("IdiomaProperty", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_VW_TABLAFORMATO_VALIDACION", idFormatoParameter, formatoNivelIDParameter, idFormatoPadreParameter, codigoFormatoParameter, codigoFormatoPadreParameter, descripcionFormatoParameter, tipoFormatoParameter, estadoFormatoParameter, idFavoritoTablaParameter, nombreTablaParameter, descripcionTablaParameter, tipoTablaParameter, estadoTablaParameter, idCampoParameter, nombreCampoParameter, descripcionCampoParameter, tipoCampoParameter, longitudParameter, decimalesParameter, estadoTablaCampoParameter, secuenciaCampoParameter, idSeccionFormatoParameter, valorPorDefectoParameter, indicadorObligatorioParameter, indicadorCampoCalculadoParameter, formulaParameter, indicadorValoresVariosParameter, tablaValoresVariosParameter, indicadorRangoParameter, rangoDesdeParameter, rangoHastaParameter, indicadorReglaNegocioParameter, reglaNegocioParameter, observacionesParameter, estadoFormatoCampoParameter, idConceptoParameter, idAgrupadorNivelParameter, idObjetoAgrupadorParameter, idColumnaParameter, idFilaParameter, idEventoParameter, idParameterEnvioParameter, ordenParameter, idAgrupadorNivelPadreParameter, secuenciaValidacionParameter, idComponenteParameter, idAtributoParameter, tipoValidacionParameter, flagTipoDatoParameter, valorTextoParameter, valorNumericoParameter, valorDateParameter, secuenciaValidacionRefParameter, estadoValidacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, nombreComponenteParameter, tipoComponenteParameter, estadoComponenteParameter, nombreAtributoParameter, estadoAtributoParameter, idiomaPropertyParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<VW_SS_HC_TABLAFORMATO_VALIDACION> USP_SS_HC_VW_TABLAFORMATO_VALIDACION_LISTAR(Nullable<int> idFormato, Nullable<int> formatoNivelID, Nullable<int> idFormatoPadre, string codigoFormato, string codigoFormatoPadre, string descripcionFormato, Nullable<int> tipoFormato, Nullable<int> estadoFormato, Nullable<int> idFavoritoTabla, string nombreTabla, string descripcionTabla, Nullable<int> tipoTabla, Nullable<int> estadoTabla, Nullable<int> idCampo, string nombreCampo, string descripcionCampo, Nullable<int> tipoCampo, Nullable<int> longitud, Nullable<int> decimales, Nullable<int> estadoTablaCampo, Nullable<int> secuenciaCampo, Nullable<int> idSeccionFormato, string valorPorDefecto, Nullable<int> indicadorObligatorio, Nullable<int> indicadorCampoCalculado, string formula, Nullable<int> indicadorValoresVarios, string tablaValoresVarios, Nullable<int> indicadorRango, Nullable<decimal> rangoDesde, Nullable<decimal> rangoHasta, string indicadorReglaNegocio, string reglaNegocio, string observaciones, Nullable<int> estadoFormatoCampo, Nullable<int> idConcepto, Nullable<int> idAgrupadorNivel, Nullable<int> idObjetoAgrupador, Nullable<int> idColumna, Nullable<int> idFila, Nullable<int> idEvento, Nullable<int> idParameterEnvio, Nullable<int> orden, Nullable<int> idAgrupadorNivelPadre, Nullable<int> secuenciaValidacion, Nullable<int> idComponente, Nullable<int> idAtributo, string tipoValidacion, string flagTipoDato, string valorTexto, Nullable<decimal> valorNumerico, Nullable<System.DateTime> valorDate, Nullable<int> secuenciaValidacionRef, Nullable<int> estadoValidacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string nombreComponente, string tipoComponente, Nullable<int> estadoComponente, string nombreAtributo, Nullable<int> estadoAtributo, string idiomaProperty, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_SS_HC_TABLAFORMATO_VALIDACION).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var formatoNivelIDParameter = formatoNivelID.HasValue ?
                new ObjectParameter("FormatoNivelID", formatoNivelID) :
                new ObjectParameter("FormatoNivelID", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var codigoFormatoPadreParameter = codigoFormatoPadre != null ?
                new ObjectParameter("CodigoFormatoPadre", codigoFormatoPadre) :
                new ObjectParameter("CodigoFormatoPadre", typeof(string));
    
            var descripcionFormatoParameter = descripcionFormato != null ?
                new ObjectParameter("DescripcionFormato", descripcionFormato) :
                new ObjectParameter("DescripcionFormato", typeof(string));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var estadoFormatoParameter = estadoFormato.HasValue ?
                new ObjectParameter("EstadoFormato", estadoFormato) :
                new ObjectParameter("EstadoFormato", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var descripcionTablaParameter = descripcionTabla != null ?
                new ObjectParameter("DescripcionTabla", descripcionTabla) :
                new ObjectParameter("DescripcionTabla", typeof(string));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(int));
    
            var estadoTablaParameter = estadoTabla.HasValue ?
                new ObjectParameter("EstadoTabla", estadoTabla) :
                new ObjectParameter("EstadoTabla", typeof(int));
    
            var idCampoParameter = idCampo.HasValue ?
                new ObjectParameter("IdCampo", idCampo) :
                new ObjectParameter("IdCampo", typeof(int));
    
            var nombreCampoParameter = nombreCampo != null ?
                new ObjectParameter("NombreCampo", nombreCampo) :
                new ObjectParameter("NombreCampo", typeof(string));
    
            var descripcionCampoParameter = descripcionCampo != null ?
                new ObjectParameter("DescripcionCampo", descripcionCampo) :
                new ObjectParameter("DescripcionCampo", typeof(string));
    
            var tipoCampoParameter = tipoCampo.HasValue ?
                new ObjectParameter("TipoCampo", tipoCampo) :
                new ObjectParameter("TipoCampo", typeof(int));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(int));
    
            var decimalesParameter = decimales.HasValue ?
                new ObjectParameter("Decimales", decimales) :
                new ObjectParameter("Decimales", typeof(int));
    
            var estadoTablaCampoParameter = estadoTablaCampo.HasValue ?
                new ObjectParameter("EstadoTablaCampo", estadoTablaCampo) :
                new ObjectParameter("EstadoTablaCampo", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var idSeccionFormatoParameter = idSeccionFormato.HasValue ?
                new ObjectParameter("IdSeccionFormato", idSeccionFormato) :
                new ObjectParameter("IdSeccionFormato", typeof(int));
    
            var valorPorDefectoParameter = valorPorDefecto != null ?
                new ObjectParameter("ValorPorDefecto", valorPorDefecto) :
                new ObjectParameter("ValorPorDefecto", typeof(string));
    
            var indicadorObligatorioParameter = indicadorObligatorio.HasValue ?
                new ObjectParameter("IndicadorObligatorio", indicadorObligatorio) :
                new ObjectParameter("IndicadorObligatorio", typeof(int));
    
            var indicadorCampoCalculadoParameter = indicadorCampoCalculado.HasValue ?
                new ObjectParameter("IndicadorCampoCalculado", indicadorCampoCalculado) :
                new ObjectParameter("IndicadorCampoCalculado", typeof(int));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var indicadorValoresVariosParameter = indicadorValoresVarios.HasValue ?
                new ObjectParameter("IndicadorValoresVarios", indicadorValoresVarios) :
                new ObjectParameter("IndicadorValoresVarios", typeof(int));
    
            var tablaValoresVariosParameter = tablaValoresVarios != null ?
                new ObjectParameter("TablaValoresVarios", tablaValoresVarios) :
                new ObjectParameter("TablaValoresVarios", typeof(string));
    
            var indicadorRangoParameter = indicadorRango.HasValue ?
                new ObjectParameter("IndicadorRango", indicadorRango) :
                new ObjectParameter("IndicadorRango", typeof(int));
    
            var rangoDesdeParameter = rangoDesde.HasValue ?
                new ObjectParameter("RangoDesde", rangoDesde) :
                new ObjectParameter("RangoDesde", typeof(decimal));
    
            var rangoHastaParameter = rangoHasta.HasValue ?
                new ObjectParameter("RangoHasta", rangoHasta) :
                new ObjectParameter("RangoHasta", typeof(decimal));
    
            var indicadorReglaNegocioParameter = indicadorReglaNegocio != null ?
                new ObjectParameter("IndicadorReglaNegocio", indicadorReglaNegocio) :
                new ObjectParameter("IndicadorReglaNegocio", typeof(string));
    
            var reglaNegocioParameter = reglaNegocio != null ?
                new ObjectParameter("ReglaNegocio", reglaNegocio) :
                new ObjectParameter("ReglaNegocio", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoFormatoCampoParameter = estadoFormatoCampo.HasValue ?
                new ObjectParameter("EstadoFormatoCampo", estadoFormatoCampo) :
                new ObjectParameter("EstadoFormatoCampo", typeof(int));
    
            var idConceptoParameter = idConcepto.HasValue ?
                new ObjectParameter("IdConcepto", idConcepto) :
                new ObjectParameter("IdConcepto", typeof(int));
    
            var idAgrupadorNivelParameter = idAgrupadorNivel.HasValue ?
                new ObjectParameter("IdAgrupadorNivel", idAgrupadorNivel) :
                new ObjectParameter("IdAgrupadorNivel", typeof(int));
    
            var idObjetoAgrupadorParameter = idObjetoAgrupador.HasValue ?
                new ObjectParameter("IdObjetoAgrupador", idObjetoAgrupador) :
                new ObjectParameter("IdObjetoAgrupador", typeof(int));
    
            var idColumnaParameter = idColumna.HasValue ?
                new ObjectParameter("IdColumna", idColumna) :
                new ObjectParameter("IdColumna", typeof(int));
    
            var idFilaParameter = idFila.HasValue ?
                new ObjectParameter("IdFila", idFila) :
                new ObjectParameter("IdFila", typeof(int));
    
            var idEventoParameter = idEvento.HasValue ?
                new ObjectParameter("IdEvento", idEvento) :
                new ObjectParameter("IdEvento", typeof(int));
    
            var idParameterEnvioParameter = idParameterEnvio.HasValue ?
                new ObjectParameter("IdParameterEnvio", idParameterEnvio) :
                new ObjectParameter("IdParameterEnvio", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var idAgrupadorNivelPadreParameter = idAgrupadorNivelPadre.HasValue ?
                new ObjectParameter("IdAgrupadorNivelPadre", idAgrupadorNivelPadre) :
                new ObjectParameter("IdAgrupadorNivelPadre", typeof(int));
    
            var secuenciaValidacionParameter = secuenciaValidacion.HasValue ?
                new ObjectParameter("SecuenciaValidacion", secuenciaValidacion) :
                new ObjectParameter("SecuenciaValidacion", typeof(int));
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var idAtributoParameter = idAtributo.HasValue ?
                new ObjectParameter("IdAtributo", idAtributo) :
                new ObjectParameter("IdAtributo", typeof(int));
    
            var tipoValidacionParameter = tipoValidacion != null ?
                new ObjectParameter("TipoValidacion", tipoValidacion) :
                new ObjectParameter("TipoValidacion", typeof(string));
    
            var flagTipoDatoParameter = flagTipoDato != null ?
                new ObjectParameter("FlagTipoDato", flagTipoDato) :
                new ObjectParameter("FlagTipoDato", typeof(string));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorDateParameter = valorDate.HasValue ?
                new ObjectParameter("ValorDate", valorDate) :
                new ObjectParameter("ValorDate", typeof(System.DateTime));
    
            var secuenciaValidacionRefParameter = secuenciaValidacionRef.HasValue ?
                new ObjectParameter("SecuenciaValidacionRef", secuenciaValidacionRef) :
                new ObjectParameter("SecuenciaValidacionRef", typeof(int));
    
            var estadoValidacionParameter = estadoValidacion.HasValue ?
                new ObjectParameter("EstadoValidacion", estadoValidacion) :
                new ObjectParameter("EstadoValidacion", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var nombreComponenteParameter = nombreComponente != null ?
                new ObjectParameter("NombreComponente", nombreComponente) :
                new ObjectParameter("NombreComponente", typeof(string));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var estadoComponenteParameter = estadoComponente.HasValue ?
                new ObjectParameter("EstadoComponente", estadoComponente) :
                new ObjectParameter("EstadoComponente", typeof(int));
    
            var nombreAtributoParameter = nombreAtributo != null ?
                new ObjectParameter("NombreAtributo", nombreAtributo) :
                new ObjectParameter("NombreAtributo", typeof(string));
    
            var estadoAtributoParameter = estadoAtributo.HasValue ?
                new ObjectParameter("EstadoAtributo", estadoAtributo) :
                new ObjectParameter("EstadoAtributo", typeof(int));
    
            var idiomaPropertyParameter = idiomaProperty != null ?
                new ObjectParameter("IdiomaProperty", idiomaProperty) :
                new ObjectParameter("IdiomaProperty", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_SS_HC_TABLAFORMATO_VALIDACION>("USP_SS_HC_VW_TABLAFORMATO_VALIDACION_LISTAR", idFormatoParameter, formatoNivelIDParameter, idFormatoPadreParameter, codigoFormatoParameter, codigoFormatoPadreParameter, descripcionFormatoParameter, tipoFormatoParameter, estadoFormatoParameter, idFavoritoTablaParameter, nombreTablaParameter, descripcionTablaParameter, tipoTablaParameter, estadoTablaParameter, idCampoParameter, nombreCampoParameter, descripcionCampoParameter, tipoCampoParameter, longitudParameter, decimalesParameter, estadoTablaCampoParameter, secuenciaCampoParameter, idSeccionFormatoParameter, valorPorDefectoParameter, indicadorObligatorioParameter, indicadorCampoCalculadoParameter, formulaParameter, indicadorValoresVariosParameter, tablaValoresVariosParameter, indicadorRangoParameter, rangoDesdeParameter, rangoHastaParameter, indicadorReglaNegocioParameter, reglaNegocioParameter, observacionesParameter, estadoFormatoCampoParameter, idConceptoParameter, idAgrupadorNivelParameter, idObjetoAgrupadorParameter, idColumnaParameter, idFilaParameter, idEventoParameter, idParameterEnvioParameter, ordenParameter, idAgrupadorNivelPadreParameter, secuenciaValidacionParameter, idComponenteParameter, idAtributoParameter, tipoValidacionParameter, flagTipoDatoParameter, valorTextoParameter, valorNumericoParameter, valorDateParameter, secuenciaValidacionRefParameter, estadoValidacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, nombreComponenteParameter, tipoComponenteParameter, estadoComponenteParameter, nombreAtributoParameter, estadoAtributoParameter, idiomaPropertyParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<VW_SS_HC_TABLAFORMATO_VALIDACION> USP_SS_HC_VW_TABLAFORMATO_VALIDACION_LISTAR(Nullable<int> idFormato, Nullable<int> formatoNivelID, Nullable<int> idFormatoPadre, string codigoFormato, string codigoFormatoPadre, string descripcionFormato, Nullable<int> tipoFormato, Nullable<int> estadoFormato, Nullable<int> idFavoritoTabla, string nombreTabla, string descripcionTabla, Nullable<int> tipoTabla, Nullable<int> estadoTabla, Nullable<int> idCampo, string nombreCampo, string descripcionCampo, Nullable<int> tipoCampo, Nullable<int> longitud, Nullable<int> decimales, Nullable<int> estadoTablaCampo, Nullable<int> secuenciaCampo, Nullable<int> idSeccionFormato, string valorPorDefecto, Nullable<int> indicadorObligatorio, Nullable<int> indicadorCampoCalculado, string formula, Nullable<int> indicadorValoresVarios, string tablaValoresVarios, Nullable<int> indicadorRango, Nullable<decimal> rangoDesde, Nullable<decimal> rangoHasta, string indicadorReglaNegocio, string reglaNegocio, string observaciones, Nullable<int> estadoFormatoCampo, Nullable<int> idConcepto, Nullable<int> idAgrupadorNivel, Nullable<int> idObjetoAgrupador, Nullable<int> idColumna, Nullable<int> idFila, Nullable<int> idEvento, Nullable<int> idParameterEnvio, Nullable<int> orden, Nullable<int> idAgrupadorNivelPadre, Nullable<int> secuenciaValidacion, Nullable<int> idComponente, Nullable<int> idAtributo, string tipoValidacion, string flagTipoDato, string valorTexto, Nullable<decimal> valorNumerico, Nullable<System.DateTime> valorDate, Nullable<int> secuenciaValidacionRef, Nullable<int> estadoValidacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string nombreComponente, string tipoComponente, Nullable<int> estadoComponente, string nombreAtributo, Nullable<int> estadoAtributo, string idiomaProperty, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_SS_HC_TABLAFORMATO_VALIDACION).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var formatoNivelIDParameter = formatoNivelID.HasValue ?
                new ObjectParameter("FormatoNivelID", formatoNivelID) :
                new ObjectParameter("FormatoNivelID", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var codigoFormatoPadreParameter = codigoFormatoPadre != null ?
                new ObjectParameter("CodigoFormatoPadre", codigoFormatoPadre) :
                new ObjectParameter("CodigoFormatoPadre", typeof(string));
    
            var descripcionFormatoParameter = descripcionFormato != null ?
                new ObjectParameter("DescripcionFormato", descripcionFormato) :
                new ObjectParameter("DescripcionFormato", typeof(string));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var estadoFormatoParameter = estadoFormato.HasValue ?
                new ObjectParameter("EstadoFormato", estadoFormato) :
                new ObjectParameter("EstadoFormato", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var descripcionTablaParameter = descripcionTabla != null ?
                new ObjectParameter("DescripcionTabla", descripcionTabla) :
                new ObjectParameter("DescripcionTabla", typeof(string));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(int));
    
            var estadoTablaParameter = estadoTabla.HasValue ?
                new ObjectParameter("EstadoTabla", estadoTabla) :
                new ObjectParameter("EstadoTabla", typeof(int));
    
            var idCampoParameter = idCampo.HasValue ?
                new ObjectParameter("IdCampo", idCampo) :
                new ObjectParameter("IdCampo", typeof(int));
    
            var nombreCampoParameter = nombreCampo != null ?
                new ObjectParameter("NombreCampo", nombreCampo) :
                new ObjectParameter("NombreCampo", typeof(string));
    
            var descripcionCampoParameter = descripcionCampo != null ?
                new ObjectParameter("DescripcionCampo", descripcionCampo) :
                new ObjectParameter("DescripcionCampo", typeof(string));
    
            var tipoCampoParameter = tipoCampo.HasValue ?
                new ObjectParameter("TipoCampo", tipoCampo) :
                new ObjectParameter("TipoCampo", typeof(int));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(int));
    
            var decimalesParameter = decimales.HasValue ?
                new ObjectParameter("Decimales", decimales) :
                new ObjectParameter("Decimales", typeof(int));
    
            var estadoTablaCampoParameter = estadoTablaCampo.HasValue ?
                new ObjectParameter("EstadoTablaCampo", estadoTablaCampo) :
                new ObjectParameter("EstadoTablaCampo", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var idSeccionFormatoParameter = idSeccionFormato.HasValue ?
                new ObjectParameter("IdSeccionFormato", idSeccionFormato) :
                new ObjectParameter("IdSeccionFormato", typeof(int));
    
            var valorPorDefectoParameter = valorPorDefecto != null ?
                new ObjectParameter("ValorPorDefecto", valorPorDefecto) :
                new ObjectParameter("ValorPorDefecto", typeof(string));
    
            var indicadorObligatorioParameter = indicadorObligatorio.HasValue ?
                new ObjectParameter("IndicadorObligatorio", indicadorObligatorio) :
                new ObjectParameter("IndicadorObligatorio", typeof(int));
    
            var indicadorCampoCalculadoParameter = indicadorCampoCalculado.HasValue ?
                new ObjectParameter("IndicadorCampoCalculado", indicadorCampoCalculado) :
                new ObjectParameter("IndicadorCampoCalculado", typeof(int));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var indicadorValoresVariosParameter = indicadorValoresVarios.HasValue ?
                new ObjectParameter("IndicadorValoresVarios", indicadorValoresVarios) :
                new ObjectParameter("IndicadorValoresVarios", typeof(int));
    
            var tablaValoresVariosParameter = tablaValoresVarios != null ?
                new ObjectParameter("TablaValoresVarios", tablaValoresVarios) :
                new ObjectParameter("TablaValoresVarios", typeof(string));
    
            var indicadorRangoParameter = indicadorRango.HasValue ?
                new ObjectParameter("IndicadorRango", indicadorRango) :
                new ObjectParameter("IndicadorRango", typeof(int));
    
            var rangoDesdeParameter = rangoDesde.HasValue ?
                new ObjectParameter("RangoDesde", rangoDesde) :
                new ObjectParameter("RangoDesde", typeof(decimal));
    
            var rangoHastaParameter = rangoHasta.HasValue ?
                new ObjectParameter("RangoHasta", rangoHasta) :
                new ObjectParameter("RangoHasta", typeof(decimal));
    
            var indicadorReglaNegocioParameter = indicadorReglaNegocio != null ?
                new ObjectParameter("IndicadorReglaNegocio", indicadorReglaNegocio) :
                new ObjectParameter("IndicadorReglaNegocio", typeof(string));
    
            var reglaNegocioParameter = reglaNegocio != null ?
                new ObjectParameter("ReglaNegocio", reglaNegocio) :
                new ObjectParameter("ReglaNegocio", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var estadoFormatoCampoParameter = estadoFormatoCampo.HasValue ?
                new ObjectParameter("EstadoFormatoCampo", estadoFormatoCampo) :
                new ObjectParameter("EstadoFormatoCampo", typeof(int));
    
            var idConceptoParameter = idConcepto.HasValue ?
                new ObjectParameter("IdConcepto", idConcepto) :
                new ObjectParameter("IdConcepto", typeof(int));
    
            var idAgrupadorNivelParameter = idAgrupadorNivel.HasValue ?
                new ObjectParameter("IdAgrupadorNivel", idAgrupadorNivel) :
                new ObjectParameter("IdAgrupadorNivel", typeof(int));
    
            var idObjetoAgrupadorParameter = idObjetoAgrupador.HasValue ?
                new ObjectParameter("IdObjetoAgrupador", idObjetoAgrupador) :
                new ObjectParameter("IdObjetoAgrupador", typeof(int));
    
            var idColumnaParameter = idColumna.HasValue ?
                new ObjectParameter("IdColumna", idColumna) :
                new ObjectParameter("IdColumna", typeof(int));
    
            var idFilaParameter = idFila.HasValue ?
                new ObjectParameter("IdFila", idFila) :
                new ObjectParameter("IdFila", typeof(int));
    
            var idEventoParameter = idEvento.HasValue ?
                new ObjectParameter("IdEvento", idEvento) :
                new ObjectParameter("IdEvento", typeof(int));
    
            var idParameterEnvioParameter = idParameterEnvio.HasValue ?
                new ObjectParameter("IdParameterEnvio", idParameterEnvio) :
                new ObjectParameter("IdParameterEnvio", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var idAgrupadorNivelPadreParameter = idAgrupadorNivelPadre.HasValue ?
                new ObjectParameter("IdAgrupadorNivelPadre", idAgrupadorNivelPadre) :
                new ObjectParameter("IdAgrupadorNivelPadre", typeof(int));
    
            var secuenciaValidacionParameter = secuenciaValidacion.HasValue ?
                new ObjectParameter("SecuenciaValidacion", secuenciaValidacion) :
                new ObjectParameter("SecuenciaValidacion", typeof(int));
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var idAtributoParameter = idAtributo.HasValue ?
                new ObjectParameter("IdAtributo", idAtributo) :
                new ObjectParameter("IdAtributo", typeof(int));
    
            var tipoValidacionParameter = tipoValidacion != null ?
                new ObjectParameter("TipoValidacion", tipoValidacion) :
                new ObjectParameter("TipoValidacion", typeof(string));
    
            var flagTipoDatoParameter = flagTipoDato != null ?
                new ObjectParameter("FlagTipoDato", flagTipoDato) :
                new ObjectParameter("FlagTipoDato", typeof(string));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorDateParameter = valorDate.HasValue ?
                new ObjectParameter("ValorDate", valorDate) :
                new ObjectParameter("ValorDate", typeof(System.DateTime));
    
            var secuenciaValidacionRefParameter = secuenciaValidacionRef.HasValue ?
                new ObjectParameter("SecuenciaValidacionRef", secuenciaValidacionRef) :
                new ObjectParameter("SecuenciaValidacionRef", typeof(int));
    
            var estadoValidacionParameter = estadoValidacion.HasValue ?
                new ObjectParameter("EstadoValidacion", estadoValidacion) :
                new ObjectParameter("EstadoValidacion", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var nombreComponenteParameter = nombreComponente != null ?
                new ObjectParameter("NombreComponente", nombreComponente) :
                new ObjectParameter("NombreComponente", typeof(string));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var estadoComponenteParameter = estadoComponente.HasValue ?
                new ObjectParameter("EstadoComponente", estadoComponente) :
                new ObjectParameter("EstadoComponente", typeof(int));
    
            var nombreAtributoParameter = nombreAtributo != null ?
                new ObjectParameter("NombreAtributo", nombreAtributo) :
                new ObjectParameter("NombreAtributo", typeof(string));
    
            var estadoAtributoParameter = estadoAtributo.HasValue ?
                new ObjectParameter("EstadoAtributo", estadoAtributo) :
                new ObjectParameter("EstadoAtributo", typeof(int));
    
            var idiomaPropertyParameter = idiomaProperty != null ?
                new ObjectParameter("IdiomaProperty", idiomaProperty) :
                new ObjectParameter("IdiomaProperty", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_SS_HC_TABLAFORMATO_VALIDACION>("USP_SS_HC_VW_TABLAFORMATO_VALIDACION_LISTAR", mergeOption, idFormatoParameter, formatoNivelIDParameter, idFormatoPadreParameter, codigoFormatoParameter, codigoFormatoPadreParameter, descripcionFormatoParameter, tipoFormatoParameter, estadoFormatoParameter, idFavoritoTablaParameter, nombreTablaParameter, descripcionTablaParameter, tipoTablaParameter, estadoTablaParameter, idCampoParameter, nombreCampoParameter, descripcionCampoParameter, tipoCampoParameter, longitudParameter, decimalesParameter, estadoTablaCampoParameter, secuenciaCampoParameter, idSeccionFormatoParameter, valorPorDefectoParameter, indicadorObligatorioParameter, indicadorCampoCalculadoParameter, formulaParameter, indicadorValoresVariosParameter, tablaValoresVariosParameter, indicadorRangoParameter, rangoDesdeParameter, rangoHastaParameter, indicadorReglaNegocioParameter, reglaNegocioParameter, observacionesParameter, estadoFormatoCampoParameter, idConceptoParameter, idAgrupadorNivelParameter, idObjetoAgrupadorParameter, idColumnaParameter, idFilaParameter, idEventoParameter, idParameterEnvioParameter, ordenParameter, idAgrupadorNivelPadreParameter, secuenciaValidacionParameter, idComponenteParameter, idAtributoParameter, tipoValidacionParameter, flagTipoDatoParameter, valorTextoParameter, valorNumericoParameter, valorDateParameter, secuenciaValidacionRefParameter, estadoValidacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, nombreComponenteParameter, tipoComponenteParameter, estadoComponenteParameter, nombreAtributoParameter, estadoAtributoParameter, idiomaPropertyParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_AD_OrdenAtencionPreexistencia(Nullable<int> secuencial, Nullable<int> idOrdenAtencion, Nullable<int> idDiagnostico, string codigoDiagnostico, string nombreDiagnostico, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var codigoDiagnosticoParameter = codigoDiagnostico != null ?
                new ObjectParameter("CodigoDiagnostico", codigoDiagnostico) :
                new ObjectParameter("CodigoDiagnostico", typeof(string));
    
            var nombreDiagnosticoParameter = nombreDiagnostico != null ?
                new ObjectParameter("NombreDiagnostico", nombreDiagnostico) :
                new ObjectParameter("NombreDiagnostico", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_AD_OrdenAtencionPreexistencia", secuencialParameter, idOrdenAtencionParameter, idDiagnosticoParameter, codigoDiagnosticoParameter, nombreDiagnosticoParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_AD_OrdenAtencionPreexistencia> USP_SS_AD_OrdenAtencionPreexistenciaListar(Nullable<int> secuencial, Nullable<int> idOrdenAtencion, Nullable<int> idDiagnostico, string codigoDiagnostico, string nombreDiagnostico, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_AD_OrdenAtencionPreexistencia).Assembly);
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var codigoDiagnosticoParameter = codigoDiagnostico != null ?
                new ObjectParameter("CodigoDiagnostico", codigoDiagnostico) :
                new ObjectParameter("CodigoDiagnostico", typeof(string));
    
            var nombreDiagnosticoParameter = nombreDiagnostico != null ?
                new ObjectParameter("NombreDiagnostico", nombreDiagnostico) :
                new ObjectParameter("NombreDiagnostico", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_AD_OrdenAtencionPreexistencia>("USP_SS_AD_OrdenAtencionPreexistenciaListar", secuencialParameter, idOrdenAtencionParameter, idDiagnosticoParameter, codigoDiagnosticoParameter, nombreDiagnosticoParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_AD_OrdenAtencionPreexistencia> USP_SS_AD_OrdenAtencionPreexistenciaListar(Nullable<int> secuencial, Nullable<int> idOrdenAtencion, Nullable<int> idDiagnostico, string codigoDiagnostico, string nombreDiagnostico, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_AD_OrdenAtencionPreexistencia).Assembly);
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var codigoDiagnosticoParameter = codigoDiagnostico != null ?
                new ObjectParameter("CodigoDiagnostico", codigoDiagnostico) :
                new ObjectParameter("CodigoDiagnostico", typeof(string));
    
            var nombreDiagnosticoParameter = nombreDiagnostico != null ?
                new ObjectParameter("NombreDiagnostico", nombreDiagnostico) :
                new ObjectParameter("NombreDiagnostico", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_AD_OrdenAtencionPreexistencia>("USP_SS_AD_OrdenAtencionPreexistenciaListar", mergeOption, secuencialParameter, idOrdenAtencionParameter, idDiagnosticoParameter, codigoDiagnosticoParameter, nombreDiagnosticoParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_ControlValidacion(Nullable<int> idFormato, Nullable<int> secuenciaCampo, Nullable<int> secuenciaValidacion, Nullable<int> idComponente, Nullable<int> idAtributo, string idioma, string tipoValidacion, string flagTipoDato, string valorTexto, Nullable<decimal> valorNumerico, Nullable<System.DateTime> valorDate, Nullable<int> secuenciaValidacionRef, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idSeccionFormato)
        {
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var secuenciaValidacionParameter = secuenciaValidacion.HasValue ?
                new ObjectParameter("SecuenciaValidacion", secuenciaValidacion) :
                new ObjectParameter("SecuenciaValidacion", typeof(int));
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var idAtributoParameter = idAtributo.HasValue ?
                new ObjectParameter("IdAtributo", idAtributo) :
                new ObjectParameter("IdAtributo", typeof(int));
    
            var idiomaParameter = idioma != null ?
                new ObjectParameter("Idioma", idioma) :
                new ObjectParameter("Idioma", typeof(string));
    
            var tipoValidacionParameter = tipoValidacion != null ?
                new ObjectParameter("TipoValidacion", tipoValidacion) :
                new ObjectParameter("TipoValidacion", typeof(string));
    
            var flagTipoDatoParameter = flagTipoDato != null ?
                new ObjectParameter("FlagTipoDato", flagTipoDato) :
                new ObjectParameter("FlagTipoDato", typeof(string));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorDateParameter = valorDate.HasValue ?
                new ObjectParameter("ValorDate", valorDate) :
                new ObjectParameter("ValorDate", typeof(System.DateTime));
    
            var secuenciaValidacionRefParameter = secuenciaValidacionRef.HasValue ?
                new ObjectParameter("SecuenciaValidacionRef", secuenciaValidacionRef) :
                new ObjectParameter("SecuenciaValidacionRef", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idSeccionFormatoParameter = idSeccionFormato.HasValue ?
                new ObjectParameter("IdSeccionFormato", idSeccionFormato) :
                new ObjectParameter("IdSeccionFormato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_ControlValidacion", idFormatoParameter, secuenciaCampoParameter, secuenciaValidacionParameter, idComponenteParameter, idAtributoParameter, idiomaParameter, tipoValidacionParameter, flagTipoDatoParameter, valorTextoParameter, valorNumericoParameter, valorDateParameter, secuenciaValidacionRefParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idSeccionFormatoParameter);
        }
    
        public virtual ObjectResult<SS_HC_ControlValidacion> USP_SS_HC_ControlValidacion_Lista(Nullable<int> idFormato, Nullable<int> secuenciaCampo, Nullable<int> secuenciaValidacion, Nullable<int> idComponente, Nullable<int> idAtributo, string idioma, string tipoValidacion, string flagTipoDato, string valorTexto, Nullable<decimal> valorNumerico, Nullable<System.DateTime> valorDate, Nullable<int> secuenciaValidacionRef, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idSeccionFormato, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ControlValidacion).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var secuenciaValidacionParameter = secuenciaValidacion.HasValue ?
                new ObjectParameter("SecuenciaValidacion", secuenciaValidacion) :
                new ObjectParameter("SecuenciaValidacion", typeof(int));
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var idAtributoParameter = idAtributo.HasValue ?
                new ObjectParameter("IdAtributo", idAtributo) :
                new ObjectParameter("IdAtributo", typeof(int));
    
            var idiomaParameter = idioma != null ?
                new ObjectParameter("Idioma", idioma) :
                new ObjectParameter("Idioma", typeof(string));
    
            var tipoValidacionParameter = tipoValidacion != null ?
                new ObjectParameter("TipoValidacion", tipoValidacion) :
                new ObjectParameter("TipoValidacion", typeof(string));
    
            var flagTipoDatoParameter = flagTipoDato != null ?
                new ObjectParameter("FlagTipoDato", flagTipoDato) :
                new ObjectParameter("FlagTipoDato", typeof(string));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorDateParameter = valorDate.HasValue ?
                new ObjectParameter("ValorDate", valorDate) :
                new ObjectParameter("ValorDate", typeof(System.DateTime));
    
            var secuenciaValidacionRefParameter = secuenciaValidacionRef.HasValue ?
                new ObjectParameter("SecuenciaValidacionRef", secuenciaValidacionRef) :
                new ObjectParameter("SecuenciaValidacionRef", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idSeccionFormatoParameter = idSeccionFormato.HasValue ?
                new ObjectParameter("IdSeccionFormato", idSeccionFormato) :
                new ObjectParameter("IdSeccionFormato", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ControlValidacion>("USP_SS_HC_ControlValidacion_Lista", idFormatoParameter, secuenciaCampoParameter, secuenciaValidacionParameter, idComponenteParameter, idAtributoParameter, idiomaParameter, tipoValidacionParameter, flagTipoDatoParameter, valorTextoParameter, valorNumericoParameter, valorDateParameter, secuenciaValidacionRefParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idSeccionFormatoParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_ControlValidacion> USP_SS_HC_ControlValidacion_Lista(Nullable<int> idFormato, Nullable<int> secuenciaCampo, Nullable<int> secuenciaValidacion, Nullable<int> idComponente, Nullable<int> idAtributo, string idioma, string tipoValidacion, string flagTipoDato, string valorTexto, Nullable<decimal> valorNumerico, Nullable<System.DateTime> valorDate, Nullable<int> secuenciaValidacionRef, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idSeccionFormato, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ControlValidacion).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var secuenciaValidacionParameter = secuenciaValidacion.HasValue ?
                new ObjectParameter("SecuenciaValidacion", secuenciaValidacion) :
                new ObjectParameter("SecuenciaValidacion", typeof(int));
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var idAtributoParameter = idAtributo.HasValue ?
                new ObjectParameter("IdAtributo", idAtributo) :
                new ObjectParameter("IdAtributo", typeof(int));
    
            var idiomaParameter = idioma != null ?
                new ObjectParameter("Idioma", idioma) :
                new ObjectParameter("Idioma", typeof(string));
    
            var tipoValidacionParameter = tipoValidacion != null ?
                new ObjectParameter("TipoValidacion", tipoValidacion) :
                new ObjectParameter("TipoValidacion", typeof(string));
    
            var flagTipoDatoParameter = flagTipoDato != null ?
                new ObjectParameter("FlagTipoDato", flagTipoDato) :
                new ObjectParameter("FlagTipoDato", typeof(string));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorDateParameter = valorDate.HasValue ?
                new ObjectParameter("ValorDate", valorDate) :
                new ObjectParameter("ValorDate", typeof(System.DateTime));
    
            var secuenciaValidacionRefParameter = secuenciaValidacionRef.HasValue ?
                new ObjectParameter("SecuenciaValidacionRef", secuenciaValidacionRef) :
                new ObjectParameter("SecuenciaValidacionRef", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var idSeccionFormatoParameter = idSeccionFormato.HasValue ?
                new ObjectParameter("IdSeccionFormato", idSeccionFormato) :
                new ObjectParameter("IdSeccionFormato", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ControlValidacion>("USP_SS_HC_ControlValidacion_Lista", mergeOption, idFormatoParameter, secuenciaCampoParameter, secuenciaValidacionParameter, idComponenteParameter, idAtributoParameter, idiomaParameter, tipoValidacionParameter, flagTipoDatoParameter, valorTextoParameter, valorNumericoParameter, valorDateParameter, secuenciaValidacionRefParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idSeccionFormatoParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_ControlAtributo(Nullable<int> idAtributo, string nombre, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var idAtributoParameter = idAtributo.HasValue ?
                new ObjectParameter("IdAtributo", idAtributo) :
                new ObjectParameter("IdAtributo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_ControlAtributo", idAtributoParameter, nombreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_ControlAtributo> USP_SS_HC_ControlAtributo_Lista(Nullable<int> idAtributo, string nombre, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ControlAtributo).Assembly);
    
            var idAtributoParameter = idAtributo.HasValue ?
                new ObjectParameter("IdAtributo", idAtributo) :
                new ObjectParameter("IdAtributo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ControlAtributo>("USP_SS_HC_ControlAtributo_Lista", idAtributoParameter, nombreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_ControlAtributo> USP_SS_HC_ControlAtributo_Lista(Nullable<int> idAtributo, string nombre, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ControlAtributo).Assembly);
    
            var idAtributoParameter = idAtributo.HasValue ?
                new ObjectParameter("IdAtributo", idAtributo) :
                new ObjectParameter("IdAtributo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ControlAtributo>("USP_SS_HC_ControlAtributo_Lista", mergeOption, idAtributoParameter, nombreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_ControlComponente(Nullable<int> idComponente, string nombre, string tipo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_ControlComponente", idComponenteParameter, nombreParameter, tipoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_ControlComponente> USP_SS_HC_ControlComponente_Lista(Nullable<int> idComponente, string nombre, string tipo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ControlComponente).Assembly);
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ControlComponente>("USP_SS_HC_ControlComponente_Lista", idComponenteParameter, nombreParameter, tipoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_ControlComponente> USP_SS_HC_ControlComponente_Lista(Nullable<int> idComponente, string nombre, string tipo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ControlComponente).Assembly);
    
            var idComponenteParameter = idComponente.HasValue ?
                new ObjectParameter("IdComponente", idComponente) :
                new ObjectParameter("IdComponente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ControlComponente>("USP_SS_HC_ControlComponente_Lista", mergeOption, idComponenteParameter, nombreParameter, tipoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_VW_VALIDA(Nullable<int> idFormato, string valorPorDefecto, string nombreComponente, string tipoComponente, string nombreAtributo, Nullable<int> secuenciaCampo, Nullable<int> secuenciaValidacion, Nullable<int> estado, string accion, string version)
        {
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var valorPorDefectoParameter = valorPorDefecto != null ?
                new ObjectParameter("ValorPorDefecto", valorPorDefecto) :
                new ObjectParameter("ValorPorDefecto", typeof(string));
    
            var nombreComponenteParameter = nombreComponente != null ?
                new ObjectParameter("NombreComponente", nombreComponente) :
                new ObjectParameter("NombreComponente", typeof(string));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var nombreAtributoParameter = nombreAtributo != null ?
                new ObjectParameter("NombreAtributo", nombreAtributo) :
                new ObjectParameter("NombreAtributo", typeof(string));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var secuenciaValidacionParameter = secuenciaValidacion.HasValue ?
                new ObjectParameter("SecuenciaValidacion", secuenciaValidacion) :
                new ObjectParameter("SecuenciaValidacion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_VW_VALIDA", idFormatoParameter, valorPorDefectoParameter, nombreComponenteParameter, tipoComponenteParameter, nombreAtributoParameter, secuenciaCampoParameter, secuenciaValidacionParameter, estadoParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_VW_VALIDA> USP_SS_VW_VALIDA_LISTA(Nullable<int> idFormato, string valorPorDefecto, string nombreComponente, string tipoComponente, string nombreAtributo, Nullable<int> secuenciaCampo, Nullable<int> secuenciaValidacion, Nullable<int> estado, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_VW_VALIDA).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var valorPorDefectoParameter = valorPorDefecto != null ?
                new ObjectParameter("ValorPorDefecto", valorPorDefecto) :
                new ObjectParameter("ValorPorDefecto", typeof(string));
    
            var nombreComponenteParameter = nombreComponente != null ?
                new ObjectParameter("NombreComponente", nombreComponente) :
                new ObjectParameter("NombreComponente", typeof(string));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var nombreAtributoParameter = nombreAtributo != null ?
                new ObjectParameter("NombreAtributo", nombreAtributo) :
                new ObjectParameter("NombreAtributo", typeof(string));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var secuenciaValidacionParameter = secuenciaValidacion.HasValue ?
                new ObjectParameter("SecuenciaValidacion", secuenciaValidacion) :
                new ObjectParameter("SecuenciaValidacion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_VW_VALIDA>("USP_SS_VW_VALIDA_LISTA", idFormatoParameter, valorPorDefectoParameter, nombreComponenteParameter, tipoComponenteParameter, nombreAtributoParameter, secuenciaCampoParameter, secuenciaValidacionParameter, estadoParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_VW_VALIDA> USP_SS_VW_VALIDA_LISTA(Nullable<int> idFormato, string valorPorDefecto, string nombreComponente, string tipoComponente, string nombreAtributo, Nullable<int> secuenciaCampo, Nullable<int> secuenciaValidacion, Nullable<int> estado, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_VW_VALIDA).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var valorPorDefectoParameter = valorPorDefecto != null ?
                new ObjectParameter("ValorPorDefecto", valorPorDefecto) :
                new ObjectParameter("ValorPorDefecto", typeof(string));
    
            var nombreComponenteParameter = nombreComponente != null ?
                new ObjectParameter("NombreComponente", nombreComponente) :
                new ObjectParameter("NombreComponente", typeof(string));
    
            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));
    
            var nombreAtributoParameter = nombreAtributo != null ?
                new ObjectParameter("NombreAtributo", nombreAtributo) :
                new ObjectParameter("NombreAtributo", typeof(string));
    
            var secuenciaCampoParameter = secuenciaCampo.HasValue ?
                new ObjectParameter("SecuenciaCampo", secuenciaCampo) :
                new ObjectParameter("SecuenciaCampo", typeof(int));
    
            var secuenciaValidacionParameter = secuenciaValidacion.HasValue ?
                new ObjectParameter("SecuenciaValidacion", secuenciaValidacion) :
                new ObjectParameter("SecuenciaValidacion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_VW_VALIDA>("USP_SS_VW_VALIDA_LISTA", mergeOption, idFormatoParameter, valorPorDefectoParameter, nombreComponenteParameter, tipoComponenteParameter, nombreAtributoParameter, secuenciaCampoParameter, secuenciaValidacionParameter, estadoParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SHC_VW_ATENCIONPACIENTE_GENERAL(string tipoListado, string citaTipo, Nullable<System.DateTime> citaFecha, string origen, string nombreEspecialidad, string tipoPacienteNombre, string codigoOA, string cama, string tipoOrdenAtencionNombre, string codigoHC, string pacienteNombre, string medicoNombre, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> idHospitalizacion, Nullable<int> idCita, Nullable<int> idPaciente, Nullable<int> tipoPaciente, Nullable<int> tipoAtencion, Nullable<int> idEspecialidad, Nullable<int> idMedico, Nullable<int> tipoOrdenAtencion, string componente, string compania, string sucursal, string estadoPersona, Nullable<int> estadoEpiClinico, string unidadReplicacion, string unidadReplicacionEC, Nullable<long> idEpisodioAtencion, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<int> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> estadoEpiAtencion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string codigoHCAnterior, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            var tipoListadoParameter = tipoListado != null ?
                new ObjectParameter("tipoListado", tipoListado) :
                new ObjectParameter("tipoListado", typeof(string));
    
            var citaTipoParameter = citaTipo != null ?
                new ObjectParameter("CitaTipo", citaTipo) :
                new ObjectParameter("CitaTipo", typeof(string));
    
            var citaFechaParameter = citaFecha.HasValue ?
                new ObjectParameter("CitaFecha", citaFecha) :
                new ObjectParameter("CitaFecha", typeof(System.DateTime));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var nombreEspecialidadParameter = nombreEspecialidad != null ?
                new ObjectParameter("NombreEspecialidad", nombreEspecialidad) :
                new ObjectParameter("NombreEspecialidad", typeof(string));
    
            var tipoPacienteNombreParameter = tipoPacienteNombre != null ?
                new ObjectParameter("TipoPacienteNombre", tipoPacienteNombre) :
                new ObjectParameter("TipoPacienteNombre", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var camaParameter = cama != null ?
                new ObjectParameter("Cama", cama) :
                new ObjectParameter("Cama", typeof(string));
    
            var tipoOrdenAtencionNombreParameter = tipoOrdenAtencionNombre != null ?
                new ObjectParameter("TipoOrdenAtencionNombre", tipoOrdenAtencionNombre) :
                new ObjectParameter("TipoOrdenAtencionNombre", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var pacienteNombreParameter = pacienteNombre != null ?
                new ObjectParameter("PacienteNombre", pacienteNombre) :
                new ObjectParameter("PacienteNombre", typeof(string));
    
            var medicoNombreParameter = medicoNombre != null ?
                new ObjectParameter("MedicoNombre", medicoNombre) :
                new ObjectParameter("MedicoNombre", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var idHospitalizacionParameter = idHospitalizacion.HasValue ?
                new ObjectParameter("IdHospitalizacion", idHospitalizacion) :
                new ObjectParameter("IdHospitalizacion", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var estadoEpiClinicoParameter = estadoEpiClinico.HasValue ?
                new ObjectParameter("EstadoEpiClinico", estadoEpiClinico) :
                new ObjectParameter("EstadoEpiClinico", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(int));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var estadoEpiAtencionParameter = estadoEpiAtencion.HasValue ?
                new ObjectParameter("EstadoEpiAtencion", estadoEpiAtencion) :
                new ObjectParameter("EstadoEpiAtencion", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SHC_VW_ATENCIONPACIENTE_GENERAL", tipoListadoParameter, citaTipoParameter, citaFechaParameter, origenParameter, nombreEspecialidadParameter, tipoPacienteNombreParameter, codigoOAParameter, camaParameter, tipoOrdenAtencionNombreParameter, codigoHCParameter, pacienteNombreParameter, medicoNombreParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, idHospitalizacionParameter, idCitaParameter, idPacienteParameter, tipoPacienteParameter, tipoAtencionParameter, idEspecialidadParameter, idMedicoParameter, tipoOrdenAtencionParameter, componenteParameter, companiaParameter, sucursalParameter, estadoPersonaParameter, estadoEpiClinicoParameter, unidadReplicacionParameter, unidadReplicacionECParameter, idEpisodioAtencionParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, estadoEpiAtencionParameter, fechaInicioParameter, fechaFinParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, codigoHCAnteriorParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<VW_FORMATORECURSOCAMPO> USP_VW_SS_HC_FORMATORECURSOCAMPO_LISTAR(Nullable<int> iDFORMATO, string cODIGOFORMATO, string dESCRIPCIONFORMATO, Nullable<int> sECUENCIACAMPO, string dESCRIPFORMATOCAMPO, string fORMULA, Nullable<int> iDFAVORITOTABLA, string dESCRIPCIONTABLA, string dESCRIPTABLACAMPO, Nullable<int> eSTADO, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_FORMATORECURSOCAMPO).Assembly);
    
            var iDFORMATOParameter = iDFORMATO.HasValue ?
                new ObjectParameter("IDFORMATO", iDFORMATO) :
                new ObjectParameter("IDFORMATO", typeof(int));
    
            var cODIGOFORMATOParameter = cODIGOFORMATO != null ?
                new ObjectParameter("CODIGOFORMATO", cODIGOFORMATO) :
                new ObjectParameter("CODIGOFORMATO", typeof(string));
    
            var dESCRIPCIONFORMATOParameter = dESCRIPCIONFORMATO != null ?
                new ObjectParameter("DESCRIPCIONFORMATO", dESCRIPCIONFORMATO) :
                new ObjectParameter("DESCRIPCIONFORMATO", typeof(string));
    
            var sECUENCIACAMPOParameter = sECUENCIACAMPO.HasValue ?
                new ObjectParameter("SECUENCIACAMPO", sECUENCIACAMPO) :
                new ObjectParameter("SECUENCIACAMPO", typeof(int));
    
            var dESCRIPFORMATOCAMPOParameter = dESCRIPFORMATOCAMPO != null ?
                new ObjectParameter("DESCRIPFORMATOCAMPO", dESCRIPFORMATOCAMPO) :
                new ObjectParameter("DESCRIPFORMATOCAMPO", typeof(string));
    
            var fORMULAParameter = fORMULA != null ?
                new ObjectParameter("FORMULA", fORMULA) :
                new ObjectParameter("FORMULA", typeof(string));
    
            var iDFAVORITOTABLAParameter = iDFAVORITOTABLA.HasValue ?
                new ObjectParameter("IDFAVORITOTABLA", iDFAVORITOTABLA) :
                new ObjectParameter("IDFAVORITOTABLA", typeof(int));
    
            var dESCRIPCIONTABLAParameter = dESCRIPCIONTABLA != null ?
                new ObjectParameter("DESCRIPCIONTABLA", dESCRIPCIONTABLA) :
                new ObjectParameter("DESCRIPCIONTABLA", typeof(string));
    
            var dESCRIPTABLACAMPOParameter = dESCRIPTABLACAMPO != null ?
                new ObjectParameter("DESCRIPTABLACAMPO", dESCRIPTABLACAMPO) :
                new ObjectParameter("DESCRIPTABLACAMPO", typeof(string));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_FORMATORECURSOCAMPO>("USP_VW_SS_HC_FORMATORECURSOCAMPO_LISTAR", iDFORMATOParameter, cODIGOFORMATOParameter, dESCRIPCIONFORMATOParameter, sECUENCIACAMPOParameter, dESCRIPFORMATOCAMPOParameter, fORMULAParameter, iDFAVORITOTABLAParameter, dESCRIPCIONTABLAParameter, dESCRIPTABLACAMPOParameter, eSTADOParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_FORMATORECURSOCAMPO> USP_VW_SS_HC_FORMATORECURSOCAMPO_LISTAR(Nullable<int> iDFORMATO, string cODIGOFORMATO, string dESCRIPCIONFORMATO, Nullable<int> sECUENCIACAMPO, string dESCRIPFORMATOCAMPO, string fORMULA, Nullable<int> iDFAVORITOTABLA, string dESCRIPCIONTABLA, string dESCRIPTABLACAMPO, Nullable<int> eSTADO, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_FORMATORECURSOCAMPO).Assembly);
    
            var iDFORMATOParameter = iDFORMATO.HasValue ?
                new ObjectParameter("IDFORMATO", iDFORMATO) :
                new ObjectParameter("IDFORMATO", typeof(int));
    
            var cODIGOFORMATOParameter = cODIGOFORMATO != null ?
                new ObjectParameter("CODIGOFORMATO", cODIGOFORMATO) :
                new ObjectParameter("CODIGOFORMATO", typeof(string));
    
            var dESCRIPCIONFORMATOParameter = dESCRIPCIONFORMATO != null ?
                new ObjectParameter("DESCRIPCIONFORMATO", dESCRIPCIONFORMATO) :
                new ObjectParameter("DESCRIPCIONFORMATO", typeof(string));
    
            var sECUENCIACAMPOParameter = sECUENCIACAMPO.HasValue ?
                new ObjectParameter("SECUENCIACAMPO", sECUENCIACAMPO) :
                new ObjectParameter("SECUENCIACAMPO", typeof(int));
    
            var dESCRIPFORMATOCAMPOParameter = dESCRIPFORMATOCAMPO != null ?
                new ObjectParameter("DESCRIPFORMATOCAMPO", dESCRIPFORMATOCAMPO) :
                new ObjectParameter("DESCRIPFORMATOCAMPO", typeof(string));
    
            var fORMULAParameter = fORMULA != null ?
                new ObjectParameter("FORMULA", fORMULA) :
                new ObjectParameter("FORMULA", typeof(string));
    
            var iDFAVORITOTABLAParameter = iDFAVORITOTABLA.HasValue ?
                new ObjectParameter("IDFAVORITOTABLA", iDFAVORITOTABLA) :
                new ObjectParameter("IDFAVORITOTABLA", typeof(int));
    
            var dESCRIPCIONTABLAParameter = dESCRIPCIONTABLA != null ?
                new ObjectParameter("DESCRIPCIONTABLA", dESCRIPCIONTABLA) :
                new ObjectParameter("DESCRIPCIONTABLA", typeof(string));
    
            var dESCRIPTABLACAMPOParameter = dESCRIPTABLACAMPO != null ?
                new ObjectParameter("DESCRIPTABLACAMPO", dESCRIPTABLACAMPO) :
                new ObjectParameter("DESCRIPTABLACAMPO", typeof(string));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_FORMATORECURSOCAMPO>("USP_VW_SS_HC_FORMATORECURSOCAMPO_LISTAR", mergeOption, iDFORMATOParameter, cODIGOFORMATOParameter, dESCRIPCIONFORMATOParameter, sECUENCIACAMPOParameter, dESCRIPFORMATOCAMPOParameter, fORMULAParameter, iDFAVORITOTABLAParameter, dESCRIPCIONTABLAParameter, dESCRIPTABLACAMPOParameter, eSTADOParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_VW_SS_HC_FORMATORECURSOCAMPO_Mantenimiento(Nullable<int> iDFORMATO, string cODIGOFORMATO, string dESCRIPCIONFORMATO, Nullable<int> sECUENCIACAMPO, string dESCRIPFORMATOCAMPO, string fORMULA, Nullable<int> iDFAVORITOTABLA, string dESCRIPCIONTABLA, string dESCRIPTABLACAMPO, Nullable<int> eSTADO, string aCCION)
        {
            var iDFORMATOParameter = iDFORMATO.HasValue ?
                new ObjectParameter("IDFORMATO", iDFORMATO) :
                new ObjectParameter("IDFORMATO", typeof(int));
    
            var cODIGOFORMATOParameter = cODIGOFORMATO != null ?
                new ObjectParameter("CODIGOFORMATO", cODIGOFORMATO) :
                new ObjectParameter("CODIGOFORMATO", typeof(string));
    
            var dESCRIPCIONFORMATOParameter = dESCRIPCIONFORMATO != null ?
                new ObjectParameter("DESCRIPCIONFORMATO", dESCRIPCIONFORMATO) :
                new ObjectParameter("DESCRIPCIONFORMATO", typeof(string));
    
            var sECUENCIACAMPOParameter = sECUENCIACAMPO.HasValue ?
                new ObjectParameter("SECUENCIACAMPO", sECUENCIACAMPO) :
                new ObjectParameter("SECUENCIACAMPO", typeof(int));
    
            var dESCRIPFORMATOCAMPOParameter = dESCRIPFORMATOCAMPO != null ?
                new ObjectParameter("DESCRIPFORMATOCAMPO", dESCRIPFORMATOCAMPO) :
                new ObjectParameter("DESCRIPFORMATOCAMPO", typeof(string));
    
            var fORMULAParameter = fORMULA != null ?
                new ObjectParameter("FORMULA", fORMULA) :
                new ObjectParameter("FORMULA", typeof(string));
    
            var iDFAVORITOTABLAParameter = iDFAVORITOTABLA.HasValue ?
                new ObjectParameter("IDFAVORITOTABLA", iDFAVORITOTABLA) :
                new ObjectParameter("IDFAVORITOTABLA", typeof(int));
    
            var dESCRIPCIONTABLAParameter = dESCRIPCIONTABLA != null ?
                new ObjectParameter("DESCRIPCIONTABLA", dESCRIPCIONTABLA) :
                new ObjectParameter("DESCRIPCIONTABLA", typeof(string));
    
            var dESCRIPTABLACAMPOParameter = dESCRIPTABLACAMPO != null ?
                new ObjectParameter("DESCRIPTABLACAMPO", dESCRIPTABLACAMPO) :
                new ObjectParameter("DESCRIPTABLACAMPO", typeof(string));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_VW_SS_HC_FORMATORECURSOCAMPO_Mantenimiento", iDFORMATOParameter, cODIGOFORMATOParameter, dESCRIPCIONFORMATOParameter, sECUENCIACAMPOParameter, dESCRIPFORMATOCAMPOParameter, fORMULAParameter, iDFAVORITOTABLAParameter, dESCRIPCIONTABLAParameter, dESCRIPTABLACAMPOParameter, eSTADOParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_VW_FORMATOCAMPO(Nullable<int> iDFORMATO, string cODIGOFORMATO, string dESCRIPCIONFORMATO, Nullable<int> sECUENCIACAMPO, string dESCRIPFORMATOCAMPO, string fORMULA, string modulo, Nullable<int> indicadorObligatorio, Nullable<int> eSTADO, string aCCION, string vERSION)
        {
            var iDFORMATOParameter = iDFORMATO.HasValue ?
                new ObjectParameter("IDFORMATO", iDFORMATO) :
                new ObjectParameter("IDFORMATO", typeof(int));
    
            var cODIGOFORMATOParameter = cODIGOFORMATO != null ?
                new ObjectParameter("CODIGOFORMATO", cODIGOFORMATO) :
                new ObjectParameter("CODIGOFORMATO", typeof(string));
    
            var dESCRIPCIONFORMATOParameter = dESCRIPCIONFORMATO != null ?
                new ObjectParameter("DESCRIPCIONFORMATO", dESCRIPCIONFORMATO) :
                new ObjectParameter("DESCRIPCIONFORMATO", typeof(string));
    
            var sECUENCIACAMPOParameter = sECUENCIACAMPO.HasValue ?
                new ObjectParameter("SECUENCIACAMPO", sECUENCIACAMPO) :
                new ObjectParameter("SECUENCIACAMPO", typeof(int));
    
            var dESCRIPFORMATOCAMPOParameter = dESCRIPFORMATOCAMPO != null ?
                new ObjectParameter("DESCRIPFORMATOCAMPO", dESCRIPFORMATOCAMPO) :
                new ObjectParameter("DESCRIPFORMATOCAMPO", typeof(string));
    
            var fORMULAParameter = fORMULA != null ?
                new ObjectParameter("FORMULA", fORMULA) :
                new ObjectParameter("FORMULA", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var indicadorObligatorioParameter = indicadorObligatorio.HasValue ?
                new ObjectParameter("IndicadorObligatorio", indicadorObligatorio) :
                new ObjectParameter("IndicadorObligatorio", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var vERSIONParameter = vERSION != null ?
                new ObjectParameter("VERSION", vERSION) :
                new ObjectParameter("VERSION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_VW_FORMATOCAMPO", iDFORMATOParameter, cODIGOFORMATOParameter, dESCRIPCIONFORMATOParameter, sECUENCIACAMPOParameter, dESCRIPFORMATOCAMPOParameter, fORMULAParameter, moduloParameter, indicadorObligatorioParameter, eSTADOParameter, aCCIONParameter, vERSIONParameter);
        }
    
        public virtual ObjectResult<VW_FORMATOCAMPO> USP_VW_FORMATOCAMPO_LISTA(Nullable<int> iDFORMATO, string cODIGOFORMATO, string dESCRIPCIONFORMATO, Nullable<int> sECUENCIACAMPO, string dESCRIPFORMATOCAMPO, string fORMULA, string modulo, Nullable<int> indicadorObligatorio, Nullable<int> eSTADO, string aCCION, string vERSION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_FORMATOCAMPO).Assembly);
    
            var iDFORMATOParameter = iDFORMATO.HasValue ?
                new ObjectParameter("IDFORMATO", iDFORMATO) :
                new ObjectParameter("IDFORMATO", typeof(int));
    
            var cODIGOFORMATOParameter = cODIGOFORMATO != null ?
                new ObjectParameter("CODIGOFORMATO", cODIGOFORMATO) :
                new ObjectParameter("CODIGOFORMATO", typeof(string));
    
            var dESCRIPCIONFORMATOParameter = dESCRIPCIONFORMATO != null ?
                new ObjectParameter("DESCRIPCIONFORMATO", dESCRIPCIONFORMATO) :
                new ObjectParameter("DESCRIPCIONFORMATO", typeof(string));
    
            var sECUENCIACAMPOParameter = sECUENCIACAMPO.HasValue ?
                new ObjectParameter("SECUENCIACAMPO", sECUENCIACAMPO) :
                new ObjectParameter("SECUENCIACAMPO", typeof(int));
    
            var dESCRIPFORMATOCAMPOParameter = dESCRIPFORMATOCAMPO != null ?
                new ObjectParameter("DESCRIPFORMATOCAMPO", dESCRIPFORMATOCAMPO) :
                new ObjectParameter("DESCRIPFORMATOCAMPO", typeof(string));
    
            var fORMULAParameter = fORMULA != null ?
                new ObjectParameter("FORMULA", fORMULA) :
                new ObjectParameter("FORMULA", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var indicadorObligatorioParameter = indicadorObligatorio.HasValue ?
                new ObjectParameter("IndicadorObligatorio", indicadorObligatorio) :
                new ObjectParameter("IndicadorObligatorio", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var vERSIONParameter = vERSION != null ?
                new ObjectParameter("VERSION", vERSION) :
                new ObjectParameter("VERSION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_FORMATOCAMPO>("USP_VW_FORMATOCAMPO_LISTA", iDFORMATOParameter, cODIGOFORMATOParameter, dESCRIPCIONFORMATOParameter, sECUENCIACAMPOParameter, dESCRIPFORMATOCAMPOParameter, fORMULAParameter, moduloParameter, indicadorObligatorioParameter, eSTADOParameter, aCCIONParameter, vERSIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_FORMATOCAMPO> USP_VW_FORMATOCAMPO_LISTA(Nullable<int> iDFORMATO, string cODIGOFORMATO, string dESCRIPCIONFORMATO, Nullable<int> sECUENCIACAMPO, string dESCRIPFORMATOCAMPO, string fORMULA, string modulo, Nullable<int> indicadorObligatorio, Nullable<int> eSTADO, string aCCION, string vERSION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_FORMATOCAMPO).Assembly);
    
            var iDFORMATOParameter = iDFORMATO.HasValue ?
                new ObjectParameter("IDFORMATO", iDFORMATO) :
                new ObjectParameter("IDFORMATO", typeof(int));
    
            var cODIGOFORMATOParameter = cODIGOFORMATO != null ?
                new ObjectParameter("CODIGOFORMATO", cODIGOFORMATO) :
                new ObjectParameter("CODIGOFORMATO", typeof(string));
    
            var dESCRIPCIONFORMATOParameter = dESCRIPCIONFORMATO != null ?
                new ObjectParameter("DESCRIPCIONFORMATO", dESCRIPCIONFORMATO) :
                new ObjectParameter("DESCRIPCIONFORMATO", typeof(string));
    
            var sECUENCIACAMPOParameter = sECUENCIACAMPO.HasValue ?
                new ObjectParameter("SECUENCIACAMPO", sECUENCIACAMPO) :
                new ObjectParameter("SECUENCIACAMPO", typeof(int));
    
            var dESCRIPFORMATOCAMPOParameter = dESCRIPFORMATOCAMPO != null ?
                new ObjectParameter("DESCRIPFORMATOCAMPO", dESCRIPFORMATOCAMPO) :
                new ObjectParameter("DESCRIPFORMATOCAMPO", typeof(string));
    
            var fORMULAParameter = fORMULA != null ?
                new ObjectParameter("FORMULA", fORMULA) :
                new ObjectParameter("FORMULA", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var indicadorObligatorioParameter = indicadorObligatorio.HasValue ?
                new ObjectParameter("IndicadorObligatorio", indicadorObligatorio) :
                new ObjectParameter("IndicadorObligatorio", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var vERSIONParameter = vERSION != null ?
                new ObjectParameter("VERSION", vERSION) :
                new ObjectParameter("VERSION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_FORMATOCAMPO>("USP_VW_FORMATOCAMPO_LISTA", mergeOption, iDFORMATOParameter, cODIGOFORMATOParameter, dESCRIPCIONFORMATOParameter, sECUENCIACAMPOParameter, dESCRIPFORMATOCAMPOParameter, fORMULAParameter, moduloParameter, indicadorObligatorioParameter, eSTADOParameter, aCCIONParameter, vERSIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_SY_SeguridadAutorizaciones(string aplicacionCodigo, string grupo, string concepto, string usuario, string masterBrowseFlag, string masterUpdateFlag, string masterApproveFlag, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, Nullable<int> indAplicaSalud, Nullable<int> idAgente, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var masterBrowseFlagParameter = masterBrowseFlag != null ?
                new ObjectParameter("MasterBrowseFlag", masterBrowseFlag) :
                new ObjectParameter("MasterBrowseFlag", typeof(string));
    
            var masterUpdateFlagParameter = masterUpdateFlag != null ?
                new ObjectParameter("MasterUpdateFlag", masterUpdateFlag) :
                new ObjectParameter("MasterUpdateFlag", typeof(string));
    
            var masterApproveFlagParameter = masterApproveFlag != null ?
                new ObjectParameter("MasterApproveFlag", masterApproveFlag) :
                new ObjectParameter("MasterApproveFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var indAplicaSaludParameter = indAplicaSalud.HasValue ?
                new ObjectParameter("IndAplicaSalud", indAplicaSalud) :
                new ObjectParameter("IndAplicaSalud", typeof(int));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_SY_SeguridadAutorizaciones", aplicacionCodigoParameter, grupoParameter, conceptoParameter, usuarioParameter, masterBrowseFlagParameter, masterUpdateFlagParameter, masterApproveFlagParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, indAplicaSaludParameter, idAgenteParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SY_SeguridadAutorizaciones> USP_SS_HC_SY_SeguridadAutorizaciones_LISTAR(string aplicacionCodigo, string grupo, string concepto, string usuario, string masterBrowseFlag, string masterUpdateFlag, string masterApproveFlag, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, Nullable<int> indAplicaSalud, Nullable<int> idAgente, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SY_SeguridadAutorizaciones).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var masterBrowseFlagParameter = masterBrowseFlag != null ?
                new ObjectParameter("MasterBrowseFlag", masterBrowseFlag) :
                new ObjectParameter("MasterBrowseFlag", typeof(string));
    
            var masterUpdateFlagParameter = masterUpdateFlag != null ?
                new ObjectParameter("MasterUpdateFlag", masterUpdateFlag) :
                new ObjectParameter("MasterUpdateFlag", typeof(string));
    
            var masterApproveFlagParameter = masterApproveFlag != null ?
                new ObjectParameter("MasterApproveFlag", masterApproveFlag) :
                new ObjectParameter("MasterApproveFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var indAplicaSaludParameter = indAplicaSalud.HasValue ?
                new ObjectParameter("IndAplicaSalud", indAplicaSalud) :
                new ObjectParameter("IndAplicaSalud", typeof(int));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SY_SeguridadAutorizaciones>("USP_SS_HC_SY_SeguridadAutorizaciones_LISTAR", aplicacionCodigoParameter, grupoParameter, conceptoParameter, usuarioParameter, masterBrowseFlagParameter, masterUpdateFlagParameter, masterApproveFlagParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, indAplicaSaludParameter, idAgenteParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SY_SeguridadAutorizaciones> USP_SS_HC_SY_SeguridadAutorizaciones_LISTAR(string aplicacionCodigo, string grupo, string concepto, string usuario, string masterBrowseFlag, string masterUpdateFlag, string masterApproveFlag, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, Nullable<int> indAplicaSalud, Nullable<int> idAgente, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SY_SeguridadAutorizaciones).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("Concepto", concepto) :
                new ObjectParameter("Concepto", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var masterBrowseFlagParameter = masterBrowseFlag != null ?
                new ObjectParameter("MasterBrowseFlag", masterBrowseFlag) :
                new ObjectParameter("MasterBrowseFlag", typeof(string));
    
            var masterUpdateFlagParameter = masterUpdateFlag != null ?
                new ObjectParameter("MasterUpdateFlag", masterUpdateFlag) :
                new ObjectParameter("MasterUpdateFlag", typeof(string));
    
            var masterApproveFlagParameter = masterApproveFlag != null ?
                new ObjectParameter("MasterApproveFlag", masterApproveFlag) :
                new ObjectParameter("MasterApproveFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var indAplicaSaludParameter = indAplicaSalud.HasValue ?
                new ObjectParameter("IndAplicaSalud", indAplicaSalud) :
                new ObjectParameter("IndAplicaSalud", typeof(int));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SY_SeguridadAutorizaciones>("USP_SS_HC_SY_SeguridadAutorizaciones_LISTAR", mergeOption, aplicacionCodigoParameter, grupoParameter, conceptoParameter, usuarioParameter, masterBrowseFlagParameter, masterUpdateFlagParameter, masterApproveFlagParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, indAplicaSaludParameter, idAgenteParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_Formato> USP_SS_HC_Formato_Lista(Nullable<int> idFormato, Nullable<int> idFormatoPadre, string codigoFormato, string codigoFormatoPadre, string cadenaRecursividad, Nullable<int> nivel, string descripcion, string descripcionExtranjera, Nullable<int> tipoFormato, string versionFormatoFijo, Nullable<int> idFormatoDinamico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string modulo, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Formato).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var codigoFormatoPadreParameter = codigoFormatoPadre != null ?
                new ObjectParameter("CodigoFormatoPadre", codigoFormatoPadre) :
                new ObjectParameter("CodigoFormatoPadre", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var versionFormatoFijoParameter = versionFormatoFijo != null ?
                new ObjectParameter("VersionFormatoFijo", versionFormatoFijo) :
                new ObjectParameter("VersionFormatoFijo", typeof(string));
    
            var idFormatoDinamicoParameter = idFormatoDinamico.HasValue ?
                new ObjectParameter("IdFormatoDinamico", idFormatoDinamico) :
                new ObjectParameter("IdFormatoDinamico", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Formato>("USP_SS_HC_Formato_Lista", idFormatoParameter, idFormatoPadreParameter, codigoFormatoParameter, codigoFormatoPadreParameter, cadenaRecursividadParameter, nivelParameter, descripcionParameter, descripcionExtranjeraParameter, tipoFormatoParameter, versionFormatoFijoParameter, idFormatoDinamicoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, moduloParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_Formato> USP_SS_HC_Formato_Lista(Nullable<int> idFormato, Nullable<int> idFormatoPadre, string codigoFormato, string codigoFormatoPadre, string cadenaRecursividad, Nullable<int> nivel, string descripcion, string descripcionExtranjera, Nullable<int> tipoFormato, string versionFormatoFijo, Nullable<int> idFormatoDinamico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string modulo, string accion, string version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Formato).Assembly);
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var codigoFormatoPadreParameter = codigoFormatoPadre != null ?
                new ObjectParameter("CodigoFormatoPadre", codigoFormatoPadre) :
                new ObjectParameter("CodigoFormatoPadre", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var versionFormatoFijoParameter = versionFormatoFijo != null ?
                new ObjectParameter("VersionFormatoFijo", versionFormatoFijo) :
                new ObjectParameter("VersionFormatoFijo", typeof(string));
    
            var idFormatoDinamicoParameter = idFormatoDinamico.HasValue ?
                new ObjectParameter("IdFormatoDinamico", idFormatoDinamico) :
                new ObjectParameter("IdFormatoDinamico", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Formato>("USP_SS_HC_Formato_Lista", mergeOption, idFormatoParameter, idFormatoPadreParameter, codigoFormatoParameter, codigoFormatoPadreParameter, cadenaRecursividadParameter, nivelParameter, descripcionParameter, descripcionExtranjeraParameter, tipoFormatoParameter, versionFormatoFijoParameter, idFormatoDinamicoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, moduloParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_AUDITROYAL(Nullable<long> auditID, string hostName, string aplicacion, string modulo, string usuario, string type, string tableName, Nullable<long> tableIdValue, string primaryKeyData, string oldData, string newData, Nullable<System.DateTime> updateDate, string vistaData, string accion, Nullable<System.DateTime> version)
        {
            var auditIDParameter = auditID.HasValue ?
                new ObjectParameter("AuditID", auditID) :
                new ObjectParameter("AuditID", typeof(long));
    
            var hostNameParameter = hostName != null ?
                new ObjectParameter("HostName", hostName) :
                new ObjectParameter("HostName", typeof(string));
    
            var aplicacionParameter = aplicacion != null ?
                new ObjectParameter("Aplicacion", aplicacion) :
                new ObjectParameter("Aplicacion", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var tableIdValueParameter = tableIdValue.HasValue ?
                new ObjectParameter("TableIdValue", tableIdValue) :
                new ObjectParameter("TableIdValue", typeof(long));
    
            var primaryKeyDataParameter = primaryKeyData != null ?
                new ObjectParameter("PrimaryKeyData", primaryKeyData) :
                new ObjectParameter("PrimaryKeyData", typeof(string));
    
            var oldDataParameter = oldData != null ?
                new ObjectParameter("OldData", oldData) :
                new ObjectParameter("OldData", typeof(string));
    
            var newDataParameter = newData != null ?
                new ObjectParameter("NewData", newData) :
                new ObjectParameter("NewData", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var vistaDataParameter = vistaData != null ?
                new ObjectParameter("VistaData", vistaData) :
                new ObjectParameter("VistaData", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_AUDITROYAL", auditIDParameter, hostNameParameter, aplicacionParameter, moduloParameter, usuarioParameter, typeParameter, tableNameParameter, tableIdValueParameter, primaryKeyDataParameter, oldDataParameter, newDataParameter, updateDateParameter, vistaDataParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_AuditRoyal> USP_SS_HC_AUDITROYAL_LISTAR(Nullable<long> auditID, string hostName, string aplicacion, string modulo, string usuario, string type, string tableName, Nullable<long> tableIdValue, string primaryKeyData, string oldData, string newData, Nullable<System.DateTime> updateDate, string vistaData, string accion, Nullable<System.DateTime> version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_AuditRoyal).Assembly);
    
            var auditIDParameter = auditID.HasValue ?
                new ObjectParameter("AuditID", auditID) :
                new ObjectParameter("AuditID", typeof(long));
    
            var hostNameParameter = hostName != null ?
                new ObjectParameter("HostName", hostName) :
                new ObjectParameter("HostName", typeof(string));
    
            var aplicacionParameter = aplicacion != null ?
                new ObjectParameter("Aplicacion", aplicacion) :
                new ObjectParameter("Aplicacion", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var tableIdValueParameter = tableIdValue.HasValue ?
                new ObjectParameter("TableIdValue", tableIdValue) :
                new ObjectParameter("TableIdValue", typeof(long));
    
            var primaryKeyDataParameter = primaryKeyData != null ?
                new ObjectParameter("PrimaryKeyData", primaryKeyData) :
                new ObjectParameter("PrimaryKeyData", typeof(string));
    
            var oldDataParameter = oldData != null ?
                new ObjectParameter("OldData", oldData) :
                new ObjectParameter("OldData", typeof(string));
    
            var newDataParameter = newData != null ?
                new ObjectParameter("NewData", newData) :
                new ObjectParameter("NewData", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var vistaDataParameter = vistaData != null ?
                new ObjectParameter("VistaData", vistaData) :
                new ObjectParameter("VistaData", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(System.DateTime));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AuditRoyal>("USP_SS_HC_AUDITROYAL_LISTAR", auditIDParameter, hostNameParameter, aplicacionParameter, moduloParameter, usuarioParameter, typeParameter, tableNameParameter, tableIdValueParameter, primaryKeyDataParameter, oldDataParameter, newDataParameter, updateDateParameter, vistaDataParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_AuditRoyal> USP_SS_HC_AUDITROYAL_LISTAR(Nullable<long> auditID, string hostName, string aplicacion, string modulo, string usuario, string type, string tableName, Nullable<long> tableIdValue, string primaryKeyData, string oldData, string newData, Nullable<System.DateTime> updateDate, string vistaData, string accion, Nullable<System.DateTime> version, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_AuditRoyal).Assembly);
    
            var auditIDParameter = auditID.HasValue ?
                new ObjectParameter("AuditID", auditID) :
                new ObjectParameter("AuditID", typeof(long));
    
            var hostNameParameter = hostName != null ?
                new ObjectParameter("HostName", hostName) :
                new ObjectParameter("HostName", typeof(string));
    
            var aplicacionParameter = aplicacion != null ?
                new ObjectParameter("Aplicacion", aplicacion) :
                new ObjectParameter("Aplicacion", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var tableIdValueParameter = tableIdValue.HasValue ?
                new ObjectParameter("TableIdValue", tableIdValue) :
                new ObjectParameter("TableIdValue", typeof(long));
    
            var primaryKeyDataParameter = primaryKeyData != null ?
                new ObjectParameter("PrimaryKeyData", primaryKeyData) :
                new ObjectParameter("PrimaryKeyData", typeof(string));
    
            var oldDataParameter = oldData != null ?
                new ObjectParameter("OldData", oldData) :
                new ObjectParameter("OldData", typeof(string));
    
            var newDataParameter = newData != null ?
                new ObjectParameter("NewData", newData) :
                new ObjectParameter("NewData", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var vistaDataParameter = vistaData != null ?
                new ObjectParameter("VistaData", vistaData) :
                new ObjectParameter("VistaData", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(System.DateTime));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AuditRoyal>("USP_SS_HC_AUDITROYAL_LISTAR", mergeOption, auditIDParameter, hostNameParameter, aplicacionParameter, moduloParameter, usuarioParameter, typeParameter, tableNameParameter, tableIdValueParameter, primaryKeyDataParameter, oldDataParameter, newDataParameter, updateDateParameter, vistaDataParameter, accionParameter, versionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_GE_ProcedimientoMedicoDos(Nullable<int> idProcedimientoDos, string codigoProcedimientoDos, string codigoPadre, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idProcedimientoDosPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipofolder, string nombreTabla, string accion)
        {
            var idProcedimientoDosParameter = idProcedimientoDos.HasValue ?
                new ObjectParameter("IdProcedimientoDos", idProcedimientoDos) :
                new ObjectParameter("IdProcedimientoDos", typeof(int));
    
            var codigoProcedimientoDosParameter = codigoProcedimientoDos != null ?
                new ObjectParameter("CodigoProcedimientoDos", codigoProcedimientoDos) :
                new ObjectParameter("CodigoProcedimientoDos", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idProcedimientoDosPadreParameter = idProcedimientoDosPadre.HasValue ?
                new ObjectParameter("IdProcedimientoDosPadre", idProcedimientoDosPadre) :
                new ObjectParameter("IdProcedimientoDosPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipofolderParameter = tipofolder.HasValue ?
                new ObjectParameter("tipofolder", tipofolder) :
                new ObjectParameter("tipofolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_GE_ProcedimientoMedicoDos", idProcedimientoDosParameter, codigoProcedimientoDosParameter, codigoPadreParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idProcedimientoDosPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipofolderParameter, nombreTablaParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_GE_ProcedimientoMedicoDos> USP_SS_GE_ProcedimientoMedicoDosListar(Nullable<int> idProcedimientoDos, string codigoProcedimientoDos, string codigoPadre, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idProcedimientoDosPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipofolder, string nombreTabla, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_ProcedimientoMedicoDos).Assembly);
    
            var idProcedimientoDosParameter = idProcedimientoDos.HasValue ?
                new ObjectParameter("IdProcedimientoDos", idProcedimientoDos) :
                new ObjectParameter("IdProcedimientoDos", typeof(int));
    
            var codigoProcedimientoDosParameter = codigoProcedimientoDos != null ?
                new ObjectParameter("CodigoProcedimientoDos", codigoProcedimientoDos) :
                new ObjectParameter("CodigoProcedimientoDos", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idProcedimientoDosPadreParameter = idProcedimientoDosPadre.HasValue ?
                new ObjectParameter("IdProcedimientoDosPadre", idProcedimientoDosPadre) :
                new ObjectParameter("IdProcedimientoDosPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipofolderParameter = tipofolder.HasValue ?
                new ObjectParameter("tipofolder", tipofolder) :
                new ObjectParameter("tipofolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_ProcedimientoMedicoDos>("USP_SS_GE_ProcedimientoMedicoDosListar", idProcedimientoDosParameter, codigoProcedimientoDosParameter, codigoPadreParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idProcedimientoDosPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipofolderParameter, nombreTablaParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_GE_ProcedimientoMedicoDos> USP_SS_GE_ProcedimientoMedicoDosListar(Nullable<int> idProcedimientoDos, string codigoProcedimientoDos, string codigoPadre, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idProcedimientoDosPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipofolder, string nombreTabla, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_ProcedimientoMedicoDos).Assembly);
    
            var idProcedimientoDosParameter = idProcedimientoDos.HasValue ?
                new ObjectParameter("IdProcedimientoDos", idProcedimientoDos) :
                new ObjectParameter("IdProcedimientoDos", typeof(int));
    
            var codigoProcedimientoDosParameter = codigoProcedimientoDos != null ?
                new ObjectParameter("CodigoProcedimientoDos", codigoProcedimientoDos) :
                new ObjectParameter("CodigoProcedimientoDos", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idProcedimientoDosPadreParameter = idProcedimientoDosPadre.HasValue ?
                new ObjectParameter("IdProcedimientoDosPadre", idProcedimientoDosPadre) :
                new ObjectParameter("IdProcedimientoDosPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipofolderParameter = tipofolder.HasValue ?
                new ObjectParameter("tipofolder", tipofolder) :
                new ObjectParameter("tipofolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_ProcedimientoMedicoDos>("USP_SS_GE_ProcedimientoMedicoDosListar", mergeOption, idProcedimientoDosParameter, codigoProcedimientoDosParameter, codigoPadreParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idProcedimientoDosPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipofolderParameter, nombreTablaParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_DetalleMiscelaneos(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, byte[] timestamp, string aCCION, Nullable<int> rowID, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, string valorCodigo6, string valorCodigo7, Nullable<int> valorEntero6, Nullable<int> valorEntero7)
        {
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var timestampParameter = timestamp != null ?
                new ObjectParameter("Timestamp", timestamp) :
                new ObjectParameter("Timestamp", typeof(byte[]));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var rowIDParameter = rowID.HasValue ?
                new ObjectParameter("RowID", rowID) :
                new ObjectParameter("RowID", typeof(int));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorCodigo6Parameter = valorCodigo6 != null ?
                new ObjectParameter("ValorCodigo6", valorCodigo6) :
                new ObjectParameter("ValorCodigo6", typeof(string));
    
            var valorCodigo7Parameter = valorCodigo7 != null ?
                new ObjectParameter("ValorCodigo7", valorCodigo7) :
                new ObjectParameter("ValorCodigo7", typeof(string));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_DetalleMiscelaneos", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, timestampParameter, aCCIONParameter, rowIDParameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorCodigo6Parameter, valorCodigo7Parameter, valorEntero6Parameter, valorEntero7Parameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_DetalleMiscelaneos_Lista(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, byte[] timestamp, string aCCION, Nullable<int> rowID, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, string valorCodigo6, string valorCodigo7, Nullable<int> valorEntero6, Nullable<int> valorEntero7, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var timestampParameter = timestamp != null ?
                new ObjectParameter("Timestamp", timestamp) :
                new ObjectParameter("Timestamp", typeof(byte[]));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var rowIDParameter = rowID.HasValue ?
                new ObjectParameter("RowID", rowID) :
                new ObjectParameter("RowID", typeof(int));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorCodigo6Parameter = valorCodigo6 != null ?
                new ObjectParameter("ValorCodigo6", valorCodigo6) :
                new ObjectParameter("ValorCodigo6", typeof(string));
    
            var valorCodigo7Parameter = valorCodigo7 != null ?
                new ObjectParameter("ValorCodigo7", valorCodigo7) :
                new ObjectParameter("ValorCodigo7", typeof(string));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_DetalleMiscelaneos_Lista", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, timestampParameter, aCCIONParameter, rowIDParameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorCodigo6Parameter, valorCodigo7Parameter, valorEntero6Parameter, valorEntero7Parameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_DetalleMiscelaneos_Lista(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, byte[] timestamp, string aCCION, Nullable<int> rowID, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, string valorCodigo6, string valorCodigo7, Nullable<int> valorEntero6, Nullable<int> valorEntero7, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var timestampParameter = timestamp != null ?
                new ObjectParameter("Timestamp", timestamp) :
                new ObjectParameter("Timestamp", typeof(byte[]));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var rowIDParameter = rowID.HasValue ?
                new ObjectParameter("RowID", rowID) :
                new ObjectParameter("RowID", typeof(int));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorCodigo6Parameter = valorCodigo6 != null ?
                new ObjectParameter("ValorCodigo6", valorCodigo6) :
                new ObjectParameter("ValorCodigo6", typeof(string));
    
            var valorCodigo7Parameter = valorCodigo7 != null ?
                new ObjectParameter("ValorCodigo7", valorCodigo7) :
                new ObjectParameter("ValorCodigo7", typeof(string));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_DetalleMiscelaneos_Lista", mergeOption, aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, timestampParameter, aCCIONParameter, rowIDParameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorCodigo6Parameter, valorCodigo7Parameter, valorEntero6Parameter, valorEntero7Parameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_vw_Miscelaneos(string aplicacionHeader, string codigoHeader, string companiaHeader, string descLocalHeader, string descExtHeader, string estadoHeader, string usuarioHeader, Nullable<System.DateTime> fechaHeader, byte[] timeHeader, string accionHeader, string aplicacionDetalle, string codigoDetalle, string companiaDetalle, string elementoDetalle, string descDetalle, string descextDetalle, string valorCodigoDetalle, string estadoDetalle, string usuarioDetalle, Nullable<System.DateTime> fechaDetalle, byte[] timeDetalle, string valorCodigo2, string valorCodigo3, string valorCodigo4, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4)
        {
            var aplicacionHeaderParameter = aplicacionHeader != null ?
                new ObjectParameter("AplicacionHeader", aplicacionHeader) :
                new ObjectParameter("AplicacionHeader", typeof(string));
    
            var codigoHeaderParameter = codigoHeader != null ?
                new ObjectParameter("CodigoHeader", codigoHeader) :
                new ObjectParameter("CodigoHeader", typeof(string));
    
            var companiaHeaderParameter = companiaHeader != null ?
                new ObjectParameter("CompaniaHeader", companiaHeader) :
                new ObjectParameter("CompaniaHeader", typeof(string));
    
            var descLocalHeaderParameter = descLocalHeader != null ?
                new ObjectParameter("DescLocalHeader", descLocalHeader) :
                new ObjectParameter("DescLocalHeader", typeof(string));
    
            var descExtHeaderParameter = descExtHeader != null ?
                new ObjectParameter("DescExtHeader", descExtHeader) :
                new ObjectParameter("DescExtHeader", typeof(string));
    
            var estadoHeaderParameter = estadoHeader != null ?
                new ObjectParameter("EstadoHeader", estadoHeader) :
                new ObjectParameter("EstadoHeader", typeof(string));
    
            var usuarioHeaderParameter = usuarioHeader != null ?
                new ObjectParameter("UsuarioHeader", usuarioHeader) :
                new ObjectParameter("UsuarioHeader", typeof(string));
    
            var fechaHeaderParameter = fechaHeader.HasValue ?
                new ObjectParameter("FechaHeader", fechaHeader) :
                new ObjectParameter("FechaHeader", typeof(System.DateTime));
    
            var timeHeaderParameter = timeHeader != null ?
                new ObjectParameter("TimeHeader", timeHeader) :
                new ObjectParameter("TimeHeader", typeof(byte[]));
    
            var accionHeaderParameter = accionHeader != null ?
                new ObjectParameter("AccionHeader", accionHeader) :
                new ObjectParameter("AccionHeader", typeof(string));
    
            var aplicacionDetalleParameter = aplicacionDetalle != null ?
                new ObjectParameter("AplicacionDetalle", aplicacionDetalle) :
                new ObjectParameter("AplicacionDetalle", typeof(string));
    
            var codigoDetalleParameter = codigoDetalle != null ?
                new ObjectParameter("CodigoDetalle", codigoDetalle) :
                new ObjectParameter("CodigoDetalle", typeof(string));
    
            var companiaDetalleParameter = companiaDetalle != null ?
                new ObjectParameter("CompaniaDetalle", companiaDetalle) :
                new ObjectParameter("CompaniaDetalle", typeof(string));
    
            var elementoDetalleParameter = elementoDetalle != null ?
                new ObjectParameter("ElementoDetalle", elementoDetalle) :
                new ObjectParameter("ElementoDetalle", typeof(string));
    
            var descDetalleParameter = descDetalle != null ?
                new ObjectParameter("DescDetalle", descDetalle) :
                new ObjectParameter("DescDetalle", typeof(string));
    
            var descextDetalleParameter = descextDetalle != null ?
                new ObjectParameter("DescextDetalle", descextDetalle) :
                new ObjectParameter("DescextDetalle", typeof(string));
    
            var valorCodigoDetalleParameter = valorCodigoDetalle != null ?
                new ObjectParameter("ValorCodigoDetalle", valorCodigoDetalle) :
                new ObjectParameter("ValorCodigoDetalle", typeof(string));
    
            var estadoDetalleParameter = estadoDetalle != null ?
                new ObjectParameter("EstadoDetalle", estadoDetalle) :
                new ObjectParameter("EstadoDetalle", typeof(string));
    
            var usuarioDetalleParameter = usuarioDetalle != null ?
                new ObjectParameter("UsuarioDetalle", usuarioDetalle) :
                new ObjectParameter("UsuarioDetalle", typeof(string));
    
            var fechaDetalleParameter = fechaDetalle.HasValue ?
                new ObjectParameter("FechaDetalle", fechaDetalle) :
                new ObjectParameter("FechaDetalle", typeof(System.DateTime));
    
            var timeDetalleParameter = timeDetalle != null ?
                new ObjectParameter("TimeDetalle", timeDetalle) :
                new ObjectParameter("TimeDetalle", typeof(byte[]));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_vw_Miscelaneos", aplicacionHeaderParameter, codigoHeaderParameter, companiaHeaderParameter, descLocalHeaderParameter, descExtHeaderParameter, estadoHeaderParameter, usuarioHeaderParameter, fechaHeaderParameter, timeHeaderParameter, accionHeaderParameter, aplicacionDetalleParameter, codigoDetalleParameter, companiaDetalleParameter, elementoDetalleParameter, descDetalleParameter, descextDetalleParameter, valorCodigoDetalleParameter, estadoDetalleParameter, usuarioDetalleParameter, fechaDetalleParameter, timeDetalleParameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter);
        }
    
        public virtual ObjectResult<vw_Miscelaneos> usp_vw_Miscelaneos_listar(string aplicacionHeader, string codigoHeader, string companiaHeader, string descLocalHeader, string descExtHeader, string estadoHeader, string usuarioHeader, Nullable<System.DateTime> fechaHeader, byte[] timeHeader, string accionHeader, string aplicacionDetalle, string codigoDetalle, string companiaDetalle, string elementoDetalle, string descDetalle, string descextDetalle, string valorCodigoDetalle, string estadoDetalle, string usuarioDetalle, Nullable<System.DateTime> fechaDetalle, byte[] timeDetalle, string valorCodigo2, string valorCodigo3, string valorCodigo4, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(vw_Miscelaneos).Assembly);
    
            var aplicacionHeaderParameter = aplicacionHeader != null ?
                new ObjectParameter("AplicacionHeader", aplicacionHeader) :
                new ObjectParameter("AplicacionHeader", typeof(string));
    
            var codigoHeaderParameter = codigoHeader != null ?
                new ObjectParameter("CodigoHeader", codigoHeader) :
                new ObjectParameter("CodigoHeader", typeof(string));
    
            var companiaHeaderParameter = companiaHeader != null ?
                new ObjectParameter("CompaniaHeader", companiaHeader) :
                new ObjectParameter("CompaniaHeader", typeof(string));
    
            var descLocalHeaderParameter = descLocalHeader != null ?
                new ObjectParameter("DescLocalHeader", descLocalHeader) :
                new ObjectParameter("DescLocalHeader", typeof(string));
    
            var descExtHeaderParameter = descExtHeader != null ?
                new ObjectParameter("DescExtHeader", descExtHeader) :
                new ObjectParameter("DescExtHeader", typeof(string));
    
            var estadoHeaderParameter = estadoHeader != null ?
                new ObjectParameter("EstadoHeader", estadoHeader) :
                new ObjectParameter("EstadoHeader", typeof(string));
    
            var usuarioHeaderParameter = usuarioHeader != null ?
                new ObjectParameter("UsuarioHeader", usuarioHeader) :
                new ObjectParameter("UsuarioHeader", typeof(string));
    
            var fechaHeaderParameter = fechaHeader.HasValue ?
                new ObjectParameter("FechaHeader", fechaHeader) :
                new ObjectParameter("FechaHeader", typeof(System.DateTime));
    
            var timeHeaderParameter = timeHeader != null ?
                new ObjectParameter("TimeHeader", timeHeader) :
                new ObjectParameter("TimeHeader", typeof(byte[]));
    
            var accionHeaderParameter = accionHeader != null ?
                new ObjectParameter("AccionHeader", accionHeader) :
                new ObjectParameter("AccionHeader", typeof(string));
    
            var aplicacionDetalleParameter = aplicacionDetalle != null ?
                new ObjectParameter("AplicacionDetalle", aplicacionDetalle) :
                new ObjectParameter("AplicacionDetalle", typeof(string));
    
            var codigoDetalleParameter = codigoDetalle != null ?
                new ObjectParameter("CodigoDetalle", codigoDetalle) :
                new ObjectParameter("CodigoDetalle", typeof(string));
    
            var companiaDetalleParameter = companiaDetalle != null ?
                new ObjectParameter("CompaniaDetalle", companiaDetalle) :
                new ObjectParameter("CompaniaDetalle", typeof(string));
    
            var elementoDetalleParameter = elementoDetalle != null ?
                new ObjectParameter("ElementoDetalle", elementoDetalle) :
                new ObjectParameter("ElementoDetalle", typeof(string));
    
            var descDetalleParameter = descDetalle != null ?
                new ObjectParameter("DescDetalle", descDetalle) :
                new ObjectParameter("DescDetalle", typeof(string));
    
            var descextDetalleParameter = descextDetalle != null ?
                new ObjectParameter("DescextDetalle", descextDetalle) :
                new ObjectParameter("DescextDetalle", typeof(string));
    
            var valorCodigoDetalleParameter = valorCodigoDetalle != null ?
                new ObjectParameter("ValorCodigoDetalle", valorCodigoDetalle) :
                new ObjectParameter("ValorCodigoDetalle", typeof(string));
    
            var estadoDetalleParameter = estadoDetalle != null ?
                new ObjectParameter("EstadoDetalle", estadoDetalle) :
                new ObjectParameter("EstadoDetalle", typeof(string));
    
            var usuarioDetalleParameter = usuarioDetalle != null ?
                new ObjectParameter("UsuarioDetalle", usuarioDetalle) :
                new ObjectParameter("UsuarioDetalle", typeof(string));
    
            var fechaDetalleParameter = fechaDetalle.HasValue ?
                new ObjectParameter("FechaDetalle", fechaDetalle) :
                new ObjectParameter("FechaDetalle", typeof(System.DateTime));
    
            var timeDetalleParameter = timeDetalle != null ?
                new ObjectParameter("TimeDetalle", timeDetalle) :
                new ObjectParameter("TimeDetalle", typeof(byte[]));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Miscelaneos>("usp_vw_Miscelaneos_listar", aplicacionHeaderParameter, codigoHeaderParameter, companiaHeaderParameter, descLocalHeaderParameter, descExtHeaderParameter, estadoHeaderParameter, usuarioHeaderParameter, fechaHeaderParameter, timeHeaderParameter, accionHeaderParameter, aplicacionDetalleParameter, codigoDetalleParameter, companiaDetalleParameter, elementoDetalleParameter, descDetalleParameter, descextDetalleParameter, valorCodigoDetalleParameter, estadoDetalleParameter, usuarioDetalleParameter, fechaDetalleParameter, timeDetalleParameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<vw_Miscelaneos> usp_vw_Miscelaneos_listar(string aplicacionHeader, string codigoHeader, string companiaHeader, string descLocalHeader, string descExtHeader, string estadoHeader, string usuarioHeader, Nullable<System.DateTime> fechaHeader, byte[] timeHeader, string accionHeader, string aplicacionDetalle, string codigoDetalle, string companiaDetalle, string elementoDetalle, string descDetalle, string descextDetalle, string valorCodigoDetalle, string estadoDetalle, string usuarioDetalle, Nullable<System.DateTime> fechaDetalle, byte[] timeDetalle, string valorCodigo2, string valorCodigo3, string valorCodigo4, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(vw_Miscelaneos).Assembly);
    
            var aplicacionHeaderParameter = aplicacionHeader != null ?
                new ObjectParameter("AplicacionHeader", aplicacionHeader) :
                new ObjectParameter("AplicacionHeader", typeof(string));
    
            var codigoHeaderParameter = codigoHeader != null ?
                new ObjectParameter("CodigoHeader", codigoHeader) :
                new ObjectParameter("CodigoHeader", typeof(string));
    
            var companiaHeaderParameter = companiaHeader != null ?
                new ObjectParameter("CompaniaHeader", companiaHeader) :
                new ObjectParameter("CompaniaHeader", typeof(string));
    
            var descLocalHeaderParameter = descLocalHeader != null ?
                new ObjectParameter("DescLocalHeader", descLocalHeader) :
                new ObjectParameter("DescLocalHeader", typeof(string));
    
            var descExtHeaderParameter = descExtHeader != null ?
                new ObjectParameter("DescExtHeader", descExtHeader) :
                new ObjectParameter("DescExtHeader", typeof(string));
    
            var estadoHeaderParameter = estadoHeader != null ?
                new ObjectParameter("EstadoHeader", estadoHeader) :
                new ObjectParameter("EstadoHeader", typeof(string));
    
            var usuarioHeaderParameter = usuarioHeader != null ?
                new ObjectParameter("UsuarioHeader", usuarioHeader) :
                new ObjectParameter("UsuarioHeader", typeof(string));
    
            var fechaHeaderParameter = fechaHeader.HasValue ?
                new ObjectParameter("FechaHeader", fechaHeader) :
                new ObjectParameter("FechaHeader", typeof(System.DateTime));
    
            var timeHeaderParameter = timeHeader != null ?
                new ObjectParameter("TimeHeader", timeHeader) :
                new ObjectParameter("TimeHeader", typeof(byte[]));
    
            var accionHeaderParameter = accionHeader != null ?
                new ObjectParameter("AccionHeader", accionHeader) :
                new ObjectParameter("AccionHeader", typeof(string));
    
            var aplicacionDetalleParameter = aplicacionDetalle != null ?
                new ObjectParameter("AplicacionDetalle", aplicacionDetalle) :
                new ObjectParameter("AplicacionDetalle", typeof(string));
    
            var codigoDetalleParameter = codigoDetalle != null ?
                new ObjectParameter("CodigoDetalle", codigoDetalle) :
                new ObjectParameter("CodigoDetalle", typeof(string));
    
            var companiaDetalleParameter = companiaDetalle != null ?
                new ObjectParameter("CompaniaDetalle", companiaDetalle) :
                new ObjectParameter("CompaniaDetalle", typeof(string));
    
            var elementoDetalleParameter = elementoDetalle != null ?
                new ObjectParameter("ElementoDetalle", elementoDetalle) :
                new ObjectParameter("ElementoDetalle", typeof(string));
    
            var descDetalleParameter = descDetalle != null ?
                new ObjectParameter("DescDetalle", descDetalle) :
                new ObjectParameter("DescDetalle", typeof(string));
    
            var descextDetalleParameter = descextDetalle != null ?
                new ObjectParameter("DescextDetalle", descextDetalle) :
                new ObjectParameter("DescextDetalle", typeof(string));
    
            var valorCodigoDetalleParameter = valorCodigoDetalle != null ?
                new ObjectParameter("ValorCodigoDetalle", valorCodigoDetalle) :
                new ObjectParameter("ValorCodigoDetalle", typeof(string));
    
            var estadoDetalleParameter = estadoDetalle != null ?
                new ObjectParameter("EstadoDetalle", estadoDetalle) :
                new ObjectParameter("EstadoDetalle", typeof(string));
    
            var usuarioDetalleParameter = usuarioDetalle != null ?
                new ObjectParameter("UsuarioDetalle", usuarioDetalle) :
                new ObjectParameter("UsuarioDetalle", typeof(string));
    
            var fechaDetalleParameter = fechaDetalle.HasValue ?
                new ObjectParameter("FechaDetalle", fechaDetalle) :
                new ObjectParameter("FechaDetalle", typeof(System.DateTime));
    
            var timeDetalleParameter = timeDetalle != null ?
                new ObjectParameter("TimeDetalle", timeDetalle) :
                new ObjectParameter("TimeDetalle", typeof(byte[]));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Miscelaneos>("usp_vw_Miscelaneos_listar", mergeOption, aplicacionHeaderParameter, codigoHeaderParameter, companiaHeaderParameter, descLocalHeaderParameter, descExtHeaderParameter, estadoHeaderParameter, usuarioHeaderParameter, fechaHeaderParameter, timeHeaderParameter, accionHeaderParameter, aplicacionDetalleParameter, codigoDetalleParameter, companiaDetalleParameter, elementoDetalleParameter, descDetalleParameter, descextDetalleParameter, valorCodigoDetalleParameter, estadoDetalleParameter, usuarioDetalleParameter, fechaDetalleParameter, timeDetalleParameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_HeaderMiscelaneos(string aplicacionCodigo, string codigoTabla, string compania, string descripcionLocal, string descripcionExtranjera, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, byte[] timestamp, string aCCION)
        {
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var timestampParameter = timestamp != null ?
                new ObjectParameter("Timestamp", timestamp) :
                new ObjectParameter("Timestamp", typeof(byte[]));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_HeaderMiscelaneos", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, descripcionLocalParameter, descripcionExtranjeraParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, timestampParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosHeader> USP_HeaderMiscelaneos_Lista(string aplicacionCodigo, string codigoTabla, string compania, string descripcionLocal, string descripcionExtranjera, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, byte[] timestamp, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosHeader).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var timestampParameter = timestamp != null ?
                new ObjectParameter("Timestamp", timestamp) :
                new ObjectParameter("Timestamp", typeof(byte[]));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosHeader>("USP_HeaderMiscelaneos_Lista", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, descripcionLocalParameter, descripcionExtranjeraParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, timestampParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosHeader> USP_HeaderMiscelaneos_Lista(string aplicacionCodigo, string codigoTabla, string compania, string descripcionLocal, string descripcionExtranjera, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, byte[] timestamp, string aCCION, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosHeader).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var timestampParameter = timestamp != null ?
                new ObjectParameter("Timestamp", timestamp) :
                new ObjectParameter("Timestamp", typeof(byte[]));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosHeader>("USP_HeaderMiscelaneos_Lista", mergeOption, aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, descripcionLocalParameter, descripcionExtranjeraParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, timestampParameter, aCCIONParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_FormatoAsignacion(Nullable<int> idFormatoAsignacion, Nullable<int> idOpcion, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string aCCION)
        {
            var idFormatoAsignacionParameter = idFormatoAsignacion.HasValue ?
                new ObjectParameter("IdFormatoAsignacion", idFormatoAsignacion) :
                new ObjectParameter("IdFormatoAsignacion", typeof(int));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_FormatoAsignacion", idFormatoAsignacionParameter, idOpcionParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_FormatoAsignacion> USP_SS_HC_FormatoAsignacion_LISTAR(Nullable<int> idFormatoAsignacion, Nullable<int> idOpcion, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FormatoAsignacion).Assembly);
    
            var idFormatoAsignacionParameter = idFormatoAsignacion.HasValue ?
                new ObjectParameter("IdFormatoAsignacion", idFormatoAsignacion) :
                new ObjectParameter("IdFormatoAsignacion", typeof(int));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FormatoAsignacion>("USP_SS_HC_FormatoAsignacion_LISTAR", idFormatoAsignacionParameter, idOpcionParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_FormatoAsignacion> USP_SS_HC_FormatoAsignacion_LISTAR(Nullable<int> idFormatoAsignacion, Nullable<int> idOpcion, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FormatoAsignacion).Assembly);
    
            var idFormatoAsignacionParameter = idFormatoAsignacion.HasValue ?
                new ObjectParameter("IdFormatoAsignacion", idFormatoAsignacion) :
                new ObjectParameter("IdFormatoAsignacion", typeof(int));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FormatoAsignacion>("USP_SS_HC_FormatoAsignacion_LISTAR", mergeOption, idFormatoAsignacionParameter, idOpcionParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_FormatoCodigoId> USP_SS_HC_FormatoCodigoId_LISTAR(Nullable<int> idOpcion, Nullable<int> campoCodigoId, Nullable<int> secuenciaAsignacion, Nullable<int> indicadorCodigoId, string valorTexto, Nullable<int> valorId, string version, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FormatoCodigoId).Assembly);
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var campoCodigoIdParameter = campoCodigoId.HasValue ?
                new ObjectParameter("CampoCodigoId", campoCodigoId) :
                new ObjectParameter("CampoCodigoId", typeof(int));
    
            var secuenciaAsignacionParameter = secuenciaAsignacion.HasValue ?
                new ObjectParameter("SecuenciaAsignacion", secuenciaAsignacion) :
                new ObjectParameter("SecuenciaAsignacion", typeof(int));
    
            var indicadorCodigoIdParameter = indicadorCodigoId.HasValue ?
                new ObjectParameter("IndicadorCodigoId", indicadorCodigoId) :
                new ObjectParameter("IndicadorCodigoId", typeof(int));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorIdParameter = valorId.HasValue ?
                new ObjectParameter("ValorId", valorId) :
                new ObjectParameter("ValorId", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FormatoCodigoId>("USP_SS_HC_FormatoCodigoId_LISTAR", idOpcionParameter, campoCodigoIdParameter, secuenciaAsignacionParameter, indicadorCodigoIdParameter, valorTextoParameter, valorIdParameter, versionParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_FormatoCodigoId> USP_SS_HC_FormatoCodigoId_LISTAR(Nullable<int> idOpcion, Nullable<int> campoCodigoId, Nullable<int> secuenciaAsignacion, Nullable<int> indicadorCodigoId, string valorTexto, Nullable<int> valorId, string version, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_FormatoCodigoId).Assembly);
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var campoCodigoIdParameter = campoCodigoId.HasValue ?
                new ObjectParameter("CampoCodigoId", campoCodigoId) :
                new ObjectParameter("CampoCodigoId", typeof(int));
    
            var secuenciaAsignacionParameter = secuenciaAsignacion.HasValue ?
                new ObjectParameter("SecuenciaAsignacion", secuenciaAsignacion) :
                new ObjectParameter("SecuenciaAsignacion", typeof(int));
    
            var indicadorCodigoIdParameter = indicadorCodigoId.HasValue ?
                new ObjectParameter("IndicadorCodigoId", indicadorCodigoId) :
                new ObjectParameter("IndicadorCodigoId", typeof(int));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorIdParameter = valorId.HasValue ?
                new ObjectParameter("ValorId", valorId) :
                new ObjectParameter("ValorId", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_FormatoCodigoId>("USP_SS_HC_FormatoCodigoId_LISTAR", mergeOption, idOpcionParameter, campoCodigoIdParameter, secuenciaAsignacionParameter, indicadorCodigoIdParameter, valorTextoParameter, valorIdParameter, versionParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_COMBOSMISCELANEOS(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string aCCION, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, Nullable<int> valorEntero6, Nullable<int> valorEntero7)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_COMBOSMISCELANEOS", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, aCCIONParameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorEntero6Parameter, valorEntero7Parameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_COMBOSMISCELANEOS(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string aCCION, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, Nullable<int> valorEntero6, Nullable<int> valorEntero7, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_COMBOSMISCELANEOS", mergeOption, aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, aCCIONParameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorEntero6Parameter, valorEntero7Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_FormatoCodigoId(Nullable<int> idOpcion, Nullable<int> campoCodigoId, Nullable<int> secuenciaAsignacion, Nullable<int> indicadorCodigoId, string valorTexto, Nullable<int> valorId, string version, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string aCCION)
        {
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var campoCodigoIdParameter = campoCodigoId.HasValue ?
                new ObjectParameter("CampoCodigoId", campoCodigoId) :
                new ObjectParameter("CampoCodigoId", typeof(int));
    
            var secuenciaAsignacionParameter = secuenciaAsignacion.HasValue ?
                new ObjectParameter("SecuenciaAsignacion", secuenciaAsignacion) :
                new ObjectParameter("SecuenciaAsignacion", typeof(int));
    
            var indicadorCodigoIdParameter = indicadorCodigoId.HasValue ?
                new ObjectParameter("IndicadorCodigoId", indicadorCodigoId) :
                new ObjectParameter("IndicadorCodigoId", typeof(int));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var valorIdParameter = valorId.HasValue ?
                new ObjectParameter("ValorId", valorId) :
                new ObjectParameter("ValorId", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_FormatoCodigoId", idOpcionParameter, campoCodigoIdParameter, secuenciaAsignacionParameter, indicadorCodigoIdParameter, valorTextoParameter, valorIdParameter, versionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_vw_favoritos(Nullable<int> idfavorito, Nullable<int> numeroFavorito, string mnemotecnico, string descripcion, string descripcionExtranjera, Nullable<int> idAgente, Nullable<int> idFavoritoTabla, Nullable<int> estado, string accion, string version, string nombreTabla, string descripTabla, string codigoAgente, string nombre, Nullable<int> tipoFavorito)
        {
            var idfavoritoParameter = idfavorito.HasValue ?
                new ObjectParameter("Idfavorito", idfavorito) :
                new ObjectParameter("Idfavorito", typeof(int));
    
            var numeroFavoritoParameter = numeroFavorito.HasValue ?
                new ObjectParameter("NumeroFavorito", numeroFavorito) :
                new ObjectParameter("NumeroFavorito", typeof(int));
    
            var mnemotecnicoParameter = mnemotecnico != null ?
                new ObjectParameter("Mnemotecnico", mnemotecnico) :
                new ObjectParameter("Mnemotecnico", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var descripTablaParameter = descripTabla != null ?
                new ObjectParameter("DescripTabla", descripTabla) :
                new ObjectParameter("DescripTabla", typeof(string));
    
            var codigoAgenteParameter = codigoAgente != null ?
                new ObjectParameter("CodigoAgente", codigoAgente) :
                new ObjectParameter("CodigoAgente", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoFavoritoParameter = tipoFavorito.HasValue ?
                new ObjectParameter("TipoFavorito", tipoFavorito) :
                new ObjectParameter("TipoFavorito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_vw_favoritos", idfavoritoParameter, numeroFavoritoParameter, mnemotecnicoParameter, descripcionParameter, descripcionExtranjeraParameter, idAgenteParameter, idFavoritoTablaParameter, estadoParameter, accionParameter, versionParameter, nombreTablaParameter, descripTablaParameter, codigoAgenteParameter, nombreParameter, tipoFavoritoParameter);
        }
    
        public virtual ObjectResult<vw_favoritos> usp_vw_favoritos_listar(Nullable<int> idfavorito, Nullable<int> numeroFavorito, string mnemotecnico, string descripcion, string descripcionExtranjera, Nullable<int> idAgente, Nullable<int> idFavoritoTabla, Nullable<int> estado, string accion, string version, string nombreTabla, string descripTabla, string codigoAgente, string nombre, Nullable<int> tipoFavorito, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(vw_favoritos).Assembly);
    
            var idfavoritoParameter = idfavorito.HasValue ?
                new ObjectParameter("Idfavorito", idfavorito) :
                new ObjectParameter("Idfavorito", typeof(int));
    
            var numeroFavoritoParameter = numeroFavorito.HasValue ?
                new ObjectParameter("NumeroFavorito", numeroFavorito) :
                new ObjectParameter("NumeroFavorito", typeof(int));
    
            var mnemotecnicoParameter = mnemotecnico != null ?
                new ObjectParameter("Mnemotecnico", mnemotecnico) :
                new ObjectParameter("Mnemotecnico", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var descripTablaParameter = descripTabla != null ?
                new ObjectParameter("DescripTabla", descripTabla) :
                new ObjectParameter("DescripTabla", typeof(string));
    
            var codigoAgenteParameter = codigoAgente != null ?
                new ObjectParameter("CodigoAgente", codigoAgente) :
                new ObjectParameter("CodigoAgente", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoFavoritoParameter = tipoFavorito.HasValue ?
                new ObjectParameter("TipoFavorito", tipoFavorito) :
                new ObjectParameter("TipoFavorito", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_favoritos>("usp_vw_favoritos_listar", idfavoritoParameter, numeroFavoritoParameter, mnemotecnicoParameter, descripcionParameter, descripcionExtranjeraParameter, idAgenteParameter, idFavoritoTablaParameter, estadoParameter, accionParameter, versionParameter, nombreTablaParameter, descripTablaParameter, codigoAgenteParameter, nombreParameter, tipoFavoritoParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<vw_favoritos> usp_vw_favoritos_listar(Nullable<int> idfavorito, Nullable<int> numeroFavorito, string mnemotecnico, string descripcion, string descripcionExtranjera, Nullable<int> idAgente, Nullable<int> idFavoritoTabla, Nullable<int> estado, string accion, string version, string nombreTabla, string descripTabla, string codigoAgente, string nombre, Nullable<int> tipoFavorito, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(vw_favoritos).Assembly);
    
            var idfavoritoParameter = idfavorito.HasValue ?
                new ObjectParameter("Idfavorito", idfavorito) :
                new ObjectParameter("Idfavorito", typeof(int));
    
            var numeroFavoritoParameter = numeroFavorito.HasValue ?
                new ObjectParameter("NumeroFavorito", numeroFavorito) :
                new ObjectParameter("NumeroFavorito", typeof(int));
    
            var mnemotecnicoParameter = mnemotecnico != null ?
                new ObjectParameter("Mnemotecnico", mnemotecnico) :
                new ObjectParameter("Mnemotecnico", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var idFavoritoTablaParameter = idFavoritoTabla.HasValue ?
                new ObjectParameter("IdFavoritoTabla", idFavoritoTabla) :
                new ObjectParameter("IdFavoritoTabla", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var descripTablaParameter = descripTabla != null ?
                new ObjectParameter("DescripTabla", descripTabla) :
                new ObjectParameter("DescripTabla", typeof(string));
    
            var codigoAgenteParameter = codigoAgente != null ?
                new ObjectParameter("CodigoAgente", codigoAgente) :
                new ObjectParameter("CodigoAgente", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoFavoritoParameter = tipoFavorito.HasValue ?
                new ObjectParameter("TipoFavorito", tipoFavorito) :
                new ObjectParameter("TipoFavorito", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_favoritos>("usp_vw_favoritos_listar", mergeOption, idfavoritoParameter, numeroFavoritoParameter, mnemotecnicoParameter, descripcionParameter, descripcionExtranjeraParameter, idAgenteParameter, idFavoritoTablaParameter, estadoParameter, accionParameter, versionParameter, nombreTablaParameter, descripTablaParameter, codigoAgenteParameter, nombreParameter, tipoFavoritoParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SG_Agente> USP_SS_HC_SG_Agente_LISTAR(Nullable<int> idAgente, Nullable<int> idGrupo, Nullable<int> idOrganizacion, Nullable<int> tipoAgente, string codigoAgente, Nullable<int> idEmpleado, Nullable<int> indicadorMultiple, string clave, Nullable<int> expiraClave, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> fechaExpiracion, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idGrupoTransaccion, Nullable<int> tipoTransaccion, Nullable<int> idOpcionDefecto, string plataforma, string tipotrabajador, Nullable<int> idCodigo, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SG_Agente).Assembly);
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var idOrganizacionParameter = idOrganizacion.HasValue ?
                new ObjectParameter("IdOrganizacion", idOrganizacion) :
                new ObjectParameter("IdOrganizacion", typeof(int));
    
            var tipoAgenteParameter = tipoAgente.HasValue ?
                new ObjectParameter("TipoAgente", tipoAgente) :
                new ObjectParameter("TipoAgente", typeof(int));
    
            var codigoAgenteParameter = codigoAgente != null ?
                new ObjectParameter("CodigoAgente", codigoAgente) :
                new ObjectParameter("CodigoAgente", typeof(string));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var indicadorMultipleParameter = indicadorMultiple.HasValue ?
                new ObjectParameter("IndicadorMultiple", indicadorMultiple) :
                new ObjectParameter("IndicadorMultiple", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var expiraClaveParameter = expiraClave.HasValue ?
                new ObjectParameter("ExpiraClave", expiraClave) :
                new ObjectParameter("ExpiraClave", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var fechaExpiracionParameter = fechaExpiracion.HasValue ?
                new ObjectParameter("FechaExpiracion", fechaExpiracion) :
                new ObjectParameter("FechaExpiracion", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idGrupoTransaccionParameter = idGrupoTransaccion.HasValue ?
                new ObjectParameter("IdGrupoTransaccion", idGrupoTransaccion) :
                new ObjectParameter("IdGrupoTransaccion", typeof(int));
    
            var tipoTransaccionParameter = tipoTransaccion.HasValue ?
                new ObjectParameter("TipoTransaccion", tipoTransaccion) :
                new ObjectParameter("TipoTransaccion", typeof(int));
    
            var idOpcionDefectoParameter = idOpcionDefecto.HasValue ?
                new ObjectParameter("IdOpcionDefecto", idOpcionDefecto) :
                new ObjectParameter("IdOpcionDefecto", typeof(int));
    
            var plataformaParameter = plataforma != null ?
                new ObjectParameter("Plataforma", plataforma) :
                new ObjectParameter("Plataforma", typeof(string));
    
            var tipotrabajadorParameter = tipotrabajador != null ?
                new ObjectParameter("tipotrabajador", tipotrabajador) :
                new ObjectParameter("tipotrabajador", typeof(string));
    
            var idCodigoParameter = idCodigo.HasValue ?
                new ObjectParameter("IdCodigo", idCodigo) :
                new ObjectParameter("IdCodigo", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SG_Agente>("USP_SS_HC_SG_Agente_LISTAR", idAgenteParameter, idGrupoParameter, idOrganizacionParameter, tipoAgenteParameter, codigoAgenteParameter, idEmpleadoParameter, indicadorMultipleParameter, claveParameter, expiraClaveParameter, fechaInicioParameter, fechaFinParameter, fechaExpiracionParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idGrupoTransaccionParameter, tipoTransaccionParameter, idOpcionDefectoParameter, plataformaParameter, tipotrabajadorParameter, idCodigoParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SG_Agente> USP_SS_HC_SG_Agente_LISTAR(Nullable<int> idAgente, Nullable<int> idGrupo, Nullable<int> idOrganizacion, Nullable<int> tipoAgente, string codigoAgente, Nullable<int> idEmpleado, Nullable<int> indicadorMultiple, string clave, Nullable<int> expiraClave, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> fechaExpiracion, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idGrupoTransaccion, Nullable<int> tipoTransaccion, Nullable<int> idOpcionDefecto, string plataforma, string tipotrabajador, Nullable<int> idCodigo, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SG_Agente).Assembly);
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var idOrganizacionParameter = idOrganizacion.HasValue ?
                new ObjectParameter("IdOrganizacion", idOrganizacion) :
                new ObjectParameter("IdOrganizacion", typeof(int));
    
            var tipoAgenteParameter = tipoAgente.HasValue ?
                new ObjectParameter("TipoAgente", tipoAgente) :
                new ObjectParameter("TipoAgente", typeof(int));
    
            var codigoAgenteParameter = codigoAgente != null ?
                new ObjectParameter("CodigoAgente", codigoAgente) :
                new ObjectParameter("CodigoAgente", typeof(string));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var indicadorMultipleParameter = indicadorMultiple.HasValue ?
                new ObjectParameter("IndicadorMultiple", indicadorMultiple) :
                new ObjectParameter("IndicadorMultiple", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var expiraClaveParameter = expiraClave.HasValue ?
                new ObjectParameter("ExpiraClave", expiraClave) :
                new ObjectParameter("ExpiraClave", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var fechaExpiracionParameter = fechaExpiracion.HasValue ?
                new ObjectParameter("FechaExpiracion", fechaExpiracion) :
                new ObjectParameter("FechaExpiracion", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idGrupoTransaccionParameter = idGrupoTransaccion.HasValue ?
                new ObjectParameter("IdGrupoTransaccion", idGrupoTransaccion) :
                new ObjectParameter("IdGrupoTransaccion", typeof(int));
    
            var tipoTransaccionParameter = tipoTransaccion.HasValue ?
                new ObjectParameter("TipoTransaccion", tipoTransaccion) :
                new ObjectParameter("TipoTransaccion", typeof(int));
    
            var idOpcionDefectoParameter = idOpcionDefecto.HasValue ?
                new ObjectParameter("IdOpcionDefecto", idOpcionDefecto) :
                new ObjectParameter("IdOpcionDefecto", typeof(int));
    
            var plataformaParameter = plataforma != null ?
                new ObjectParameter("Plataforma", plataforma) :
                new ObjectParameter("Plataforma", typeof(string));
    
            var tipotrabajadorParameter = tipotrabajador != null ?
                new ObjectParameter("tipotrabajador", tipotrabajador) :
                new ObjectParameter("tipotrabajador", typeof(string));
    
            var idCodigoParameter = idCodigo.HasValue ?
                new ObjectParameter("IdCodigo", idCodigo) :
                new ObjectParameter("IdCodigo", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SG_Agente>("USP_SS_HC_SG_Agente_LISTAR", mergeOption, idAgenteParameter, idGrupoParameter, idOrganizacionParameter, tipoAgenteParameter, codigoAgenteParameter, idEmpleadoParameter, indicadorMultipleParameter, claveParameter, expiraClaveParameter, fechaInicioParameter, fechaFinParameter, fechaExpiracionParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idGrupoTransaccionParameter, tipoTransaccionParameter, idOpcionDefectoParameter, plataformaParameter, tipotrabajadorParameter, idCodigoParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<VW_TABLACAMPO> USP_VW_TABLACAMPO_LISTA(Nullable<int> iDFAVORITOTABLA, Nullable<int> iDCAMPO, string dESCRIPCIONTABLA, string dESCRIPTABLACAMPO, Nullable<int> numeroClavePrimaria, Nullable<int> eSTADO, string aCCION, Nullable<int> tIPOTABLA, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_TABLACAMPO).Assembly);
    
            var iDFAVORITOTABLAParameter = iDFAVORITOTABLA.HasValue ?
                new ObjectParameter("IDFAVORITOTABLA", iDFAVORITOTABLA) :
                new ObjectParameter("IDFAVORITOTABLA", typeof(int));
    
            var iDCAMPOParameter = iDCAMPO.HasValue ?
                new ObjectParameter("IDCAMPO", iDCAMPO) :
                new ObjectParameter("IDCAMPO", typeof(int));
    
            var dESCRIPCIONTABLAParameter = dESCRIPCIONTABLA != null ?
                new ObjectParameter("DESCRIPCIONTABLA", dESCRIPCIONTABLA) :
                new ObjectParameter("DESCRIPCIONTABLA", typeof(string));
    
            var dESCRIPTABLACAMPOParameter = dESCRIPTABLACAMPO != null ?
                new ObjectParameter("DESCRIPTABLACAMPO", dESCRIPTABLACAMPO) :
                new ObjectParameter("DESCRIPTABLACAMPO", typeof(string));
    
            var numeroClavePrimariaParameter = numeroClavePrimaria.HasValue ?
                new ObjectParameter("NumeroClavePrimaria", numeroClavePrimaria) :
                new ObjectParameter("NumeroClavePrimaria", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var tIPOTABLAParameter = tIPOTABLA.HasValue ?
                new ObjectParameter("TIPOTABLA", tIPOTABLA) :
                new ObjectParameter("TIPOTABLA", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_TABLACAMPO>("USP_VW_TABLACAMPO_LISTA", iDFAVORITOTABLAParameter, iDCAMPOParameter, dESCRIPCIONTABLAParameter, dESCRIPTABLACAMPOParameter, numeroClavePrimariaParameter, eSTADOParameter, aCCIONParameter, tIPOTABLAParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_TABLACAMPO> USP_VW_TABLACAMPO_LISTA(Nullable<int> iDFAVORITOTABLA, Nullable<int> iDCAMPO, string dESCRIPCIONTABLA, string dESCRIPTABLACAMPO, Nullable<int> numeroClavePrimaria, Nullable<int> eSTADO, string aCCION, Nullable<int> tIPOTABLA, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_TABLACAMPO).Assembly);
    
            var iDFAVORITOTABLAParameter = iDFAVORITOTABLA.HasValue ?
                new ObjectParameter("IDFAVORITOTABLA", iDFAVORITOTABLA) :
                new ObjectParameter("IDFAVORITOTABLA", typeof(int));
    
            var iDCAMPOParameter = iDCAMPO.HasValue ?
                new ObjectParameter("IDCAMPO", iDCAMPO) :
                new ObjectParameter("IDCAMPO", typeof(int));
    
            var dESCRIPCIONTABLAParameter = dESCRIPCIONTABLA != null ?
                new ObjectParameter("DESCRIPCIONTABLA", dESCRIPCIONTABLA) :
                new ObjectParameter("DESCRIPCIONTABLA", typeof(string));
    
            var dESCRIPTABLACAMPOParameter = dESCRIPTABLACAMPO != null ?
                new ObjectParameter("DESCRIPTABLACAMPO", dESCRIPTABLACAMPO) :
                new ObjectParameter("DESCRIPTABLACAMPO", typeof(string));
    
            var numeroClavePrimariaParameter = numeroClavePrimaria.HasValue ?
                new ObjectParameter("NumeroClavePrimaria", numeroClavePrimaria) :
                new ObjectParameter("NumeroClavePrimaria", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var tIPOTABLAParameter = tIPOTABLA.HasValue ?
                new ObjectParameter("TIPOTABLA", tIPOTABLA) :
                new ObjectParameter("TIPOTABLA", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_TABLACAMPO>("USP_VW_TABLACAMPO_LISTA", mergeOption, iDFAVORITOTABLAParameter, iDCAMPOParameter, dESCRIPCIONTABLAParameter, dESCRIPTABLACAMPOParameter, numeroClavePrimariaParameter, eSTADOParameter, aCCIONParameter, tIPOTABLAParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_VW_TABLACAMPO(Nullable<int> iDFAVORITOTABLA, Nullable<int> iDCAMPO, string dESCRIPCIONTABLA, string dESCRIPTABLACAMPO, Nullable<int> numeroClavePrimaria, Nullable<int> eSTADO, string aCCION, Nullable<int> tIPOTABLA)
        {
            var iDFAVORITOTABLAParameter = iDFAVORITOTABLA.HasValue ?
                new ObjectParameter("IDFAVORITOTABLA", iDFAVORITOTABLA) :
                new ObjectParameter("IDFAVORITOTABLA", typeof(int));
    
            var iDCAMPOParameter = iDCAMPO.HasValue ?
                new ObjectParameter("IDCAMPO", iDCAMPO) :
                new ObjectParameter("IDCAMPO", typeof(int));
    
            var dESCRIPCIONTABLAParameter = dESCRIPCIONTABLA != null ?
                new ObjectParameter("DESCRIPCIONTABLA", dESCRIPCIONTABLA) :
                new ObjectParameter("DESCRIPCIONTABLA", typeof(string));
    
            var dESCRIPTABLACAMPOParameter = dESCRIPTABLACAMPO != null ?
                new ObjectParameter("DESCRIPTABLACAMPO", dESCRIPTABLACAMPO) :
                new ObjectParameter("DESCRIPTABLACAMPO", typeof(string));
    
            var numeroClavePrimariaParameter = numeroClavePrimaria.HasValue ?
                new ObjectParameter("NumeroClavePrimaria", numeroClavePrimaria) :
                new ObjectParameter("NumeroClavePrimaria", typeof(int));
    
            var eSTADOParameter = eSTADO.HasValue ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var tIPOTABLAParameter = tIPOTABLA.HasValue ?
                new ObjectParameter("TIPOTABLA", tIPOTABLA) :
                new ObjectParameter("TIPOTABLA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_VW_TABLACAMPO", iDFAVORITOTABLAParameter, iDCAMPOParameter, dESCRIPCIONTABLAParameter, dESCRIPTABLACAMPOParameter, numeroClavePrimariaParameter, eSTADOParameter, aCCIONParameter, tIPOTABLAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_SG_Agente(Nullable<int> idAgente, Nullable<int> idGrupo, Nullable<int> idOrganizacion, Nullable<int> tipoAgente, string codigoAgente, Nullable<int> idEmpleado, Nullable<int> indicadorMultiple, string clave, Nullable<int> expiraClave, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> fechaExpiracion, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idGrupoTransaccion, Nullable<int> tipoTransaccion, Nullable<int> idOpcionDefecto, string plataforma, string tipotrabajador, Nullable<int> idCodigo, string aCCION)
        {
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var idOrganizacionParameter = idOrganizacion.HasValue ?
                new ObjectParameter("IdOrganizacion", idOrganizacion) :
                new ObjectParameter("IdOrganizacion", typeof(int));
    
            var tipoAgenteParameter = tipoAgente.HasValue ?
                new ObjectParameter("TipoAgente", tipoAgente) :
                new ObjectParameter("TipoAgente", typeof(int));
    
            var codigoAgenteParameter = codigoAgente != null ?
                new ObjectParameter("CodigoAgente", codigoAgente) :
                new ObjectParameter("CodigoAgente", typeof(string));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var indicadorMultipleParameter = indicadorMultiple.HasValue ?
                new ObjectParameter("IndicadorMultiple", indicadorMultiple) :
                new ObjectParameter("IndicadorMultiple", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var expiraClaveParameter = expiraClave.HasValue ?
                new ObjectParameter("ExpiraClave", expiraClave) :
                new ObjectParameter("ExpiraClave", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var fechaExpiracionParameter = fechaExpiracion.HasValue ?
                new ObjectParameter("FechaExpiracion", fechaExpiracion) :
                new ObjectParameter("FechaExpiracion", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idGrupoTransaccionParameter = idGrupoTransaccion.HasValue ?
                new ObjectParameter("IdGrupoTransaccion", idGrupoTransaccion) :
                new ObjectParameter("IdGrupoTransaccion", typeof(int));
    
            var tipoTransaccionParameter = tipoTransaccion.HasValue ?
                new ObjectParameter("TipoTransaccion", tipoTransaccion) :
                new ObjectParameter("TipoTransaccion", typeof(int));
    
            var idOpcionDefectoParameter = idOpcionDefecto.HasValue ?
                new ObjectParameter("IdOpcionDefecto", idOpcionDefecto) :
                new ObjectParameter("IdOpcionDefecto", typeof(int));
    
            var plataformaParameter = plataforma != null ?
                new ObjectParameter("Plataforma", plataforma) :
                new ObjectParameter("Plataforma", typeof(string));
    
            var tipotrabajadorParameter = tipotrabajador != null ?
                new ObjectParameter("tipotrabajador", tipotrabajador) :
                new ObjectParameter("tipotrabajador", typeof(string));
    
            var idCodigoParameter = idCodigo.HasValue ?
                new ObjectParameter("IdCodigo", idCodigo) :
                new ObjectParameter("IdCodigo", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_SG_Agente", idAgenteParameter, idGrupoParameter, idOrganizacionParameter, tipoAgenteParameter, codigoAgenteParameter, idEmpleadoParameter, indicadorMultipleParameter, claveParameter, expiraClaveParameter, fechaInicioParameter, fechaFinParameter, fechaExpiracionParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idGrupoTransaccionParameter, tipoTransaccionParameter, idOpcionDefectoParameter, plataformaParameter, tipotrabajadorParameter, idCodigoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_VW_ATENCIONPACIENTE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<int> aaaaAtencion, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> tipoAtencion, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> tipoOrdenAtencion, Nullable<int> estado, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idEspecialidad, string codigoOA, Nullable<System.DateTime> fechaOrden, Nullable<int> idProcedimiento, Nullable<int> idTipoOrden, Nullable<System.DateTime> fechaRegistroEpiClinico, Nullable<System.DateTime> fechaCierreEpiClinico, Nullable<int> tipoPaciente, Nullable<int> edad, string codigoHC, string codigoHCAnterior, string codigoHCSecundario, string tipoHistoria, Nullable<int> estadoPaciente, Nullable<int> numeroFile, Nullable<int> iDPACIENTE_OK, Nullable<int> persona, string nombreCompleto, string tipoDocumento, string documento, string esCliente, string esProveedor, string esEmpleado, string esOtro, string tipoPersona, Nullable<System.DateTime> fechaNacimiento, string sexo, string nacionalidad, string estadoCivil, string nivelInstruccion, string codigoPostal, string provincia, string departamento, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, string pais, string esPaciente, string esEmpresa, Nullable<int> personanew, string estadoPersona, string servicio, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string version, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var aaaaAtencionParameter = aaaaAtencion.HasValue ?
                new ObjectParameter("aaaaAtencion", aaaaAtencion) :
                new ObjectParameter("aaaaAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var fechaOrdenParameter = fechaOrden.HasValue ?
                new ObjectParameter("FechaOrden", fechaOrden) :
                new ObjectParameter("FechaOrden", typeof(System.DateTime));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var idTipoOrdenParameter = idTipoOrden.HasValue ?
                new ObjectParameter("IdTipoOrden", idTipoOrden) :
                new ObjectParameter("IdTipoOrden", typeof(int));
    
            var fechaRegistroEpiClinicoParameter = fechaRegistroEpiClinico.HasValue ?
                new ObjectParameter("FechaRegistroEpiClinico", fechaRegistroEpiClinico) :
                new ObjectParameter("FechaRegistroEpiClinico", typeof(System.DateTime));
    
            var fechaCierreEpiClinicoParameter = fechaCierreEpiClinico.HasValue ?
                new ObjectParameter("FechaCierreEpiClinico", fechaCierreEpiClinico) :
                new ObjectParameter("FechaCierreEpiClinico", typeof(System.DateTime));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoHCSecundarioParameter = codigoHCSecundario != null ?
                new ObjectParameter("CodigoHCSecundario", codigoHCSecundario) :
                new ObjectParameter("CodigoHCSecundario", typeof(string));
    
            var tipoHistoriaParameter = tipoHistoria != null ?
                new ObjectParameter("TipoHistoria", tipoHistoria) :
                new ObjectParameter("TipoHistoria", typeof(string));
    
            var estadoPacienteParameter = estadoPaciente.HasValue ?
                new ObjectParameter("EstadoPaciente", estadoPaciente) :
                new ObjectParameter("EstadoPaciente", typeof(int));
    
            var numeroFileParameter = numeroFile.HasValue ?
                new ObjectParameter("NumeroFile", numeroFile) :
                new ObjectParameter("NumeroFile", typeof(int));
    
            var iDPACIENTE_OKParameter = iDPACIENTE_OK.HasValue ?
                new ObjectParameter("IDPACIENTE_OK", iDPACIENTE_OK) :
                new ObjectParameter("IDPACIENTE_OK", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var personanewParameter = personanew.HasValue ?
                new ObjectParameter("personanew", personanew) :
                new ObjectParameter("personanew", typeof(int));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_VW_ATENCIONPACIENTE", unidadReplicacionParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idPacienteParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, aaaaAtencionParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, tipoAtencionParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, tipoOrdenAtencionParameter, estadoParameter, usuarioModificacionParameter, fechaModificacionParameter, idEspecialidadParameter, codigoOAParameter, fechaOrdenParameter, idProcedimientoParameter, idTipoOrdenParameter, fechaRegistroEpiClinicoParameter, fechaCierreEpiClinicoParameter, tipoPacienteParameter, edadParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoHCSecundarioParameter, tipoHistoriaParameter, estadoPacienteParameter, numeroFileParameter, iDPACIENTE_OKParameter, personaParameter, nombreCompletoParameter, tipoDocumentoParameter, documentoParameter, esClienteParameter, esProveedorParameter, esEmpleadoParameter, esOtroParameter, tipoPersonaParameter, fechaNacimientoParameter, sexoParameter, nacionalidadParameter, estadoCivilParameter, nivelInstruccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, paisParameter, esPacienteParameter, esEmpresaParameter, personanewParameter, estadoPersonaParameter, servicioParameter, iNICIOParameter, nUMEROFILASParameter, versionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<VW_ATENCIONPACIENTE> USP_VW_ATENCIONPACIENTE_LISTAR(string unidadReplicacion, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<int> aaaaAtencion, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> tipoAtencion, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> tipoOrdenAtencion, Nullable<int> estado, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idEspecialidad, string codigoOA, Nullable<System.DateTime> fechaOrden, Nullable<int> idProcedimiento, Nullable<int> idTipoOrden, Nullable<System.DateTime> fechaRegistroEpiClinico, Nullable<System.DateTime> fechaCierreEpiClinico, Nullable<int> tipoPaciente, Nullable<int> edad, string codigoHC, string codigoHCAnterior, string codigoHCSecundario, string tipoHistoria, Nullable<int> estadoPaciente, Nullable<int> numeroFile, Nullable<int> iDPACIENTE_OK, Nullable<int> persona, string nombreCompleto, string tipoDocumento, string documento, string esCliente, string esProveedor, string esEmpleado, string esOtro, string tipoPersona, Nullable<System.DateTime> fechaNacimiento, string sexo, string nacionalidad, string estadoCivil, string nivelInstruccion, string codigoPostal, string provincia, string departamento, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, string pais, string esPaciente, string esEmpresa, Nullable<int> personanew, string estadoPersona, string servicio, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string version, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_ATENCIONPACIENTE).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var aaaaAtencionParameter = aaaaAtencion.HasValue ?
                new ObjectParameter("aaaaAtencion", aaaaAtencion) :
                new ObjectParameter("aaaaAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var fechaOrdenParameter = fechaOrden.HasValue ?
                new ObjectParameter("FechaOrden", fechaOrden) :
                new ObjectParameter("FechaOrden", typeof(System.DateTime));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var idTipoOrdenParameter = idTipoOrden.HasValue ?
                new ObjectParameter("IdTipoOrden", idTipoOrden) :
                new ObjectParameter("IdTipoOrden", typeof(int));
    
            var fechaRegistroEpiClinicoParameter = fechaRegistroEpiClinico.HasValue ?
                new ObjectParameter("FechaRegistroEpiClinico", fechaRegistroEpiClinico) :
                new ObjectParameter("FechaRegistroEpiClinico", typeof(System.DateTime));
    
            var fechaCierreEpiClinicoParameter = fechaCierreEpiClinico.HasValue ?
                new ObjectParameter("FechaCierreEpiClinico", fechaCierreEpiClinico) :
                new ObjectParameter("FechaCierreEpiClinico", typeof(System.DateTime));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoHCSecundarioParameter = codigoHCSecundario != null ?
                new ObjectParameter("CodigoHCSecundario", codigoHCSecundario) :
                new ObjectParameter("CodigoHCSecundario", typeof(string));
    
            var tipoHistoriaParameter = tipoHistoria != null ?
                new ObjectParameter("TipoHistoria", tipoHistoria) :
                new ObjectParameter("TipoHistoria", typeof(string));
    
            var estadoPacienteParameter = estadoPaciente.HasValue ?
                new ObjectParameter("EstadoPaciente", estadoPaciente) :
                new ObjectParameter("EstadoPaciente", typeof(int));
    
            var numeroFileParameter = numeroFile.HasValue ?
                new ObjectParameter("NumeroFile", numeroFile) :
                new ObjectParameter("NumeroFile", typeof(int));
    
            var iDPACIENTE_OKParameter = iDPACIENTE_OK.HasValue ?
                new ObjectParameter("IDPACIENTE_OK", iDPACIENTE_OK) :
                new ObjectParameter("IDPACIENTE_OK", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var personanewParameter = personanew.HasValue ?
                new ObjectParameter("personanew", personanew) :
                new ObjectParameter("personanew", typeof(int));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_ATENCIONPACIENTE>("USP_VW_ATENCIONPACIENTE_LISTAR", unidadReplicacionParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idPacienteParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, aaaaAtencionParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, tipoAtencionParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, tipoOrdenAtencionParameter, estadoParameter, usuarioModificacionParameter, fechaModificacionParameter, idEspecialidadParameter, codigoOAParameter, fechaOrdenParameter, idProcedimientoParameter, idTipoOrdenParameter, fechaRegistroEpiClinicoParameter, fechaCierreEpiClinicoParameter, tipoPacienteParameter, edadParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoHCSecundarioParameter, tipoHistoriaParameter, estadoPacienteParameter, numeroFileParameter, iDPACIENTE_OKParameter, personaParameter, nombreCompletoParameter, tipoDocumentoParameter, documentoParameter, esClienteParameter, esProveedorParameter, esEmpleadoParameter, esOtroParameter, tipoPersonaParameter, fechaNacimientoParameter, sexoParameter, nacionalidadParameter, estadoCivilParameter, nivelInstruccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, paisParameter, esPacienteParameter, esEmpresaParameter, personanewParameter, estadoPersonaParameter, servicioParameter, iNICIOParameter, nUMEROFILASParameter, versionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<VW_ATENCIONPACIENTE> USP_VW_ATENCIONPACIENTE_LISTAR(string unidadReplicacion, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<int> aaaaAtencion, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> tipoAtencion, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> tipoOrdenAtencion, Nullable<int> estado, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idEspecialidad, string codigoOA, Nullable<System.DateTime> fechaOrden, Nullable<int> idProcedimiento, Nullable<int> idTipoOrden, Nullable<System.DateTime> fechaRegistroEpiClinico, Nullable<System.DateTime> fechaCierreEpiClinico, Nullable<int> tipoPaciente, Nullable<int> edad, string codigoHC, string codigoHCAnterior, string codigoHCSecundario, string tipoHistoria, Nullable<int> estadoPaciente, Nullable<int> numeroFile, Nullable<int> iDPACIENTE_OK, Nullable<int> persona, string nombreCompleto, string tipoDocumento, string documento, string esCliente, string esProveedor, string esEmpleado, string esOtro, string tipoPersona, Nullable<System.DateTime> fechaNacimiento, string sexo, string nacionalidad, string estadoCivil, string nivelInstruccion, string codigoPostal, string provincia, string departamento, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, string pais, string esPaciente, string esEmpresa, Nullable<int> personanew, string estadoPersona, string servicio, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string version, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_ATENCIONPACIENTE).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var aaaaAtencionParameter = aaaaAtencion.HasValue ?
                new ObjectParameter("aaaaAtencion", aaaaAtencion) :
                new ObjectParameter("aaaaAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var fechaOrdenParameter = fechaOrden.HasValue ?
                new ObjectParameter("FechaOrden", fechaOrden) :
                new ObjectParameter("FechaOrden", typeof(System.DateTime));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var idTipoOrdenParameter = idTipoOrden.HasValue ?
                new ObjectParameter("IdTipoOrden", idTipoOrden) :
                new ObjectParameter("IdTipoOrden", typeof(int));
    
            var fechaRegistroEpiClinicoParameter = fechaRegistroEpiClinico.HasValue ?
                new ObjectParameter("FechaRegistroEpiClinico", fechaRegistroEpiClinico) :
                new ObjectParameter("FechaRegistroEpiClinico", typeof(System.DateTime));
    
            var fechaCierreEpiClinicoParameter = fechaCierreEpiClinico.HasValue ?
                new ObjectParameter("FechaCierreEpiClinico", fechaCierreEpiClinico) :
                new ObjectParameter("FechaCierreEpiClinico", typeof(System.DateTime));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoHCSecundarioParameter = codigoHCSecundario != null ?
                new ObjectParameter("CodigoHCSecundario", codigoHCSecundario) :
                new ObjectParameter("CodigoHCSecundario", typeof(string));
    
            var tipoHistoriaParameter = tipoHistoria != null ?
                new ObjectParameter("TipoHistoria", tipoHistoria) :
                new ObjectParameter("TipoHistoria", typeof(string));
    
            var estadoPacienteParameter = estadoPaciente.HasValue ?
                new ObjectParameter("EstadoPaciente", estadoPaciente) :
                new ObjectParameter("EstadoPaciente", typeof(int));
    
            var numeroFileParameter = numeroFile.HasValue ?
                new ObjectParameter("NumeroFile", numeroFile) :
                new ObjectParameter("NumeroFile", typeof(int));
    
            var iDPACIENTE_OKParameter = iDPACIENTE_OK.HasValue ?
                new ObjectParameter("IDPACIENTE_OK", iDPACIENTE_OK) :
                new ObjectParameter("IDPACIENTE_OK", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var personanewParameter = personanew.HasValue ?
                new ObjectParameter("personanew", personanew) :
                new ObjectParameter("personanew", typeof(int));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_ATENCIONPACIENTE>("USP_VW_ATENCIONPACIENTE_LISTAR", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idPacienteParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, aaaaAtencionParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, tipoAtencionParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, tipoOrdenAtencionParameter, estadoParameter, usuarioModificacionParameter, fechaModificacionParameter, idEspecialidadParameter, codigoOAParameter, fechaOrdenParameter, idProcedimientoParameter, idTipoOrdenParameter, fechaRegistroEpiClinicoParameter, fechaCierreEpiClinicoParameter, tipoPacienteParameter, edadParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoHCSecundarioParameter, tipoHistoriaParameter, estadoPacienteParameter, numeroFileParameter, iDPACIENTE_OKParameter, personaParameter, nombreCompletoParameter, tipoDocumentoParameter, documentoParameter, esClienteParameter, esProveedorParameter, esEmpleadoParameter, esOtroParameter, tipoPersonaParameter, fechaNacimientoParameter, sexoParameter, nacionalidadParameter, estadoCivilParameter, nivelInstruccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, paisParameter, esPacienteParameter, esEmpresaParameter, personanewParameter, estadoPersonaParameter, servicioParameter, iNICIOParameter, nUMEROFILASParameter, versionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_ProcedimientoInforme(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> secuenciaInforme, string nombre, string rutaInforme, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var secuenciaInformeParameter = secuenciaInforme.HasValue ?
                new ObjectParameter("SecuenciaInforme", secuenciaInforme) :
                new ObjectParameter("SecuenciaInforme", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var rutaInformeParameter = rutaInforme != null ?
                new ObjectParameter("RutaInforme", rutaInforme) :
                new ObjectParameter("RutaInforme", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_ProcedimientoInforme", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, secuenciaInformeParameter, nombreParameter, rutaInformeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_ProcedimientoInforme> USP_SS_HC_ProcedimientoInformeListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> secuenciaInforme, string nombre, string rutaInforme, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> inicio, Nullable<int> final, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ProcedimientoInforme).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var secuenciaInformeParameter = secuenciaInforme.HasValue ?
                new ObjectParameter("SecuenciaInforme", secuenciaInforme) :
                new ObjectParameter("SecuenciaInforme", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var rutaInformeParameter = rutaInforme != null ?
                new ObjectParameter("RutaInforme", rutaInforme) :
                new ObjectParameter("RutaInforme", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("final", final) :
                new ObjectParameter("final", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ProcedimientoInforme>("USP_SS_HC_ProcedimientoInformeListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, secuenciaInformeParameter, nombreParameter, rutaInformeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, inicioParameter, finalParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_ProcedimientoInforme> USP_SS_HC_ProcedimientoInformeListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> secuenciaInforme, string nombre, string rutaInforme, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> inicio, Nullable<int> final, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ProcedimientoInforme).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var secuenciaInformeParameter = secuenciaInforme.HasValue ?
                new ObjectParameter("SecuenciaInforme", secuenciaInforme) :
                new ObjectParameter("SecuenciaInforme", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var rutaInformeParameter = rutaInforme != null ?
                new ObjectParameter("RutaInforme", rutaInforme) :
                new ObjectParameter("RutaInforme", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("final", final) :
                new ObjectParameter("final", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ProcedimientoInforme>("USP_SS_HC_ProcedimientoInformeListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, secuenciaInformeParameter, nombreParameter, rutaInformeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, inicioParameter, finalParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ParametrosMast(string companiaCodigo, string aplicacionCodigo, string parametroClave, string descripcionParametro, string explicacion, string tipodeDatoFlag, string texto, Nullable<decimal> numero, Nullable<System.DateTime> fecha, string financeComunFlag, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string explicacionAdicional, string texto1, string texto2, string unidadReplicacion, string accion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var parametroClaveParameter = parametroClave != null ?
                new ObjectParameter("ParametroClave", parametroClave) :
                new ObjectParameter("ParametroClave", typeof(string));
    
            var descripcionParametroParameter = descripcionParametro != null ?
                new ObjectParameter("DescripcionParametro", descripcionParametro) :
                new ObjectParameter("DescripcionParametro", typeof(string));
    
            var explicacionParameter = explicacion != null ?
                new ObjectParameter("Explicacion", explicacion) :
                new ObjectParameter("Explicacion", typeof(string));
    
            var tipodeDatoFlagParameter = tipodeDatoFlag != null ?
                new ObjectParameter("TipodeDatoFlag", tipodeDatoFlag) :
                new ObjectParameter("TipodeDatoFlag", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var financeComunFlagParameter = financeComunFlag != null ?
                new ObjectParameter("FinanceComunFlag", financeComunFlag) :
                new ObjectParameter("FinanceComunFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var explicacionAdicionalParameter = explicacionAdicional != null ?
                new ObjectParameter("ExplicacionAdicional", explicacionAdicional) :
                new ObjectParameter("ExplicacionAdicional", typeof(string));
    
            var texto1Parameter = texto1 != null ?
                new ObjectParameter("Texto1", texto1) :
                new ObjectParameter("Texto1", typeof(string));
    
            var texto2Parameter = texto2 != null ?
                new ObjectParameter("Texto2", texto2) :
                new ObjectParameter("Texto2", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ParametrosMast", companiaCodigoParameter, aplicacionCodigoParameter, parametroClaveParameter, descripcionParametroParameter, explicacionParameter, tipodeDatoFlagParameter, textoParameter, numeroParameter, fechaParameter, financeComunFlagParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, explicacionAdicionalParameter, texto1Parameter, texto2Parameter, unidadReplicacionParameter, accionParameter, usuarioCreacionParameter, fechaCreacionParameter);
        }
    
        public virtual ObjectResult<ParametrosMast> USP_ParametrosMastListar(string companiaCodigo, string aplicacionCodigo, string parametroClave, string descripcionParametro, string explicacion, string tipodeDatoFlag, string texto, Nullable<decimal> numero, Nullable<System.DateTime> fecha, string financeComunFlag, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string explicacionAdicional, string texto1, string texto2, string unidadReplicacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ParametrosMast).Assembly);
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var parametroClaveParameter = parametroClave != null ?
                new ObjectParameter("ParametroClave", parametroClave) :
                new ObjectParameter("ParametroClave", typeof(string));
    
            var descripcionParametroParameter = descripcionParametro != null ?
                new ObjectParameter("DescripcionParametro", descripcionParametro) :
                new ObjectParameter("DescripcionParametro", typeof(string));
    
            var explicacionParameter = explicacion != null ?
                new ObjectParameter("Explicacion", explicacion) :
                new ObjectParameter("Explicacion", typeof(string));
    
            var tipodeDatoFlagParameter = tipodeDatoFlag != null ?
                new ObjectParameter("TipodeDatoFlag", tipodeDatoFlag) :
                new ObjectParameter("TipodeDatoFlag", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var financeComunFlagParameter = financeComunFlag != null ?
                new ObjectParameter("FinanceComunFlag", financeComunFlag) :
                new ObjectParameter("FinanceComunFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var explicacionAdicionalParameter = explicacionAdicional != null ?
                new ObjectParameter("ExplicacionAdicional", explicacionAdicional) :
                new ObjectParameter("ExplicacionAdicional", typeof(string));
    
            var texto1Parameter = texto1 != null ?
                new ObjectParameter("Texto1", texto1) :
                new ObjectParameter("Texto1", typeof(string));
    
            var texto2Parameter = texto2 != null ?
                new ObjectParameter("Texto2", texto2) :
                new ObjectParameter("Texto2", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ParametrosMast>("USP_ParametrosMastListar", companiaCodigoParameter, aplicacionCodigoParameter, parametroClaveParameter, descripcionParametroParameter, explicacionParameter, tipodeDatoFlagParameter, textoParameter, numeroParameter, fechaParameter, financeComunFlagParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, explicacionAdicionalParameter, texto1Parameter, texto2Parameter, unidadReplicacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter, usuarioCreacionParameter, fechaCreacionParameter);
        }
    
        public virtual ObjectResult<ParametrosMast> USP_ParametrosMastListar(string companiaCodigo, string aplicacionCodigo, string parametroClave, string descripcionParametro, string explicacion, string tipodeDatoFlag, string texto, Nullable<decimal> numero, Nullable<System.DateTime> fecha, string financeComunFlag, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string explicacionAdicional, string texto1, string texto2, string unidadReplicacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(ParametrosMast).Assembly);
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var parametroClaveParameter = parametroClave != null ?
                new ObjectParameter("ParametroClave", parametroClave) :
                new ObjectParameter("ParametroClave", typeof(string));
    
            var descripcionParametroParameter = descripcionParametro != null ?
                new ObjectParameter("DescripcionParametro", descripcionParametro) :
                new ObjectParameter("DescripcionParametro", typeof(string));
    
            var explicacionParameter = explicacion != null ?
                new ObjectParameter("Explicacion", explicacion) :
                new ObjectParameter("Explicacion", typeof(string));
    
            var tipodeDatoFlagParameter = tipodeDatoFlag != null ?
                new ObjectParameter("TipodeDatoFlag", tipodeDatoFlag) :
                new ObjectParameter("TipodeDatoFlag", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var financeComunFlagParameter = financeComunFlag != null ?
                new ObjectParameter("FinanceComunFlag", financeComunFlag) :
                new ObjectParameter("FinanceComunFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var explicacionAdicionalParameter = explicacionAdicional != null ?
                new ObjectParameter("ExplicacionAdicional", explicacionAdicional) :
                new ObjectParameter("ExplicacionAdicional", typeof(string));
    
            var texto1Parameter = texto1 != null ?
                new ObjectParameter("Texto1", texto1) :
                new ObjectParameter("Texto1", typeof(string));
    
            var texto2Parameter = texto2 != null ?
                new ObjectParameter("Texto2", texto2) :
                new ObjectParameter("Texto2", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ParametrosMast>("USP_ParametrosMastListar", mergeOption, companiaCodigoParameter, aplicacionCodigoParameter, parametroClaveParameter, descripcionParametroParameter, explicacionParameter, tipodeDatoFlagParameter, textoParameter, numeroParameter, fechaParameter, financeComunFlagParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, explicacionAdicionalParameter, texto1Parameter, texto2Parameter, unidadReplicacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter, usuarioCreacionParameter, fechaCreacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_CatalogoUnidadServicio(Nullable<int> idUnidadServicio, string codigoUnidadServicio, Nullable<int> idUnidadServicioPadre, string descripcion, string descripcionExtranjera, Nullable<int> nivel, string ultimoNivelFlag, string cadenaRecursividad, Nullable<int> orden, string icono, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var codigoUnidadServicioParameter = codigoUnidadServicio != null ?
                new ObjectParameter("CodigoUnidadServicio", codigoUnidadServicio) :
                new ObjectParameter("CodigoUnidadServicio", typeof(string));
    
            var idUnidadServicioPadreParameter = idUnidadServicioPadre.HasValue ?
                new ObjectParameter("IdUnidadServicioPadre", idUnidadServicioPadre) :
                new ObjectParameter("IdUnidadServicioPadre", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var iconoParameter = icono != null ?
                new ObjectParameter("Icono", icono) :
                new ObjectParameter("Icono", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_CatalogoUnidadServicio", idUnidadServicioParameter, codigoUnidadServicioParameter, idUnidadServicioPadreParameter, descripcionParameter, descripcionExtranjeraParameter, nivelParameter, ultimoNivelFlagParameter, cadenaRecursividadParameter, ordenParameter, iconoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_HC_CatalogoUnidadServicio> USP_SS_HC_CatalogoUnidadServicioListar(Nullable<int> idUnidadServicio, string codigoUnidadServicio, Nullable<int> idUnidadServicioPadre, string descripcion, string descripcionExtranjera, Nullable<int> nivel, string ultimoNivelFlag, string cadenaRecursividad, Nullable<int> orden, string icono, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_CatalogoUnidadServicio).Assembly);
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var codigoUnidadServicioParameter = codigoUnidadServicio != null ?
                new ObjectParameter("CodigoUnidadServicio", codigoUnidadServicio) :
                new ObjectParameter("CodigoUnidadServicio", typeof(string));
    
            var idUnidadServicioPadreParameter = idUnidadServicioPadre.HasValue ?
                new ObjectParameter("IdUnidadServicioPadre", idUnidadServicioPadre) :
                new ObjectParameter("IdUnidadServicioPadre", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var iconoParameter = icono != null ?
                new ObjectParameter("Icono", icono) :
                new ObjectParameter("Icono", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_CatalogoUnidadServicio>("USP_SS_HC_CatalogoUnidadServicioListar", idUnidadServicioParameter, codigoUnidadServicioParameter, idUnidadServicioPadreParameter, descripcionParameter, descripcionExtranjeraParameter, nivelParameter, ultimoNivelFlagParameter, cadenaRecursividadParameter, ordenParameter, iconoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_CatalogoUnidadServicio> USP_SS_HC_CatalogoUnidadServicioListar(Nullable<int> idUnidadServicio, string codigoUnidadServicio, Nullable<int> idUnidadServicioPadre, string descripcion, string descripcionExtranjera, Nullable<int> nivel, string ultimoNivelFlag, string cadenaRecursividad, Nullable<int> orden, string icono, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_CatalogoUnidadServicio).Assembly);
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var codigoUnidadServicioParameter = codigoUnidadServicio != null ?
                new ObjectParameter("CodigoUnidadServicio", codigoUnidadServicio) :
                new ObjectParameter("CodigoUnidadServicio", typeof(string));
    
            var idUnidadServicioPadreParameter = idUnidadServicioPadre.HasValue ?
                new ObjectParameter("IdUnidadServicioPadre", idUnidadServicioPadre) :
                new ObjectParameter("IdUnidadServicioPadre", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var ultimoNivelFlagParameter = ultimoNivelFlag != null ?
                new ObjectParameter("UltimoNivelFlag", ultimoNivelFlag) :
                new ObjectParameter("UltimoNivelFlag", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var iconoParameter = icono != null ?
                new ObjectParameter("Icono", icono) :
                new ObjectParameter("Icono", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_CatalogoUnidadServicio>("USP_SS_HC_CatalogoUnidadServicioListar", mergeOption, idUnidadServicioParameter, codigoUnidadServicioParameter, idUnidadServicioPadreParameter, descripcionParameter, descripcionExtranjeraParameter, nivelParameter, ultimoNivelFlagParameter, cadenaRecursividadParameter, ordenParameter, iconoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_EpisodioClinico(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaCierre, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> codigoEpisodioClinico, Nullable<int> flagMedico, Nullable<int> flagEnfermera, Nullable<int> idOrdenAtencion, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var codigoEpisodioClinicoParameter = codigoEpisodioClinico.HasValue ?
                new ObjectParameter("CodigoEpisodioClinico", codigoEpisodioClinico) :
                new ObjectParameter("CodigoEpisodioClinico", typeof(int));
    
            var flagMedicoParameter = flagMedico.HasValue ?
                new ObjectParameter("FlagMedico", flagMedico) :
                new ObjectParameter("FlagMedico", typeof(int));
    
            var flagEnfermeraParameter = flagEnfermera.HasValue ?
                new ObjectParameter("FlagEnfermera", flagEnfermera) :
                new ObjectParameter("FlagEnfermera", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_EpisodioClinico", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, fechaRegistroParameter, fechaCierreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, codigoEpisodioClinicoParameter, flagMedicoParameter, flagEnfermeraParameter, idOrdenAtencionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_EpisodioClinico> USP_SS_HC_EpisodioClinicoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaCierre, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> codigoEpisodioClinico, Nullable<int> flagMedico, Nullable<int> flagEnfermera, Nullable<int> idOrdenAtencion, Nullable<int> inicio, Nullable<int> final, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_EpisodioClinico).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var codigoEpisodioClinicoParameter = codigoEpisodioClinico.HasValue ?
                new ObjectParameter("CodigoEpisodioClinico", codigoEpisodioClinico) :
                new ObjectParameter("CodigoEpisodioClinico", typeof(int));
    
            var flagMedicoParameter = flagMedico.HasValue ?
                new ObjectParameter("FlagMedico", flagMedico) :
                new ObjectParameter("FlagMedico", typeof(int));
    
            var flagEnfermeraParameter = flagEnfermera.HasValue ?
                new ObjectParameter("FlagEnfermera", flagEnfermera) :
                new ObjectParameter("FlagEnfermera", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_EpisodioClinico>("USP_SS_HC_EpisodioClinicoListar", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, fechaRegistroParameter, fechaCierreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, codigoEpisodioClinicoParameter, flagMedicoParameter, flagEnfermeraParameter, idOrdenAtencionParameter, inicioParameter, finalParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_EpisodioClinico> USP_SS_HC_EpisodioClinicoListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaCierre, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> codigoEpisodioClinico, Nullable<int> flagMedico, Nullable<int> flagEnfermera, Nullable<int> idOrdenAtencion, Nullable<int> inicio, Nullable<int> final, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_EpisodioClinico).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var codigoEpisodioClinicoParameter = codigoEpisodioClinico.HasValue ?
                new ObjectParameter("CodigoEpisodioClinico", codigoEpisodioClinico) :
                new ObjectParameter("CodigoEpisodioClinico", typeof(int));
    
            var flagMedicoParameter = flagMedico.HasValue ?
                new ObjectParameter("FlagMedico", flagMedico) :
                new ObjectParameter("FlagMedico", typeof(int));
    
            var flagEnfermeraParameter = flagEnfermera.HasValue ?
                new ObjectParameter("FlagEnfermera", flagEnfermera) :
                new ObjectParameter("FlagEnfermera", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("Final", final) :
                new ObjectParameter("Final", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_EpisodioClinico>("USP_SS_HC_EpisodioClinicoListar", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, fechaRegistroParameter, fechaCierreParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, codigoEpisodioClinicoParameter, flagMedicoParameter, flagEnfermeraParameter, idOrdenAtencionParameter, inicioParameter, finalParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_GE_Servicio(Nullable<int> idServicio, Nullable<int> idGrupoAtencion, string codigo, string descripcion, Nullable<int> indicadorTriaje, Nullable<int> tipoOrdenAtencion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string centroCosto, string cuentaBancaria, string accion)
        {
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var idGrupoAtencionParameter = idGrupoAtencion.HasValue ?
                new ObjectParameter("IdGrupoAtencion", idGrupoAtencion) :
                new ObjectParameter("IdGrupoAtencion", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var indicadorTriajeParameter = indicadorTriaje.HasValue ?
                new ObjectParameter("IndicadorTriaje", indicadorTriaje) :
                new ObjectParameter("IndicadorTriaje", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var cuentaBancariaParameter = cuentaBancaria != null ?
                new ObjectParameter("CuentaBancaria", cuentaBancaria) :
                new ObjectParameter("CuentaBancaria", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_GE_Servicio", idServicioParameter, idGrupoAtencionParameter, codigoParameter, descripcionParameter, indicadorTriajeParameter, tipoOrdenAtencionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, centroCostoParameter, cuentaBancariaParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_GE_Servicio> USP_SS_GE_ServicioListar(Nullable<int> idServicio, Nullable<int> idGrupoAtencion, string codigo, string descripcion, Nullable<int> indicadorTriaje, Nullable<int> tipoOrdenAtencion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string centroCosto, string cuentaBancaria, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_Servicio).Assembly);
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var idGrupoAtencionParameter = idGrupoAtencion.HasValue ?
                new ObjectParameter("IdGrupoAtencion", idGrupoAtencion) :
                new ObjectParameter("IdGrupoAtencion", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var indicadorTriajeParameter = indicadorTriaje.HasValue ?
                new ObjectParameter("IndicadorTriaje", indicadorTriaje) :
                new ObjectParameter("IndicadorTriaje", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var cuentaBancariaParameter = cuentaBancaria != null ?
                new ObjectParameter("CuentaBancaria", cuentaBancaria) :
                new ObjectParameter("CuentaBancaria", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_Servicio>("USP_SS_GE_ServicioListar", idServicioParameter, idGrupoAtencionParameter, codigoParameter, descripcionParameter, indicadorTriajeParameter, tipoOrdenAtencionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, centroCostoParameter, cuentaBancariaParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_GE_Servicio> USP_SS_GE_ServicioListar(Nullable<int> idServicio, Nullable<int> idGrupoAtencion, string codigo, string descripcion, Nullable<int> indicadorTriaje, Nullable<int> tipoOrdenAtencion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string centroCosto, string cuentaBancaria, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_Servicio).Assembly);
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var idGrupoAtencionParameter = idGrupoAtencion.HasValue ?
                new ObjectParameter("IdGrupoAtencion", idGrupoAtencion) :
                new ObjectParameter("IdGrupoAtencion", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var indicadorTriajeParameter = indicadorTriaje.HasValue ?
                new ObjectParameter("IndicadorTriaje", indicadorTriaje) :
                new ObjectParameter("IndicadorTriaje", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var cuentaBancariaParameter = cuentaBancaria != null ?
                new ObjectParameter("CuentaBancaria", cuentaBancaria) :
                new ObjectParameter("CuentaBancaria", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_Servicio>("USP_SS_GE_ServicioListar", mergeOption, idServicioParameter, idGrupoAtencionParameter, codigoParameter, descripcionParameter, indicadorTriajeParameter, tipoOrdenAtencionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, centroCostoParameter, cuentaBancariaParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_UnidadServicio(Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idServicio, string codigo, string descripcion, Nullable<int> indicadorTriaje, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var indicadorTriajeParameter = indicadorTriaje.HasValue ?
                new ObjectParameter("IndicadorTriaje", indicadorTriaje) :
                new ObjectParameter("IndicadorTriaje", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_UnidadServicio", idEstablecimientoSaludParameter, idUnidadServicioParameter, idServicioParameter, codigoParameter, descripcionParameter, indicadorTriajeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_HC_UnidadServicio> USP_SS_HC_UnidadServicioListar(Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idServicio, string codigo, string descripcion, Nullable<int> indicadorTriaje, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_UnidadServicio).Assembly);
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var indicadorTriajeParameter = indicadorTriaje.HasValue ?
                new ObjectParameter("IndicadorTriaje", indicadorTriaje) :
                new ObjectParameter("IndicadorTriaje", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_UnidadServicio>("USP_SS_HC_UnidadServicioListar", idEstablecimientoSaludParameter, idUnidadServicioParameter, idServicioParameter, codigoParameter, descripcionParameter, indicadorTriajeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_UnidadServicio> USP_SS_HC_UnidadServicioListar(Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idServicio, string codigo, string descripcion, Nullable<int> indicadorTriaje, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_UnidadServicio).Assembly);
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var indicadorTriajeParameter = indicadorTriaje.HasValue ?
                new ObjectParameter("IndicadorTriaje", indicadorTriaje) :
                new ObjectParameter("IndicadorTriaje", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_UnidadServicio>("USP_SS_HC_UnidadServicioListar", mergeOption, idEstablecimientoSaludParameter, idUnidadServicioParameter, idServicioParameter, codigoParameter, descripcionParameter, indicadorTriajeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_CatalogoUnidadServicio_TipoAtencion(Nullable<int> idUnidadServicio, Nullable<int> idTipoAtencion, string descripcion, string descripcionExtranjera, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("IdTipoAtencion", idTipoAtencion) :
                new ObjectParameter("IdTipoAtencion", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_CatalogoUnidadServicio_TipoAtencion", idUnidadServicioParameter, idTipoAtencionParameter, descripcionParameter, descripcionExtranjeraParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_HC_CatalogoUnidadServicio_TipoAtencion> USP_SS_HC_CatalogoUnidadServicio_TipoAtencionListar(Nullable<int> idUnidadServicio, Nullable<int> idTipoAtencion, string descripcion, string descripcionExtranjera, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_CatalogoUnidadServicio_TipoAtencion).Assembly);
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("IdTipoAtencion", idTipoAtencion) :
                new ObjectParameter("IdTipoAtencion", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_CatalogoUnidadServicio_TipoAtencion>("USP_SS_HC_CatalogoUnidadServicio_TipoAtencionListar", idUnidadServicioParameter, idTipoAtencionParameter, descripcionParameter, descripcionExtranjeraParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_CatalogoUnidadServicio_TipoAtencion> USP_SS_HC_CatalogoUnidadServicio_TipoAtencionListar(Nullable<int> idUnidadServicio, Nullable<int> idTipoAtencion, string descripcion, string descripcionExtranjera, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_CatalogoUnidadServicio_TipoAtencion).Assembly);
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("IdTipoAtencion", idTipoAtencion) :
                new ObjectParameter("IdTipoAtencion", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_CatalogoUnidadServicio_TipoAtencion>("USP_SS_HC_CatalogoUnidadServicio_TipoAtencionListar", mergeOption, idUnidadServicioParameter, idTipoAtencionParameter, descripcionParameter, descripcionExtranjeraParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_ATENCIONPACIENTE_GENERAL> USP_SHC_VW_ATENCIONPACIENTE_GENERAL_LISTAR(Nullable<int> numeroFila, string tipoListado, string citaTipo, Nullable<System.DateTime> citaFecha, Nullable<System.DateTime> citaHora, string origen, string nombreEspecialidad, string tipoPacienteNombre, string codigoOA, Nullable<System.DateTime> fechaInicio, string cama, string tipoOrdenAtencionNombre, string codigoHC, string codigoHCAnterior, string pacienteNombre, string medicoNombre, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> idHospitalizacion, Nullable<int> lineaHospitalizacion, Nullable<int> idConsultaExterna, Nullable<int> idProcedimiento, Nullable<int> modalidad, Nullable<int> indicadorSeguro, Nullable<int> idCita, Nullable<int> idPaciente, Nullable<int> tipoPaciente, Nullable<int> tipoAtencion, Nullable<int> idEspecialidad, Nullable<int> idEmpresaAseguradora, Nullable<int> tipoOrdenAtencion, string componente, string componenteNombre, string compania, string sucursal, Nullable<int> idMedico, Nullable<int> indicadorCirugia, Nullable<int> indicadorExamenPrincipal, string personaAnt, string sexo, Nullable<System.DateTime> fechaNacimiento, string estadoCivil, string nivelInstruccion, string direccion, string tipoDocumento, string documento, string apellidoPaterno, string apellidoMaterno, string nombres, string lugarNacimiento, string codigoPostal, string provincia, string departamento, string telefono, string correoElectronico, string esPaciente, string esEmpresa, string pais, string estadoPersona, Nullable<System.DateTime> fechaCierreEpiClinico, Nullable<int> estadoEpiClinico, string unidadReplicacion, string unidadReplicacionEC, Nullable<long> idEpisodioAtencion, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> estadoEpiAtencion, string usuarioCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaCreacion, Nullable<System.DateTime> fechaModificacion, string version, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> fechaOrden, string comentarios, string observaciones, string diagnostico, string unidadReplicacionHCE, Nullable<int> idPacienteHCE, Nullable<int> episodioClinicoHCE, Nullable<long> idEpisodioAtencionHCE, Nullable<int> secuenciaHCE, Nullable<int> codigoEpisodioClinico, Nullable<int> contador, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_ATENCIONPACIENTE_GENERAL).Assembly);
    
            var numeroFilaParameter = numeroFila.HasValue ?
                new ObjectParameter("NumeroFila", numeroFila) :
                new ObjectParameter("NumeroFila", typeof(int));
    
            var tipoListadoParameter = tipoListado != null ?
                new ObjectParameter("tipoListado", tipoListado) :
                new ObjectParameter("tipoListado", typeof(string));
    
            var citaTipoParameter = citaTipo != null ?
                new ObjectParameter("CitaTipo", citaTipo) :
                new ObjectParameter("CitaTipo", typeof(string));
    
            var citaFechaParameter = citaFecha.HasValue ?
                new ObjectParameter("CitaFecha", citaFecha) :
                new ObjectParameter("CitaFecha", typeof(System.DateTime));
    
            var citaHoraParameter = citaHora.HasValue ?
                new ObjectParameter("CitaHora", citaHora) :
                new ObjectParameter("CitaHora", typeof(System.DateTime));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var nombreEspecialidadParameter = nombreEspecialidad != null ?
                new ObjectParameter("NombreEspecialidad", nombreEspecialidad) :
                new ObjectParameter("NombreEspecialidad", typeof(string));
    
            var tipoPacienteNombreParameter = tipoPacienteNombre != null ?
                new ObjectParameter("TipoPacienteNombre", tipoPacienteNombre) :
                new ObjectParameter("TipoPacienteNombre", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var camaParameter = cama != null ?
                new ObjectParameter("Cama", cama) :
                new ObjectParameter("Cama", typeof(string));
    
            var tipoOrdenAtencionNombreParameter = tipoOrdenAtencionNombre != null ?
                new ObjectParameter("TipoOrdenAtencionNombre", tipoOrdenAtencionNombre) :
                new ObjectParameter("TipoOrdenAtencionNombre", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var pacienteNombreParameter = pacienteNombre != null ?
                new ObjectParameter("PacienteNombre", pacienteNombre) :
                new ObjectParameter("PacienteNombre", typeof(string));
    
            var medicoNombreParameter = medicoNombre != null ?
                new ObjectParameter("MedicoNombre", medicoNombre) :
                new ObjectParameter("MedicoNombre", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var idHospitalizacionParameter = idHospitalizacion.HasValue ?
                new ObjectParameter("IdHospitalizacion", idHospitalizacion) :
                new ObjectParameter("IdHospitalizacion", typeof(int));
    
            var lineaHospitalizacionParameter = lineaHospitalizacion.HasValue ?
                new ObjectParameter("LineaHospitalizacion", lineaHospitalizacion) :
                new ObjectParameter("LineaHospitalizacion", typeof(int));
    
            var idConsultaExternaParameter = idConsultaExterna.HasValue ?
                new ObjectParameter("IdConsultaExterna", idConsultaExterna) :
                new ObjectParameter("IdConsultaExterna", typeof(int));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var modalidadParameter = modalidad.HasValue ?
                new ObjectParameter("Modalidad", modalidad) :
                new ObjectParameter("Modalidad", typeof(int));
    
            var indicadorSeguroParameter = indicadorSeguro.HasValue ?
                new ObjectParameter("IndicadorSeguro", indicadorSeguro) :
                new ObjectParameter("IndicadorSeguro", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idEmpresaAseguradoraParameter = idEmpresaAseguradora.HasValue ?
                new ObjectParameter("IdEmpresaAseguradora", idEmpresaAseguradora) :
                new ObjectParameter("IdEmpresaAseguradora", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var componenteNombreParameter = componenteNombre != null ?
                new ObjectParameter("ComponenteNombre", componenteNombre) :
                new ObjectParameter("ComponenteNombre", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var indicadorCirugiaParameter = indicadorCirugia.HasValue ?
                new ObjectParameter("IndicadorCirugia", indicadorCirugia) :
                new ObjectParameter("IndicadorCirugia", typeof(int));
    
            var indicadorExamenPrincipalParameter = indicadorExamenPrincipal.HasValue ?
                new ObjectParameter("IndicadorExamenPrincipal", indicadorExamenPrincipal) :
                new ObjectParameter("IndicadorExamenPrincipal", typeof(int));
    
            var personaAntParameter = personaAnt != null ?
                new ObjectParameter("PersonaAnt", personaAnt) :
                new ObjectParameter("PersonaAnt", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var lugarNacimientoParameter = lugarNacimiento != null ?
                new ObjectParameter("LugarNacimiento", lugarNacimiento) :
                new ObjectParameter("LugarNacimiento", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var fechaCierreEpiClinicoParameter = fechaCierreEpiClinico.HasValue ?
                new ObjectParameter("FechaCierreEpiClinico", fechaCierreEpiClinico) :
                new ObjectParameter("FechaCierreEpiClinico", typeof(System.DateTime));
    
            var estadoEpiClinicoParameter = estadoEpiClinico.HasValue ?
                new ObjectParameter("EstadoEpiClinico", estadoEpiClinico) :
                new ObjectParameter("EstadoEpiClinico", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var estadoEpiAtencionParameter = estadoEpiAtencion.HasValue ?
                new ObjectParameter("EstadoEpiAtencion", estadoEpiAtencion) :
                new ObjectParameter("EstadoEpiAtencion", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var fechaOrdenParameter = fechaOrden.HasValue ?
                new ObjectParameter("FechaOrden", fechaOrden) :
                new ObjectParameter("FechaOrden", typeof(System.DateTime));
    
            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var diagnosticoParameter = diagnostico != null ?
                new ObjectParameter("Diagnostico", diagnostico) :
                new ObjectParameter("Diagnostico", typeof(string));
    
            var unidadReplicacionHCEParameter = unidadReplicacionHCE != null ?
                new ObjectParameter("UnidadReplicacionHCE", unidadReplicacionHCE) :
                new ObjectParameter("UnidadReplicacionHCE", typeof(string));
    
            var idPacienteHCEParameter = idPacienteHCE.HasValue ?
                new ObjectParameter("IdPacienteHCE", idPacienteHCE) :
                new ObjectParameter("IdPacienteHCE", typeof(int));
    
            var episodioClinicoHCEParameter = episodioClinicoHCE.HasValue ?
                new ObjectParameter("EpisodioClinicoHCE", episodioClinicoHCE) :
                new ObjectParameter("EpisodioClinicoHCE", typeof(int));
    
            var idEpisodioAtencionHCEParameter = idEpisodioAtencionHCE.HasValue ?
                new ObjectParameter("IdEpisodioAtencionHCE", idEpisodioAtencionHCE) :
                new ObjectParameter("IdEpisodioAtencionHCE", typeof(long));
    
            var secuenciaHCEParameter = secuenciaHCE.HasValue ?
                new ObjectParameter("SecuenciaHCE", secuenciaHCE) :
                new ObjectParameter("SecuenciaHCE", typeof(int));
    
            var codigoEpisodioClinicoParameter = codigoEpisodioClinico.HasValue ?
                new ObjectParameter("CodigoEpisodioClinico", codigoEpisodioClinico) :
                new ObjectParameter("CodigoEpisodioClinico", typeof(int));
    
            var contadorParameter = contador.HasValue ?
                new ObjectParameter("Contador", contador) :
                new ObjectParameter("Contador", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_ATENCIONPACIENTE_GENERAL>("USP_SHC_VW_ATENCIONPACIENTE_GENERAL_LISTAR", numeroFilaParameter, tipoListadoParameter, citaTipoParameter, citaFechaParameter, citaHoraParameter, origenParameter, nombreEspecialidadParameter, tipoPacienteNombreParameter, codigoOAParameter, fechaInicioParameter, camaParameter, tipoOrdenAtencionNombreParameter, codigoHCParameter, codigoHCAnteriorParameter, pacienteNombreParameter, medicoNombreParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, idHospitalizacionParameter, lineaHospitalizacionParameter, idConsultaExternaParameter, idProcedimientoParameter, modalidadParameter, indicadorSeguroParameter, idCitaParameter, idPacienteParameter, tipoPacienteParameter, tipoAtencionParameter, idEspecialidadParameter, idEmpresaAseguradoraParameter, tipoOrdenAtencionParameter, componenteParameter, componenteNombreParameter, companiaParameter, sucursalParameter, idMedicoParameter, indicadorCirugiaParameter, indicadorExamenPrincipalParameter, personaAntParameter, sexoParameter, fechaNacimientoParameter, estadoCivilParameter, nivelInstruccionParameter, direccionParameter, tipoDocumentoParameter, documentoParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombresParameter, lugarNacimientoParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, telefonoParameter, correoElectronicoParameter, esPacienteParameter, esEmpresaParameter, paisParameter, estadoPersonaParameter, fechaCierreEpiClinicoParameter, estadoEpiClinicoParameter, unidadReplicacionParameter, unidadReplicacionECParameter, idEpisodioAtencionParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, estadoEpiAtencionParameter, usuarioCreacionParameter, usuarioModificacionParameter, fechaCreacionParameter, fechaModificacionParameter, versionParameter, fechaFinParameter, fechaOrdenParameter, comentariosParameter, observacionesParameter, diagnosticoParameter, unidadReplicacionHCEParameter, idPacienteHCEParameter, episodioClinicoHCEParameter, idEpisodioAtencionHCEParameter, secuenciaHCEParameter, codigoEpisodioClinicoParameter, contadorParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<VW_ATENCIONPACIENTE_GENERAL> USP_SHC_VW_ATENCIONPACIENTE_GENERAL_LISTAR(Nullable<int> numeroFila, string tipoListado, string citaTipo, Nullable<System.DateTime> citaFecha, Nullable<System.DateTime> citaHora, string origen, string nombreEspecialidad, string tipoPacienteNombre, string codigoOA, Nullable<System.DateTime> fechaInicio, string cama, string tipoOrdenAtencionNombre, string codigoHC, string codigoHCAnterior, string pacienteNombre, string medicoNombre, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> idHospitalizacion, Nullable<int> lineaHospitalizacion, Nullable<int> idConsultaExterna, Nullable<int> idProcedimiento, Nullable<int> modalidad, Nullable<int> indicadorSeguro, Nullable<int> idCita, Nullable<int> idPaciente, Nullable<int> tipoPaciente, Nullable<int> tipoAtencion, Nullable<int> idEspecialidad, Nullable<int> idEmpresaAseguradora, Nullable<int> tipoOrdenAtencion, string componente, string componenteNombre, string compania, string sucursal, Nullable<int> idMedico, Nullable<int> indicadorCirugia, Nullable<int> indicadorExamenPrincipal, string personaAnt, string sexo, Nullable<System.DateTime> fechaNacimiento, string estadoCivil, string nivelInstruccion, string direccion, string tipoDocumento, string documento, string apellidoPaterno, string apellidoMaterno, string nombres, string lugarNacimiento, string codigoPostal, string provincia, string departamento, string telefono, string correoElectronico, string esPaciente, string esEmpresa, string pais, string estadoPersona, Nullable<System.DateTime> fechaCierreEpiClinico, Nullable<int> estadoEpiClinico, string unidadReplicacion, string unidadReplicacionEC, Nullable<long> idEpisodioAtencion, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> estadoEpiAtencion, string usuarioCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaCreacion, Nullable<System.DateTime> fechaModificacion, string version, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> fechaOrden, string comentarios, string observaciones, string diagnostico, string unidadReplicacionHCE, Nullable<int> idPacienteHCE, Nullable<int> episodioClinicoHCE, Nullable<long> idEpisodioAtencionHCE, Nullable<int> secuenciaHCE, Nullable<int> codigoEpisodioClinico, Nullable<int> contador, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_ATENCIONPACIENTE_GENERAL).Assembly);
    
            var numeroFilaParameter = numeroFila.HasValue ?
                new ObjectParameter("NumeroFila", numeroFila) :
                new ObjectParameter("NumeroFila", typeof(int));
    
            var tipoListadoParameter = tipoListado != null ?
                new ObjectParameter("tipoListado", tipoListado) :
                new ObjectParameter("tipoListado", typeof(string));
    
            var citaTipoParameter = citaTipo != null ?
                new ObjectParameter("CitaTipo", citaTipo) :
                new ObjectParameter("CitaTipo", typeof(string));
    
            var citaFechaParameter = citaFecha.HasValue ?
                new ObjectParameter("CitaFecha", citaFecha) :
                new ObjectParameter("CitaFecha", typeof(System.DateTime));
    
            var citaHoraParameter = citaHora.HasValue ?
                new ObjectParameter("CitaHora", citaHora) :
                new ObjectParameter("CitaHora", typeof(System.DateTime));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var nombreEspecialidadParameter = nombreEspecialidad != null ?
                new ObjectParameter("NombreEspecialidad", nombreEspecialidad) :
                new ObjectParameter("NombreEspecialidad", typeof(string));
    
            var tipoPacienteNombreParameter = tipoPacienteNombre != null ?
                new ObjectParameter("TipoPacienteNombre", tipoPacienteNombre) :
                new ObjectParameter("TipoPacienteNombre", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var camaParameter = cama != null ?
                new ObjectParameter("Cama", cama) :
                new ObjectParameter("Cama", typeof(string));
    
            var tipoOrdenAtencionNombreParameter = tipoOrdenAtencionNombre != null ?
                new ObjectParameter("TipoOrdenAtencionNombre", tipoOrdenAtencionNombre) :
                new ObjectParameter("TipoOrdenAtencionNombre", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var pacienteNombreParameter = pacienteNombre != null ?
                new ObjectParameter("PacienteNombre", pacienteNombre) :
                new ObjectParameter("PacienteNombre", typeof(string));
    
            var medicoNombreParameter = medicoNombre != null ?
                new ObjectParameter("MedicoNombre", medicoNombre) :
                new ObjectParameter("MedicoNombre", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var idHospitalizacionParameter = idHospitalizacion.HasValue ?
                new ObjectParameter("IdHospitalizacion", idHospitalizacion) :
                new ObjectParameter("IdHospitalizacion", typeof(int));
    
            var lineaHospitalizacionParameter = lineaHospitalizacion.HasValue ?
                new ObjectParameter("LineaHospitalizacion", lineaHospitalizacion) :
                new ObjectParameter("LineaHospitalizacion", typeof(int));
    
            var idConsultaExternaParameter = idConsultaExterna.HasValue ?
                new ObjectParameter("IdConsultaExterna", idConsultaExterna) :
                new ObjectParameter("IdConsultaExterna", typeof(int));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var modalidadParameter = modalidad.HasValue ?
                new ObjectParameter("Modalidad", modalidad) :
                new ObjectParameter("Modalidad", typeof(int));
    
            var indicadorSeguroParameter = indicadorSeguro.HasValue ?
                new ObjectParameter("IndicadorSeguro", indicadorSeguro) :
                new ObjectParameter("IndicadorSeguro", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idEmpresaAseguradoraParameter = idEmpresaAseguradora.HasValue ?
                new ObjectParameter("IdEmpresaAseguradora", idEmpresaAseguradora) :
                new ObjectParameter("IdEmpresaAseguradora", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var componenteNombreParameter = componenteNombre != null ?
                new ObjectParameter("ComponenteNombre", componenteNombre) :
                new ObjectParameter("ComponenteNombre", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var indicadorCirugiaParameter = indicadorCirugia.HasValue ?
                new ObjectParameter("IndicadorCirugia", indicadorCirugia) :
                new ObjectParameter("IndicadorCirugia", typeof(int));
    
            var indicadorExamenPrincipalParameter = indicadorExamenPrincipal.HasValue ?
                new ObjectParameter("IndicadorExamenPrincipal", indicadorExamenPrincipal) :
                new ObjectParameter("IndicadorExamenPrincipal", typeof(int));
    
            var personaAntParameter = personaAnt != null ?
                new ObjectParameter("PersonaAnt", personaAnt) :
                new ObjectParameter("PersonaAnt", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var lugarNacimientoParameter = lugarNacimiento != null ?
                new ObjectParameter("LugarNacimiento", lugarNacimiento) :
                new ObjectParameter("LugarNacimiento", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var fechaCierreEpiClinicoParameter = fechaCierreEpiClinico.HasValue ?
                new ObjectParameter("FechaCierreEpiClinico", fechaCierreEpiClinico) :
                new ObjectParameter("FechaCierreEpiClinico", typeof(System.DateTime));
    
            var estadoEpiClinicoParameter = estadoEpiClinico.HasValue ?
                new ObjectParameter("EstadoEpiClinico", estadoEpiClinico) :
                new ObjectParameter("EstadoEpiClinico", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var estadoEpiAtencionParameter = estadoEpiAtencion.HasValue ?
                new ObjectParameter("EstadoEpiAtencion", estadoEpiAtencion) :
                new ObjectParameter("EstadoEpiAtencion", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var fechaOrdenParameter = fechaOrden.HasValue ?
                new ObjectParameter("FechaOrden", fechaOrden) :
                new ObjectParameter("FechaOrden", typeof(System.DateTime));
    
            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var diagnosticoParameter = diagnostico != null ?
                new ObjectParameter("Diagnostico", diagnostico) :
                new ObjectParameter("Diagnostico", typeof(string));
    
            var unidadReplicacionHCEParameter = unidadReplicacionHCE != null ?
                new ObjectParameter("UnidadReplicacionHCE", unidadReplicacionHCE) :
                new ObjectParameter("UnidadReplicacionHCE", typeof(string));
    
            var idPacienteHCEParameter = idPacienteHCE.HasValue ?
                new ObjectParameter("IdPacienteHCE", idPacienteHCE) :
                new ObjectParameter("IdPacienteHCE", typeof(int));
    
            var episodioClinicoHCEParameter = episodioClinicoHCE.HasValue ?
                new ObjectParameter("EpisodioClinicoHCE", episodioClinicoHCE) :
                new ObjectParameter("EpisodioClinicoHCE", typeof(int));
    
            var idEpisodioAtencionHCEParameter = idEpisodioAtencionHCE.HasValue ?
                new ObjectParameter("IdEpisodioAtencionHCE", idEpisodioAtencionHCE) :
                new ObjectParameter("IdEpisodioAtencionHCE", typeof(long));
    
            var secuenciaHCEParameter = secuenciaHCE.HasValue ?
                new ObjectParameter("SecuenciaHCE", secuenciaHCE) :
                new ObjectParameter("SecuenciaHCE", typeof(int));
    
            var codigoEpisodioClinicoParameter = codigoEpisodioClinico.HasValue ?
                new ObjectParameter("CodigoEpisodioClinico", codigoEpisodioClinico) :
                new ObjectParameter("CodigoEpisodioClinico", typeof(int));
    
            var contadorParameter = contador.HasValue ?
                new ObjectParameter("Contador", contador) :
                new ObjectParameter("Contador", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_ATENCIONPACIENTE_GENERAL>("USP_SHC_VW_ATENCIONPACIENTE_GENERAL_LISTAR", mergeOption, numeroFilaParameter, tipoListadoParameter, citaTipoParameter, citaFechaParameter, citaHoraParameter, origenParameter, nombreEspecialidadParameter, tipoPacienteNombreParameter, codigoOAParameter, fechaInicioParameter, camaParameter, tipoOrdenAtencionNombreParameter, codigoHCParameter, codigoHCAnteriorParameter, pacienteNombreParameter, medicoNombreParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, idHospitalizacionParameter, lineaHospitalizacionParameter, idConsultaExternaParameter, idProcedimientoParameter, modalidadParameter, indicadorSeguroParameter, idCitaParameter, idPacienteParameter, tipoPacienteParameter, tipoAtencionParameter, idEspecialidadParameter, idEmpresaAseguradoraParameter, tipoOrdenAtencionParameter, componenteParameter, componenteNombreParameter, companiaParameter, sucursalParameter, idMedicoParameter, indicadorCirugiaParameter, indicadorExamenPrincipalParameter, personaAntParameter, sexoParameter, fechaNacimientoParameter, estadoCivilParameter, nivelInstruccionParameter, direccionParameter, tipoDocumentoParameter, documentoParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombresParameter, lugarNacimientoParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, telefonoParameter, correoElectronicoParameter, esPacienteParameter, esEmpresaParameter, paisParameter, estadoPersonaParameter, fechaCierreEpiClinicoParameter, estadoEpiClinicoParameter, unidadReplicacionParameter, unidadReplicacionECParameter, idEpisodioAtencionParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, estadoEpiAtencionParameter, usuarioCreacionParameter, usuarioModificacionParameter, fechaCreacionParameter, fechaModificacionParameter, versionParameter, fechaFinParameter, fechaOrdenParameter, comentariosParameter, observacionesParameter, diagnosticoParameter, unidadReplicacionHCEParameter, idPacienteHCEParameter, episodioClinicoHCEParameter, idEpisodioAtencionHCEParameter, secuenciaHCEParameter, codigoEpisodioClinicoParameter, contadorParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_CC_Horario(Nullable<int> idHorario, Nullable<int> idServicio, Nullable<int> medico, Nullable<int> idEspecialidad, Nullable<int> idConsultorio, Nullable<int> periodo, Nullable<int> idTurno, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> horaInicio, Nullable<System.DateTime> horaFin, Nullable<System.DateTime> fechaInicioHorario, Nullable<System.DateTime> fechaFinHorario, Nullable<int> tipoUso, Nullable<int> indicadorLunes, Nullable<int> indicadorMartes, Nullable<int> indicadorMiercoles, Nullable<int> indicadorJueves, Nullable<int> indicadorViernes, Nullable<int> indicadorSabado, Nullable<int> indicadorDomingo, Nullable<int> tipoGeneracionCita, Nullable<decimal> tiempoPromedioAtencion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> tipoRegistroHorario, Nullable<int> indicadorCompartido, Nullable<int> idGrupoAtencionCompartido, Nullable<int> idInasistencia, Nullable<int> indicadorCitaMultiple, Nullable<int> indicadorAplicaAdicional, Nullable<int> cantidadCitasAdicional, string unidadReplicacion, string aCCION)
        {
            var idHorarioParameter = idHorario.HasValue ?
                new ObjectParameter("IdHorario", idHorario) :
                new ObjectParameter("IdHorario", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var medicoParameter = medico.HasValue ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idConsultorioParameter = idConsultorio.HasValue ?
                new ObjectParameter("IdConsultorio", idConsultorio) :
                new ObjectParameter("IdConsultorio", typeof(int));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("HoraInicio", horaInicio) :
                new ObjectParameter("HoraInicio", typeof(System.DateTime));
    
            var horaFinParameter = horaFin.HasValue ?
                new ObjectParameter("HoraFin", horaFin) :
                new ObjectParameter("HoraFin", typeof(System.DateTime));
    
            var fechaInicioHorarioParameter = fechaInicioHorario.HasValue ?
                new ObjectParameter("FechaInicioHorario", fechaInicioHorario) :
                new ObjectParameter("FechaInicioHorario", typeof(System.DateTime));
    
            var fechaFinHorarioParameter = fechaFinHorario.HasValue ?
                new ObjectParameter("FechaFinHorario", fechaFinHorario) :
                new ObjectParameter("FechaFinHorario", typeof(System.DateTime));
    
            var tipoUsoParameter = tipoUso.HasValue ?
                new ObjectParameter("TipoUso", tipoUso) :
                new ObjectParameter("TipoUso", typeof(int));
    
            var indicadorLunesParameter = indicadorLunes.HasValue ?
                new ObjectParameter("IndicadorLunes", indicadorLunes) :
                new ObjectParameter("IndicadorLunes", typeof(int));
    
            var indicadorMartesParameter = indicadorMartes.HasValue ?
                new ObjectParameter("IndicadorMartes", indicadorMartes) :
                new ObjectParameter("IndicadorMartes", typeof(int));
    
            var indicadorMiercolesParameter = indicadorMiercoles.HasValue ?
                new ObjectParameter("IndicadorMiercoles", indicadorMiercoles) :
                new ObjectParameter("IndicadorMiercoles", typeof(int));
    
            var indicadorJuevesParameter = indicadorJueves.HasValue ?
                new ObjectParameter("IndicadorJueves", indicadorJueves) :
                new ObjectParameter("IndicadorJueves", typeof(int));
    
            var indicadorViernesParameter = indicadorViernes.HasValue ?
                new ObjectParameter("IndicadorViernes", indicadorViernes) :
                new ObjectParameter("IndicadorViernes", typeof(int));
    
            var indicadorSabadoParameter = indicadorSabado.HasValue ?
                new ObjectParameter("IndicadorSabado", indicadorSabado) :
                new ObjectParameter("IndicadorSabado", typeof(int));
    
            var indicadorDomingoParameter = indicadorDomingo.HasValue ?
                new ObjectParameter("IndicadorDomingo", indicadorDomingo) :
                new ObjectParameter("IndicadorDomingo", typeof(int));
    
            var tipoGeneracionCitaParameter = tipoGeneracionCita.HasValue ?
                new ObjectParameter("TipoGeneracionCita", tipoGeneracionCita) :
                new ObjectParameter("TipoGeneracionCita", typeof(int));
    
            var tiempoPromedioAtencionParameter = tiempoPromedioAtencion.HasValue ?
                new ObjectParameter("TiempoPromedioAtencion", tiempoPromedioAtencion) :
                new ObjectParameter("TiempoPromedioAtencion", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tipoRegistroHorarioParameter = tipoRegistroHorario.HasValue ?
                new ObjectParameter("TipoRegistroHorario", tipoRegistroHorario) :
                new ObjectParameter("TipoRegistroHorario", typeof(int));
    
            var indicadorCompartidoParameter = indicadorCompartido.HasValue ?
                new ObjectParameter("IndicadorCompartido", indicadorCompartido) :
                new ObjectParameter("IndicadorCompartido", typeof(int));
    
            var idGrupoAtencionCompartidoParameter = idGrupoAtencionCompartido.HasValue ?
                new ObjectParameter("IdGrupoAtencionCompartido", idGrupoAtencionCompartido) :
                new ObjectParameter("IdGrupoAtencionCompartido", typeof(int));
    
            var idInasistenciaParameter = idInasistencia.HasValue ?
                new ObjectParameter("IdInasistencia", idInasistencia) :
                new ObjectParameter("IdInasistencia", typeof(int));
    
            var indicadorCitaMultipleParameter = indicadorCitaMultiple.HasValue ?
                new ObjectParameter("IndicadorCitaMultiple", indicadorCitaMultiple) :
                new ObjectParameter("IndicadorCitaMultiple", typeof(int));
    
            var indicadorAplicaAdicionalParameter = indicadorAplicaAdicional.HasValue ?
                new ObjectParameter("IndicadorAplicaAdicional", indicadorAplicaAdicional) :
                new ObjectParameter("IndicadorAplicaAdicional", typeof(int));
    
            var cantidadCitasAdicionalParameter = cantidadCitasAdicional.HasValue ?
                new ObjectParameter("CantidadCitasAdicional", cantidadCitasAdicional) :
                new ObjectParameter("CantidadCitasAdicional", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_CC_Horario", idHorarioParameter, idServicioParameter, medicoParameter, idEspecialidadParameter, idConsultorioParameter, periodoParameter, idTurnoParameter, fechaInicioParameter, fechaFinParameter, horaInicioParameter, horaFinParameter, fechaInicioHorarioParameter, fechaFinHorarioParameter, tipoUsoParameter, indicadorLunesParameter, indicadorMartesParameter, indicadorMiercolesParameter, indicadorJuevesParameter, indicadorViernesParameter, indicadorSabadoParameter, indicadorDomingoParameter, tipoGeneracionCitaParameter, tiempoPromedioAtencionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoRegistroHorarioParameter, indicadorCompartidoParameter, idGrupoAtencionCompartidoParameter, idInasistenciaParameter, indicadorCitaMultipleParameter, indicadorAplicaAdicionalParameter, cantidadCitasAdicionalParameter, unidadReplicacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_CC_Horario> USP_SS_CC_Horario_LISTAR(Nullable<int> idHorario, Nullable<int> idServicio, Nullable<int> medico, Nullable<int> idEspecialidad, Nullable<int> idConsultorio, Nullable<int> periodo, Nullable<int> idTurno, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> horaInicio, Nullable<System.DateTime> horaFin, Nullable<System.DateTime> fechaInicioHorario, Nullable<System.DateTime> fechaFinHorario, Nullable<int> tipoUso, Nullable<int> indicadorLunes, Nullable<int> indicadorMartes, Nullable<int> indicadorMiercoles, Nullable<int> indicadorJueves, Nullable<int> indicadorViernes, Nullable<int> indicadorSabado, Nullable<int> indicadorDomingo, Nullable<int> tipoGeneracionCita, Nullable<decimal> tiempoPromedioAtencion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> tipoRegistroHorario, Nullable<int> indicadorCompartido, Nullable<int> idGrupoAtencionCompartido, Nullable<int> idInasistencia, Nullable<int> indicadorCitaMultiple, Nullable<int> indicadorAplicaAdicional, Nullable<int> cantidadCitasAdicional, string unidadReplicacion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_CC_Horario).Assembly);
    
            var idHorarioParameter = idHorario.HasValue ?
                new ObjectParameter("IdHorario", idHorario) :
                new ObjectParameter("IdHorario", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var medicoParameter = medico.HasValue ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idConsultorioParameter = idConsultorio.HasValue ?
                new ObjectParameter("IdConsultorio", idConsultorio) :
                new ObjectParameter("IdConsultorio", typeof(int));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("HoraInicio", horaInicio) :
                new ObjectParameter("HoraInicio", typeof(System.DateTime));
    
            var horaFinParameter = horaFin.HasValue ?
                new ObjectParameter("HoraFin", horaFin) :
                new ObjectParameter("HoraFin", typeof(System.DateTime));
    
            var fechaInicioHorarioParameter = fechaInicioHorario.HasValue ?
                new ObjectParameter("FechaInicioHorario", fechaInicioHorario) :
                new ObjectParameter("FechaInicioHorario", typeof(System.DateTime));
    
            var fechaFinHorarioParameter = fechaFinHorario.HasValue ?
                new ObjectParameter("FechaFinHorario", fechaFinHorario) :
                new ObjectParameter("FechaFinHorario", typeof(System.DateTime));
    
            var tipoUsoParameter = tipoUso.HasValue ?
                new ObjectParameter("TipoUso", tipoUso) :
                new ObjectParameter("TipoUso", typeof(int));
    
            var indicadorLunesParameter = indicadorLunes.HasValue ?
                new ObjectParameter("IndicadorLunes", indicadorLunes) :
                new ObjectParameter("IndicadorLunes", typeof(int));
    
            var indicadorMartesParameter = indicadorMartes.HasValue ?
                new ObjectParameter("IndicadorMartes", indicadorMartes) :
                new ObjectParameter("IndicadorMartes", typeof(int));
    
            var indicadorMiercolesParameter = indicadorMiercoles.HasValue ?
                new ObjectParameter("IndicadorMiercoles", indicadorMiercoles) :
                new ObjectParameter("IndicadorMiercoles", typeof(int));
    
            var indicadorJuevesParameter = indicadorJueves.HasValue ?
                new ObjectParameter("IndicadorJueves", indicadorJueves) :
                new ObjectParameter("IndicadorJueves", typeof(int));
    
            var indicadorViernesParameter = indicadorViernes.HasValue ?
                new ObjectParameter("IndicadorViernes", indicadorViernes) :
                new ObjectParameter("IndicadorViernes", typeof(int));
    
            var indicadorSabadoParameter = indicadorSabado.HasValue ?
                new ObjectParameter("IndicadorSabado", indicadorSabado) :
                new ObjectParameter("IndicadorSabado", typeof(int));
    
            var indicadorDomingoParameter = indicadorDomingo.HasValue ?
                new ObjectParameter("IndicadorDomingo", indicadorDomingo) :
                new ObjectParameter("IndicadorDomingo", typeof(int));
    
            var tipoGeneracionCitaParameter = tipoGeneracionCita.HasValue ?
                new ObjectParameter("TipoGeneracionCita", tipoGeneracionCita) :
                new ObjectParameter("TipoGeneracionCita", typeof(int));
    
            var tiempoPromedioAtencionParameter = tiempoPromedioAtencion.HasValue ?
                new ObjectParameter("TiempoPromedioAtencion", tiempoPromedioAtencion) :
                new ObjectParameter("TiempoPromedioAtencion", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tipoRegistroHorarioParameter = tipoRegistroHorario.HasValue ?
                new ObjectParameter("TipoRegistroHorario", tipoRegistroHorario) :
                new ObjectParameter("TipoRegistroHorario", typeof(int));
    
            var indicadorCompartidoParameter = indicadorCompartido.HasValue ?
                new ObjectParameter("IndicadorCompartido", indicadorCompartido) :
                new ObjectParameter("IndicadorCompartido", typeof(int));
    
            var idGrupoAtencionCompartidoParameter = idGrupoAtencionCompartido.HasValue ?
                new ObjectParameter("IdGrupoAtencionCompartido", idGrupoAtencionCompartido) :
                new ObjectParameter("IdGrupoAtencionCompartido", typeof(int));
    
            var idInasistenciaParameter = idInasistencia.HasValue ?
                new ObjectParameter("IdInasistencia", idInasistencia) :
                new ObjectParameter("IdInasistencia", typeof(int));
    
            var indicadorCitaMultipleParameter = indicadorCitaMultiple.HasValue ?
                new ObjectParameter("IndicadorCitaMultiple", indicadorCitaMultiple) :
                new ObjectParameter("IndicadorCitaMultiple", typeof(int));
    
            var indicadorAplicaAdicionalParameter = indicadorAplicaAdicional.HasValue ?
                new ObjectParameter("IndicadorAplicaAdicional", indicadorAplicaAdicional) :
                new ObjectParameter("IndicadorAplicaAdicional", typeof(int));
    
            var cantidadCitasAdicionalParameter = cantidadCitasAdicional.HasValue ?
                new ObjectParameter("CantidadCitasAdicional", cantidadCitasAdicional) :
                new ObjectParameter("CantidadCitasAdicional", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_CC_Horario>("USP_SS_CC_Horario_LISTAR", idHorarioParameter, idServicioParameter, medicoParameter, idEspecialidadParameter, idConsultorioParameter, periodoParameter, idTurnoParameter, fechaInicioParameter, fechaFinParameter, horaInicioParameter, horaFinParameter, fechaInicioHorarioParameter, fechaFinHorarioParameter, tipoUsoParameter, indicadorLunesParameter, indicadorMartesParameter, indicadorMiercolesParameter, indicadorJuevesParameter, indicadorViernesParameter, indicadorSabadoParameter, indicadorDomingoParameter, tipoGeneracionCitaParameter, tiempoPromedioAtencionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoRegistroHorarioParameter, indicadorCompartidoParameter, idGrupoAtencionCompartidoParameter, idInasistenciaParameter, indicadorCitaMultipleParameter, indicadorAplicaAdicionalParameter, cantidadCitasAdicionalParameter, unidadReplicacionParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_CC_Horario> USP_SS_CC_Horario_LISTAR(Nullable<int> idHorario, Nullable<int> idServicio, Nullable<int> medico, Nullable<int> idEspecialidad, Nullable<int> idConsultorio, Nullable<int> periodo, Nullable<int> idTurno, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> horaInicio, Nullable<System.DateTime> horaFin, Nullable<System.DateTime> fechaInicioHorario, Nullable<System.DateTime> fechaFinHorario, Nullable<int> tipoUso, Nullable<int> indicadorLunes, Nullable<int> indicadorMartes, Nullable<int> indicadorMiercoles, Nullable<int> indicadorJueves, Nullable<int> indicadorViernes, Nullable<int> indicadorSabado, Nullable<int> indicadorDomingo, Nullable<int> tipoGeneracionCita, Nullable<decimal> tiempoPromedioAtencion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> tipoRegistroHorario, Nullable<int> indicadorCompartido, Nullable<int> idGrupoAtencionCompartido, Nullable<int> idInasistencia, Nullable<int> indicadorCitaMultiple, Nullable<int> indicadorAplicaAdicional, Nullable<int> cantidadCitasAdicional, string unidadReplicacion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_CC_Horario).Assembly);
    
            var idHorarioParameter = idHorario.HasValue ?
                new ObjectParameter("IdHorario", idHorario) :
                new ObjectParameter("IdHorario", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var medicoParameter = medico.HasValue ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idConsultorioParameter = idConsultorio.HasValue ?
                new ObjectParameter("IdConsultorio", idConsultorio) :
                new ObjectParameter("IdConsultorio", typeof(int));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("HoraInicio", horaInicio) :
                new ObjectParameter("HoraInicio", typeof(System.DateTime));
    
            var horaFinParameter = horaFin.HasValue ?
                new ObjectParameter("HoraFin", horaFin) :
                new ObjectParameter("HoraFin", typeof(System.DateTime));
    
            var fechaInicioHorarioParameter = fechaInicioHorario.HasValue ?
                new ObjectParameter("FechaInicioHorario", fechaInicioHorario) :
                new ObjectParameter("FechaInicioHorario", typeof(System.DateTime));
    
            var fechaFinHorarioParameter = fechaFinHorario.HasValue ?
                new ObjectParameter("FechaFinHorario", fechaFinHorario) :
                new ObjectParameter("FechaFinHorario", typeof(System.DateTime));
    
            var tipoUsoParameter = tipoUso.HasValue ?
                new ObjectParameter("TipoUso", tipoUso) :
                new ObjectParameter("TipoUso", typeof(int));
    
            var indicadorLunesParameter = indicadorLunes.HasValue ?
                new ObjectParameter("IndicadorLunes", indicadorLunes) :
                new ObjectParameter("IndicadorLunes", typeof(int));
    
            var indicadorMartesParameter = indicadorMartes.HasValue ?
                new ObjectParameter("IndicadorMartes", indicadorMartes) :
                new ObjectParameter("IndicadorMartes", typeof(int));
    
            var indicadorMiercolesParameter = indicadorMiercoles.HasValue ?
                new ObjectParameter("IndicadorMiercoles", indicadorMiercoles) :
                new ObjectParameter("IndicadorMiercoles", typeof(int));
    
            var indicadorJuevesParameter = indicadorJueves.HasValue ?
                new ObjectParameter("IndicadorJueves", indicadorJueves) :
                new ObjectParameter("IndicadorJueves", typeof(int));
    
            var indicadorViernesParameter = indicadorViernes.HasValue ?
                new ObjectParameter("IndicadorViernes", indicadorViernes) :
                new ObjectParameter("IndicadorViernes", typeof(int));
    
            var indicadorSabadoParameter = indicadorSabado.HasValue ?
                new ObjectParameter("IndicadorSabado", indicadorSabado) :
                new ObjectParameter("IndicadorSabado", typeof(int));
    
            var indicadorDomingoParameter = indicadorDomingo.HasValue ?
                new ObjectParameter("IndicadorDomingo", indicadorDomingo) :
                new ObjectParameter("IndicadorDomingo", typeof(int));
    
            var tipoGeneracionCitaParameter = tipoGeneracionCita.HasValue ?
                new ObjectParameter("TipoGeneracionCita", tipoGeneracionCita) :
                new ObjectParameter("TipoGeneracionCita", typeof(int));
    
            var tiempoPromedioAtencionParameter = tiempoPromedioAtencion.HasValue ?
                new ObjectParameter("TiempoPromedioAtencion", tiempoPromedioAtencion) :
                new ObjectParameter("TiempoPromedioAtencion", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tipoRegistroHorarioParameter = tipoRegistroHorario.HasValue ?
                new ObjectParameter("TipoRegistroHorario", tipoRegistroHorario) :
                new ObjectParameter("TipoRegistroHorario", typeof(int));
    
            var indicadorCompartidoParameter = indicadorCompartido.HasValue ?
                new ObjectParameter("IndicadorCompartido", indicadorCompartido) :
                new ObjectParameter("IndicadorCompartido", typeof(int));
    
            var idGrupoAtencionCompartidoParameter = idGrupoAtencionCompartido.HasValue ?
                new ObjectParameter("IdGrupoAtencionCompartido", idGrupoAtencionCompartido) :
                new ObjectParameter("IdGrupoAtencionCompartido", typeof(int));
    
            var idInasistenciaParameter = idInasistencia.HasValue ?
                new ObjectParameter("IdInasistencia", idInasistencia) :
                new ObjectParameter("IdInasistencia", typeof(int));
    
            var indicadorCitaMultipleParameter = indicadorCitaMultiple.HasValue ?
                new ObjectParameter("IndicadorCitaMultiple", indicadorCitaMultiple) :
                new ObjectParameter("IndicadorCitaMultiple", typeof(int));
    
            var indicadorAplicaAdicionalParameter = indicadorAplicaAdicional.HasValue ?
                new ObjectParameter("IndicadorAplicaAdicional", indicadorAplicaAdicional) :
                new ObjectParameter("IndicadorAplicaAdicional", typeof(int));
    
            var cantidadCitasAdicionalParameter = cantidadCitasAdicional.HasValue ?
                new ObjectParameter("CantidadCitasAdicional", cantidadCitasAdicional) :
                new ObjectParameter("CantidadCitasAdicional", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_CC_Horario>("USP_SS_CC_Horario_LISTAR", mergeOption, idHorarioParameter, idServicioParameter, medicoParameter, idEspecialidadParameter, idConsultorioParameter, periodoParameter, idTurnoParameter, fechaInicioParameter, fechaFinParameter, horaInicioParameter, horaFinParameter, fechaInicioHorarioParameter, fechaFinHorarioParameter, tipoUsoParameter, indicadorLunesParameter, indicadorMartesParameter, indicadorMiercolesParameter, indicadorJuevesParameter, indicadorViernesParameter, indicadorSabadoParameter, indicadorDomingoParameter, tipoGeneracionCitaParameter, tiempoPromedioAtencionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoRegistroHorarioParameter, indicadorCompartidoParameter, idGrupoAtencionCompartidoParameter, idInasistenciaParameter, indicadorCitaMultipleParameter, indicadorAplicaAdicionalParameter, cantidadCitasAdicionalParameter, unidadReplicacionParameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_Anamnesis_EA(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string motivoConsulta, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, string tiempoEnfermedad, string relatoCronologico, string apetito, string sed, string orina, string deposiciones, string sueno, Nullable<decimal> pesoAnterior, string infancia, string evaluacionAlimentacionActual, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string comentarioAdicional, string prioridad, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var motivoConsultaParameter = motivoConsulta != null ?
                new ObjectParameter("MotivoConsulta", motivoConsulta) :
                new ObjectParameter("MotivoConsulta", typeof(string));
    
            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));
    
            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));
    
            var tiempoEnfermedadParameter = tiempoEnfermedad != null ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(string));
    
            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));
    
            var apetitoParameter = apetito != null ?
                new ObjectParameter("Apetito", apetito) :
                new ObjectParameter("Apetito", typeof(string));
    
            var sedParameter = sed != null ?
                new ObjectParameter("Sed", sed) :
                new ObjectParameter("Sed", typeof(string));
    
            var orinaParameter = orina != null ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(string));
    
            var deposicionesParameter = deposiciones != null ?
                new ObjectParameter("Deposiciones", deposiciones) :
                new ObjectParameter("Deposiciones", typeof(string));
    
            var suenoParameter = sueno != null ?
                new ObjectParameter("Sueno", sueno) :
                new ObjectParameter("Sueno", typeof(string));
    
            var pesoAnteriorParameter = pesoAnterior.HasValue ?
                new ObjectParameter("PesoAnterior", pesoAnterior) :
                new ObjectParameter("PesoAnterior", typeof(decimal));
    
            var infanciaParameter = infancia != null ?
                new ObjectParameter("Infancia", infancia) :
                new ObjectParameter("Infancia", typeof(string));
    
            var evaluacionAlimentacionActualParameter = evaluacionAlimentacionActual != null ?
                new ObjectParameter("EvaluacionAlimentacionActual", evaluacionAlimentacionActual) :
                new ObjectParameter("EvaluacionAlimentacionActual", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var comentarioAdicionalParameter = comentarioAdicional != null ?
                new ObjectParameter("ComentarioAdicional", comentarioAdicional) :
                new ObjectParameter("ComentarioAdicional", typeof(string));
    
            var prioridadParameter = prioridad != null ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_Anamnesis_EA", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, motivoConsultaParameter, idFormaInicioParameter, idCursoEnfermedadParameter, tiempoEnfermedadParameter, relatoCronologicoParameter, apetitoParameter, sedParameter, orinaParameter, deposicionesParameter, suenoParameter, pesoAnteriorParameter, infanciaParameter, evaluacionAlimentacionActualParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, comentarioAdicionalParameter, prioridadParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_EA> USP_Anamnesis_EA_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string motivoConsulta, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, string tiempoEnfermedad, string relatoCronologico, string apetito, string sed, string orina, string deposiciones, string sueno, Nullable<decimal> pesoAnterior, string infancia, string evaluacionAlimentacionActual, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string comentarioAdicional, string prioridad, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_EA).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var motivoConsultaParameter = motivoConsulta != null ?
                new ObjectParameter("MotivoConsulta", motivoConsulta) :
                new ObjectParameter("MotivoConsulta", typeof(string));
    
            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));
    
            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));
    
            var tiempoEnfermedadParameter = tiempoEnfermedad != null ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(string));
    
            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));
    
            var apetitoParameter = apetito != null ?
                new ObjectParameter("Apetito", apetito) :
                new ObjectParameter("Apetito", typeof(string));
    
            var sedParameter = sed != null ?
                new ObjectParameter("Sed", sed) :
                new ObjectParameter("Sed", typeof(string));
    
            var orinaParameter = orina != null ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(string));
    
            var deposicionesParameter = deposiciones != null ?
                new ObjectParameter("Deposiciones", deposiciones) :
                new ObjectParameter("Deposiciones", typeof(string));
    
            var suenoParameter = sueno != null ?
                new ObjectParameter("Sueno", sueno) :
                new ObjectParameter("Sueno", typeof(string));
    
            var pesoAnteriorParameter = pesoAnterior.HasValue ?
                new ObjectParameter("PesoAnterior", pesoAnterior) :
                new ObjectParameter("PesoAnterior", typeof(decimal));
    
            var infanciaParameter = infancia != null ?
                new ObjectParameter("Infancia", infancia) :
                new ObjectParameter("Infancia", typeof(string));
    
            var evaluacionAlimentacionActualParameter = evaluacionAlimentacionActual != null ?
                new ObjectParameter("EvaluacionAlimentacionActual", evaluacionAlimentacionActual) :
                new ObjectParameter("EvaluacionAlimentacionActual", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var comentarioAdicionalParameter = comentarioAdicional != null ?
                new ObjectParameter("ComentarioAdicional", comentarioAdicional) :
                new ObjectParameter("ComentarioAdicional", typeof(string));
    
            var prioridadParameter = prioridad != null ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_EA>("USP_Anamnesis_EA_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, motivoConsultaParameter, idFormaInicioParameter, idCursoEnfermedadParameter, tiempoEnfermedadParameter, relatoCronologicoParameter, apetitoParameter, sedParameter, orinaParameter, deposicionesParameter, suenoParameter, pesoAnteriorParameter, infanciaParameter, evaluacionAlimentacionActualParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, comentarioAdicionalParameter, prioridadParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_Anamnesis_EA> USP_Anamnesis_EA_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string motivoConsulta, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, string tiempoEnfermedad, string relatoCronologico, string apetito, string sed, string orina, string deposiciones, string sueno, Nullable<decimal> pesoAnterior, string infancia, string evaluacionAlimentacionActual, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string comentarioAdicional, string prioridad, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Anamnesis_EA).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var motivoConsultaParameter = motivoConsulta != null ?
                new ObjectParameter("MotivoConsulta", motivoConsulta) :
                new ObjectParameter("MotivoConsulta", typeof(string));
    
            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));
    
            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));
    
            var tiempoEnfermedadParameter = tiempoEnfermedad != null ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(string));
    
            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));
    
            var apetitoParameter = apetito != null ?
                new ObjectParameter("Apetito", apetito) :
                new ObjectParameter("Apetito", typeof(string));
    
            var sedParameter = sed != null ?
                new ObjectParameter("Sed", sed) :
                new ObjectParameter("Sed", typeof(string));
    
            var orinaParameter = orina != null ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(string));
    
            var deposicionesParameter = deposiciones != null ?
                new ObjectParameter("Deposiciones", deposiciones) :
                new ObjectParameter("Deposiciones", typeof(string));
    
            var suenoParameter = sueno != null ?
                new ObjectParameter("Sueno", sueno) :
                new ObjectParameter("Sueno", typeof(string));
    
            var pesoAnteriorParameter = pesoAnterior.HasValue ?
                new ObjectParameter("PesoAnterior", pesoAnterior) :
                new ObjectParameter("PesoAnterior", typeof(decimal));
    
            var infanciaParameter = infancia != null ?
                new ObjectParameter("Infancia", infancia) :
                new ObjectParameter("Infancia", typeof(string));
    
            var evaluacionAlimentacionActualParameter = evaluacionAlimentacionActual != null ?
                new ObjectParameter("EvaluacionAlimentacionActual", evaluacionAlimentacionActual) :
                new ObjectParameter("EvaluacionAlimentacionActual", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var comentarioAdicionalParameter = comentarioAdicional != null ?
                new ObjectParameter("ComentarioAdicional", comentarioAdicional) :
                new ObjectParameter("ComentarioAdicional", typeof(string));
    
            var prioridadParameter = prioridad != null ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anamnesis_EA>("USP_Anamnesis_EA_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, motivoConsultaParameter, idFormaInicioParameter, idCursoEnfermedadParameter, tiempoEnfermedadParameter, relatoCronologicoParameter, apetitoParameter, sedParameter, orinaParameter, deposicionesParameter, suenoParameter, pesoAnteriorParameter, infanciaParameter, evaluacionAlimentacionActualParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, comentarioAdicionalParameter, prioridadParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_GE_Paciente(Nullable<int> persona, string apellidoPaterno, string apellidoMaterno, string nombreCompleto, string tipoDocumento, string documento, string codigoBarras, string esCliente, string esEmpleado, string esOtro, string tipoPersona, string esProveedor, Nullable<System.DateTime> fechaNacimiento, string ciudadNacimiento, string sexo, string nacionalidad, string estadoCivil, string nivelInstruccion, string direccion, string codigoPostal, string provincia, string departamento, string telefono, string documentoFiscal, string documentoIdentidad, string aCCION, Nullable<int> edad, string rangoEtario, Nullable<int> tipoMedico, Nullable<int> correcion, string esPaciente, string esEmpresa, string pais, string flagActualizacion, string cuentaMonedaLocal_tmp, string cuentaMonedaExtranjera_tmp, string correlativoSCTR, string seguroDiscamec, string codDiscamec, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, string lugarNacimiento, string celular, string celularEmergencia, string parentescoEmergencia, string direccionReferencia, Nullable<System.DateTime> ultimaFechaModif, string tipoPersonaUsuario, string ultimoUsuario, string estado, string direccionEmergencia, string telefonoEmergencia, string bancoMonedaLocal, string tipoCuentaLocal, string cuentaMonedaLocal, string bancoMonedaExtranjera, string tipoCuentaExtranjera, string cuentaMonedaExtranjera, string correoElectronico, string enfermedadGraveFlag, Nullable<System.DateTime> ingresoFechaRegistro, string ingresoAplicacionCodigo, string ingresoUsuario, string pYMEFlag, Nullable<int> paciente, Nullable<int> tipoPaciente, string raza, string areaLaboral, string ocupacion, string codigoHC, string codigoHCAnterior, string codigoHCSecundario, string tipoAlmacenamiento, string tipoHistoria, string tipoSituacion, Nullable<int> idUbicacion, string lugarProcedencia, string rutaFoto, Nullable<int> estadoPaciente, Nullable<int> numeroFile, string servicio, string observacion, Nullable<int> indicadorAsistencia, Nullable<int> cantidadAsistencia, Nullable<int> ubicacionHHCC, Nullable<int> indicadorMigradoSiteds, string numeroCaja, Nullable<int> indicadorCodigoBarras, Nullable<int> iDPACIENTE_OK, string codigoAsegurado, Nullable<int> numeroPoliza, Nullable<int> numeroCertificado, string codigoProducto, string codigoPlan, Nullable<int> tipoParentesco, string codigoBeneficio, Nullable<int> situacion, Nullable<int> tomoActual, Nullable<int> indicadorHistoriaFisica, string descripcionHistoria, string personaAnt, string nombres, string busqueda, Nullable<int> idPersonal, string atencionLugar, string atencion, string idEstablecimientoIngreso, string idServicioIngreso, string prestacion, string destino, Nullable<int> nroAutorizacion, Nullable<decimal> monto, Nullable<System.DateTime> fechaIngresoHosp, Nullable<System.DateTime> fechaCorteHosp, string establecimiento01, string referenciaHoja01, string establecimiento02, string referenciaHoja02)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var codigoBarrasParameter = codigoBarras != null ?
                new ObjectParameter("CodigoBarras", codigoBarras) :
                new ObjectParameter("CodigoBarras", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var ciudadNacimientoParameter = ciudadNacimiento != null ?
                new ObjectParameter("CiudadNacimiento", ciudadNacimiento) :
                new ObjectParameter("CiudadNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var documentoFiscalParameter = documentoFiscal != null ?
                new ObjectParameter("DocumentoFiscal", documentoFiscal) :
                new ObjectParameter("DocumentoFiscal", typeof(string));
    
            var documentoIdentidadParameter = documentoIdentidad != null ?
                new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
                new ObjectParameter("DocumentoIdentidad", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var rangoEtarioParameter = rangoEtario != null ?
                new ObjectParameter("rangoEtario", rangoEtario) :
                new ObjectParameter("rangoEtario", typeof(string));
    
            var tipoMedicoParameter = tipoMedico.HasValue ?
                new ObjectParameter("TipoMedico", tipoMedico) :
                new ObjectParameter("TipoMedico", typeof(int));
    
            var correcionParameter = correcion.HasValue ?
                new ObjectParameter("Correcion", correcion) :
                new ObjectParameter("Correcion", typeof(int));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var flagActualizacionParameter = flagActualizacion != null ?
                new ObjectParameter("FlagActualizacion", flagActualizacion) :
                new ObjectParameter("FlagActualizacion", typeof(string));
    
            var cuentaMonedaLocal_tmpParameter = cuentaMonedaLocal_tmp != null ?
                new ObjectParameter("CuentaMonedaLocal_tmp", cuentaMonedaLocal_tmp) :
                new ObjectParameter("CuentaMonedaLocal_tmp", typeof(string));
    
            var cuentaMonedaExtranjera_tmpParameter = cuentaMonedaExtranjera_tmp != null ?
                new ObjectParameter("CuentaMonedaExtranjera_tmp", cuentaMonedaExtranjera_tmp) :
                new ObjectParameter("CuentaMonedaExtranjera_tmp", typeof(string));
    
            var correlativoSCTRParameter = correlativoSCTR != null ?
                new ObjectParameter("CorrelativoSCTR", correlativoSCTR) :
                new ObjectParameter("CorrelativoSCTR", typeof(string));
    
            var seguroDiscamecParameter = seguroDiscamec != null ?
                new ObjectParameter("SeguroDiscamec", seguroDiscamec) :
                new ObjectParameter("SeguroDiscamec", typeof(string));
    
            var codDiscamecParameter = codDiscamec != null ?
                new ObjectParameter("CodDiscamec", codDiscamec) :
                new ObjectParameter("CodDiscamec", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var lugarNacimientoParameter = lugarNacimiento != null ?
                new ObjectParameter("LugarNacimiento", lugarNacimiento) :
                new ObjectParameter("LugarNacimiento", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var celularEmergenciaParameter = celularEmergencia != null ?
                new ObjectParameter("CelularEmergencia", celularEmergencia) :
                new ObjectParameter("CelularEmergencia", typeof(string));
    
            var parentescoEmergenciaParameter = parentescoEmergencia != null ?
                new ObjectParameter("ParentescoEmergencia", parentescoEmergencia) :
                new ObjectParameter("ParentescoEmergencia", typeof(string));
    
            var direccionReferenciaParameter = direccionReferencia != null ?
                new ObjectParameter("DireccionReferencia", direccionReferencia) :
                new ObjectParameter("DireccionReferencia", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var tipoPersonaUsuarioParameter = tipoPersonaUsuario != null ?
                new ObjectParameter("TipoPersonaUsuario", tipoPersonaUsuario) :
                new ObjectParameter("TipoPersonaUsuario", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var direccionEmergenciaParameter = direccionEmergencia != null ?
                new ObjectParameter("DireccionEmergencia", direccionEmergencia) :
                new ObjectParameter("DireccionEmergencia", typeof(string));
    
            var telefonoEmergenciaParameter = telefonoEmergencia != null ?
                new ObjectParameter("TelefonoEmergencia", telefonoEmergencia) :
                new ObjectParameter("TelefonoEmergencia", typeof(string));
    
            var bancoMonedaLocalParameter = bancoMonedaLocal != null ?
                new ObjectParameter("BancoMonedaLocal", bancoMonedaLocal) :
                new ObjectParameter("BancoMonedaLocal", typeof(string));
    
            var tipoCuentaLocalParameter = tipoCuentaLocal != null ?
                new ObjectParameter("TipoCuentaLocal", tipoCuentaLocal) :
                new ObjectParameter("TipoCuentaLocal", typeof(string));
    
            var cuentaMonedaLocalParameter = cuentaMonedaLocal != null ?
                new ObjectParameter("CuentaMonedaLocal", cuentaMonedaLocal) :
                new ObjectParameter("CuentaMonedaLocal", typeof(string));
    
            var bancoMonedaExtranjeraParameter = bancoMonedaExtranjera != null ?
                new ObjectParameter("BancoMonedaExtranjera", bancoMonedaExtranjera) :
                new ObjectParameter("BancoMonedaExtranjera", typeof(string));
    
            var tipoCuentaExtranjeraParameter = tipoCuentaExtranjera != null ?
                new ObjectParameter("TipoCuentaExtranjera", tipoCuentaExtranjera) :
                new ObjectParameter("TipoCuentaExtranjera", typeof(string));
    
            var cuentaMonedaExtranjeraParameter = cuentaMonedaExtranjera != null ?
                new ObjectParameter("CuentaMonedaExtranjera", cuentaMonedaExtranjera) :
                new ObjectParameter("CuentaMonedaExtranjera", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var enfermedadGraveFlagParameter = enfermedadGraveFlag != null ?
                new ObjectParameter("EnfermedadGraveFlag", enfermedadGraveFlag) :
                new ObjectParameter("EnfermedadGraveFlag", typeof(string));
    
            var ingresoFechaRegistroParameter = ingresoFechaRegistro.HasValue ?
                new ObjectParameter("IngresoFechaRegistro", ingresoFechaRegistro) :
                new ObjectParameter("IngresoFechaRegistro", typeof(System.DateTime));
    
            var ingresoAplicacionCodigoParameter = ingresoAplicacionCodigo != null ?
                new ObjectParameter("IngresoAplicacionCodigo", ingresoAplicacionCodigo) :
                new ObjectParameter("IngresoAplicacionCodigo", typeof(string));
    
            var ingresoUsuarioParameter = ingresoUsuario != null ?
                new ObjectParameter("IngresoUsuario", ingresoUsuario) :
                new ObjectParameter("IngresoUsuario", typeof(string));
    
            var pYMEFlagParameter = pYMEFlag != null ?
                new ObjectParameter("PYMEFlag", pYMEFlag) :
                new ObjectParameter("PYMEFlag", typeof(string));
    
            var pacienteParameter = paciente.HasValue ?
                new ObjectParameter("Paciente", paciente) :
                new ObjectParameter("Paciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var razaParameter = raza != null ?
                new ObjectParameter("Raza", raza) :
                new ObjectParameter("Raza", typeof(string));
    
            var areaLaboralParameter = areaLaboral != null ?
                new ObjectParameter("AreaLaboral", areaLaboral) :
                new ObjectParameter("AreaLaboral", typeof(string));
    
            var ocupacionParameter = ocupacion != null ?
                new ObjectParameter("Ocupacion", ocupacion) :
                new ObjectParameter("Ocupacion", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoHCSecundarioParameter = codigoHCSecundario != null ?
                new ObjectParameter("CodigoHCSecundario", codigoHCSecundario) :
                new ObjectParameter("CodigoHCSecundario", typeof(string));
    
            var tipoAlmacenamientoParameter = tipoAlmacenamiento != null ?
                new ObjectParameter("TipoAlmacenamiento", tipoAlmacenamiento) :
                new ObjectParameter("TipoAlmacenamiento", typeof(string));
    
            var tipoHistoriaParameter = tipoHistoria != null ?
                new ObjectParameter("TipoHistoria", tipoHistoria) :
                new ObjectParameter("TipoHistoria", typeof(string));
    
            var tipoSituacionParameter = tipoSituacion != null ?
                new ObjectParameter("TipoSituacion", tipoSituacion) :
                new ObjectParameter("TipoSituacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var lugarProcedenciaParameter = lugarProcedencia != null ?
                new ObjectParameter("LugarProcedencia", lugarProcedencia) :
                new ObjectParameter("LugarProcedencia", typeof(string));
    
            var rutaFotoParameter = rutaFoto != null ?
                new ObjectParameter("RutaFoto", rutaFoto) :
                new ObjectParameter("RutaFoto", typeof(string));
    
            var estadoPacienteParameter = estadoPaciente.HasValue ?
                new ObjectParameter("EstadoPaciente", estadoPaciente) :
                new ObjectParameter("EstadoPaciente", typeof(int));
    
            var numeroFileParameter = numeroFile.HasValue ?
                new ObjectParameter("NumeroFile", numeroFile) :
                new ObjectParameter("NumeroFile", typeof(int));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var indicadorAsistenciaParameter = indicadorAsistencia.HasValue ?
                new ObjectParameter("IndicadorAsistencia", indicadorAsistencia) :
                new ObjectParameter("IndicadorAsistencia", typeof(int));
    
            var cantidadAsistenciaParameter = cantidadAsistencia.HasValue ?
                new ObjectParameter("CantidadAsistencia", cantidadAsistencia) :
                new ObjectParameter("CantidadAsistencia", typeof(int));
    
            var ubicacionHHCCParameter = ubicacionHHCC.HasValue ?
                new ObjectParameter("UbicacionHHCC", ubicacionHHCC) :
                new ObjectParameter("UbicacionHHCC", typeof(int));
    
            var indicadorMigradoSitedsParameter = indicadorMigradoSiteds.HasValue ?
                new ObjectParameter("IndicadorMigradoSiteds", indicadorMigradoSiteds) :
                new ObjectParameter("IndicadorMigradoSiteds", typeof(int));
    
            var numeroCajaParameter = numeroCaja != null ?
                new ObjectParameter("NumeroCaja", numeroCaja) :
                new ObjectParameter("NumeroCaja", typeof(string));
    
            var indicadorCodigoBarrasParameter = indicadorCodigoBarras.HasValue ?
                new ObjectParameter("IndicadorCodigoBarras", indicadorCodigoBarras) :
                new ObjectParameter("IndicadorCodigoBarras", typeof(int));
    
            var iDPACIENTE_OKParameter = iDPACIENTE_OK.HasValue ?
                new ObjectParameter("IDPACIENTE_OK", iDPACIENTE_OK) :
                new ObjectParameter("IDPACIENTE_OK", typeof(int));
    
            var codigoAseguradoParameter = codigoAsegurado != null ?
                new ObjectParameter("CodigoAsegurado", codigoAsegurado) :
                new ObjectParameter("CodigoAsegurado", typeof(string));
    
            var numeroPolizaParameter = numeroPoliza.HasValue ?
                new ObjectParameter("NumeroPoliza", numeroPoliza) :
                new ObjectParameter("NumeroPoliza", typeof(int));
    
            var numeroCertificadoParameter = numeroCertificado.HasValue ?
                new ObjectParameter("NumeroCertificado", numeroCertificado) :
                new ObjectParameter("NumeroCertificado", typeof(int));
    
            var codigoProductoParameter = codigoProducto != null ?
                new ObjectParameter("CodigoProducto", codigoProducto) :
                new ObjectParameter("CodigoProducto", typeof(string));
    
            var codigoPlanParameter = codigoPlan != null ?
                new ObjectParameter("CodigoPlan", codigoPlan) :
                new ObjectParameter("CodigoPlan", typeof(string));
    
            var tipoParentescoParameter = tipoParentesco.HasValue ?
                new ObjectParameter("TipoParentesco", tipoParentesco) :
                new ObjectParameter("TipoParentesco", typeof(int));
    
            var codigoBeneficioParameter = codigoBeneficio != null ?
                new ObjectParameter("CodigoBeneficio", codigoBeneficio) :
                new ObjectParameter("CodigoBeneficio", typeof(string));
    
            var situacionParameter = situacion.HasValue ?
                new ObjectParameter("Situacion", situacion) :
                new ObjectParameter("Situacion", typeof(int));
    
            var tomoActualParameter = tomoActual.HasValue ?
                new ObjectParameter("TomoActual", tomoActual) :
                new ObjectParameter("TomoActual", typeof(int));
    
            var indicadorHistoriaFisicaParameter = indicadorHistoriaFisica.HasValue ?
                new ObjectParameter("IndicadorHistoriaFisica", indicadorHistoriaFisica) :
                new ObjectParameter("IndicadorHistoriaFisica", typeof(int));
    
            var descripcionHistoriaParameter = descripcionHistoria != null ?
                new ObjectParameter("DescripcionHistoria", descripcionHistoria) :
                new ObjectParameter("DescripcionHistoria", typeof(string));
    
            var personaAntParameter = personaAnt != null ?
                new ObjectParameter("PersonaAnt", personaAnt) :
                new ObjectParameter("PersonaAnt", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var idPersonalParameter = idPersonal.HasValue ?
                new ObjectParameter("IdPersonal", idPersonal) :
                new ObjectParameter("IdPersonal", typeof(int));
    
            var atencionLugarParameter = atencionLugar != null ?
                new ObjectParameter("AtencionLugar", atencionLugar) :
                new ObjectParameter("AtencionLugar", typeof(string));
    
            var atencionParameter = atencion != null ?
                new ObjectParameter("Atencion", atencion) :
                new ObjectParameter("Atencion", typeof(string));
    
            var idEstablecimientoIngresoParameter = idEstablecimientoIngreso != null ?
                new ObjectParameter("IdEstablecimientoIngreso", idEstablecimientoIngreso) :
                new ObjectParameter("IdEstablecimientoIngreso", typeof(string));
    
            var idServicioIngresoParameter = idServicioIngreso != null ?
                new ObjectParameter("IdServicioIngreso", idServicioIngreso) :
                new ObjectParameter("IdServicioIngreso", typeof(string));
    
            var prestacionParameter = prestacion != null ?
                new ObjectParameter("Prestacion", prestacion) :
                new ObjectParameter("Prestacion", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            var nroAutorizacionParameter = nroAutorizacion.HasValue ?
                new ObjectParameter("NroAutorizacion", nroAutorizacion) :
                new ObjectParameter("NroAutorizacion", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaIngresoHospParameter = fechaIngresoHosp.HasValue ?
                new ObjectParameter("FechaIngresoHosp", fechaIngresoHosp) :
                new ObjectParameter("FechaIngresoHosp", typeof(System.DateTime));
    
            var fechaCorteHospParameter = fechaCorteHosp.HasValue ?
                new ObjectParameter("FechaCorteHosp", fechaCorteHosp) :
                new ObjectParameter("FechaCorteHosp", typeof(System.DateTime));
    
            var establecimiento01Parameter = establecimiento01 != null ?
                new ObjectParameter("Establecimiento01", establecimiento01) :
                new ObjectParameter("Establecimiento01", typeof(string));
    
            var referenciaHoja01Parameter = referenciaHoja01 != null ?
                new ObjectParameter("ReferenciaHoja01", referenciaHoja01) :
                new ObjectParameter("ReferenciaHoja01", typeof(string));
    
            var establecimiento02Parameter = establecimiento02 != null ?
                new ObjectParameter("Establecimiento02", establecimiento02) :
                new ObjectParameter("Establecimiento02", typeof(string));
    
            var referenciaHoja02Parameter = referenciaHoja02 != null ?
                new ObjectParameter("ReferenciaHoja02", referenciaHoja02) :
                new ObjectParameter("ReferenciaHoja02", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_GE_Paciente", personaParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombreCompletoParameter, tipoDocumentoParameter, documentoParameter, codigoBarrasParameter, esClienteParameter, esEmpleadoParameter, esOtroParameter, tipoPersonaParameter, esProveedorParameter, fechaNacimientoParameter, ciudadNacimientoParameter, sexoParameter, nacionalidadParameter, estadoCivilParameter, nivelInstruccionParameter, direccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, telefonoParameter, documentoFiscalParameter, documentoIdentidadParameter, aCCIONParameter, edadParameter, rangoEtarioParameter, tipoMedicoParameter, correcionParameter, esPacienteParameter, esEmpresaParameter, paisParameter, flagActualizacionParameter, cuentaMonedaLocal_tmpParameter, cuentaMonedaExtranjera_tmpParameter, correlativoSCTRParameter, seguroDiscamecParameter, codDiscamecParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, lugarNacimientoParameter, celularParameter, celularEmergenciaParameter, parentescoEmergenciaParameter, direccionReferenciaParameter, ultimaFechaModifParameter, tipoPersonaUsuarioParameter, ultimoUsuarioParameter, estadoParameter, direccionEmergenciaParameter, telefonoEmergenciaParameter, bancoMonedaLocalParameter, tipoCuentaLocalParameter, cuentaMonedaLocalParameter, bancoMonedaExtranjeraParameter, tipoCuentaExtranjeraParameter, cuentaMonedaExtranjeraParameter, correoElectronicoParameter, enfermedadGraveFlagParameter, ingresoFechaRegistroParameter, ingresoAplicacionCodigoParameter, ingresoUsuarioParameter, pYMEFlagParameter, pacienteParameter, tipoPacienteParameter, razaParameter, areaLaboralParameter, ocupacionParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoHCSecundarioParameter, tipoAlmacenamientoParameter, tipoHistoriaParameter, tipoSituacionParameter, idUbicacionParameter, lugarProcedenciaParameter, rutaFotoParameter, estadoPacienteParameter, numeroFileParameter, servicioParameter, observacionParameter, indicadorAsistenciaParameter, cantidadAsistenciaParameter, ubicacionHHCCParameter, indicadorMigradoSitedsParameter, numeroCajaParameter, indicadorCodigoBarrasParameter, iDPACIENTE_OKParameter, codigoAseguradoParameter, numeroPolizaParameter, numeroCertificadoParameter, codigoProductoParameter, codigoPlanParameter, tipoParentescoParameter, codigoBeneficioParameter, situacionParameter, tomoActualParameter, indicadorHistoriaFisicaParameter, descripcionHistoriaParameter, personaAntParameter, nombresParameter, busquedaParameter, idPersonalParameter, atencionLugarParameter, atencionParameter, idEstablecimientoIngresoParameter, idServicioIngresoParameter, prestacionParameter, destinoParameter, nroAutorizacionParameter, montoParameter, fechaIngresoHospParameter, fechaCorteHospParameter, establecimiento01Parameter, referenciaHoja01Parameter, establecimiento02Parameter, referenciaHoja02Parameter);
        }
    
        public virtual ObjectResult<SS_GE_Paciente> USP_SS_GE_Paciente_Listar(Nullable<int> idPaciente, Nullable<int> tipoPaciente, Nullable<int> edad, string raza, string religion, string cargo, string areaLaboral, string ocupacion, string codigoHC, string codigoHCAnterior, string codigoHCSecundario, string tipoAlmacenamiento, string tipoHistoria, string tipoSituacion, Nullable<int> idUbicacion, string lugarProcedencia, string rutaFoto, Nullable<System.DateTime> fechaIngreso, Nullable<int> indicadorNuevo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> numeroFile, string servicio, string usuarioAlmacenamiento, Nullable<System.DateTime> fechaAlmacenamiento, string observacion, Nullable<int> indicadorAsistencia, Nullable<int> cantidadAsistencia, Nullable<int> ubicacionHHCC, Nullable<int> indicadorMigradoSiteds, string numeroCaja, Nullable<int> indicadorCodigoBarras, Nullable<int> iDPACIENTE_OK, string codigoAsegurado, Nullable<int> numeroPoliza, Nullable<int> numeroCertificado, string codigoProducto, string codigoPlan, Nullable<int> tipoParentesco, string codigoBeneficio, Nullable<int> situacion, Nullable<int> tomoActual, Nullable<int> indicadorHistoriaFisica, string descripcionHistoria, string accion, Nullable<int> idPersonal, string atencionLugar, string atencion, string idEstablecimientoIngreso, string idServicioIngreso, string prestacion, string destino, Nullable<int> nroAutorizacion, Nullable<decimal> monto, Nullable<System.DateTime> fechaIngresoHosp, Nullable<System.DateTime> fechaCorteHosp, string establecimiento01, string referenciaHoja01, string establecimiento02, string referenciaHoja02, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_Paciente).Assembly);
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var razaParameter = raza != null ?
                new ObjectParameter("Raza", raza) :
                new ObjectParameter("Raza", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var areaLaboralParameter = areaLaboral != null ?
                new ObjectParameter("AreaLaboral", areaLaboral) :
                new ObjectParameter("AreaLaboral", typeof(string));
    
            var ocupacionParameter = ocupacion != null ?
                new ObjectParameter("Ocupacion", ocupacion) :
                new ObjectParameter("Ocupacion", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoHCSecundarioParameter = codigoHCSecundario != null ?
                new ObjectParameter("CodigoHCSecundario", codigoHCSecundario) :
                new ObjectParameter("CodigoHCSecundario", typeof(string));
    
            var tipoAlmacenamientoParameter = tipoAlmacenamiento != null ?
                new ObjectParameter("TipoAlmacenamiento", tipoAlmacenamiento) :
                new ObjectParameter("TipoAlmacenamiento", typeof(string));
    
            var tipoHistoriaParameter = tipoHistoria != null ?
                new ObjectParameter("TipoHistoria", tipoHistoria) :
                new ObjectParameter("TipoHistoria", typeof(string));
    
            var tipoSituacionParameter = tipoSituacion != null ?
                new ObjectParameter("TipoSituacion", tipoSituacion) :
                new ObjectParameter("TipoSituacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var lugarProcedenciaParameter = lugarProcedencia != null ?
                new ObjectParameter("LugarProcedencia", lugarProcedencia) :
                new ObjectParameter("LugarProcedencia", typeof(string));
    
            var rutaFotoParameter = rutaFoto != null ?
                new ObjectParameter("RutaFoto", rutaFoto) :
                new ObjectParameter("RutaFoto", typeof(string));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var indicadorNuevoParameter = indicadorNuevo.HasValue ?
                new ObjectParameter("IndicadorNuevo", indicadorNuevo) :
                new ObjectParameter("IndicadorNuevo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var numeroFileParameter = numeroFile.HasValue ?
                new ObjectParameter("NumeroFile", numeroFile) :
                new ObjectParameter("NumeroFile", typeof(int));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var usuarioAlmacenamientoParameter = usuarioAlmacenamiento != null ?
                new ObjectParameter("UsuarioAlmacenamiento", usuarioAlmacenamiento) :
                new ObjectParameter("UsuarioAlmacenamiento", typeof(string));
    
            var fechaAlmacenamientoParameter = fechaAlmacenamiento.HasValue ?
                new ObjectParameter("FechaAlmacenamiento", fechaAlmacenamiento) :
                new ObjectParameter("FechaAlmacenamiento", typeof(System.DateTime));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var indicadorAsistenciaParameter = indicadorAsistencia.HasValue ?
                new ObjectParameter("IndicadorAsistencia", indicadorAsistencia) :
                new ObjectParameter("IndicadorAsistencia", typeof(int));
    
            var cantidadAsistenciaParameter = cantidadAsistencia.HasValue ?
                new ObjectParameter("CantidadAsistencia", cantidadAsistencia) :
                new ObjectParameter("CantidadAsistencia", typeof(int));
    
            var ubicacionHHCCParameter = ubicacionHHCC.HasValue ?
                new ObjectParameter("UbicacionHHCC", ubicacionHHCC) :
                new ObjectParameter("UbicacionHHCC", typeof(int));
    
            var indicadorMigradoSitedsParameter = indicadorMigradoSiteds.HasValue ?
                new ObjectParameter("IndicadorMigradoSiteds", indicadorMigradoSiteds) :
                new ObjectParameter("IndicadorMigradoSiteds", typeof(int));
    
            var numeroCajaParameter = numeroCaja != null ?
                new ObjectParameter("NumeroCaja", numeroCaja) :
                new ObjectParameter("NumeroCaja", typeof(string));
    
            var indicadorCodigoBarrasParameter = indicadorCodigoBarras.HasValue ?
                new ObjectParameter("IndicadorCodigoBarras", indicadorCodigoBarras) :
                new ObjectParameter("IndicadorCodigoBarras", typeof(int));
    
            var iDPACIENTE_OKParameter = iDPACIENTE_OK.HasValue ?
                new ObjectParameter("IDPACIENTE_OK", iDPACIENTE_OK) :
                new ObjectParameter("IDPACIENTE_OK", typeof(int));
    
            var codigoAseguradoParameter = codigoAsegurado != null ?
                new ObjectParameter("CodigoAsegurado", codigoAsegurado) :
                new ObjectParameter("CodigoAsegurado", typeof(string));
    
            var numeroPolizaParameter = numeroPoliza.HasValue ?
                new ObjectParameter("NumeroPoliza", numeroPoliza) :
                new ObjectParameter("NumeroPoliza", typeof(int));
    
            var numeroCertificadoParameter = numeroCertificado.HasValue ?
                new ObjectParameter("NumeroCertificado", numeroCertificado) :
                new ObjectParameter("NumeroCertificado", typeof(int));
    
            var codigoProductoParameter = codigoProducto != null ?
                new ObjectParameter("CodigoProducto", codigoProducto) :
                new ObjectParameter("CodigoProducto", typeof(string));
    
            var codigoPlanParameter = codigoPlan != null ?
                new ObjectParameter("CodigoPlan", codigoPlan) :
                new ObjectParameter("CodigoPlan", typeof(string));
    
            var tipoParentescoParameter = tipoParentesco.HasValue ?
                new ObjectParameter("TipoParentesco", tipoParentesco) :
                new ObjectParameter("TipoParentesco", typeof(int));
    
            var codigoBeneficioParameter = codigoBeneficio != null ?
                new ObjectParameter("CodigoBeneficio", codigoBeneficio) :
                new ObjectParameter("CodigoBeneficio", typeof(string));
    
            var situacionParameter = situacion.HasValue ?
                new ObjectParameter("Situacion", situacion) :
                new ObjectParameter("Situacion", typeof(int));
    
            var tomoActualParameter = tomoActual.HasValue ?
                new ObjectParameter("TomoActual", tomoActual) :
                new ObjectParameter("TomoActual", typeof(int));
    
            var indicadorHistoriaFisicaParameter = indicadorHistoriaFisica.HasValue ?
                new ObjectParameter("IndicadorHistoriaFisica", indicadorHistoriaFisica) :
                new ObjectParameter("IndicadorHistoriaFisica", typeof(int));
    
            var descripcionHistoriaParameter = descripcionHistoria != null ?
                new ObjectParameter("DescripcionHistoria", descripcionHistoria) :
                new ObjectParameter("DescripcionHistoria", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var idPersonalParameter = idPersonal.HasValue ?
                new ObjectParameter("IdPersonal", idPersonal) :
                new ObjectParameter("IdPersonal", typeof(int));
    
            var atencionLugarParameter = atencionLugar != null ?
                new ObjectParameter("AtencionLugar", atencionLugar) :
                new ObjectParameter("AtencionLugar", typeof(string));
    
            var atencionParameter = atencion != null ?
                new ObjectParameter("Atencion", atencion) :
                new ObjectParameter("Atencion", typeof(string));
    
            var idEstablecimientoIngresoParameter = idEstablecimientoIngreso != null ?
                new ObjectParameter("IdEstablecimientoIngreso", idEstablecimientoIngreso) :
                new ObjectParameter("IdEstablecimientoIngreso", typeof(string));
    
            var idServicioIngresoParameter = idServicioIngreso != null ?
                new ObjectParameter("IdServicioIngreso", idServicioIngreso) :
                new ObjectParameter("IdServicioIngreso", typeof(string));
    
            var prestacionParameter = prestacion != null ?
                new ObjectParameter("Prestacion", prestacion) :
                new ObjectParameter("Prestacion", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            var nroAutorizacionParameter = nroAutorizacion.HasValue ?
                new ObjectParameter("NroAutorizacion", nroAutorizacion) :
                new ObjectParameter("NroAutorizacion", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaIngresoHospParameter = fechaIngresoHosp.HasValue ?
                new ObjectParameter("FechaIngresoHosp", fechaIngresoHosp) :
                new ObjectParameter("FechaIngresoHosp", typeof(System.DateTime));
    
            var fechaCorteHospParameter = fechaCorteHosp.HasValue ?
                new ObjectParameter("FechaCorteHosp", fechaCorteHosp) :
                new ObjectParameter("FechaCorteHosp", typeof(System.DateTime));
    
            var establecimiento01Parameter = establecimiento01 != null ?
                new ObjectParameter("Establecimiento01", establecimiento01) :
                new ObjectParameter("Establecimiento01", typeof(string));
    
            var referenciaHoja01Parameter = referenciaHoja01 != null ?
                new ObjectParameter("ReferenciaHoja01", referenciaHoja01) :
                new ObjectParameter("ReferenciaHoja01", typeof(string));
    
            var establecimiento02Parameter = establecimiento02 != null ?
                new ObjectParameter("Establecimiento02", establecimiento02) :
                new ObjectParameter("Establecimiento02", typeof(string));
    
            var referenciaHoja02Parameter = referenciaHoja02 != null ?
                new ObjectParameter("ReferenciaHoja02", referenciaHoja02) :
                new ObjectParameter("ReferenciaHoja02", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_Paciente>("USP_SS_GE_Paciente_Listar", idPacienteParameter, tipoPacienteParameter, edadParameter, razaParameter, religionParameter, cargoParameter, areaLaboralParameter, ocupacionParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoHCSecundarioParameter, tipoAlmacenamientoParameter, tipoHistoriaParameter, tipoSituacionParameter, idUbicacionParameter, lugarProcedenciaParameter, rutaFotoParameter, fechaIngresoParameter, indicadorNuevoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, numeroFileParameter, servicioParameter, usuarioAlmacenamientoParameter, fechaAlmacenamientoParameter, observacionParameter, indicadorAsistenciaParameter, cantidadAsistenciaParameter, ubicacionHHCCParameter, indicadorMigradoSitedsParameter, numeroCajaParameter, indicadorCodigoBarrasParameter, iDPACIENTE_OKParameter, codigoAseguradoParameter, numeroPolizaParameter, numeroCertificadoParameter, codigoProductoParameter, codigoPlanParameter, tipoParentescoParameter, codigoBeneficioParameter, situacionParameter, tomoActualParameter, indicadorHistoriaFisicaParameter, descripcionHistoriaParameter, accionParameter, idPersonalParameter, atencionLugarParameter, atencionParameter, idEstablecimientoIngresoParameter, idServicioIngresoParameter, prestacionParameter, destinoParameter, nroAutorizacionParameter, montoParameter, fechaIngresoHospParameter, fechaCorteHospParameter, establecimiento01Parameter, referenciaHoja01Parameter, establecimiento02Parameter, referenciaHoja02Parameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_GE_Paciente> USP_SS_GE_Paciente_Listar(Nullable<int> idPaciente, Nullable<int> tipoPaciente, Nullable<int> edad, string raza, string religion, string cargo, string areaLaboral, string ocupacion, string codigoHC, string codigoHCAnterior, string codigoHCSecundario, string tipoAlmacenamiento, string tipoHistoria, string tipoSituacion, Nullable<int> idUbicacion, string lugarProcedencia, string rutaFoto, Nullable<System.DateTime> fechaIngreso, Nullable<int> indicadorNuevo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> numeroFile, string servicio, string usuarioAlmacenamiento, Nullable<System.DateTime> fechaAlmacenamiento, string observacion, Nullable<int> indicadorAsistencia, Nullable<int> cantidadAsistencia, Nullable<int> ubicacionHHCC, Nullable<int> indicadorMigradoSiteds, string numeroCaja, Nullable<int> indicadorCodigoBarras, Nullable<int> iDPACIENTE_OK, string codigoAsegurado, Nullable<int> numeroPoliza, Nullable<int> numeroCertificado, string codigoProducto, string codigoPlan, Nullable<int> tipoParentesco, string codigoBeneficio, Nullable<int> situacion, Nullable<int> tomoActual, Nullable<int> indicadorHistoriaFisica, string descripcionHistoria, string accion, Nullable<int> idPersonal, string atencionLugar, string atencion, string idEstablecimientoIngreso, string idServicioIngreso, string prestacion, string destino, Nullable<int> nroAutorizacion, Nullable<decimal> monto, Nullable<System.DateTime> fechaIngresoHosp, Nullable<System.DateTime> fechaCorteHosp, string establecimiento01, string referenciaHoja01, string establecimiento02, string referenciaHoja02, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_Paciente).Assembly);
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var razaParameter = raza != null ?
                new ObjectParameter("Raza", raza) :
                new ObjectParameter("Raza", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var areaLaboralParameter = areaLaboral != null ?
                new ObjectParameter("AreaLaboral", areaLaboral) :
                new ObjectParameter("AreaLaboral", typeof(string));
    
            var ocupacionParameter = ocupacion != null ?
                new ObjectParameter("Ocupacion", ocupacion) :
                new ObjectParameter("Ocupacion", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoHCSecundarioParameter = codigoHCSecundario != null ?
                new ObjectParameter("CodigoHCSecundario", codigoHCSecundario) :
                new ObjectParameter("CodigoHCSecundario", typeof(string));
    
            var tipoAlmacenamientoParameter = tipoAlmacenamiento != null ?
                new ObjectParameter("TipoAlmacenamiento", tipoAlmacenamiento) :
                new ObjectParameter("TipoAlmacenamiento", typeof(string));
    
            var tipoHistoriaParameter = tipoHistoria != null ?
                new ObjectParameter("TipoHistoria", tipoHistoria) :
                new ObjectParameter("TipoHistoria", typeof(string));
    
            var tipoSituacionParameter = tipoSituacion != null ?
                new ObjectParameter("TipoSituacion", tipoSituacion) :
                new ObjectParameter("TipoSituacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var lugarProcedenciaParameter = lugarProcedencia != null ?
                new ObjectParameter("LugarProcedencia", lugarProcedencia) :
                new ObjectParameter("LugarProcedencia", typeof(string));
    
            var rutaFotoParameter = rutaFoto != null ?
                new ObjectParameter("RutaFoto", rutaFoto) :
                new ObjectParameter("RutaFoto", typeof(string));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var indicadorNuevoParameter = indicadorNuevo.HasValue ?
                new ObjectParameter("IndicadorNuevo", indicadorNuevo) :
                new ObjectParameter("IndicadorNuevo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var numeroFileParameter = numeroFile.HasValue ?
                new ObjectParameter("NumeroFile", numeroFile) :
                new ObjectParameter("NumeroFile", typeof(int));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var usuarioAlmacenamientoParameter = usuarioAlmacenamiento != null ?
                new ObjectParameter("UsuarioAlmacenamiento", usuarioAlmacenamiento) :
                new ObjectParameter("UsuarioAlmacenamiento", typeof(string));
    
            var fechaAlmacenamientoParameter = fechaAlmacenamiento.HasValue ?
                new ObjectParameter("FechaAlmacenamiento", fechaAlmacenamiento) :
                new ObjectParameter("FechaAlmacenamiento", typeof(System.DateTime));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var indicadorAsistenciaParameter = indicadorAsistencia.HasValue ?
                new ObjectParameter("IndicadorAsistencia", indicadorAsistencia) :
                new ObjectParameter("IndicadorAsistencia", typeof(int));
    
            var cantidadAsistenciaParameter = cantidadAsistencia.HasValue ?
                new ObjectParameter("CantidadAsistencia", cantidadAsistencia) :
                new ObjectParameter("CantidadAsistencia", typeof(int));
    
            var ubicacionHHCCParameter = ubicacionHHCC.HasValue ?
                new ObjectParameter("UbicacionHHCC", ubicacionHHCC) :
                new ObjectParameter("UbicacionHHCC", typeof(int));
    
            var indicadorMigradoSitedsParameter = indicadorMigradoSiteds.HasValue ?
                new ObjectParameter("IndicadorMigradoSiteds", indicadorMigradoSiteds) :
                new ObjectParameter("IndicadorMigradoSiteds", typeof(int));
    
            var numeroCajaParameter = numeroCaja != null ?
                new ObjectParameter("NumeroCaja", numeroCaja) :
                new ObjectParameter("NumeroCaja", typeof(string));
    
            var indicadorCodigoBarrasParameter = indicadorCodigoBarras.HasValue ?
                new ObjectParameter("IndicadorCodigoBarras", indicadorCodigoBarras) :
                new ObjectParameter("IndicadorCodigoBarras", typeof(int));
    
            var iDPACIENTE_OKParameter = iDPACIENTE_OK.HasValue ?
                new ObjectParameter("IDPACIENTE_OK", iDPACIENTE_OK) :
                new ObjectParameter("IDPACIENTE_OK", typeof(int));
    
            var codigoAseguradoParameter = codigoAsegurado != null ?
                new ObjectParameter("CodigoAsegurado", codigoAsegurado) :
                new ObjectParameter("CodigoAsegurado", typeof(string));
    
            var numeroPolizaParameter = numeroPoliza.HasValue ?
                new ObjectParameter("NumeroPoliza", numeroPoliza) :
                new ObjectParameter("NumeroPoliza", typeof(int));
    
            var numeroCertificadoParameter = numeroCertificado.HasValue ?
                new ObjectParameter("NumeroCertificado", numeroCertificado) :
                new ObjectParameter("NumeroCertificado", typeof(int));
    
            var codigoProductoParameter = codigoProducto != null ?
                new ObjectParameter("CodigoProducto", codigoProducto) :
                new ObjectParameter("CodigoProducto", typeof(string));
    
            var codigoPlanParameter = codigoPlan != null ?
                new ObjectParameter("CodigoPlan", codigoPlan) :
                new ObjectParameter("CodigoPlan", typeof(string));
    
            var tipoParentescoParameter = tipoParentesco.HasValue ?
                new ObjectParameter("TipoParentesco", tipoParentesco) :
                new ObjectParameter("TipoParentesco", typeof(int));
    
            var codigoBeneficioParameter = codigoBeneficio != null ?
                new ObjectParameter("CodigoBeneficio", codigoBeneficio) :
                new ObjectParameter("CodigoBeneficio", typeof(string));
    
            var situacionParameter = situacion.HasValue ?
                new ObjectParameter("Situacion", situacion) :
                new ObjectParameter("Situacion", typeof(int));
    
            var tomoActualParameter = tomoActual.HasValue ?
                new ObjectParameter("TomoActual", tomoActual) :
                new ObjectParameter("TomoActual", typeof(int));
    
            var indicadorHistoriaFisicaParameter = indicadorHistoriaFisica.HasValue ?
                new ObjectParameter("IndicadorHistoriaFisica", indicadorHistoriaFisica) :
                new ObjectParameter("IndicadorHistoriaFisica", typeof(int));
    
            var descripcionHistoriaParameter = descripcionHistoria != null ?
                new ObjectParameter("DescripcionHistoria", descripcionHistoria) :
                new ObjectParameter("DescripcionHistoria", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var idPersonalParameter = idPersonal.HasValue ?
                new ObjectParameter("IdPersonal", idPersonal) :
                new ObjectParameter("IdPersonal", typeof(int));
    
            var atencionLugarParameter = atencionLugar != null ?
                new ObjectParameter("AtencionLugar", atencionLugar) :
                new ObjectParameter("AtencionLugar", typeof(string));
    
            var atencionParameter = atencion != null ?
                new ObjectParameter("Atencion", atencion) :
                new ObjectParameter("Atencion", typeof(string));
    
            var idEstablecimientoIngresoParameter = idEstablecimientoIngreso != null ?
                new ObjectParameter("IdEstablecimientoIngreso", idEstablecimientoIngreso) :
                new ObjectParameter("IdEstablecimientoIngreso", typeof(string));
    
            var idServicioIngresoParameter = idServicioIngreso != null ?
                new ObjectParameter("IdServicioIngreso", idServicioIngreso) :
                new ObjectParameter("IdServicioIngreso", typeof(string));
    
            var prestacionParameter = prestacion != null ?
                new ObjectParameter("Prestacion", prestacion) :
                new ObjectParameter("Prestacion", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            var nroAutorizacionParameter = nroAutorizacion.HasValue ?
                new ObjectParameter("NroAutorizacion", nroAutorizacion) :
                new ObjectParameter("NroAutorizacion", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaIngresoHospParameter = fechaIngresoHosp.HasValue ?
                new ObjectParameter("FechaIngresoHosp", fechaIngresoHosp) :
                new ObjectParameter("FechaIngresoHosp", typeof(System.DateTime));
    
            var fechaCorteHospParameter = fechaCorteHosp.HasValue ?
                new ObjectParameter("FechaCorteHosp", fechaCorteHosp) :
                new ObjectParameter("FechaCorteHosp", typeof(System.DateTime));
    
            var establecimiento01Parameter = establecimiento01 != null ?
                new ObjectParameter("Establecimiento01", establecimiento01) :
                new ObjectParameter("Establecimiento01", typeof(string));
    
            var referenciaHoja01Parameter = referenciaHoja01 != null ?
                new ObjectParameter("ReferenciaHoja01", referenciaHoja01) :
                new ObjectParameter("ReferenciaHoja01", typeof(string));
    
            var establecimiento02Parameter = establecimiento02 != null ?
                new ObjectParameter("Establecimiento02", establecimiento02) :
                new ObjectParameter("Establecimiento02", typeof(string));
    
            var referenciaHoja02Parameter = referenciaHoja02 != null ?
                new ObjectParameter("ReferenciaHoja02", referenciaHoja02) :
                new ObjectParameter("ReferenciaHoja02", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_Paciente>("USP_SS_GE_Paciente_Listar", mergeOption, idPacienteParameter, tipoPacienteParameter, edadParameter, razaParameter, religionParameter, cargoParameter, areaLaboralParameter, ocupacionParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoHCSecundarioParameter, tipoAlmacenamientoParameter, tipoHistoriaParameter, tipoSituacionParameter, idUbicacionParameter, lugarProcedenciaParameter, rutaFotoParameter, fechaIngresoParameter, indicadorNuevoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, numeroFileParameter, servicioParameter, usuarioAlmacenamientoParameter, fechaAlmacenamientoParameter, observacionParameter, indicadorAsistenciaParameter, cantidadAsistenciaParameter, ubicacionHHCCParameter, indicadorMigradoSitedsParameter, numeroCajaParameter, indicadorCodigoBarrasParameter, iDPACIENTE_OKParameter, codigoAseguradoParameter, numeroPolizaParameter, numeroCertificadoParameter, codigoProductoParameter, codigoPlanParameter, tipoParentescoParameter, codigoBeneficioParameter, situacionParameter, tomoActualParameter, indicadorHistoriaFisicaParameter, descripcionHistoriaParameter, accionParameter, idPersonalParameter, atencionLugarParameter, atencionParameter, idEstablecimientoIngresoParameter, idServicioIngresoParameter, prestacionParameter, destinoParameter, nroAutorizacionParameter, montoParameter, fechaIngresoHospParameter, fechaCorteHospParameter, establecimiento01Parameter, referenciaHoja01Parameter, establecimiento02Parameter, referenciaHoja02Parameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_GE_ProcedimientoMedico(Nullable<int> idProcedimiento, string codigoProcedimiento, string codigoPadre, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idProcedimientoPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipofolder, string nombreTabla, string accion, string codigoSegus)
        {
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoProcedimientoParameter = codigoProcedimiento != null ?
                new ObjectParameter("CodigoProcedimiento", codigoProcedimiento) :
                new ObjectParameter("CodigoProcedimiento", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idProcedimientoPadreParameter = idProcedimientoPadre.HasValue ?
                new ObjectParameter("IdProcedimientoPadre", idProcedimientoPadre) :
                new ObjectParameter("IdProcedimientoPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipofolderParameter = tipofolder.HasValue ?
                new ObjectParameter("tipofolder", tipofolder) :
                new ObjectParameter("tipofolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_GE_ProcedimientoMedico", idProcedimientoParameter, codigoProcedimientoParameter, codigoPadreParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idProcedimientoPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipofolderParameter, nombreTablaParameter, accionParameter, codigoSegusParameter);
        }
    
        public virtual ObjectResult<SS_GE_ProcedimientoMedico> USP_SS_GE_ProcedimientoMedicoListar(Nullable<int> idProcedimiento, string codigoProcedimiento, string codigoPadre, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idProcedimientoPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipofolder, string nombreTabla, string accion, string codigoSegus, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_ProcedimientoMedico).Assembly);
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoProcedimientoParameter = codigoProcedimiento != null ?
                new ObjectParameter("CodigoProcedimiento", codigoProcedimiento) :
                new ObjectParameter("CodigoProcedimiento", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idProcedimientoPadreParameter = idProcedimientoPadre.HasValue ?
                new ObjectParameter("IdProcedimientoPadre", idProcedimientoPadre) :
                new ObjectParameter("IdProcedimientoPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipofolderParameter = tipofolder.HasValue ?
                new ObjectParameter("tipofolder", tipofolder) :
                new ObjectParameter("tipofolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_ProcedimientoMedico>("USP_SS_GE_ProcedimientoMedicoListar", idProcedimientoParameter, codigoProcedimientoParameter, codigoPadreParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idProcedimientoPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipofolderParameter, nombreTablaParameter, accionParameter, codigoSegusParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_GE_ProcedimientoMedico> USP_SS_GE_ProcedimientoMedicoListar(Nullable<int> idProcedimiento, string codigoProcedimiento, string codigoPadre, string nombre, string descripcion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idProcedimientoPadre, Nullable<int> orden, string cadenaRecursividad, Nullable<int> nivel, string diagnosticoSiteds, Nullable<int> indicadorPermitido, Nullable<int> tipofolder, string nombreTabla, string accion, string codigoSegus, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_GE_ProcedimientoMedico).Assembly);
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoProcedimientoParameter = codigoProcedimiento != null ?
                new ObjectParameter("CodigoProcedimiento", codigoProcedimiento) :
                new ObjectParameter("CodigoProcedimiento", typeof(string));
    
            var codigoPadreParameter = codigoPadre != null ?
                new ObjectParameter("CodigoPadre", codigoPadre) :
                new ObjectParameter("CodigoPadre", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idProcedimientoPadreParameter = idProcedimientoPadre.HasValue ?
                new ObjectParameter("IdProcedimientoPadre", idProcedimientoPadre) :
                new ObjectParameter("IdProcedimientoPadre", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var diagnosticoSitedsParameter = diagnosticoSiteds != null ?
                new ObjectParameter("DiagnosticoSiteds", diagnosticoSiteds) :
                new ObjectParameter("DiagnosticoSiteds", typeof(string));
    
            var indicadorPermitidoParameter = indicadorPermitido.HasValue ?
                new ObjectParameter("IndicadorPermitido", indicadorPermitido) :
                new ObjectParameter("IndicadorPermitido", typeof(int));
    
            var tipofolderParameter = tipofolder.HasValue ?
                new ObjectParameter("tipofolder", tipofolder) :
                new ObjectParameter("tipofolder", typeof(int));
    
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("NombreTabla", nombreTabla) :
                new ObjectParameter("NombreTabla", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_GE_ProcedimientoMedico>("USP_SS_GE_ProcedimientoMedicoListar", mergeOption, idProcedimientoParameter, codigoProcedimientoParameter, codigoPadreParameter, nombreParameter, descripcionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idProcedimientoPadreParameter, ordenParameter, cadenaRecursividadParameter, nivelParameter, diagnosticoSitedsParameter, indicadorPermitidoParameter, tipofolderParameter, nombreTablaParameter, accionParameter, codigoSegusParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_SS_HC_MA_MiscelaneosDetalle_LISTAR(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, Nullable<int> rowID, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, string valorCodigo6, string valorCodigo7, Nullable<int> valorEntero6, Nullable<int> valorEntero7, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var rowIDParameter = rowID.HasValue ?
                new ObjectParameter("RowID", rowID) :
                new ObjectParameter("RowID", typeof(int));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorCodigo6Parameter = valorCodigo6 != null ?
                new ObjectParameter("ValorCodigo6", valorCodigo6) :
                new ObjectParameter("ValorCodigo6", typeof(string));
    
            var valorCodigo7Parameter = valorCodigo7 != null ?
                new ObjectParameter("ValorCodigo7", valorCodigo7) :
                new ObjectParameter("ValorCodigo7", typeof(string));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_SS_HC_MA_MiscelaneosDetalle_LISTAR", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, rowIDParameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorCodigo6Parameter, valorCodigo7Parameter, valorEntero6Parameter, valorEntero7Parameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> USP_SS_HC_MA_MiscelaneosDetalle_LISTAR(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, Nullable<System.DateTime> valorFecha, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, Nullable<int> rowID, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, string valorCodigo6, string valorCodigo7, Nullable<int> valorEntero6, Nullable<int> valorEntero7, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var rowIDParameter = rowID.HasValue ?
                new ObjectParameter("RowID", rowID) :
                new ObjectParameter("RowID", typeof(int));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorCodigo6Parameter = valorCodigo6 != null ?
                new ObjectParameter("ValorCodigo6", valorCodigo6) :
                new ObjectParameter("ValorCodigo6", typeof(string));
    
            var valorCodigo7Parameter = valorCodigo7 != null ?
                new ObjectParameter("ValorCodigo7", valorCodigo7) :
                new ObjectParameter("ValorCodigo7", typeof(string));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("USP_SS_HC_MA_MiscelaneosDetalle_LISTAR", mergeOption, aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorFechaParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, rowIDParameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorCodigo6Parameter, valorCodigo7Parameter, valorEntero6Parameter, valorEntero7Parameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_ExamenSolicitado(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idProcedimiento, Nullable<int> idEspecialidad, Nullable<int> idTipoExamen, Nullable<System.DateTime> fechaSolitada, string conceptos, string codigoComponente, string observacion, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string tipoCodigo, string codigoSegus, string version, Nullable<int> cantidad, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idTipoExamenParameter = idTipoExamen.HasValue ?
                new ObjectParameter("IdTipoExamen", idTipoExamen) :
                new ObjectParameter("IdTipoExamen", typeof(int));
    
            var fechaSolitadaParameter = fechaSolitada.HasValue ?
                new ObjectParameter("FechaSolitada", fechaSolitada) :
                new ObjectParameter("FechaSolitada", typeof(System.DateTime));
    
            var conceptosParameter = conceptos != null ?
                new ObjectParameter("Conceptos", conceptos) :
                new ObjectParameter("Conceptos", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tipoCodigoParameter = tipoCodigo != null ?
                new ObjectParameter("TipoCodigo", tipoCodigo) :
                new ObjectParameter("TipoCodigo", typeof(string));
    
            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ExamenSolicitado", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idProcedimientoParameter, idEspecialidadParameter, idTipoExamenParameter, fechaSolitadaParameter, conceptosParameter, codigoComponenteParameter, observacionParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoCodigoParameter, codigoSegusParameter, versionParameter, cantidadParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_HC_ExamenSolicitado> USP_ExamenSolicitadoListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idProcedimiento, Nullable<int> idEspecialidad, Nullable<int> idTipoExamen, Nullable<System.DateTime> fechaSolitada, string conceptos, string codigoComponente, string observacion, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string tipoCodigo, string codigoSegus, string version, Nullable<int> cantidad, string accion, Nullable<int> inicio, Nullable<int> numerofilas)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ExamenSolicitado).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idTipoExamenParameter = idTipoExamen.HasValue ?
                new ObjectParameter("IdTipoExamen", idTipoExamen) :
                new ObjectParameter("IdTipoExamen", typeof(int));
    
            var fechaSolitadaParameter = fechaSolitada.HasValue ?
                new ObjectParameter("FechaSolitada", fechaSolitada) :
                new ObjectParameter("FechaSolitada", typeof(System.DateTime));
    
            var conceptosParameter = conceptos != null ?
                new ObjectParameter("Conceptos", conceptos) :
                new ObjectParameter("Conceptos", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tipoCodigoParameter = tipoCodigo != null ?
                new ObjectParameter("TipoCodigo", tipoCodigo) :
                new ObjectParameter("TipoCodigo", typeof(string));
    
            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(int));
    
            var numerofilasParameter = numerofilas.HasValue ?
                new ObjectParameter("numerofilas", numerofilas) :
                new ObjectParameter("numerofilas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ExamenSolicitado>("USP_ExamenSolicitadoListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idProcedimientoParameter, idEspecialidadParameter, idTipoExamenParameter, fechaSolitadaParameter, conceptosParameter, codigoComponenteParameter, observacionParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoCodigoParameter, codigoSegusParameter, versionParameter, cantidadParameter, accionParameter, inicioParameter, numerofilasParameter);
        }
    
        public virtual ObjectResult<SS_HC_ExamenSolicitado> USP_ExamenSolicitadoListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idProcedimiento, Nullable<int> idEspecialidad, Nullable<int> idTipoExamen, Nullable<System.DateTime> fechaSolitada, string conceptos, string codigoComponente, string observacion, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string tipoCodigo, string codigoSegus, string version, Nullable<int> cantidad, string accion, Nullable<int> inicio, Nullable<int> numerofilas, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ExamenSolicitado).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idTipoExamenParameter = idTipoExamen.HasValue ?
                new ObjectParameter("IdTipoExamen", idTipoExamen) :
                new ObjectParameter("IdTipoExamen", typeof(int));
    
            var fechaSolitadaParameter = fechaSolitada.HasValue ?
                new ObjectParameter("FechaSolitada", fechaSolitada) :
                new ObjectParameter("FechaSolitada", typeof(System.DateTime));
    
            var conceptosParameter = conceptos != null ?
                new ObjectParameter("Conceptos", conceptos) :
                new ObjectParameter("Conceptos", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tipoCodigoParameter = tipoCodigo != null ?
                new ObjectParameter("TipoCodigo", tipoCodigo) :
                new ObjectParameter("TipoCodigo", typeof(string));
    
            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(int));
    
            var numerofilasParameter = numerofilas.HasValue ?
                new ObjectParameter("numerofilas", numerofilas) :
                new ObjectParameter("numerofilas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ExamenSolicitado>("USP_ExamenSolicitadoListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idProcedimientoParameter, idEspecialidadParameter, idTipoExamenParameter, fechaSolitadaParameter, conceptosParameter, codigoComponenteParameter, observacionParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoCodigoParameter, codigoSegusParameter, versionParameter, cantidadParameter, accionParameter, inicioParameter, numerofilasParameter);
        }
    
        public virtual ObjectResult<SS_HC_PacienteDocumentos> USP_SS_HC_PacienteDocumentosListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> secuencial, string tipoDocumento, string numeroDocumento, Nullable<System.DateTime> fechaVigencia, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_PacienteDocumentos).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var fechaVigenciaParameter = fechaVigencia.HasValue ?
                new ObjectParameter("FechaVigencia", fechaVigencia) :
                new ObjectParameter("FechaVigencia", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_PacienteDocumentos>("USP_SS_HC_PacienteDocumentosListar", unidadReplicacionParameter, idPacienteParameter, secuencialParameter, tipoDocumentoParameter, numeroDocumentoParameter, fechaVigenciaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_PacienteDocumentos> USP_SS_HC_PacienteDocumentosListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> secuencial, string tipoDocumento, string numeroDocumento, Nullable<System.DateTime> fechaVigencia, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_PacienteDocumentos).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var fechaVigenciaParameter = fechaVigencia.HasValue ?
                new ObjectParameter("FechaVigencia", fechaVigencia) :
                new ObjectParameter("FechaVigencia", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_PacienteDocumentos>("USP_SS_HC_PacienteDocumentosListar", mergeOption, unidadReplicacionParameter, idPacienteParameter, secuencialParameter, tipoDocumentoParameter, numeroDocumentoParameter, fechaVigenciaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_PacienteDocumentos(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> secuencial, string tipoDocumento, string numeroDocumento, Nullable<System.DateTime> fechaVigencia, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var secuencialParameter = secuencial.HasValue ?
                new ObjectParameter("Secuencial", secuencial) :
                new ObjectParameter("Secuencial", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var fechaVigenciaParameter = fechaVigencia.HasValue ?
                new ObjectParameter("FechaVigencia", fechaVigencia) :
                new ObjectParameter("FechaVigencia", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_PacienteDocumentos", unidadReplicacionParameter, idPacienteParameter, secuencialParameter, tipoDocumentoParameter, numeroDocumentoParameter, fechaVigenciaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_ProcedimientoEjecucion(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string unidadReplicacionSolicitado, Nullable<long> idEpisodioAtencionSolicitado, Nullable<int> idPacienteSolicitado, Nullable<int> episodioClinicoSolicitado, Nullable<int> secuenciaSolicitado, Nullable<int> idProcedimiento, string codigoComponente, Nullable<System.DateTime> fechaSolicitud, Nullable<System.DateTime> fechaProcedimiento, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> fechaInforme, Nullable<int> indicadorPreparacion, Nullable<int> indicadorAutorizacion, Nullable<int> medico, string observacion, Nullable<int> tipoAlta, Nullable<System.DateTime> fechaAlta, Nullable<int> idMedicoAutoriza, string observacionAlta, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string tipoCodigo, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var unidadReplicacionSolicitadoParameter = unidadReplicacionSolicitado != null ?
                new ObjectParameter("UnidadReplicacionSolicitado", unidadReplicacionSolicitado) :
                new ObjectParameter("UnidadReplicacionSolicitado", typeof(string));
    
            var idEpisodioAtencionSolicitadoParameter = idEpisodioAtencionSolicitado.HasValue ?
                new ObjectParameter("IdEpisodioAtencionSolicitado", idEpisodioAtencionSolicitado) :
                new ObjectParameter("IdEpisodioAtencionSolicitado", typeof(long));
    
            var idPacienteSolicitadoParameter = idPacienteSolicitado.HasValue ?
                new ObjectParameter("IdPacienteSolicitado", idPacienteSolicitado) :
                new ObjectParameter("IdPacienteSolicitado", typeof(int));
    
            var episodioClinicoSolicitadoParameter = episodioClinicoSolicitado.HasValue ?
                new ObjectParameter("EpisodioClinicoSolicitado", episodioClinicoSolicitado) :
                new ObjectParameter("EpisodioClinicoSolicitado", typeof(int));
    
            var secuenciaSolicitadoParameter = secuenciaSolicitado.HasValue ?
                new ObjectParameter("SecuenciaSolicitado", secuenciaSolicitado) :
                new ObjectParameter("SecuenciaSolicitado", typeof(int));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var fechaSolicitudParameter = fechaSolicitud.HasValue ?
                new ObjectParameter("FechaSolicitud", fechaSolicitud) :
                new ObjectParameter("FechaSolicitud", typeof(System.DateTime));
    
            var fechaProcedimientoParameter = fechaProcedimiento.HasValue ?
                new ObjectParameter("FechaProcedimiento", fechaProcedimiento) :
                new ObjectParameter("FechaProcedimiento", typeof(System.DateTime));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var fechaInformeParameter = fechaInforme.HasValue ?
                new ObjectParameter("FechaInforme", fechaInforme) :
                new ObjectParameter("FechaInforme", typeof(System.DateTime));
    
            var indicadorPreparacionParameter = indicadorPreparacion.HasValue ?
                new ObjectParameter("IndicadorPreparacion", indicadorPreparacion) :
                new ObjectParameter("IndicadorPreparacion", typeof(int));
    
            var indicadorAutorizacionParameter = indicadorAutorizacion.HasValue ?
                new ObjectParameter("IndicadorAutorizacion", indicadorAutorizacion) :
                new ObjectParameter("IndicadorAutorizacion", typeof(int));
    
            var medicoParameter = medico.HasValue ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var tipoAltaParameter = tipoAlta.HasValue ?
                new ObjectParameter("TipoAlta", tipoAlta) :
                new ObjectParameter("TipoAlta", typeof(int));
    
            var fechaAltaParameter = fechaAlta.HasValue ?
                new ObjectParameter("FechaAlta", fechaAlta) :
                new ObjectParameter("FechaAlta", typeof(System.DateTime));
    
            var idMedicoAutorizaParameter = idMedicoAutoriza.HasValue ?
                new ObjectParameter("IdMedicoAutoriza", idMedicoAutoriza) :
                new ObjectParameter("IdMedicoAutoriza", typeof(int));
    
            var observacionAltaParameter = observacionAlta != null ?
                new ObjectParameter("ObservacionAlta", observacionAlta) :
                new ObjectParameter("ObservacionAlta", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tipoCodigoParameter = tipoCodigo != null ?
                new ObjectParameter("TipoCodigo", tipoCodigo) :
                new ObjectParameter("TipoCodigo", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_ProcedimientoEjecucion", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, unidadReplicacionSolicitadoParameter, idEpisodioAtencionSolicitadoParameter, idPacienteSolicitadoParameter, episodioClinicoSolicitadoParameter, secuenciaSolicitadoParameter, idProcedimientoParameter, codigoComponenteParameter, fechaSolicitudParameter, fechaProcedimientoParameter, fechaInicioParameter, fechaFinParameter, fechaInformeParameter, indicadorPreparacionParameter, indicadorAutorizacionParameter, medicoParameter, observacionParameter, tipoAltaParameter, fechaAltaParameter, idMedicoAutorizaParameter, observacionAltaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoCodigoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_ProcedimientoEjecucion> USP_SS_HC_ProcedimientoEjecucionListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string unidadReplicacionSolicitado, Nullable<long> idEpisodioAtencionSolicitado, Nullable<int> idPacienteSolicitado, Nullable<int> episodioClinicoSolicitado, Nullable<int> secuenciaSolicitado, Nullable<int> idProcedimiento, string codigoComponente, Nullable<System.DateTime> fechaSolicitud, Nullable<System.DateTime> fechaProcedimiento, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> fechaInforme, Nullable<int> indicadorPreparacion, Nullable<int> indicadorAutorizacion, Nullable<int> medico, string observacion, Nullable<int> tipoAlta, Nullable<System.DateTime> fechaAlta, Nullable<int> idMedicoAutoriza, string observacionAlta, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string tipoCodigo, Nullable<int> inicio, Nullable<int> final, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ProcedimientoEjecucion).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var unidadReplicacionSolicitadoParameter = unidadReplicacionSolicitado != null ?
                new ObjectParameter("UnidadReplicacionSolicitado", unidadReplicacionSolicitado) :
                new ObjectParameter("UnidadReplicacionSolicitado", typeof(string));
    
            var idEpisodioAtencionSolicitadoParameter = idEpisodioAtencionSolicitado.HasValue ?
                new ObjectParameter("IdEpisodioAtencionSolicitado", idEpisodioAtencionSolicitado) :
                new ObjectParameter("IdEpisodioAtencionSolicitado", typeof(long));
    
            var idPacienteSolicitadoParameter = idPacienteSolicitado.HasValue ?
                new ObjectParameter("IdPacienteSolicitado", idPacienteSolicitado) :
                new ObjectParameter("IdPacienteSolicitado", typeof(int));
    
            var episodioClinicoSolicitadoParameter = episodioClinicoSolicitado.HasValue ?
                new ObjectParameter("EpisodioClinicoSolicitado", episodioClinicoSolicitado) :
                new ObjectParameter("EpisodioClinicoSolicitado", typeof(int));
    
            var secuenciaSolicitadoParameter = secuenciaSolicitado.HasValue ?
                new ObjectParameter("SecuenciaSolicitado", secuenciaSolicitado) :
                new ObjectParameter("SecuenciaSolicitado", typeof(int));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var fechaSolicitudParameter = fechaSolicitud.HasValue ?
                new ObjectParameter("FechaSolicitud", fechaSolicitud) :
                new ObjectParameter("FechaSolicitud", typeof(System.DateTime));
    
            var fechaProcedimientoParameter = fechaProcedimiento.HasValue ?
                new ObjectParameter("FechaProcedimiento", fechaProcedimiento) :
                new ObjectParameter("FechaProcedimiento", typeof(System.DateTime));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var fechaInformeParameter = fechaInforme.HasValue ?
                new ObjectParameter("FechaInforme", fechaInforme) :
                new ObjectParameter("FechaInforme", typeof(System.DateTime));
    
            var indicadorPreparacionParameter = indicadorPreparacion.HasValue ?
                new ObjectParameter("IndicadorPreparacion", indicadorPreparacion) :
                new ObjectParameter("IndicadorPreparacion", typeof(int));
    
            var indicadorAutorizacionParameter = indicadorAutorizacion.HasValue ?
                new ObjectParameter("IndicadorAutorizacion", indicadorAutorizacion) :
                new ObjectParameter("IndicadorAutorizacion", typeof(int));
    
            var medicoParameter = medico.HasValue ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var tipoAltaParameter = tipoAlta.HasValue ?
                new ObjectParameter("TipoAlta", tipoAlta) :
                new ObjectParameter("TipoAlta", typeof(int));
    
            var fechaAltaParameter = fechaAlta.HasValue ?
                new ObjectParameter("FechaAlta", fechaAlta) :
                new ObjectParameter("FechaAlta", typeof(System.DateTime));
    
            var idMedicoAutorizaParameter = idMedicoAutoriza.HasValue ?
                new ObjectParameter("IdMedicoAutoriza", idMedicoAutoriza) :
                new ObjectParameter("IdMedicoAutoriza", typeof(int));
    
            var observacionAltaParameter = observacionAlta != null ?
                new ObjectParameter("ObservacionAlta", observacionAlta) :
                new ObjectParameter("ObservacionAlta", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tipoCodigoParameter = tipoCodigo != null ?
                new ObjectParameter("TipoCodigo", tipoCodigo) :
                new ObjectParameter("TipoCodigo", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("final", final) :
                new ObjectParameter("final", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ProcedimientoEjecucion>("USP_SS_HC_ProcedimientoEjecucionListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, unidadReplicacionSolicitadoParameter, idEpisodioAtencionSolicitadoParameter, idPacienteSolicitadoParameter, episodioClinicoSolicitadoParameter, secuenciaSolicitadoParameter, idProcedimientoParameter, codigoComponenteParameter, fechaSolicitudParameter, fechaProcedimientoParameter, fechaInicioParameter, fechaFinParameter, fechaInformeParameter, indicadorPreparacionParameter, indicadorAutorizacionParameter, medicoParameter, observacionParameter, tipoAltaParameter, fechaAltaParameter, idMedicoAutorizaParameter, observacionAltaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoCodigoParameter, inicioParameter, finalParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_ProcedimientoEjecucion> USP_SS_HC_ProcedimientoEjecucionListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string unidadReplicacionSolicitado, Nullable<long> idEpisodioAtencionSolicitado, Nullable<int> idPacienteSolicitado, Nullable<int> episodioClinicoSolicitado, Nullable<int> secuenciaSolicitado, Nullable<int> idProcedimiento, string codigoComponente, Nullable<System.DateTime> fechaSolicitud, Nullable<System.DateTime> fechaProcedimiento, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<System.DateTime> fechaInforme, Nullable<int> indicadorPreparacion, Nullable<int> indicadorAutorizacion, Nullable<int> medico, string observacion, Nullable<int> tipoAlta, Nullable<System.DateTime> fechaAlta, Nullable<int> idMedicoAutoriza, string observacionAlta, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string tipoCodigo, Nullable<int> inicio, Nullable<int> final, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_ProcedimientoEjecucion).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var unidadReplicacionSolicitadoParameter = unidadReplicacionSolicitado != null ?
                new ObjectParameter("UnidadReplicacionSolicitado", unidadReplicacionSolicitado) :
                new ObjectParameter("UnidadReplicacionSolicitado", typeof(string));
    
            var idEpisodioAtencionSolicitadoParameter = idEpisodioAtencionSolicitado.HasValue ?
                new ObjectParameter("IdEpisodioAtencionSolicitado", idEpisodioAtencionSolicitado) :
                new ObjectParameter("IdEpisodioAtencionSolicitado", typeof(long));
    
            var idPacienteSolicitadoParameter = idPacienteSolicitado.HasValue ?
                new ObjectParameter("IdPacienteSolicitado", idPacienteSolicitado) :
                new ObjectParameter("IdPacienteSolicitado", typeof(int));
    
            var episodioClinicoSolicitadoParameter = episodioClinicoSolicitado.HasValue ?
                new ObjectParameter("EpisodioClinicoSolicitado", episodioClinicoSolicitado) :
                new ObjectParameter("EpisodioClinicoSolicitado", typeof(int));
    
            var secuenciaSolicitadoParameter = secuenciaSolicitado.HasValue ?
                new ObjectParameter("SecuenciaSolicitado", secuenciaSolicitado) :
                new ObjectParameter("SecuenciaSolicitado", typeof(int));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var fechaSolicitudParameter = fechaSolicitud.HasValue ?
                new ObjectParameter("FechaSolicitud", fechaSolicitud) :
                new ObjectParameter("FechaSolicitud", typeof(System.DateTime));
    
            var fechaProcedimientoParameter = fechaProcedimiento.HasValue ?
                new ObjectParameter("FechaProcedimiento", fechaProcedimiento) :
                new ObjectParameter("FechaProcedimiento", typeof(System.DateTime));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var fechaInformeParameter = fechaInforme.HasValue ?
                new ObjectParameter("FechaInforme", fechaInforme) :
                new ObjectParameter("FechaInforme", typeof(System.DateTime));
    
            var indicadorPreparacionParameter = indicadorPreparacion.HasValue ?
                new ObjectParameter("IndicadorPreparacion", indicadorPreparacion) :
                new ObjectParameter("IndicadorPreparacion", typeof(int));
    
            var indicadorAutorizacionParameter = indicadorAutorizacion.HasValue ?
                new ObjectParameter("IndicadorAutorizacion", indicadorAutorizacion) :
                new ObjectParameter("IndicadorAutorizacion", typeof(int));
    
            var medicoParameter = medico.HasValue ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var tipoAltaParameter = tipoAlta.HasValue ?
                new ObjectParameter("TipoAlta", tipoAlta) :
                new ObjectParameter("TipoAlta", typeof(int));
    
            var fechaAltaParameter = fechaAlta.HasValue ?
                new ObjectParameter("FechaAlta", fechaAlta) :
                new ObjectParameter("FechaAlta", typeof(System.DateTime));
    
            var idMedicoAutorizaParameter = idMedicoAutoriza.HasValue ?
                new ObjectParameter("IdMedicoAutoriza", idMedicoAutoriza) :
                new ObjectParameter("IdMedicoAutoriza", typeof(int));
    
            var observacionAltaParameter = observacionAlta != null ?
                new ObjectParameter("ObservacionAlta", observacionAlta) :
                new ObjectParameter("ObservacionAlta", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tipoCodigoParameter = tipoCodigo != null ?
                new ObjectParameter("TipoCodigo", tipoCodigo) :
                new ObjectParameter("TipoCodigo", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(int));
    
            var finalParameter = final.HasValue ?
                new ObjectParameter("final", final) :
                new ObjectParameter("final", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ProcedimientoEjecucion>("USP_SS_HC_ProcedimientoEjecucionListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, unidadReplicacionSolicitadoParameter, idEpisodioAtencionSolicitadoParameter, idPacienteSolicitadoParameter, episodioClinicoSolicitadoParameter, secuenciaSolicitadoParameter, idProcedimientoParameter, codigoComponenteParameter, fechaSolicitudParameter, fechaProcedimientoParameter, fechaInicioParameter, fechaFinParameter, fechaInformeParameter, indicadorPreparacionParameter, indicadorAutorizacionParameter, medicoParameter, observacionParameter, tipoAltaParameter, fechaAltaParameter, idMedicoAutorizaParameter, observacionAltaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoCodigoParameter, inicioParameter, finalParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_VW_SS_IT_ProcesoHistoriaAdjunta(Nullable<int> idsecuencia, string codigoSucursal, string unidadReplicacion, Nullable<int> idAplicativo, string codigoReferencia, string codigoHHCC, string dNI, Nullable<int> idPaciente, Nullable<int> tipoAtencion, Nullable<System.DateTime> fecha, string especialidad, Nullable<int> idEspecialidad, string servicio, Nullable<int> idServicio, string codigoMedico, Nullable<int> idMedico, string codigoAdmision, string codigoOA, string codigoDiagnostico, Nullable<int> idDiagnostico, Nullable<int> numeroPagina, string rutaImagen, Nullable<System.DateTime> fechaRecepcion, string indicadorProcesado, string indicadorError, string descripcionError, string accion, Nullable<long> rownumber)
        {
            var idsecuenciaParameter = idsecuencia.HasValue ?
                new ObjectParameter("idsecuencia", idsecuencia) :
                new ObjectParameter("idsecuencia", typeof(int));
    
            var codigoSucursalParameter = codigoSucursal != null ?
                new ObjectParameter("CodigoSucursal", codigoSucursal) :
                new ObjectParameter("CodigoSucursal", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idAplicativoParameter = idAplicativo.HasValue ?
                new ObjectParameter("IdAplicativo", idAplicativo) :
                new ObjectParameter("IdAplicativo", typeof(int));
    
            var codigoReferenciaParameter = codigoReferencia != null ?
                new ObjectParameter("CodigoReferencia", codigoReferencia) :
                new ObjectParameter("CodigoReferencia", typeof(string));
    
            var codigoHHCCParameter = codigoHHCC != null ?
                new ObjectParameter("CodigoHHCC", codigoHHCC) :
                new ObjectParameter("CodigoHHCC", typeof(string));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var codigoMedicoParameter = codigoMedico != null ?
                new ObjectParameter("CodigoMedico", codigoMedico) :
                new ObjectParameter("CodigoMedico", typeof(string));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var codigoAdmisionParameter = codigoAdmision != null ?
                new ObjectParameter("CodigoAdmision", codigoAdmision) :
                new ObjectParameter("CodigoAdmision", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var codigoDiagnosticoParameter = codigoDiagnostico != null ?
                new ObjectParameter("CodigoDiagnostico", codigoDiagnostico) :
                new ObjectParameter("CodigoDiagnostico", typeof(string));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var numeroPaginaParameter = numeroPagina.HasValue ?
                new ObjectParameter("NumeroPagina", numeroPagina) :
                new ObjectParameter("NumeroPagina", typeof(int));
    
            var rutaImagenParameter = rutaImagen != null ?
                new ObjectParameter("RutaImagen", rutaImagen) :
                new ObjectParameter("RutaImagen", typeof(string));
    
            var fechaRecepcionParameter = fechaRecepcion.HasValue ?
                new ObjectParameter("FechaRecepcion", fechaRecepcion) :
                new ObjectParameter("FechaRecepcion", typeof(System.DateTime));
    
            var indicadorProcesadoParameter = indicadorProcesado != null ?
                new ObjectParameter("IndicadorProcesado", indicadorProcesado) :
                new ObjectParameter("IndicadorProcesado", typeof(string));
    
            var indicadorErrorParameter = indicadorError != null ?
                new ObjectParameter("IndicadorError", indicadorError) :
                new ObjectParameter("IndicadorError", typeof(string));
    
            var descripcionErrorParameter = descripcionError != null ?
                new ObjectParameter("DescripcionError", descripcionError) :
                new ObjectParameter("DescripcionError", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var rownumberParameter = rownumber.HasValue ?
                new ObjectParameter("Rownumber", rownumber) :
                new ObjectParameter("Rownumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_VW_SS_IT_ProcesoHistoriaAdjunta", idsecuenciaParameter, codigoSucursalParameter, unidadReplicacionParameter, idAplicativoParameter, codigoReferenciaParameter, codigoHHCCParameter, dNIParameter, idPacienteParameter, tipoAtencionParameter, fechaParameter, especialidadParameter, idEspecialidadParameter, servicioParameter, idServicioParameter, codigoMedicoParameter, idMedicoParameter, codigoAdmisionParameter, codigoOAParameter, codigoDiagnosticoParameter, idDiagnosticoParameter, numeroPaginaParameter, rutaImagenParameter, fechaRecepcionParameter, indicadorProcesadoParameter, indicadorErrorParameter, descripcionErrorParameter, accionParameter, rownumberParameter);
        }
    
        public virtual ObjectResult<VW_SS_IT_ProcesoHistoriaAdjunta> USP_VW_SS_IT_ProcesoHistoriaAdjuntaListar(Nullable<int> idsecuencia, string codigoSucursal, string unidadReplicacion, Nullable<int> idAplicativo, string codigoReferencia, string codigoHHCC, string dNI, Nullable<int> idPaciente, Nullable<int> tipoAtencion, Nullable<System.DateTime> fecha, string especialidad, Nullable<int> idEspecialidad, string servicio, Nullable<int> idServicio, string codigoMedico, Nullable<int> idMedico, string codigoAdmision, string codigoOA, string codigoDiagnostico, Nullable<int> idDiagnostico, Nullable<int> numeroPagina, string rutaImagen, Nullable<System.DateTime> fechaRecepcion, string indicadorProcesado, string indicadorError, string descripcionError, string accion, Nullable<long> rownumber, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_SS_IT_ProcesoHistoriaAdjunta).Assembly);
    
            var idsecuenciaParameter = idsecuencia.HasValue ?
                new ObjectParameter("idsecuencia", idsecuencia) :
                new ObjectParameter("idsecuencia", typeof(int));
    
            var codigoSucursalParameter = codigoSucursal != null ?
                new ObjectParameter("CodigoSucursal", codigoSucursal) :
                new ObjectParameter("CodigoSucursal", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idAplicativoParameter = idAplicativo.HasValue ?
                new ObjectParameter("IdAplicativo", idAplicativo) :
                new ObjectParameter("IdAplicativo", typeof(int));
    
            var codigoReferenciaParameter = codigoReferencia != null ?
                new ObjectParameter("CodigoReferencia", codigoReferencia) :
                new ObjectParameter("CodigoReferencia", typeof(string));
    
            var codigoHHCCParameter = codigoHHCC != null ?
                new ObjectParameter("CodigoHHCC", codigoHHCC) :
                new ObjectParameter("CodigoHHCC", typeof(string));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var codigoMedicoParameter = codigoMedico != null ?
                new ObjectParameter("CodigoMedico", codigoMedico) :
                new ObjectParameter("CodigoMedico", typeof(string));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var codigoAdmisionParameter = codigoAdmision != null ?
                new ObjectParameter("CodigoAdmision", codigoAdmision) :
                new ObjectParameter("CodigoAdmision", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var codigoDiagnosticoParameter = codigoDiagnostico != null ?
                new ObjectParameter("CodigoDiagnostico", codigoDiagnostico) :
                new ObjectParameter("CodigoDiagnostico", typeof(string));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var numeroPaginaParameter = numeroPagina.HasValue ?
                new ObjectParameter("NumeroPagina", numeroPagina) :
                new ObjectParameter("NumeroPagina", typeof(int));
    
            var rutaImagenParameter = rutaImagen != null ?
                new ObjectParameter("RutaImagen", rutaImagen) :
                new ObjectParameter("RutaImagen", typeof(string));
    
            var fechaRecepcionParameter = fechaRecepcion.HasValue ?
                new ObjectParameter("FechaRecepcion", fechaRecepcion) :
                new ObjectParameter("FechaRecepcion", typeof(System.DateTime));
    
            var indicadorProcesadoParameter = indicadorProcesado != null ?
                new ObjectParameter("IndicadorProcesado", indicadorProcesado) :
                new ObjectParameter("IndicadorProcesado", typeof(string));
    
            var indicadorErrorParameter = indicadorError != null ?
                new ObjectParameter("IndicadorError", indicadorError) :
                new ObjectParameter("IndicadorError", typeof(string));
    
            var descripcionErrorParameter = descripcionError != null ?
                new ObjectParameter("DescripcionError", descripcionError) :
                new ObjectParameter("DescripcionError", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var rownumberParameter = rownumber.HasValue ?
                new ObjectParameter("Rownumber", rownumber) :
                new ObjectParameter("Rownumber", typeof(long));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_SS_IT_ProcesoHistoriaAdjunta>("USP_VW_SS_IT_ProcesoHistoriaAdjuntaListar", idsecuenciaParameter, codigoSucursalParameter, unidadReplicacionParameter, idAplicativoParameter, codigoReferenciaParameter, codigoHHCCParameter, dNIParameter, idPacienteParameter, tipoAtencionParameter, fechaParameter, especialidadParameter, idEspecialidadParameter, servicioParameter, idServicioParameter, codigoMedicoParameter, idMedicoParameter, codigoAdmisionParameter, codigoOAParameter, codigoDiagnosticoParameter, idDiagnosticoParameter, numeroPaginaParameter, rutaImagenParameter, fechaRecepcionParameter, indicadorProcesadoParameter, indicadorErrorParameter, descripcionErrorParameter, accionParameter, rownumberParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<VW_SS_IT_ProcesoHistoriaAdjunta> USP_VW_SS_IT_ProcesoHistoriaAdjuntaListar(Nullable<int> idsecuencia, string codigoSucursal, string unidadReplicacion, Nullable<int> idAplicativo, string codigoReferencia, string codigoHHCC, string dNI, Nullable<int> idPaciente, Nullable<int> tipoAtencion, Nullable<System.DateTime> fecha, string especialidad, Nullable<int> idEspecialidad, string servicio, Nullable<int> idServicio, string codigoMedico, Nullable<int> idMedico, string codigoAdmision, string codigoOA, string codigoDiagnostico, Nullable<int> idDiagnostico, Nullable<int> numeroPagina, string rutaImagen, Nullable<System.DateTime> fechaRecepcion, string indicadorProcesado, string indicadorError, string descripcionError, string accion, Nullable<long> rownumber, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_SS_IT_ProcesoHistoriaAdjunta).Assembly);
    
            var idsecuenciaParameter = idsecuencia.HasValue ?
                new ObjectParameter("idsecuencia", idsecuencia) :
                new ObjectParameter("idsecuencia", typeof(int));
    
            var codigoSucursalParameter = codigoSucursal != null ?
                new ObjectParameter("CodigoSucursal", codigoSucursal) :
                new ObjectParameter("CodigoSucursal", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idAplicativoParameter = idAplicativo.HasValue ?
                new ObjectParameter("IdAplicativo", idAplicativo) :
                new ObjectParameter("IdAplicativo", typeof(int));
    
            var codigoReferenciaParameter = codigoReferencia != null ?
                new ObjectParameter("CodigoReferencia", codigoReferencia) :
                new ObjectParameter("CodigoReferencia", typeof(string));
    
            var codigoHHCCParameter = codigoHHCC != null ?
                new ObjectParameter("CodigoHHCC", codigoHHCC) :
                new ObjectParameter("CodigoHHCC", typeof(string));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var codigoMedicoParameter = codigoMedico != null ?
                new ObjectParameter("CodigoMedico", codigoMedico) :
                new ObjectParameter("CodigoMedico", typeof(string));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var codigoAdmisionParameter = codigoAdmision != null ?
                new ObjectParameter("CodigoAdmision", codigoAdmision) :
                new ObjectParameter("CodigoAdmision", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var codigoDiagnosticoParameter = codigoDiagnostico != null ?
                new ObjectParameter("CodigoDiagnostico", codigoDiagnostico) :
                new ObjectParameter("CodigoDiagnostico", typeof(string));
    
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var numeroPaginaParameter = numeroPagina.HasValue ?
                new ObjectParameter("NumeroPagina", numeroPagina) :
                new ObjectParameter("NumeroPagina", typeof(int));
    
            var rutaImagenParameter = rutaImagen != null ?
                new ObjectParameter("RutaImagen", rutaImagen) :
                new ObjectParameter("RutaImagen", typeof(string));
    
            var fechaRecepcionParameter = fechaRecepcion.HasValue ?
                new ObjectParameter("FechaRecepcion", fechaRecepcion) :
                new ObjectParameter("FechaRecepcion", typeof(System.DateTime));
    
            var indicadorProcesadoParameter = indicadorProcesado != null ?
                new ObjectParameter("IndicadorProcesado", indicadorProcesado) :
                new ObjectParameter("IndicadorProcesado", typeof(string));
    
            var indicadorErrorParameter = indicadorError != null ?
                new ObjectParameter("IndicadorError", indicadorError) :
                new ObjectParameter("IndicadorError", typeof(string));
    
            var descripcionErrorParameter = descripcionError != null ?
                new ObjectParameter("DescripcionError", descripcionError) :
                new ObjectParameter("DescripcionError", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var rownumberParameter = rownumber.HasValue ?
                new ObjectParameter("Rownumber", rownumber) :
                new ObjectParameter("Rownumber", typeof(long));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_SS_IT_ProcesoHistoriaAdjunta>("USP_VW_SS_IT_ProcesoHistoriaAdjuntaListar", mergeOption, idsecuenciaParameter, codigoSucursalParameter, unidadReplicacionParameter, idAplicativoParameter, codigoReferenciaParameter, codigoHHCCParameter, dNIParameter, idPacienteParameter, tipoAtencionParameter, fechaParameter, especialidadParameter, idEspecialidadParameter, servicioParameter, idServicioParameter, codigoMedicoParameter, idMedicoParameter, codigoAdmisionParameter, codigoOAParameter, codigoDiagnosticoParameter, idDiagnosticoParameter, numeroPaginaParameter, rutaImagenParameter, fechaRecepcionParameter, indicadorProcesadoParameter, indicadorErrorParameter, descripcionErrorParameter, accionParameter, rownumberParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_GrupoFamiliar(Nullable<int> idPaciente, Nullable<int> idPacienteFamiliar, Nullable<int> tipoFamiliar, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var idPacienteFamiliarParameter = idPacienteFamiliar.HasValue ?
                new ObjectParameter("IdPacienteFamiliar", idPacienteFamiliar) :
                new ObjectParameter("IdPacienteFamiliar", typeof(int));
    
            var tipoFamiliarParameter = tipoFamiliar.HasValue ?
                new ObjectParameter("TipoFamiliar", tipoFamiliar) :
                new ObjectParameter("TipoFamiliar", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_GrupoFamiliar", idPacienteParameter, idPacienteFamiliarParameter, tipoFamiliarParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_HC_GrupoFamiliar> USP_SS_HC_GrupoFamiliarListar(Nullable<int> idPaciente, Nullable<int> idPacienteFamiliar, Nullable<int> tipoFamiliar, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_GrupoFamiliar).Assembly);
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var idPacienteFamiliarParameter = idPacienteFamiliar.HasValue ?
                new ObjectParameter("IdPacienteFamiliar", idPacienteFamiliar) :
                new ObjectParameter("IdPacienteFamiliar", typeof(int));
    
            var tipoFamiliarParameter = tipoFamiliar.HasValue ?
                new ObjectParameter("TipoFamiliar", tipoFamiliar) :
                new ObjectParameter("TipoFamiliar", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_GrupoFamiliar>("USP_SS_HC_GrupoFamiliarListar", idPacienteParameter, idPacienteFamiliarParameter, tipoFamiliarParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_GrupoFamiliar> USP_SS_HC_GrupoFamiliarListar(Nullable<int> idPaciente, Nullable<int> idPacienteFamiliar, Nullable<int> tipoFamiliar, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_GrupoFamiliar).Assembly);
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var idPacienteFamiliarParameter = idPacienteFamiliar.HasValue ?
                new ObjectParameter("IdPacienteFamiliar", idPacienteFamiliar) :
                new ObjectParameter("IdPacienteFamiliar", typeof(int));
    
            var tipoFamiliarParameter = tipoFamiliar.HasValue ?
                new ObjectParameter("TipoFamiliar", tipoFamiliar) :
                new ObjectParameter("TipoFamiliar", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_GrupoFamiliar>("USP_SS_HC_GrupoFamiliarListar", mergeOption, idPacienteParameter, idPacienteFamiliarParameter, tipoFamiliarParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_Ubicacion(string unidadReplicacion, Nullable<int> idUbicacion, Nullable<int> idUbicacionPadre, string codigo, string nombre, string descripcion, string tipoUbicacion, string ruta, Nullable<int> ordenRuta, Nullable<int> orden, Nullable<int> nivel, string cadenaRecursividad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string rutaDescripcion, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var idUbicacionPadreParameter = idUbicacionPadre.HasValue ?
                new ObjectParameter("IdUbicacionPadre", idUbicacionPadre) :
                new ObjectParameter("IdUbicacionPadre", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var rutaParameter = ruta != null ?
                new ObjectParameter("Ruta", ruta) :
                new ObjectParameter("Ruta", typeof(string));
    
            var ordenRutaParameter = ordenRuta.HasValue ?
                new ObjectParameter("OrdenRuta", ordenRuta) :
                new ObjectParameter("OrdenRuta", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var rutaDescripcionParameter = rutaDescripcion != null ?
                new ObjectParameter("RutaDescripcion", rutaDescripcion) :
                new ObjectParameter("RutaDescripcion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_Ubicacion", unidadReplicacionParameter, idUbicacionParameter, idUbicacionPadreParameter, codigoParameter, nombreParameter, descripcionParameter, tipoUbicacionParameter, rutaParameter, ordenRutaParameter, ordenParameter, nivelParameter, cadenaRecursividadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, rutaDescripcionParameter, accionParameter);
        }
    
        public virtual ObjectResult<SS_HC_Ubicacion> USP_SS_HC_UbicacionListar(string unidadReplicacion, Nullable<int> idUbicacion, Nullable<int> idUbicacionPadre, string codigo, string nombre, string descripcion, string tipoUbicacion, string ruta, Nullable<int> ordenRuta, Nullable<int> orden, Nullable<int> nivel, string cadenaRecursividad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string rutaDescripcion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Ubicacion).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var idUbicacionPadreParameter = idUbicacionPadre.HasValue ?
                new ObjectParameter("IdUbicacionPadre", idUbicacionPadre) :
                new ObjectParameter("IdUbicacionPadre", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var rutaParameter = ruta != null ?
                new ObjectParameter("Ruta", ruta) :
                new ObjectParameter("Ruta", typeof(string));
    
            var ordenRutaParameter = ordenRuta.HasValue ?
                new ObjectParameter("OrdenRuta", ordenRuta) :
                new ObjectParameter("OrdenRuta", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var rutaDescripcionParameter = rutaDescripcion != null ?
                new ObjectParameter("RutaDescripcion", rutaDescripcion) :
                new ObjectParameter("RutaDescripcion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Ubicacion>("USP_SS_HC_UbicacionListar", unidadReplicacionParameter, idUbicacionParameter, idUbicacionPadreParameter, codigoParameter, nombreParameter, descripcionParameter, tipoUbicacionParameter, rutaParameter, ordenRutaParameter, ordenParameter, nivelParameter, cadenaRecursividadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, rutaDescripcionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<SS_HC_Ubicacion> USP_SS_HC_UbicacionListar(string unidadReplicacion, Nullable<int> idUbicacion, Nullable<int> idUbicacionPadre, string codigo, string nombre, string descripcion, string tipoUbicacion, string ruta, Nullable<int> ordenRuta, Nullable<int> orden, Nullable<int> nivel, string cadenaRecursividad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string rutaDescripcion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_Ubicacion).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var idUbicacionPadreParameter = idUbicacionPadre.HasValue ?
                new ObjectParameter("IdUbicacionPadre", idUbicacionPadre) :
                new ObjectParameter("IdUbicacionPadre", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var rutaParameter = ruta != null ?
                new ObjectParameter("Ruta", ruta) :
                new ObjectParameter("Ruta", typeof(string));
    
            var ordenRutaParameter = ordenRuta.HasValue ?
                new ObjectParameter("OrdenRuta", ordenRuta) :
                new ObjectParameter("OrdenRuta", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var rutaDescripcionParameter = rutaDescripcion != null ?
                new ObjectParameter("RutaDescripcion", rutaDescripcion) :
                new ObjectParameter("RutaDescripcion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Ubicacion>("USP_SS_HC_UbicacionListar", mergeOption, unidadReplicacionParameter, idUbicacionParameter, idUbicacionPadreParameter, codigoParameter, nombreParameter, descripcionParameter, tipoUbicacionParameter, rutaParameter, ordenRutaParameter, ordenParameter, nivelParameter, cadenaRecursividadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, rutaDescripcionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_SS_HC_EpisodioAtencion(string unidadReplicacion, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<int> aaaaAtencion, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> tipoAtencion, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> tipoOrdenAtencion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idEspecialidad, string codigoOA, string proximaAtencionFlag, Nullable<int> idEspecialidadProxima, Nullable<int> idEstablecimientoSaludProxima, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacionProxima, string descansoMedico, Nullable<int> diasDescansoMedico, Nullable<System.DateTime> fechaInicioDescansoMedico, Nullable<System.DateTime> fechaFinDescansoMedico, Nullable<System.DateTime> fechaOrden, Nullable<int> idProcedimiento, string observacionOrden, Nullable<int> idTipoOrden, string version, Nullable<int> flagFirma, Nullable<System.DateTime> fechaFirma, Nullable<int> idMedicoFirma, string observacionFirma, string keyPrivada, string keyPublica, string tipoTrabajador, string tipoEpisodio, string tipoUbicacion, Nullable<int> idUbicacion, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var aaaaAtencionParameter = aaaaAtencion.HasValue ?
                new ObjectParameter("aaaaAtencion", aaaaAtencion) :
                new ObjectParameter("aaaaAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));
    
            var idEspecialidadProximaParameter = idEspecialidadProxima.HasValue ?
                new ObjectParameter("IdEspecialidadProxima", idEspecialidadProxima) :
                new ObjectParameter("IdEspecialidadProxima", typeof(int));
    
            var idEstablecimientoSaludProximaParameter = idEstablecimientoSaludProxima.HasValue ?
                new ObjectParameter("IdEstablecimientoSaludProxima", idEstablecimientoSaludProxima) :
                new ObjectParameter("IdEstablecimientoSaludProxima", typeof(int));
    
            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));
    
            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));
    
            var observacionProximaParameter = observacionProxima != null ?
                new ObjectParameter("ObservacionProxima", observacionProxima) :
                new ObjectParameter("ObservacionProxima", typeof(string));
    
            var descansoMedicoParameter = descansoMedico != null ?
                new ObjectParameter("DescansoMedico", descansoMedico) :
                new ObjectParameter("DescansoMedico", typeof(string));
    
            var diasDescansoMedicoParameter = diasDescansoMedico.HasValue ?
                new ObjectParameter("DiasDescansoMedico", diasDescansoMedico) :
                new ObjectParameter("DiasDescansoMedico", typeof(int));
    
            var fechaInicioDescansoMedicoParameter = fechaInicioDescansoMedico.HasValue ?
                new ObjectParameter("FechaInicioDescansoMedico", fechaInicioDescansoMedico) :
                new ObjectParameter("FechaInicioDescansoMedico", typeof(System.DateTime));
    
            var fechaFinDescansoMedicoParameter = fechaFinDescansoMedico.HasValue ?
                new ObjectParameter("FechaFinDescansoMedico", fechaFinDescansoMedico) :
                new ObjectParameter("FechaFinDescansoMedico", typeof(System.DateTime));
    
            var fechaOrdenParameter = fechaOrden.HasValue ?
                new ObjectParameter("FechaOrden", fechaOrden) :
                new ObjectParameter("FechaOrden", typeof(System.DateTime));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var observacionOrdenParameter = observacionOrden != null ?
                new ObjectParameter("ObservacionOrden", observacionOrden) :
                new ObjectParameter("ObservacionOrden", typeof(string));
    
            var idTipoOrdenParameter = idTipoOrden.HasValue ?
                new ObjectParameter("IdTipoOrden", idTipoOrden) :
                new ObjectParameter("IdTipoOrden", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var flagFirmaParameter = flagFirma.HasValue ?
                new ObjectParameter("FlagFirma", flagFirma) :
                new ObjectParameter("FlagFirma", typeof(int));
    
            var fechaFirmaParameter = fechaFirma.HasValue ?
                new ObjectParameter("FechaFirma", fechaFirma) :
                new ObjectParameter("FechaFirma", typeof(System.DateTime));
    
            var idMedicoFirmaParameter = idMedicoFirma.HasValue ?
                new ObjectParameter("idMedicoFirma", idMedicoFirma) :
                new ObjectParameter("idMedicoFirma", typeof(int));
    
            var observacionFirmaParameter = observacionFirma != null ?
                new ObjectParameter("ObservacionFirma", observacionFirma) :
                new ObjectParameter("ObservacionFirma", typeof(string));
    
            var keyPrivadaParameter = keyPrivada != null ?
                new ObjectParameter("KeyPrivada", keyPrivada) :
                new ObjectParameter("KeyPrivada", typeof(string));
    
            var keyPublicaParameter = keyPublica != null ?
                new ObjectParameter("KeyPublica", keyPublica) :
                new ObjectParameter("KeyPublica", typeof(string));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("TipoTrabajador", tipoTrabajador) :
                new ObjectParameter("TipoTrabajador", typeof(string));
    
            var tipoEpisodioParameter = tipoEpisodio != null ?
                new ObjectParameter("TipoEpisodio", tipoEpisodio) :
                new ObjectParameter("TipoEpisodio", typeof(string));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_SS_HC_EpisodioAtencion", unidadReplicacionParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idPacienteParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, aaaaAtencionParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, tipoAtencionParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, tipoOrdenAtencionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idEspecialidadParameter, codigoOAParameter, proximaAtencionFlagParameter, idEspecialidadProximaParameter, idEstablecimientoSaludProximaParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionProximaParameter, descansoMedicoParameter, diasDescansoMedicoParameter, fechaInicioDescansoMedicoParameter, fechaFinDescansoMedicoParameter, fechaOrdenParameter, idProcedimientoParameter, observacionOrdenParameter, idTipoOrdenParameter, versionParameter, flagFirmaParameter, fechaFirmaParameter, idMedicoFirmaParameter, observacionFirmaParameter, keyPrivadaParameter, keyPublicaParameter, tipoTrabajadorParameter, tipoEpisodioParameter, tipoUbicacionParameter, idUbicacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_EpisodioAtencion> USP_SS_HC_EpisodioAtencionListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<int> aaaaAtencion, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> tipoAtencion, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> tipoOrdenAtencion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idEspecialidad, string codigoOA, string proximaAtencionFlag, Nullable<int> idEspecialidadProxima, Nullable<int> idEstablecimientoSaludProxima, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacionProxima, string descansoMedico, Nullable<int> diasDescansoMedico, Nullable<System.DateTime> fechaInicioDescansoMedico, Nullable<System.DateTime> fechaFinDescansoMedico, Nullable<System.DateTime> fechaOrden, Nullable<int> idProcedimiento, string observacionOrden, Nullable<int> idTipoOrden, string version, Nullable<int> flagFirma, Nullable<System.DateTime> fechaFirma, Nullable<int> idMedicoFirma, string observacionFirma, string keyPrivada, string keyPublica, string tipoTrabajador, string tipoEpisodio, string tipoUbicacion, Nullable<int> idUbicacion, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_EpisodioAtencion).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var aaaaAtencionParameter = aaaaAtencion.HasValue ?
                new ObjectParameter("aaaaAtencion", aaaaAtencion) :
                new ObjectParameter("aaaaAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));
    
            var idEspecialidadProximaParameter = idEspecialidadProxima.HasValue ?
                new ObjectParameter("IdEspecialidadProxima", idEspecialidadProxima) :
                new ObjectParameter("IdEspecialidadProxima", typeof(int));
    
            var idEstablecimientoSaludProximaParameter = idEstablecimientoSaludProxima.HasValue ?
                new ObjectParameter("IdEstablecimientoSaludProxima", idEstablecimientoSaludProxima) :
                new ObjectParameter("IdEstablecimientoSaludProxima", typeof(int));
    
            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));
    
            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));
    
            var observacionProximaParameter = observacionProxima != null ?
                new ObjectParameter("ObservacionProxima", observacionProxima) :
                new ObjectParameter("ObservacionProxima", typeof(string));
    
            var descansoMedicoParameter = descansoMedico != null ?
                new ObjectParameter("DescansoMedico", descansoMedico) :
                new ObjectParameter("DescansoMedico", typeof(string));
    
            var diasDescansoMedicoParameter = diasDescansoMedico.HasValue ?
                new ObjectParameter("DiasDescansoMedico", diasDescansoMedico) :
                new ObjectParameter("DiasDescansoMedico", typeof(int));
    
            var fechaInicioDescansoMedicoParameter = fechaInicioDescansoMedico.HasValue ?
                new ObjectParameter("FechaInicioDescansoMedico", fechaInicioDescansoMedico) :
                new ObjectParameter("FechaInicioDescansoMedico", typeof(System.DateTime));
    
            var fechaFinDescansoMedicoParameter = fechaFinDescansoMedico.HasValue ?
                new ObjectParameter("FechaFinDescansoMedico", fechaFinDescansoMedico) :
                new ObjectParameter("FechaFinDescansoMedico", typeof(System.DateTime));
    
            var fechaOrdenParameter = fechaOrden.HasValue ?
                new ObjectParameter("FechaOrden", fechaOrden) :
                new ObjectParameter("FechaOrden", typeof(System.DateTime));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var observacionOrdenParameter = observacionOrden != null ?
                new ObjectParameter("ObservacionOrden", observacionOrden) :
                new ObjectParameter("ObservacionOrden", typeof(string));
    
            var idTipoOrdenParameter = idTipoOrden.HasValue ?
                new ObjectParameter("IdTipoOrden", idTipoOrden) :
                new ObjectParameter("IdTipoOrden", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var flagFirmaParameter = flagFirma.HasValue ?
                new ObjectParameter("FlagFirma", flagFirma) :
                new ObjectParameter("FlagFirma", typeof(int));
    
            var fechaFirmaParameter = fechaFirma.HasValue ?
                new ObjectParameter("FechaFirma", fechaFirma) :
                new ObjectParameter("FechaFirma", typeof(System.DateTime));
    
            var idMedicoFirmaParameter = idMedicoFirma.HasValue ?
                new ObjectParameter("idMedicoFirma", idMedicoFirma) :
                new ObjectParameter("idMedicoFirma", typeof(int));
    
            var observacionFirmaParameter = observacionFirma != null ?
                new ObjectParameter("ObservacionFirma", observacionFirma) :
                new ObjectParameter("ObservacionFirma", typeof(string));
    
            var keyPrivadaParameter = keyPrivada != null ?
                new ObjectParameter("KeyPrivada", keyPrivada) :
                new ObjectParameter("KeyPrivada", typeof(string));
    
            var keyPublicaParameter = keyPublica != null ?
                new ObjectParameter("KeyPublica", keyPublica) :
                new ObjectParameter("KeyPublica", typeof(string));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("TipoTrabajador", tipoTrabajador) :
                new ObjectParameter("TipoTrabajador", typeof(string));
    
            var tipoEpisodioParameter = tipoEpisodio != null ?
                new ObjectParameter("TipoEpisodio", tipoEpisodio) :
                new ObjectParameter("TipoEpisodio", typeof(string));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_EpisodioAtencion>("USP_SS_HC_EpisodioAtencionListar", unidadReplicacionParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idPacienteParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, aaaaAtencionParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, tipoAtencionParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, tipoOrdenAtencionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idEspecialidadParameter, codigoOAParameter, proximaAtencionFlagParameter, idEspecialidadProximaParameter, idEstablecimientoSaludProximaParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionProximaParameter, descansoMedicoParameter, diasDescansoMedicoParameter, fechaInicioDescansoMedicoParameter, fechaFinDescansoMedicoParameter, fechaOrdenParameter, idProcedimientoParameter, observacionOrdenParameter, idTipoOrdenParameter, versionParameter, flagFirmaParameter, fechaFirmaParameter, idMedicoFirmaParameter, observacionFirmaParameter, keyPrivadaParameter, keyPublicaParameter, tipoTrabajadorParameter, tipoEpisodioParameter, tipoUbicacionParameter, idUbicacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_HC_EpisodioAtencion> USP_SS_HC_EpisodioAtencionListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<int> aaaaAtencion, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> tipoAtencion, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> tipoOrdenAtencion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idEspecialidad, string codigoOA, string proximaAtencionFlag, Nullable<int> idEspecialidadProxima, Nullable<int> idEstablecimientoSaludProxima, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacionProxima, string descansoMedico, Nullable<int> diasDescansoMedico, Nullable<System.DateTime> fechaInicioDescansoMedico, Nullable<System.DateTime> fechaFinDescansoMedico, Nullable<System.DateTime> fechaOrden, Nullable<int> idProcedimiento, string observacionOrden, Nullable<int> idTipoOrden, string version, Nullable<int> flagFirma, Nullable<System.DateTime> fechaFirma, Nullable<int> idMedicoFirma, string observacionFirma, string keyPrivada, string keyPublica, string tipoTrabajador, string tipoEpisodio, string tipoUbicacion, Nullable<int> idUbicacion, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_HC_EpisodioAtencion).Assembly);
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var aaaaAtencionParameter = aaaaAtencion.HasValue ?
                new ObjectParameter("aaaaAtencion", aaaaAtencion) :
                new ObjectParameter("aaaaAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));
    
            var idEspecialidadProximaParameter = idEspecialidadProxima.HasValue ?
                new ObjectParameter("IdEspecialidadProxima", idEspecialidadProxima) :
                new ObjectParameter("IdEspecialidadProxima", typeof(int));
    
            var idEstablecimientoSaludProximaParameter = idEstablecimientoSaludProxima.HasValue ?
                new ObjectParameter("IdEstablecimientoSaludProxima", idEstablecimientoSaludProxima) :
                new ObjectParameter("IdEstablecimientoSaludProxima", typeof(int));
    
            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));
    
            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));
    
            var observacionProximaParameter = observacionProxima != null ?
                new ObjectParameter("ObservacionProxima", observacionProxima) :
                new ObjectParameter("ObservacionProxima", typeof(string));
    
            var descansoMedicoParameter = descansoMedico != null ?
                new ObjectParameter("DescansoMedico", descansoMedico) :
                new ObjectParameter("DescansoMedico", typeof(string));
    
            var diasDescansoMedicoParameter = diasDescansoMedico.HasValue ?
                new ObjectParameter("DiasDescansoMedico", diasDescansoMedico) :
                new ObjectParameter("DiasDescansoMedico", typeof(int));
    
            var fechaInicioDescansoMedicoParameter = fechaInicioDescansoMedico.HasValue ?
                new ObjectParameter("FechaInicioDescansoMedico", fechaInicioDescansoMedico) :
                new ObjectParameter("FechaInicioDescansoMedico", typeof(System.DateTime));
    
            var fechaFinDescansoMedicoParameter = fechaFinDescansoMedico.HasValue ?
                new ObjectParameter("FechaFinDescansoMedico", fechaFinDescansoMedico) :
                new ObjectParameter("FechaFinDescansoMedico", typeof(System.DateTime));
    
            var fechaOrdenParameter = fechaOrden.HasValue ?
                new ObjectParameter("FechaOrden", fechaOrden) :
                new ObjectParameter("FechaOrden", typeof(System.DateTime));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var observacionOrdenParameter = observacionOrden != null ?
                new ObjectParameter("ObservacionOrden", observacionOrden) :
                new ObjectParameter("ObservacionOrden", typeof(string));
    
            var idTipoOrdenParameter = idTipoOrden.HasValue ?
                new ObjectParameter("IdTipoOrden", idTipoOrden) :
                new ObjectParameter("IdTipoOrden", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var flagFirmaParameter = flagFirma.HasValue ?
                new ObjectParameter("FlagFirma", flagFirma) :
                new ObjectParameter("FlagFirma", typeof(int));
    
            var fechaFirmaParameter = fechaFirma.HasValue ?
                new ObjectParameter("FechaFirma", fechaFirma) :
                new ObjectParameter("FechaFirma", typeof(System.DateTime));
    
            var idMedicoFirmaParameter = idMedicoFirma.HasValue ?
                new ObjectParameter("idMedicoFirma", idMedicoFirma) :
                new ObjectParameter("idMedicoFirma", typeof(int));
    
            var observacionFirmaParameter = observacionFirma != null ?
                new ObjectParameter("ObservacionFirma", observacionFirma) :
                new ObjectParameter("ObservacionFirma", typeof(string));
    
            var keyPrivadaParameter = keyPrivada != null ?
                new ObjectParameter("KeyPrivada", keyPrivada) :
                new ObjectParameter("KeyPrivada", typeof(string));
    
            var keyPublicaParameter = keyPublica != null ?
                new ObjectParameter("KeyPublica", keyPublica) :
                new ObjectParameter("KeyPublica", typeof(string));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("TipoTrabajador", tipoTrabajador) :
                new ObjectParameter("TipoTrabajador", typeof(string));
    
            var tipoEpisodioParameter = tipoEpisodio != null ?
                new ObjectParameter("TipoEpisodio", tipoEpisodio) :
                new ObjectParameter("TipoEpisodio", typeof(string));
    
            var tipoUbicacionParameter = tipoUbicacion != null ?
                new ObjectParameter("TipoUbicacion", tipoUbicacion) :
                new ObjectParameter("TipoUbicacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_EpisodioAtencion>("USP_SS_HC_EpisodioAtencionListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idPacienteParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, aaaaAtencionParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, tipoAtencionParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, tipoOrdenAtencionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idEspecialidadParameter, codigoOAParameter, proximaAtencionFlagParameter, idEspecialidadProximaParameter, idEstablecimientoSaludProximaParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionProximaParameter, descansoMedicoParameter, diasDescansoMedicoParameter, fechaInicioDescansoMedicoParameter, fechaFinDescansoMedicoParameter, fechaOrdenParameter, idProcedimientoParameter, observacionOrdenParameter, idTipoOrdenParameter, versionParameter, flagFirmaParameter, fechaFirmaParameter, idMedicoFirmaParameter, observacionFirmaParameter, keyPrivadaParameter, keyPublicaParameter, tipoTrabajadorParameter, tipoEpisodioParameter, tipoUbicacionParameter, idUbicacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> SP_SS_HC_RuleGetCollectionStore(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, string valorCodigo6, string valorCodigo7, Nullable<System.DateTime> valorFecha, Nullable<System.DateTime> valorFechaInicio, Nullable<System.DateTime> valorFechaFinal, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, Nullable<int> rowID, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, Nullable<int> valorEntero6, Nullable<int> valorEntero7, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorCodigo6Parameter = valorCodigo6 != null ?
                new ObjectParameter("ValorCodigo6", valorCodigo6) :
                new ObjectParameter("ValorCodigo6", typeof(string));
    
            var valorCodigo7Parameter = valorCodigo7 != null ?
                new ObjectParameter("ValorCodigo7", valorCodigo7) :
                new ObjectParameter("ValorCodigo7", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var valorFechaInicioParameter = valorFechaInicio.HasValue ?
                new ObjectParameter("ValorFechaInicio", valorFechaInicio) :
                new ObjectParameter("ValorFechaInicio", typeof(System.DateTime));
    
            var valorFechaFinalParameter = valorFechaFinal.HasValue ?
                new ObjectParameter("ValorFechaFinal", valorFechaFinal) :
                new ObjectParameter("ValorFechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var rowIDParameter = rowID.HasValue ?
                new ObjectParameter("RowID", rowID) :
                new ObjectParameter("RowID", typeof(int));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("SP_SS_HC_RuleGetCollectionStore", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorCodigo6Parameter, valorCodigo7Parameter, valorFechaParameter, valorFechaInicioParameter, valorFechaFinalParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, rowIDParameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorEntero6Parameter, valorEntero7Parameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> SP_SS_HC_RuleGetCollectionStore(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string descripcionLocal, string descripcionExtranjera, Nullable<double> valorNumerico, string valorCodigo1, string valorCodigo2, string valorCodigo3, string valorCodigo4, string valorCodigo5, string valorCodigo6, string valorCodigo7, Nullable<System.DateTime> valorFecha, Nullable<System.DateTime> valorFechaInicio, Nullable<System.DateTime> valorFechaFinal, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, Nullable<int> rowID, Nullable<int> valorEntero1, Nullable<int> valorEntero2, Nullable<int> valorEntero3, Nullable<int> valorEntero4, Nullable<int> valorEntero5, Nullable<int> valorEntero6, Nullable<int> valorEntero7, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(double));
    
            var valorCodigo1Parameter = valorCodigo1 != null ?
                new ObjectParameter("ValorCodigo1", valorCodigo1) :
                new ObjectParameter("ValorCodigo1", typeof(string));
    
            var valorCodigo2Parameter = valorCodigo2 != null ?
                new ObjectParameter("ValorCodigo2", valorCodigo2) :
                new ObjectParameter("ValorCodigo2", typeof(string));
    
            var valorCodigo3Parameter = valorCodigo3 != null ?
                new ObjectParameter("ValorCodigo3", valorCodigo3) :
                new ObjectParameter("ValorCodigo3", typeof(string));
    
            var valorCodigo4Parameter = valorCodigo4 != null ?
                new ObjectParameter("ValorCodigo4", valorCodigo4) :
                new ObjectParameter("ValorCodigo4", typeof(string));
    
            var valorCodigo5Parameter = valorCodigo5 != null ?
                new ObjectParameter("ValorCodigo5", valorCodigo5) :
                new ObjectParameter("ValorCodigo5", typeof(string));
    
            var valorCodigo6Parameter = valorCodigo6 != null ?
                new ObjectParameter("ValorCodigo6", valorCodigo6) :
                new ObjectParameter("ValorCodigo6", typeof(string));
    
            var valorCodigo7Parameter = valorCodigo7 != null ?
                new ObjectParameter("ValorCodigo7", valorCodigo7) :
                new ObjectParameter("ValorCodigo7", typeof(string));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var valorFechaInicioParameter = valorFechaInicio.HasValue ?
                new ObjectParameter("ValorFechaInicio", valorFechaInicio) :
                new ObjectParameter("ValorFechaInicio", typeof(System.DateTime));
    
            var valorFechaFinalParameter = valorFechaFinal.HasValue ?
                new ObjectParameter("ValorFechaFinal", valorFechaFinal) :
                new ObjectParameter("ValorFechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var rowIDParameter = rowID.HasValue ?
                new ObjectParameter("RowID", rowID) :
                new ObjectParameter("RowID", typeof(int));
    
            var valorEntero1Parameter = valorEntero1.HasValue ?
                new ObjectParameter("ValorEntero1", valorEntero1) :
                new ObjectParameter("ValorEntero1", typeof(int));
    
            var valorEntero2Parameter = valorEntero2.HasValue ?
                new ObjectParameter("ValorEntero2", valorEntero2) :
                new ObjectParameter("ValorEntero2", typeof(int));
    
            var valorEntero3Parameter = valorEntero3.HasValue ?
                new ObjectParameter("ValorEntero3", valorEntero3) :
                new ObjectParameter("ValorEntero3", typeof(int));
    
            var valorEntero4Parameter = valorEntero4.HasValue ?
                new ObjectParameter("ValorEntero4", valorEntero4) :
                new ObjectParameter("ValorEntero4", typeof(int));
    
            var valorEntero5Parameter = valorEntero5.HasValue ?
                new ObjectParameter("ValorEntero5", valorEntero5) :
                new ObjectParameter("ValorEntero5", typeof(int));
    
            var valorEntero6Parameter = valorEntero6.HasValue ?
                new ObjectParameter("ValorEntero6", valorEntero6) :
                new ObjectParameter("ValorEntero6", typeof(int));
    
            var valorEntero7Parameter = valorEntero7.HasValue ?
                new ObjectParameter("ValorEntero7", valorEntero7) :
                new ObjectParameter("ValorEntero7", typeof(int));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("SP_SS_HC_RuleGetCollectionStore", mergeOption, aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, descripcionLocalParameter, descripcionExtranjeraParameter, valorNumericoParameter, valorCodigo1Parameter, valorCodigo2Parameter, valorCodigo3Parameter, valorCodigo4Parameter, valorCodigo5Parameter, valorCodigo6Parameter, valorCodigo7Parameter, valorFechaParameter, valorFechaInicioParameter, valorFechaFinalParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, rowIDParameter, valorEntero1Parameter, valorEntero2Parameter, valorEntero3Parameter, valorEntero4Parameter, valorEntero5Parameter, valorEntero6Parameter, valorEntero7Parameter, iNICIOParameter, nUMEROFILASParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_SG_AgenteOpcion(Nullable<int> idAgente, Nullable<int> idOpcion, Nullable<System.DateTime> valorFecha, Nullable<decimal> valorNumerico, string valorTexto, Nullable<int> indicadorAcceso, Nullable<int> indicadorHabilitado, Nullable<int> indicadorObligatorio, Nullable<int> indicadorVisible, Nullable<int> indicadorPrioridad, Nullable<int> indicadorNuevo, Nullable<int> indicadorModificar, Nullable<int> indicadorEliminar, Nullable<int> indicadorImprimir, Nullable<int> indicadorIngreso, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string aCCION)
        {
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var valorFechaParameter = valorFecha.HasValue ?
                new ObjectParameter("ValorFecha", valorFecha) :
                new ObjectParameter("ValorFecha", typeof(System.DateTime));
    
            var valorNumericoParameter = valorNumerico.HasValue ?
                new ObjectParameter("ValorNumerico", valorNumerico) :
                new ObjectParameter("ValorNumerico", typeof(decimal));
    
            var valorTextoParameter = valorTexto != null ?
                new ObjectParameter("ValorTexto", valorTexto) :
                new ObjectParameter("ValorTexto", typeof(string));
    
            var indicadorAccesoParameter = indicadorAcceso.HasValue ?
                new ObjectParameter("IndicadorAcceso", indicadorAcceso) :
                new ObjectParameter("IndicadorAcceso", typeof(int));
    
            var indicadorHabilitadoParameter = indicadorHabilitado.HasValue ?
                new ObjectParameter("IndicadorHabilitado", indicadorHabilitado) :
                new ObjectParameter("IndicadorHabilitado", typeof(int));
    
            var indicadorObligatorioParameter = indicadorObligatorio.HasValue ?
                new ObjectParameter("IndicadorObligatorio", indicadorObligatorio) :
                new ObjectParameter("IndicadorObligatorio", typeof(int));
    
            var indicadorVisibleParameter = indicadorVisible.HasValue ?
                new ObjectParameter("IndicadorVisible", indicadorVisible) :
                new ObjectParameter("IndicadorVisible", typeof(int));
    
            var indicadorPrioridadParameter = indicadorPrioridad.HasValue ?
                new ObjectParameter("IndicadorPrioridad", indicadorPrioridad) :
                new ObjectParameter("IndicadorPrioridad", typeof(int));
    
            var indicadorNuevoParameter = indicadorNuevo.HasValue ?
                new ObjectParameter("IndicadorNuevo", indicadorNuevo) :
                new ObjectParameter("IndicadorNuevo", typeof(int));
    
            var indicadorModificarParameter = indicadorModificar.HasValue ?
                new ObjectParameter("IndicadorModificar", indicadorModificar) :
                new ObjectParameter("IndicadorModificar", typeof(int));
    
            var indicadorEliminarParameter = indicadorEliminar.HasValue ?
                new ObjectParameter("IndicadorEliminar", indicadorEliminar) :
                new ObjectParameter("IndicadorEliminar", typeof(int));
    
            var indicadorImprimirParameter = indicadorImprimir.HasValue ?
                new ObjectParameter("IndicadorImprimir", indicadorImprimir) :
                new ObjectParameter("IndicadorImprimir", typeof(int));
    
            var indicadorIngresoParameter = indicadorIngreso.HasValue ?
                new ObjectParameter("IndicadorIngreso", indicadorIngreso) :
                new ObjectParameter("IndicadorIngreso", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_SG_AgenteOpcion", idAgenteParameter, idOpcionParameter, valorFechaParameter, valorNumericoParameter, valorTextoParameter, indicadorAccesoParameter, indicadorHabilitadoParameter, indicadorObligatorioParameter, indicadorVisibleParameter, indicadorPrioridadParameter, indicadorNuevoParameter, indicadorModificarParameter, indicadorEliminarParameter, indicadorImprimirParameter, indicadorIngresoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<SS_CHE_VistaSeguridad> USP_SS_GE_SeguridadOpcion(string sistema, string nombre, string modulo, Nullable<int> orden, string nombreModulo, Nullable<int> idOpcion, Nullable<int> idOpcionPadre, string codigoOpcion, string cadenaRecursividad, Nullable<int> nivelOpcion, string nombreOpcion, string descripcion, string subModulo, Nullable<int> ordenOpcion, string tipoOpcion, Nullable<int> tipoIcono, Nullable<int> indicadorPrioridad, Nullable<int> indicadorObjeto, Nullable<int> idObjetoAsociado, string tipoDato, string compania, Nullable<int> indicadorCompania, Nullable<int> idTipoAtencion, string tipoTrabajador, Nullable<int> indicadorFormato, Nullable<int> indicadorAsignacion, Nullable<int> tipoProceso, string accion, string version, Nullable<int> estado, Nullable<int> idAgente, Nullable<int> idGrupo, Nullable<int> idOrganizacion, Nullable<int> tipoAgente, string codigoAgente, Nullable<int> idEmpleado, Nullable<int> indicadorMultiple, string clave, string nombreAgente, Nullable<int> estadoAgente, string plataforma, Nullable<int> estadoAgenteOpcion, Nullable<int> idFormato, Nullable<int> idFormatoPadre, string codigoFormato, Nullable<int> nivel, Nullable<int> tipoFormato, string versionFormatoFijo, Nullable<int> idFormatoDinamico, Nullable<int> estadoFormato)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_CHE_VistaSeguridad).Assembly);
    
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var nombreModuloParameter = nombreModulo != null ?
                new ObjectParameter("NombreModulo", nombreModulo) :
                new ObjectParameter("NombreModulo", typeof(string));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var idOpcionPadreParameter = idOpcionPadre.HasValue ?
                new ObjectParameter("IdOpcionPadre", idOpcionPadre) :
                new ObjectParameter("IdOpcionPadre", typeof(int));
    
            var codigoOpcionParameter = codigoOpcion != null ?
                new ObjectParameter("CodigoOpcion", codigoOpcion) :
                new ObjectParameter("CodigoOpcion", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelOpcionParameter = nivelOpcion.HasValue ?
                new ObjectParameter("NivelOpcion", nivelOpcion) :
                new ObjectParameter("NivelOpcion", typeof(int));
    
            var nombreOpcionParameter = nombreOpcion != null ?
                new ObjectParameter("NombreOpcion", nombreOpcion) :
                new ObjectParameter("NombreOpcion", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var subModuloParameter = subModulo != null ?
                new ObjectParameter("SubModulo", subModulo) :
                new ObjectParameter("SubModulo", typeof(string));
    
            var ordenOpcionParameter = ordenOpcion.HasValue ?
                new ObjectParameter("OrdenOpcion", ordenOpcion) :
                new ObjectParameter("OrdenOpcion", typeof(int));
    
            var tipoOpcionParameter = tipoOpcion != null ?
                new ObjectParameter("TipoOpcion", tipoOpcion) :
                new ObjectParameter("TipoOpcion", typeof(string));
    
            var tipoIconoParameter = tipoIcono.HasValue ?
                new ObjectParameter("TipoIcono", tipoIcono) :
                new ObjectParameter("TipoIcono", typeof(int));
    
            var indicadorPrioridadParameter = indicadorPrioridad.HasValue ?
                new ObjectParameter("IndicadorPrioridad", indicadorPrioridad) :
                new ObjectParameter("IndicadorPrioridad", typeof(int));
    
            var indicadorObjetoParameter = indicadorObjeto.HasValue ?
                new ObjectParameter("IndicadorObjeto", indicadorObjeto) :
                new ObjectParameter("IndicadorObjeto", typeof(int));
    
            var idObjetoAsociadoParameter = idObjetoAsociado.HasValue ?
                new ObjectParameter("IdObjetoAsociado", idObjetoAsociado) :
                new ObjectParameter("IdObjetoAsociado", typeof(int));
    
            var tipoDatoParameter = tipoDato != null ?
                new ObjectParameter("TipoDato", tipoDato) :
                new ObjectParameter("TipoDato", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var indicadorCompaniaParameter = indicadorCompania.HasValue ?
                new ObjectParameter("IndicadorCompania", indicadorCompania) :
                new ObjectParameter("IndicadorCompania", typeof(int));
    
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("idTipoAtencion", idTipoAtencion) :
                new ObjectParameter("idTipoAtencion", typeof(int));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("TipoTrabajador", tipoTrabajador) :
                new ObjectParameter("TipoTrabajador", typeof(string));
    
            var indicadorFormatoParameter = indicadorFormato.HasValue ?
                new ObjectParameter("IndicadorFormato", indicadorFormato) :
                new ObjectParameter("IndicadorFormato", typeof(int));
    
            var indicadorAsignacionParameter = indicadorAsignacion.HasValue ?
                new ObjectParameter("IndicadorAsignacion", indicadorAsignacion) :
                new ObjectParameter("IndicadorAsignacion", typeof(int));
    
            var tipoProcesoParameter = tipoProceso.HasValue ?
                new ObjectParameter("TipoProceso", tipoProceso) :
                new ObjectParameter("TipoProceso", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var idOrganizacionParameter = idOrganizacion.HasValue ?
                new ObjectParameter("IdOrganizacion", idOrganizacion) :
                new ObjectParameter("IdOrganizacion", typeof(int));
    
            var tipoAgenteParameter = tipoAgente.HasValue ?
                new ObjectParameter("TipoAgente", tipoAgente) :
                new ObjectParameter("TipoAgente", typeof(int));
    
            var codigoAgenteParameter = codigoAgente != null ?
                new ObjectParameter("CodigoAgente", codigoAgente) :
                new ObjectParameter("CodigoAgente", typeof(string));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var indicadorMultipleParameter = indicadorMultiple.HasValue ?
                new ObjectParameter("IndicadorMultiple", indicadorMultiple) :
                new ObjectParameter("IndicadorMultiple", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var nombreAgenteParameter = nombreAgente != null ?
                new ObjectParameter("NombreAgente", nombreAgente) :
                new ObjectParameter("NombreAgente", typeof(string));
    
            var estadoAgenteParameter = estadoAgente.HasValue ?
                new ObjectParameter("EstadoAgente", estadoAgente) :
                new ObjectParameter("EstadoAgente", typeof(int));
    
            var plataformaParameter = plataforma != null ?
                new ObjectParameter("Plataforma", plataforma) :
                new ObjectParameter("Plataforma", typeof(string));
    
            var estadoAgenteOpcionParameter = estadoAgenteOpcion.HasValue ?
                new ObjectParameter("EstadoAgenteOpcion", estadoAgenteOpcion) :
                new ObjectParameter("EstadoAgenteOpcion", typeof(int));
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var versionFormatoFijoParameter = versionFormatoFijo != null ?
                new ObjectParameter("VersionFormatoFijo", versionFormatoFijo) :
                new ObjectParameter("VersionFormatoFijo", typeof(string));
    
            var idFormatoDinamicoParameter = idFormatoDinamico.HasValue ?
                new ObjectParameter("IdFormatoDinamico", idFormatoDinamico) :
                new ObjectParameter("IdFormatoDinamico", typeof(int));
    
            var estadoFormatoParameter = estadoFormato.HasValue ?
                new ObjectParameter("EstadoFormato", estadoFormato) :
                new ObjectParameter("EstadoFormato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_CHE_VistaSeguridad>("USP_SS_GE_SeguridadOpcion", sistemaParameter, nombreParameter, moduloParameter, ordenParameter, nombreModuloParameter, idOpcionParameter, idOpcionPadreParameter, codigoOpcionParameter, cadenaRecursividadParameter, nivelOpcionParameter, nombreOpcionParameter, descripcionParameter, subModuloParameter, ordenOpcionParameter, tipoOpcionParameter, tipoIconoParameter, indicadorPrioridadParameter, indicadorObjetoParameter, idObjetoAsociadoParameter, tipoDatoParameter, companiaParameter, indicadorCompaniaParameter, idTipoAtencionParameter, tipoTrabajadorParameter, indicadorFormatoParameter, indicadorAsignacionParameter, tipoProcesoParameter, accionParameter, versionParameter, estadoParameter, idAgenteParameter, idGrupoParameter, idOrganizacionParameter, tipoAgenteParameter, codigoAgenteParameter, idEmpleadoParameter, indicadorMultipleParameter, claveParameter, nombreAgenteParameter, estadoAgenteParameter, plataformaParameter, estadoAgenteOpcionParameter, idFormatoParameter, idFormatoPadreParameter, codigoFormatoParameter, nivelParameter, tipoFormatoParameter, versionFormatoFijoParameter, idFormatoDinamicoParameter, estadoFormatoParameter);
        }
    
        public virtual ObjectResult<SS_CHE_VistaSeguridad> USP_SS_GE_SeguridadOpcion(string sistema, string nombre, string modulo, Nullable<int> orden, string nombreModulo, Nullable<int> idOpcion, Nullable<int> idOpcionPadre, string codigoOpcion, string cadenaRecursividad, Nullable<int> nivelOpcion, string nombreOpcion, string descripcion, string subModulo, Nullable<int> ordenOpcion, string tipoOpcion, Nullable<int> tipoIcono, Nullable<int> indicadorPrioridad, Nullable<int> indicadorObjeto, Nullable<int> idObjetoAsociado, string tipoDato, string compania, Nullable<int> indicadorCompania, Nullable<int> idTipoAtencion, string tipoTrabajador, Nullable<int> indicadorFormato, Nullable<int> indicadorAsignacion, Nullable<int> tipoProceso, string accion, string version, Nullable<int> estado, Nullable<int> idAgente, Nullable<int> idGrupo, Nullable<int> idOrganizacion, Nullable<int> tipoAgente, string codigoAgente, Nullable<int> idEmpleado, Nullable<int> indicadorMultiple, string clave, string nombreAgente, Nullable<int> estadoAgente, string plataforma, Nullable<int> estadoAgenteOpcion, Nullable<int> idFormato, Nullable<int> idFormatoPadre, string codigoFormato, Nullable<int> nivel, Nullable<int> tipoFormato, string versionFormatoFijo, Nullable<int> idFormatoDinamico, Nullable<int> estadoFormato, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SS_CHE_VistaSeguridad).Assembly);
    
            var sistemaParameter = sistema != null ?
                new ObjectParameter("Sistema", sistema) :
                new ObjectParameter("Sistema", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var nombreModuloParameter = nombreModulo != null ?
                new ObjectParameter("NombreModulo", nombreModulo) :
                new ObjectParameter("NombreModulo", typeof(string));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var idOpcionPadreParameter = idOpcionPadre.HasValue ?
                new ObjectParameter("IdOpcionPadre", idOpcionPadre) :
                new ObjectParameter("IdOpcionPadre", typeof(int));
    
            var codigoOpcionParameter = codigoOpcion != null ?
                new ObjectParameter("CodigoOpcion", codigoOpcion) :
                new ObjectParameter("CodigoOpcion", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelOpcionParameter = nivelOpcion.HasValue ?
                new ObjectParameter("NivelOpcion", nivelOpcion) :
                new ObjectParameter("NivelOpcion", typeof(int));
    
            var nombreOpcionParameter = nombreOpcion != null ?
                new ObjectParameter("NombreOpcion", nombreOpcion) :
                new ObjectParameter("NombreOpcion", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var subModuloParameter = subModulo != null ?
                new ObjectParameter("SubModulo", subModulo) :
                new ObjectParameter("SubModulo", typeof(string));
    
            var ordenOpcionParameter = ordenOpcion.HasValue ?
                new ObjectParameter("OrdenOpcion", ordenOpcion) :
                new ObjectParameter("OrdenOpcion", typeof(int));
    
            var tipoOpcionParameter = tipoOpcion != null ?
                new ObjectParameter("TipoOpcion", tipoOpcion) :
                new ObjectParameter("TipoOpcion", typeof(string));
    
            var tipoIconoParameter = tipoIcono.HasValue ?
                new ObjectParameter("TipoIcono", tipoIcono) :
                new ObjectParameter("TipoIcono", typeof(int));
    
            var indicadorPrioridadParameter = indicadorPrioridad.HasValue ?
                new ObjectParameter("IndicadorPrioridad", indicadorPrioridad) :
                new ObjectParameter("IndicadorPrioridad", typeof(int));
    
            var indicadorObjetoParameter = indicadorObjeto.HasValue ?
                new ObjectParameter("IndicadorObjeto", indicadorObjeto) :
                new ObjectParameter("IndicadorObjeto", typeof(int));
    
            var idObjetoAsociadoParameter = idObjetoAsociado.HasValue ?
                new ObjectParameter("IdObjetoAsociado", idObjetoAsociado) :
                new ObjectParameter("IdObjetoAsociado", typeof(int));
    
            var tipoDatoParameter = tipoDato != null ?
                new ObjectParameter("TipoDato", tipoDato) :
                new ObjectParameter("TipoDato", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var indicadorCompaniaParameter = indicadorCompania.HasValue ?
                new ObjectParameter("IndicadorCompania", indicadorCompania) :
                new ObjectParameter("IndicadorCompania", typeof(int));
    
            var idTipoAtencionParameter = idTipoAtencion.HasValue ?
                new ObjectParameter("idTipoAtencion", idTipoAtencion) :
                new ObjectParameter("idTipoAtencion", typeof(int));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("TipoTrabajador", tipoTrabajador) :
                new ObjectParameter("TipoTrabajador", typeof(string));
    
            var indicadorFormatoParameter = indicadorFormato.HasValue ?
                new ObjectParameter("IndicadorFormato", indicadorFormato) :
                new ObjectParameter("IndicadorFormato", typeof(int));
    
            var indicadorAsignacionParameter = indicadorAsignacion.HasValue ?
                new ObjectParameter("IndicadorAsignacion", indicadorAsignacion) :
                new ObjectParameter("IndicadorAsignacion", typeof(int));
    
            var tipoProcesoParameter = tipoProceso.HasValue ?
                new ObjectParameter("TipoProceso", tipoProceso) :
                new ObjectParameter("TipoProceso", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idAgenteParameter = idAgente.HasValue ?
                new ObjectParameter("IdAgente", idAgente) :
                new ObjectParameter("IdAgente", typeof(int));
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var idOrganizacionParameter = idOrganizacion.HasValue ?
                new ObjectParameter("IdOrganizacion", idOrganizacion) :
                new ObjectParameter("IdOrganizacion", typeof(int));
    
            var tipoAgenteParameter = tipoAgente.HasValue ?
                new ObjectParameter("TipoAgente", tipoAgente) :
                new ObjectParameter("TipoAgente", typeof(int));
    
            var codigoAgenteParameter = codigoAgente != null ?
                new ObjectParameter("CodigoAgente", codigoAgente) :
                new ObjectParameter("CodigoAgente", typeof(string));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var indicadorMultipleParameter = indicadorMultiple.HasValue ?
                new ObjectParameter("IndicadorMultiple", indicadorMultiple) :
                new ObjectParameter("IndicadorMultiple", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var nombreAgenteParameter = nombreAgente != null ?
                new ObjectParameter("NombreAgente", nombreAgente) :
                new ObjectParameter("NombreAgente", typeof(string));
    
            var estadoAgenteParameter = estadoAgente.HasValue ?
                new ObjectParameter("EstadoAgente", estadoAgente) :
                new ObjectParameter("EstadoAgente", typeof(int));
    
            var plataformaParameter = plataforma != null ?
                new ObjectParameter("Plataforma", plataforma) :
                new ObjectParameter("Plataforma", typeof(string));
    
            var estadoAgenteOpcionParameter = estadoAgenteOpcion.HasValue ?
                new ObjectParameter("EstadoAgenteOpcion", estadoAgenteOpcion) :
                new ObjectParameter("EstadoAgenteOpcion", typeof(int));
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var versionFormatoFijoParameter = versionFormatoFijo != null ?
                new ObjectParameter("VersionFormatoFijo", versionFormatoFijo) :
                new ObjectParameter("VersionFormatoFijo", typeof(string));
    
            var idFormatoDinamicoParameter = idFormatoDinamico.HasValue ?
                new ObjectParameter("IdFormatoDinamico", idFormatoDinamico) :
                new ObjectParameter("IdFormatoDinamico", typeof(int));
    
            var estadoFormatoParameter = estadoFormato.HasValue ?
                new ObjectParameter("EstadoFormato", estadoFormato) :
                new ObjectParameter("EstadoFormato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_CHE_VistaSeguridad>("USP_SS_GE_SeguridadOpcion", mergeOption, sistemaParameter, nombreParameter, moduloParameter, ordenParameter, nombreModuloParameter, idOpcionParameter, idOpcionPadreParameter, codigoOpcionParameter, cadenaRecursividadParameter, nivelOpcionParameter, nombreOpcionParameter, descripcionParameter, subModuloParameter, ordenOpcionParameter, tipoOpcionParameter, tipoIconoParameter, indicadorPrioridadParameter, indicadorObjetoParameter, idObjetoAsociadoParameter, tipoDatoParameter, companiaParameter, indicadorCompaniaParameter, idTipoAtencionParameter, tipoTrabajadorParameter, indicadorFormatoParameter, indicadorAsignacionParameter, tipoProcesoParameter, accionParameter, versionParameter, estadoParameter, idAgenteParameter, idGrupoParameter, idOrganizacionParameter, tipoAgenteParameter, codigoAgenteParameter, idEmpleadoParameter, indicadorMultipleParameter, claveParameter, nombreAgenteParameter, estadoAgenteParameter, plataformaParameter, estadoAgenteOpcionParameter, idFormatoParameter, idFormatoPadreParameter, codigoFormatoParameter, nivelParameter, tipoFormatoParameter, versionFormatoFijoParameter, idFormatoDinamicoParameter, estadoFormatoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_HC_Formato(Nullable<int> idFormato, Nullable<int> idFormatoPadre, string codigoFormato, string codigoFormatoPadre, string cadenaRecursividad, Nullable<int> nivel, string descripcion, string descripcionExtranjera, Nullable<int> tipoFormato, string versionFormatoFijo, Nullable<int> idFormatoDinamico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<int> indCompartido, Nullable<System.DateTime> fechaModificacion, string accion, string version, string modulo)
        {
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var idFormatoPadreParameter = idFormatoPadre.HasValue ?
                new ObjectParameter("IdFormatoPadre", idFormatoPadre) :
                new ObjectParameter("IdFormatoPadre", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var codigoFormatoPadreParameter = codigoFormatoPadre != null ?
                new ObjectParameter("CodigoFormatoPadre", codigoFormatoPadre) :
                new ObjectParameter("CodigoFormatoPadre", typeof(string));
    
            var cadenaRecursividadParameter = cadenaRecursividad != null ?
                new ObjectParameter("CadenaRecursividad", cadenaRecursividad) :
                new ObjectParameter("CadenaRecursividad", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var descripcionExtranjeraParameter = descripcionExtranjera != null ?
                new ObjectParameter("DescripcionExtranjera", descripcionExtranjera) :
                new ObjectParameter("DescripcionExtranjera", typeof(string));
    
            var tipoFormatoParameter = tipoFormato.HasValue ?
                new ObjectParameter("TipoFormato", tipoFormato) :
                new ObjectParameter("TipoFormato", typeof(int));
    
            var versionFormatoFijoParameter = versionFormatoFijo != null ?
                new ObjectParameter("VersionFormatoFijo", versionFormatoFijo) :
                new ObjectParameter("VersionFormatoFijo", typeof(string));
    
            var idFormatoDinamicoParameter = idFormatoDinamico.HasValue ?
                new ObjectParameter("IdFormatoDinamico", idFormatoDinamico) :
                new ObjectParameter("IdFormatoDinamico", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var indCompartidoParameter = indCompartido.HasValue ?
                new ObjectParameter("IndCompartido", indCompartido) :
                new ObjectParameter("IndCompartido", typeof(int));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var moduloParameter = modulo != null ?
                new ObjectParameter("Modulo", modulo) :
                new ObjectParameter("Modulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_Formato", idFormatoParameter, idFormatoPadreParameter, codigoFormatoParameter, codigoFormatoPadreParameter, cadenaRecursividadParameter, nivelParameter, descripcionParameter, descripcionExtranjeraParameter, tipoFormatoParameter, versionFormatoFijoParameter, idFormatoDinamicoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, indCompartidoParameter, fechaModificacionParameter, accionParameter, versionParameter, moduloParameter);
        }
    
        public virtual ObjectResult<V_EpisodioAtenciones> USP_V_EpisodioAtenciones_LISTAR(Nullable<int> persona, string nombreCompleto, string unidadReplicacion, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<long> episodioAtencion, Nullable<int> tipoAtencion, Nullable<int> idOrdenAtencion, Nullable<int> tipoOrdenAtencion, Nullable<int> estado_EpisodioAten, Nullable<System.DateTime> fechaRegistroDesde, Nullable<System.DateTime> fechaRegistroHasta, Nullable<System.DateTime> fechaAtencion, Nullable<System.DateTime> fechaCierre, string usuarioModificacion, Nullable<int> codigoEpisodioClinico, string idEpisodioAtencionCodigo, string cODIGOOA, string tipoTrabajador, Nullable<int> idOpcion, Nullable<int> idFormato, Nullable<int> id001, Nullable<int> id002, string codigo001, string codigo002, string descripcion001, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string version, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(V_EpisodioAtenciones).Assembly);
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estado_EpisodioAtenParameter = estado_EpisodioAten.HasValue ?
                new ObjectParameter("Estado_EpisodioAten", estado_EpisodioAten) :
                new ObjectParameter("Estado_EpisodioAten", typeof(int));
    
            var fechaRegistroDesdeParameter = fechaRegistroDesde.HasValue ?
                new ObjectParameter("FechaRegistroDesde", fechaRegistroDesde) :
                new ObjectParameter("FechaRegistroDesde", typeof(System.DateTime));
    
            var fechaRegistroHastaParameter = fechaRegistroHasta.HasValue ?
                new ObjectParameter("FechaRegistroHasta", fechaRegistroHasta) :
                new ObjectParameter("FechaRegistroHasta", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var codigoEpisodioClinicoParameter = codigoEpisodioClinico.HasValue ?
                new ObjectParameter("CodigoEpisodioClinico", codigoEpisodioClinico) :
                new ObjectParameter("CodigoEpisodioClinico", typeof(int));
    
            var idEpisodioAtencionCodigoParameter = idEpisodioAtencionCodigo != null ?
                new ObjectParameter("IdEpisodioAtencionCodigo", idEpisodioAtencionCodigo) :
                new ObjectParameter("IdEpisodioAtencionCodigo", typeof(string));
    
            var cODIGOOAParameter = cODIGOOA != null ?
                new ObjectParameter("CODIGOOA", cODIGOOA) :
                new ObjectParameter("CODIGOOA", typeof(string));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("TipoTrabajador", tipoTrabajador) :
                new ObjectParameter("TipoTrabajador", typeof(string));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var id001Parameter = id001.HasValue ?
                new ObjectParameter("Id001", id001) :
                new ObjectParameter("Id001", typeof(int));
    
            var id002Parameter = id002.HasValue ?
                new ObjectParameter("Id002", id002) :
                new ObjectParameter("Id002", typeof(int));
    
            var codigo001Parameter = codigo001 != null ?
                new ObjectParameter("Codigo001", codigo001) :
                new ObjectParameter("Codigo001", typeof(string));
    
            var codigo002Parameter = codigo002 != null ?
                new ObjectParameter("Codigo002", codigo002) :
                new ObjectParameter("Codigo002", typeof(string));
    
            var descripcion001Parameter = descripcion001 != null ?
                new ObjectParameter("Descripcion001", descripcion001) :
                new ObjectParameter("Descripcion001", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<V_EpisodioAtenciones>("USP_V_EpisodioAtenciones_LISTAR", personaParameter, nombreCompletoParameter, unidadReplicacionParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idPacienteParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, episodioAtencionParameter, tipoAtencionParameter, idOrdenAtencionParameter, tipoOrdenAtencionParameter, estado_EpisodioAtenParameter, fechaRegistroDesdeParameter, fechaRegistroHastaParameter, fechaAtencionParameter, fechaCierreParameter, usuarioModificacionParameter, codigoEpisodioClinicoParameter, idEpisodioAtencionCodigoParameter, cODIGOOAParameter, tipoTrabajadorParameter, idOpcionParameter, idFormatoParameter, id001Parameter, id002Parameter, codigo001Parameter, codigo002Parameter, descripcion001Parameter, iNICIOParameter, nUMEROFILASParameter, versionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<V_EpisodioAtenciones> USP_V_EpisodioAtenciones_LISTAR(Nullable<int> persona, string nombreCompleto, string unidadReplicacion, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<long> episodioAtencion, Nullable<int> tipoAtencion, Nullable<int> idOrdenAtencion, Nullable<int> tipoOrdenAtencion, Nullable<int> estado_EpisodioAten, Nullable<System.DateTime> fechaRegistroDesde, Nullable<System.DateTime> fechaRegistroHasta, Nullable<System.DateTime> fechaAtencion, Nullable<System.DateTime> fechaCierre, string usuarioModificacion, Nullable<int> codigoEpisodioClinico, string idEpisodioAtencionCodigo, string cODIGOOA, string tipoTrabajador, Nullable<int> idOpcion, Nullable<int> idFormato, Nullable<int> id001, Nullable<int> id002, string codigo001, string codigo002, string descripcion001, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string version, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(V_EpisodioAtenciones).Assembly);
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estado_EpisodioAtenParameter = estado_EpisodioAten.HasValue ?
                new ObjectParameter("Estado_EpisodioAten", estado_EpisodioAten) :
                new ObjectParameter("Estado_EpisodioAten", typeof(int));
    
            var fechaRegistroDesdeParameter = fechaRegistroDesde.HasValue ?
                new ObjectParameter("FechaRegistroDesde", fechaRegistroDesde) :
                new ObjectParameter("FechaRegistroDesde", typeof(System.DateTime));
    
            var fechaRegistroHastaParameter = fechaRegistroHasta.HasValue ?
                new ObjectParameter("FechaRegistroHasta", fechaRegistroHasta) :
                new ObjectParameter("FechaRegistroHasta", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var codigoEpisodioClinicoParameter = codigoEpisodioClinico.HasValue ?
                new ObjectParameter("CodigoEpisodioClinico", codigoEpisodioClinico) :
                new ObjectParameter("CodigoEpisodioClinico", typeof(int));
    
            var idEpisodioAtencionCodigoParameter = idEpisodioAtencionCodigo != null ?
                new ObjectParameter("IdEpisodioAtencionCodigo", idEpisodioAtencionCodigo) :
                new ObjectParameter("IdEpisodioAtencionCodigo", typeof(string));
    
            var cODIGOOAParameter = cODIGOOA != null ?
                new ObjectParameter("CODIGOOA", cODIGOOA) :
                new ObjectParameter("CODIGOOA", typeof(string));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("TipoTrabajador", tipoTrabajador) :
                new ObjectParameter("TipoTrabajador", typeof(string));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var id001Parameter = id001.HasValue ?
                new ObjectParameter("Id001", id001) :
                new ObjectParameter("Id001", typeof(int));
    
            var id002Parameter = id002.HasValue ?
                new ObjectParameter("Id002", id002) :
                new ObjectParameter("Id002", typeof(int));
    
            var codigo001Parameter = codigo001 != null ?
                new ObjectParameter("Codigo001", codigo001) :
                new ObjectParameter("Codigo001", typeof(string));
    
            var codigo002Parameter = codigo002 != null ?
                new ObjectParameter("Codigo002", codigo002) :
                new ObjectParameter("Codigo002", typeof(string));
    
            var descripcion001Parameter = descripcion001 != null ?
                new ObjectParameter("Descripcion001", descripcion001) :
                new ObjectParameter("Descripcion001", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<V_EpisodioAtenciones>("USP_V_EpisodioAtenciones_LISTAR", mergeOption, personaParameter, nombreCompletoParameter, unidadReplicacionParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idPacienteParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, episodioAtencionParameter, tipoAtencionParameter, idOrdenAtencionParameter, tipoOrdenAtencionParameter, estado_EpisodioAtenParameter, fechaRegistroDesdeParameter, fechaRegistroHastaParameter, fechaAtencionParameter, fechaCierreParameter, usuarioModificacionParameter, codigoEpisodioClinicoParameter, idEpisodioAtencionCodigoParameter, cODIGOOAParameter, tipoTrabajadorParameter, idOpcionParameter, idFormatoParameter, id001Parameter, id002Parameter, codigo001Parameter, codigo002Parameter, descripcion001Parameter, iNICIOParameter, nUMEROFILASParameter, versionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> USP_SS_HC_Copiar_EpisodioAtencion(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idOpcion, Nullable<int> idFormato, string codigoFormato, Nullable<System.DateTime> fechaRegistro, string usuarioCreacion, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("IdFormato", idFormato) :
                new ObjectParameter("IdFormato", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("USP_SS_HC_Copiar_EpisodioAtencion", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idOpcionParameter, idFormatoParameter, codigoFormatoParameter, fechaRegistroParameter, usuarioCreacionParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> SP_SS_HC_Miscelaneos_Formularios_LISTAR(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string usuario, string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> idOrdenAtencion, string codigoOA, Nullable<int> idMedico, Nullable<int> idOpcion, string codigoFormato, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("SP_SS_HC_Miscelaneos_Formularios_LISTAR", aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, usuarioParameter, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, idOrdenAtencionParameter, codigoOAParameter, idMedicoParameter, idOpcionParameter, codigoFormatoParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<MA_MiscelaneosDetalle> SP_SS_HC_Miscelaneos_Formularios_LISTAR(string aplicacionCodigo, string codigoTabla, string compania, string codigoElemento, string usuario, string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> idOrdenAtencion, string codigoOA, Nullable<int> idMedico, Nullable<int> idOpcion, string codigoFormato, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(MA_MiscelaneosDetalle).Assembly);
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var codigoElementoParameter = codigoElemento != null ?
                new ObjectParameter("CodigoElemento", codigoElemento) :
                new ObjectParameter("CodigoElemento", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var idOpcionParameter = idOpcion.HasValue ?
                new ObjectParameter("IdOpcion", idOpcion) :
                new ObjectParameter("IdOpcion", typeof(int));
    
            var codigoFormatoParameter = codigoFormato != null ?
                new ObjectParameter("CodigoFormato", codigoFormato) :
                new ObjectParameter("CodigoFormato", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MA_MiscelaneosDetalle>("SP_SS_HC_Miscelaneos_Formularios_LISTAR", mergeOption, aplicacionCodigoParameter, codigoTablaParameter, companiaParameter, codigoElementoParameter, usuarioParameter, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, idOrdenAtencionParameter, codigoOAParameter, idMedicoParameter, idOpcionParameter, codigoFormatoParameter, aCCIONParameter);
        }
    }
}
