@using Region = Ext.Net.Region
@model SoluccionSalud.Entidades.Entidades.SS_HC_Anamnesis_EA
@{
    ViewBag.Title = "Portal - Ext.NET MVC Examples";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}
@section cabecera
{

<style>
    html body {
        padding: 0px;
        background: none;
        background: none;
        background: none;
        background-attachment: fixed;
        background-position: center;
        font-family: tahoma,verdana,sans-serif;
        background-color: #ffffff;
    }
</style>


    <script>
        var Valores;
        var template = '<span style="color:{0};">{1}</span>';

        var change = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value);
        };

        var pctChange = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value + "%");
        };

        var onSuccess = function (grid, data) {
            grid.show();
            grid.getStore().loadData(data);
        };

        function deleteSelected(grid) {
            var store = grid.store,
                records = grid.selModel.getSelection();

            store.remove(records);
            store.load(true);
        }

    </script>
    <script>
        var refreshTree = function (tree) {
            App.direct.RefreshMenu({
                success: function (node) {
                    if (!Ext.isEmpty(node)) {
                        tree.setRootNode(node);
                    }
                    else {
                        tree.getRootNode().removeAll();
                    }
                }
            });
        };
    </script>

    <script>
        function eventoRenderForm() {
            var kk = 195;
            var scrH = screen.height;
            var northH = (parent.App.PanelMainNorth != null ? (parent.App.PanelMainNorth.getHeight() != null ? parent.App.PanelMainNorth.getHeight() : 20) : 20);
            var southH = (parent.App.PanelMainSouth != null ? (parent.App.PanelMainSouth.getHeight() != null ? parent.App.PanelMainSouth.getHeight() : 20) : 20);
            if (southH == 0) {
                southH = 30;
            }
            var dimCentral = (scrH - (northH + southH) - kk);
            App.formactual.setHeight(dimCentral);
        }
        var count = 0; // a counter for new records

        function visibleGrid(grid) {
            grid.visibleGrid(true);
        }

        function addRecord(grid) {
            grid.store.insert(0, { CODIGOELEMENTO: 'New' + count++ });

            Ext.Function.defer(function () {
                grid.editingPlugin.startEditByPosition({ row: 0, column: 0 })
            }, 100);
        }

        function deleteSelected(grid) {
            var store = grid.store,
                records = grid.selModel.getSelection();

            store.remove(records);
            store.load(true);
        }

        function selectRecord(grid, id) {
            var record = grid.store.getById(id);

            grid.store.loadPage(grid.store.findPage(record), {
                callback: function () {
                    grid.getSelectionModel().select(record);
                }
            });
        };
    </script>
    <script>
        var hhValidation = function (h) {
            str = h.value;
            tempo = "'";
            str = str.replace('javascript:myFunction(' + tempo, '');
            str = str.replace('%20', ' ');
            str = str.replace('%C3%B3', 'ó');
            str = str.replace('%C3%A1', 'á');
            str = str.replace('%C3%AD', 'í');
            str = str.replace('%C3%BA', 'ú');
            str = str.replace('%C3%B1', 'ñ');
            str = str.replace(tempo + ')', '');
            h.setValue(str);

        }
        var mmValidation = function (m) {
            if (m.getValue() > 59) {
                m.setValue(59);
            }

        }

    </script>
}


@section cuerpo
{


    @(Html.X().Viewport()
        .Layout(LayoutType.VBox)

        .LayoutConfig(
            new VBoxLayoutConfig { Align = VBoxAlign.Stretch }
        )
        .Listeners(l =>
        {
            l.AfterLayout.BroadcastOnBus = "App.resize";
            l.AfterLayout.Single = true;
        })
        .Items(regions =>
        {

            regions.Add(Html.X().FormPanel()
                .ItemID("center")
                .DefaultAnchor("100%")
                .AutoScroll(true)
                .Height(340)
               .Header(false)
               .Border(true)
                .ID("formactual")
                .Listeners(l =>
                {
                    l.Render.Handler = "eventoRenderForm();";
                }) 
               .Items(

                    X.FieldSet()
                                 .ColumnWidth(0.4)
                                 .Title("EXÁMENES RADIOLOGICOS")
                                 .MarginSpec("0 05 0 05")
                                 .Defaults(d =>
                                 {
                                     d.Add(new Parameter("LabelWidth", "170"));
                                 })

                                 .DefaultAnchor("100%")
                                 .FieldDefaults(d =>
                                 {
                                     d.LabelAlign = LabelAlign.Left;
                                 })
                                     .Items(
                                            X.GridPanel()
                                                 .ID("grillaProblemasActivos")
                                                 .Border(false)
                                                 .Store(
                                                     Html.X().Store()
                                                           .Model(
                                                             Html.X().Model()
                                                                 .IDProperty("CODIGOELEMENTO")
                                                                 .Fields(
                                                                     Html.X().ModelField().Name("VALORCODIGO1"),
                                                                     Html.X().ModelField().Name("VALORCODIGO2"),
                                                                     Html.X().ModelField().Name("VALORCODIGO3"),
                                                                     Html.X().ModelField().Name("VALORCODIGO4")

                                                                 )
                                                         )
                                                         .PageSize(10)
                                                         .ServerProxy(
                                                             Html.X().AjaxProxy()
                                                                 .Url(Url.Action("CCEP1051Read"))
                                                         )
                                                 )
                                                 .ColumnModel(

                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("VALORCODIGO1")
                                                         .Text("Nro")
                                                         .Flex(1)
                                                         .Component(
                                                             Html.X().TextField()
                                                                    .Width(50)
                                                             ),
                                                 
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("VALORCODIGO2")
                                                         .Text("Fecha Solicitud")
                                                         .Flex(1)
                                                         .Component(
                                                             Html.X().DateField()
                                                             ),
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("VALORCODIGO3")
                                                         .Text("Examen")
                                                         .Flex(1)
                                                         .Component(
                                                             Html.X().TextField()
                                                                    .Listeners(l => { l.Change.Handler = "hhValidation(this);"; })
                                                             ),
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("VALORCODIGO4")
                                                         .Text("Motivo del examen  / Observaciones")
                                                         .Flex(1)
                                                         .Component(
                                                             Html.X().TextField()
                                                             )

                                                 )
                                                 .SelectionModel(
                                                     Html.X().RowSelectionModel().Mode(SelectionMode.Multi)
                                                 )
                                                 .Plugins(
                                                     Html.X().CellEditing()
                                                 )

                                                 .TopBar(
                                                         Html.X().Toolbar()
                                                             .Items(
                                                                 Html.X().Button()
                                                                     .Text("Agregar")
                                                                     .Icon(Icon.Add)
                                                                     .Handler("addRecord(this.up('grid'));"),

                                                                 Html.X().Button()
                                                                     .Text("Eliminar")
                                                                     .Icon(Icon.Delete)
                                                                     .Handler("deleteSelected(this.up('grid'));")

                                                             )
                                                   )
                                           )
                                   
                     )

                    .TopBar(X.Toolbar().Items(X.ToolbarFill(),
                            X.Button()
                                .Text("Guardar")
                                .Icon(Icon.Disk)
                                .DirectClickAction("Save_SS_HC_Anamnesis_EA"),
                //.OnClientClick("var form = this.up('form'); form.getForm().updateRecord(form.down('grid').getSelectionModel().getLastSelected());"),
                            X.Button()
                                .Text("Cancelar")
                                .Icon(Icon.Cancel)
                                .OnClientClick("this.up('form').getForm().reset();")

                        ))
                );
        }
        )


    )

}

