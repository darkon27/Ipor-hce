@model SoluccionSalud.Entidades.Entidades.VW_ATENCIONPACIENTE

@{
    var X = Html.X();
    var COLOR_BLUE01_temp = "#284A89";
    var COLOR_RED01_temp = "#848484";
}

<script>
    var varTipoBuscar = "LOAD";
    var template = 'color:{0};';
    var cuenta = 0;
    var COLOR_BLUE01 = "#284A89";
    var COLOR_RED01 = "#990000";
    var change = function (value, meta) { return value; };

    var changeEstado = function (value) {
        var template = '<span style="color:{0};">{1}</span>';
        if (value == 2)
            return Ext.String.format(template, COLOR_BLUE01, "Activo");
        if (value == 1)
            return Ext.String.format(template, COLOR_RED01, "Inactivo");
    };

    var changeTipoDoc = function (value) {
        var template = '<span style="color:{0};">{1}</span>';
        if (value == "D")
            return Ext.String.format(template, COLOR_BLUE01, "DNI");
        if (value == "R")
            return Ext.String.format(template, COLOR_BLUE01, "RUC");
        if (value == "P")
            return Ext.String.format(template, COLOR_BLUE01, "PASAPORTE");
        if (value == "O")
            return Ext.String.format(template, COLOR_BLUE01, "OTROS");
    };

    var changeTipoParent = function (value) {
        var template = '<span style="color:{0};">{1}</span>';
        if (value == 1)
            return Ext.String.format(template, COLOR_BLUE01, "PADRE");
        if (value == 2)
            return Ext.String.format(template, COLOR_BLUE01, "MADRE");
        if (value == 3)
            return Ext.String.format(template, COLOR_BLUE01, "HIJO");
        if (value == 4)
            return Ext.String.format(template, COLOR_BLUE01, "HIJA");
        if (value == 5)
            return Ext.String.format(template, COLOR_BLUE01, "ABUELA");
        if (value == 6)
            return Ext.String.format(template, COLOR_BLUE01, "ABUELO");
        if (value == 7)
            return Ext.String.format(template, COLOR_BLUE01, "TIO");
        if (value == 8)
            return Ext.String.format(template, COLOR_BLUE01, "TIA");
        if (value == 9)
            return Ext.String.format(template, COLOR_BLUE01, "PRIMO");
        if (value == 10)
            return Ext.String.format(template, COLOR_BLUE01, "PRIMA");
        if (value == 11)
            return Ext.String.format(template, COLOR_BLUE01, "NIETO");
        if (value == 12)
            return Ext.String.format(template, COLOR_BLUE01, "NIETA");
        if (value == 13)
            return Ext.String.format(template, COLOR_BLUE01, "HERMANA");
        if (value == 14)
            return Ext.String.format(template, COLOR_BLUE01, "HERMANO");
        if (value == 15)
            return Ext.String.format(template, COLOR_BLUE01, "SOBRINO");
        if (value == 16)
            return Ext.String.format(template, COLOR_BLUE01, "SOBRINA");
    };

    var accionBuscarFiltro = function (tipo) {
        varTipoBuscar = tipo;
        App.GridPanelVer.getStore().reload();
        varTipoBuscar = 'LOAD';
    };


    var eventoCargarMain = function () {

        Ext.net.DirectMethod.request({
            url: '@(Url.Action("addPermisosFormatos"))',
            params: {
                data: 'FORMATO',
                indica: 'PERMISO',
            },
            success: function (result) { accionSetPermisos(result.data); }
        });
    };
    var accionSetPermisos = function (data) {
        var mensajes = "";
        if (data.length > 0) {
            for (var i = 0; i < data.length; i++) {
                if (data[i].ACCION == 'BUSCAR' && App.compoBUSCAR != null) {
                    App.compoBUSCAR.setVisible((data[i].campoInt01 == 2 ? true : false));
                } else if (data[i].ACCION == 'NUEVO' && App.compoNUEVO != null) {
                    App.compoNUEVO.setVisible((data[i].campoInt01 == 2 ? true : false));
                } else if (data[i].ACCION == 'MODIFICAR' && App.compoMODIFICAR != null) {
                    App.compoMODIFICAR.setVisible((data[i].campoInt01 == 2 ? true : false));
                } else if (data[i].ACCION == 'ELIMINAR' && App.compoELIMINAR != null) {
                    App.compoELIMINAR.setVisible((data[i].campoInt01 == 2 ? true : false));
                } else if (data[i].ACCION == 'VER' && App.compoVER != null) {

                } else if (data[i].ACCION == 'VER2' && App.compoVER != null) {
                    App.compoVER.setVisible((data[i].campoInt01 == 2 ? true : false));
                } else if (data[i].ACCION == 'ACCESO' && App.compoACCESO != null) {
                    App.compoACCESO.setVisible((data[i].campoInt01 == 2 ? true : false));
                } else if (data[i].ACCION == 'HABILITADO' && App.compoHABILITADO != null) {
                    App.compoHABILITADO.setVisible((data[i].campoInt01 == 2 ? true : false));
                } else if (data[i].ACCION == 'OBLIGA' && App.compoOBLIGA != null) {
                    App.compoOBLIGA.setVisible((data[i].campoInt01 == 2 ? true : false));
                } else if (data[i].ACCION == 'PRIORIDADAGOPCION' && App.compoPRIORIDADAGOPCION != null) {
                    App.compoPRIORIDADAGOPCION.setVisible((data[i].campoInt01 == 2 ? true : false));
                }

            }
        }
    };



    function trim(str) { return str.replace(/^\s+|\s+$/g, ""); }




    var eventoCheckFiltro = function (check, componente) {
        var checkAll = check.getValue();
        if (checkAll) {
            componente.setDisabled(true);
            componente.setValue(null);
        } else {
            componente.setDisabled(false);
        }
    };


    function enviarSeleccionDirect(param1, param2) {
        var status = param1;
        var status2 = param2;
        var status3 = param3;
        Ext.net.DirectMethod.request({
            url: '@(Url.Action(Model.Accion))',
            params: {
                MODO: 'get',
                id: status,
                IdAcompanante: status2,

                idWindow: "WindowVerDetallePaciente"
            }
        });
    }

</script>


@(Html.X().Window().Width(565).Height(382).
Maximizable(true).Modal(true).OnEsc("false")
.AutoScroll(true).Layout(LayoutType.Fit)
.CloseAction(CloseAction.Destroy).Icon(Icon.ApplicationForm)
    .ID("WindowVerDetallePaciente").Title("").Padding(4).TopBar(
X.Toolbar().Height(30)
    .Items(
        X.ToolbarSpacer(),
        X.Label().Html("<b><span style='color:" + COLOR_BLUE01_temp + ";'>" + "PACIENTE" + ": " + Model.NombreCompleto + "  </span> </b>"),
            X.ToolbarSpacer(),
                 X.ToolbarSpacer(),
                      X.ToolbarSpacer(),
        X.Label().Html("<b><span style='color:" + COLOR_RED01_temp + ";'>" + "OA" + ": " + Model.CodigoOA + "</span> </b>"),
             X.ToolbarSpacer(),
                     X.ToolbarSpacer(),
                          X.ToolbarSpacer(),


        X.Button().Text("Cerrar").Icon(Icon.Cancel).DirectEvents(de =>
        {
            de.Click.Url = Url.Action("cerrarWindow");
            de.Click.ExtraParams.Add(new Parameter("id", "WindowVerDetallePaciente", ParameterMode.Value));
        }),
        X.ToolbarSpacer(20))

        )
        .Items(
            X.Panel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
            .Items(
                X.Panel()
                .Header(false).Border(false).Flex(1)
                    .Layout(LayoutType.Border).TopBar(
                                X.Toolbar()

                                     .Items(X.Panel()
                                .Layout(LayoutType.HBox)
                                .BodyPadding(5)
                                .Width(1110)
                                .Border(false)
                                .MarginSpec("1 20 1 1")

                             )

                            )
                .Items(



                        Html.X().Panel()
                        .Region(Region.Center)
                        .ID("centerPanels")
                        .Height(600)
        // .Title("Vista de Reporte")
                        .AutoDoLayout(true)
                             .Items(

                                 X.FormPanel()
            .Title("Detalle del Paciente")
            .Width(550)
            .Height(300)
            .Icon(Icon.User)
            .BodyPadding(15)
            .FieldDefaults(fd => fd.LabelWidth = 170)
            .Items(
                    X.TextField()
                    .FieldLabel("Religión").Value(Model.Religion).ReadOnly(true)
                    .AnchorHorizontal("100%"),
                    X.TextField()
                        .FieldLabel("Raza").Value(Model.Raza).ReadOnly(true)
                    .AnchorHorizontal("100%"),
                    X.TextField()
                        .FieldLabel("Dirección").Value(Model.Direccion).ReadOnly(true)
                    .AnchorHorizontal("100%"),
                    X.TextField()
                        .FieldLabel("Estado Civil").Value(Model.EstadoCivil).ReadOnly(true)
                    .AnchorHorizontal("100%"),
                    X.TextField()
                        .FieldLabel("Grado de Instrucción").Value(Model.NivelInstruccion).ReadOnly(true)
                    .AnchorHorizontal("100%"),
                    X.TextField()
                        .FieldLabel("Ocupación").Value(Model.Ocupacion).ReadOnly(true)
                    .AnchorHorizontal("100%"),
                    X.TextField()
                        .FieldLabel("Nombres de los Padres").Value(Model.ParentescoEmergencia).ReadOnly(true)
                    .AnchorHorizontal("100%")
            )
        //  .Listeners(l => l.AfterRender.Fn = "bodyInit")
                    )
                )
            )
                  .Listeners(l => l.Render.Handler = "eventoCargarMain();")
        ).CloseAction(CloseAction.Destroy)
)


