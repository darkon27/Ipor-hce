@using Region = Ext.Net.Region
@model SoluccionSalud.Entidades.Entidades.SS_HC_Anamnesis_EA
@{
    ViewBag.Title = "Portal - Ext.NET MVC Examples";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();

    var indicaVisiblePrint = SoluccionSalud.Entidades.Entidades.ENTITY_GLOBAL.Instance.INDICA_VISIBLE_IMPRESION;
    var visibleImpresion = (indicaVisiblePrint == 2 ? true : false);
    var indicaVisibleTB = SoluccionSalud.Entidades.Entidades.ENTITY_GLOBAL.Instance.INDICA_VISIBLE_TB_IMPRESION;

    var indicaModoLectura2 = !(indicaVisibleTB == 2 ? false : true);

    var indicaModoLectura = !(Model.Accion == "NUEVO" ? true :
                            (Model.Accion == "UPDATE" ? true :
                            (Model.Accion == "DELETE" ? false :
                            (Model.Accion == "VISTA" ? false : false))));
     
    
    }
@section cabecera
{
    <style>
    html body {
        padding: 0px;
        background: none;
        background: none;
        background: none;
        background-attachment: fixed;
        background-position: center;
        font-family: tahoma,verdana,sans-serif;
        background-color: #ffffff;
    }
</style>

    <script>
        var Valores;
        var template = '<span style="color:{0};">{1}</span>';

        var change = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value);
        };

        var pctChange = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value + "%");
        };

        var onSuccess = function (grid, data) {
            grid.show();
            grid.getStore().loadData(data);
        };

        function deleteSelected(grid) {
            var store = grid.store,
                records = grid.selModel.getSelection();

            store.remove(records);
            store.load(true);
        }

    </script>
    <script>
        var refreshTree = function (tree) {
            App.direct.RefreshMenu({
                success: function (node) {
                    if (!Ext.isEmpty(node)) {
                        tree.setRootNode(node);
                    }
                    else {
                        tree.getRootNode().removeAll();
                    }
                }
            });
        };
    </script>

<script>    
    function eventoRenderForm() {
        var kk = 195;
        var scrH = screen.height;
        var northH = (parent.App.PanelMainNorth != null ? (parent.App.PanelMainNorth.getHeight() != null ? parent.App.PanelMainNorth.getHeight() : 20) : 20);
        var southH = (parent.App.PanelMainSouth != null ? (parent.App.PanelMainSouth.getHeight() != null ? parent.App.PanelMainSouth.getHeight() : 20) : 20);
        if (southH == 0) {
            southH = 30;
        }
        var dimCentral = (scrH - (northH + southH) - kk);
        App.formactual.setHeight(545);
    }

    var indicaCambios = false;
    function setIndicaCambios(value) {
        indicaCambios = value;
        Ext.net.DirectMethod.request({
            url: '@(Url.Action("setIndicaCambiosFormulario"))',
            params: {
                indica: (value ? 1 : 0)
            }
        });
    }

    var seleccRecordActualAct = null;
    var seleccRecordActualInac = null;
    function setSeleccionActualActivo(record) {
        seleccRecordActualAct = record;
    }
    function setSeleccionActualInactivo(record) {
        seleccRecordActualInac = record;
    }
    var count = 0; // a counter for new records

    function visibleGrid(grid) {
        grid.visibleGrid(true);
    }

    function addRecord(grid) {
        setIndicaCambios(true);
        grid.store.insert(0, { CODIGOELEMENTO: 'New' + count++, ACCION:'NUEVO' });

        Ext.Function.defer(function () {
            grid.editingPlugin.startEditByPosition({ row: 0, column: 0 })
        }, 100);
    }

    function deleteActualActivo(record) {
        if (seleccRecordActualAct != null) {
            setIndicaCambios(true);
            var store = App.grillaProblemasActivos.store;
            var par1 = seleccRecordActualAct.data.ValorCodigo3;
            var par2 = seleccRecordActualAct.data.CodigoElemento;
            
            store.remove(seleccRecordActualAct);
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("addEliminar_Problemas"))',
                params: {
                    MODO: 'DELETE',
                    codigo: par1,
                    secuencia: par2,
                    tipoproblema: 'A'
                }
            });
            seleccRecordActualAct = null;
        }
    };
    function deleteActualInactivo(record) {
        if (seleccRecordActualInac != null) {
            setIndicaCambios(true);
            var store = App.grillaProblemasInactivos.store;
            var par1 = seleccRecordActualInac.data.ValorCodigo3;
            var par2 = seleccRecordActualInac.data.CodigoElemento;
           
            store.remove(seleccRecordActualInac);
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("addEliminar_Problemas"))',
                params: {
                    MODO: 'DELETE',
                    codigo: par1,
                    secuencia: par2,
                    tipoproblema:'C'
                }
            });
            seleccRecordActualInac = null;
        }
    }


    var eventoOnEditar = function (btn) {
        App.cmdGuardar.setDisabled(false);
        App.btnOnEdit.setVisible(false);
        App.btnCancel.setVisible(true);

    };

    function selectRecord(grid, id) {
        var record = grid.store.getById(id);

        grid.store.loadPage(grid.store.findPage(record), {
            callback: function () {
                grid.getSelectionModel().select(record);
            }
        });
    };
    function EnviarData(grid) {
        beforeSave(App.formactual);
        if (App.formactual.getForm().isValid()) {
            source = App.grillaProblemasActivos;
            var store = App.storeActivos;
            var status = 0;
            var i = 1;
            var valores = "";
            var ArrayList0 = new Array();
            var records = App.grillaProblemasActivos.getSelectionModel().getSelection();
            App.storeActivos.each(function (r) {
                var MA_MiscelaneosDetalle = {
                    ValorCodigo1: r.get('ValorCodigo1'),
                    ValorFecha: r.get('ValorFecha'),
                    ValorCodigo2: r.get('ValorCodigo2'),
                    ValorCodigo3: r.get('ValorCodigo3'),
                    ValorCodigo4: r.get('ValorCodigo4'),
                    ValorCodigo5: r.get('ValorCodigo5'),
                    CodigoElemento: r.get('CodigoElemento'),

                    ACCION: (r.get('ACCION') == 'NUEVO' ? r.get('ACCION') : 'UPDATE')
                };
                ArrayList0.push(MA_MiscelaneosDetalle);
                i = i + 1;
            });

            //------------//
            source = App.grillaProblemasInactivos;
            store = App.storeInActivos;
            status = 0;
            i = 1;
            valores = "";
            ArrayList1 = new Array();
            records = App.grillaProblemasInactivos.getSelectionModel().getSelection();
            App.storeInActivos.each(function (r) {
                var MA_MiscelaneosDetalle = {
                    ValorCodigo1: r.get('ValorCodigo1'),
                    ValorFecha: r.get('ValorFecha'),
                    ValorCodigo2: r.get('ValorCodigo2'),
                    ValorCodigo3: r.get('ValorCodigo3'),
                    ValorCodigo4: r.get('ValorCodigo4'),
                    ValorCodigo5: r.get('ValorCodigo5'),
                    CodigoElemento: r.get('CodigoElemento'),
                    ACCION: (r.get('ACCION') == 'NUEVO' ? r.get('ACCION') : 'UPDATE')
                };
                ArrayList1.push(MA_MiscelaneosDetalle);
                i = i + 1;
            });
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("Save_Problemas"))',
                params: {
                    selectionArray1: ArrayList0,
                    selectionArray2: ArrayList1,
                    text: 'O'
                }
            });
            App.storeActivos.reload();
            App.storeInActivos.reload();
        } else {
            App.cmdGuardar.setDisabled(false);
        }
    }

    var accionMensajes = function (data) {
        var mensajes = "";
        if (data.length > 0) {
            for (var i = 0; i < data.length; i++) {
                mensajes = mensajes + "*" + data[i].DESCRIPCION + "\n";
            }
            App.taAlerts.setVisible(true);
            App.taAlerts.setValue(mensajes);
            App.conthbIndicaError.setVisible(true);
            App.taAlerts.focus();
        } else {
            App.taAlerts.setVisible(false);
            App.conthbIndicaError.setVisible(false);
        }

    };

    var getInvalidFields = function (form) {
        var invalidFields = new Array();
        var fields = form.getForm().getFields();
        fields.filterBy(function (field) {
            if (!field.isValid()) {
                var VW_SS_HC_TABLAFORMATO_VALIDACION = {
                    NombreCampo: field.name,
                    IdEvento: (field.isValid() ? 1 : 0),
                    ValorTexto: field.name + ': ' + field.getErrors()
                };
                invalidFields.push(VW_SS_HC_TABLAFORMATO_VALIDACION);
            }
        });
        return invalidFields;
    };

    var beforeSave = function (form) {
        App.taAlerts.setVisible(false);
        App.taAlerts.setValue(null);
        App.conthbIndicaError.setVisible(false);
        var FieldsInvalidos = getInvalidFields(form);
        if (FieldsInvalidos.length > 0) {
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("addRecursosValidacion"))',
                params: {
                    data: FieldsInvalidos,
                    indica: 'VALIDAR',
                },
                success: function (result) { accionMensajes(result.data); }
            });
        }
    };




    </script>
    <script>
        var noTdraggable = function (h) {
            str = h.value;
            var replaced = str.search('javascript') >= 0;
            if (replaced) {
                h.setValue("");
            }
        }
        var hhValidation = function (h) {
            str = h.value;
            tempo = "'";
            str = str.replace('javascript:myFunction(' + tempo, '');
            str = str.replace('%20', ' ');
            str = str.replace('%C3%B3', 'ó');
            str = str.replace('%C3%A1', 'á');
            str = str.replace('%C3%A9', 'é');
            str = str.replace('%C3%AD', 'í');
            str = str.replace('%C3%BA', 'ú');
            str = str.replace('%C3%B1', 'ñ');

            str = str.replace('%C3%8D', 'Í');
            str = str.replace('%C3%93', 'Ó');
            str = str.replace('%C3%81', 'Á');
            str = str.replace('%C3%91', 'Ñ');
            str = str.replace('%C3%9A', 'Ú');
            str = str.replace(tempo + ')', '');
            h.setValue(str);

         }
        var mmValidation = function (m) {
            if (m.getValue() > 59) {
                m.setValue(59);
            }

        }

    </script>
    }


    @section cuerpo
{


    @(Html.X().Viewport()
        .Layout(LayoutType.VBox)

        .LayoutConfig(
            new VBoxLayoutConfig { Align = VBoxAlign.Stretch }
        )
        .Listeners(l =>
        {
            l.AfterLayout.BroadcastOnBus = "App.resize";
            l.AfterLayout.Single = true;
        })
        .Items(regions =>
        {

            regions.Add(Html.X().FormPanel()
                .ItemID("center")
                .DefaultAnchor("100%")
                .AutoScroll(true)
                .Height(340)
               .Header(false)
               .Border(true)
                .ID("formactual")
                .Listeners(l =>
                {
                    l.Render.Handler = "eventoRenderForm();";
                })
               .Items(X.Toolbar().ID("TBImprimir").Hidden(indicaModoLectura2).Items(X.ToolbarFill(),
                                X.Button()
                                .Text("Imprimir")
                                .Icon(Icon.Report)
                //.Hidden(!visibleImpresion)
                                .ID("btnImpresion2")
                                .Handler("eventoVisorReporte('');")),
                       
                    X.FieldSet()
                                 .ColumnWidth(0.4)
                                 .Title("PROBLEMAS ACTIVOS")
                                 .MarginSpec("0 05 0 05")
                                 .Defaults(d =>
                                 {
                                     d.Add(new Parameter("LabelWidth", "170"));
                                 })

                                 .DefaultAnchor("100%")
                                 .FieldDefaults(d =>
                                 {
                                     d.LabelAlign = LabelAlign.Left;
                                 })
                                     .Items(
                                            X.GridPanel()
                                                 .ID("grillaProblemasActivos")
                                                 .Border(false)
                                                 .Store(
                                                     Html.X().Store()
                                                             .ID("storeActivos")
                                                           .Model(
                                                             Html.X().Model()
                                                                 .IDProperty("CodigoElemento")
                                                                 .Fields(
                                                                        new ModelField("CodigoElemento", ModelFieldType.String),
                                                                        new ModelField("ValorCodigo1", ModelFieldType.String),
                                                                        new ModelField("ValorFecha", ModelFieldType.Date),
                                                                        new ModelField("ValorCodigo2", ModelFieldType.Int),
                                                                        new ModelField("ValorCodigo3", ModelFieldType.String),
                                                                        new ModelField("ValorCodigo4", ModelFieldType.Int),
                                                                        new ModelField("ValorCodigo5", ModelFieldType.String),
                                                                        new ModelField("ACCION", ModelFieldType.String)
                                                                    ))
                                                                   //.Fields(
                                                                   //  Html.X().ModelField().Name("CodigoElemento"),
                                                                   //  Html.X().ModelField().Name("ValorCodigo1"),
                                                                   //  Html.X().ModelField().Name("ValorFecha"),
                                                                   //  Html.X().ModelField().Name("ValorCodigo2"),
                                                                   //  Html.X().ModelField().Name("ValorCodigo3"),
                                                                   //  Html.X().ModelField().Name("ValorCodigo4"),
                                                                   //  Html.X().ModelField().Name("ValorCodigo5"))
                                                                  
                                                          .AutoLoad(true)
                                                          .RemoteSort(false)
                                                          .IsPagingStore(true)
                                                          .RemotePaging(true)
                                                          .PageSize(5)
                                                          .Proxy(proxy => proxy.Add(Html.X().AjaxProxy()
                                                                            .Url("CCEP0202_PROBLEMASACTIVOS")
                                                                            .Reader(reader => reader.Add(Html.X().JsonReader()
                                                                                           .Root("data")
                                                                                           .TotalProperty("total")
                                                                                           .IDProperty("CodigoElemento")))))
                                                        
                                                 )
                                                 .ColumnModel(
                
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorCodigo1")
                                                         .Text("Nro")
                                                          .Width(30)
                                                         .Component(
                                                             Html.X().TextField()
                                                                    //.Listeners(l => { l.Change.Handler = "hhValidation(this);"; })
                                                             ),
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorFecha")
                                                         .Text("Fecha")
                                                         .Width(110)
                                                         .Component(
                                                             Html.X().DateField()
                                                                    //.Format("yyyy-MM-dd")        
                                                                    .Format("dd/MM/yyyy")
                                                                    //.Listeners(l => { l.Change.Handler = "Formato(this);"; })
                                                             ),
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorCodigo2")
                                                         .Text("Tipo")
                                                         .Width(110)
                                                         .Component(
                                                                Html.X().ComboBox()
                                                                        .ID("cbAVALORCODIGO2")
                                                                        .Items(SoluccionSalud.Service.MiscelaneosService.SvcMiscelaneos.comboModelGenerico.GetComboGenerico("TIPOPROBLEMADIAG").Select(d => new ListItem(d.Name, d.ID)))
                                                                        .SimpleSubmit(true)
                                                                        //.Listeners(ls =>
                                                                          //         ls.Change.Handler = @" this.setValue(this.record.data['ValorCodigo2']);")
                                                                                                        
                                                                                                                                                     
                                                             ),     
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorCodigo3")
                                                         .Text("Problema")
                                                         .Flex(1)
                                                         .Component(
                                                             Html.X().TextField()
                                                                    .Listeners(l => { l.Change.Handler = "hhValidation(this);"; })
                                                             ),  
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorCodigo4")
                                                         .Text("Controlado")
                                                         .Width(100)
                                                         .Component(
                                                             Html.X().ComboBox()
                                                                        .ID("cbAVALORCODIGO3")
                                                                        .Items(SoluccionSalud.Service.MiscelaneosService.SvcMiscelaneos.comboModelGenerico.GetComboGenerico("TABCOLABORACION").Select(d => new ListItem(d.Name, d.ID)))
                                                                        .SimpleSubmit(true) 
                                                             ),
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorCodigo5")
                                                         .Text("Observaciones")
                                                         .Flex(1)
                                                         .Component(
                                                             Html.X().TextField()
                                                                    .Listeners(l => { l.Change.Handler = "noTdraggable(this);"; })
                                                             )                                                                                                                                                                                                                                                
                                                    ,Html.X().Column().Text("ACCION").DataIndex("ACCION").Hidden(true)
                                                 )
                                                 .SelectionModel(
                                                     Html.X().RowSelectionModel().Mode(SelectionMode.Multi)
                                                 )
                                                 .Plugins(
                                                     Html.X().CellEditing()
                                                 )
                                                 .Listeners(l => l.CellClick
                                                    .Handler = "setSeleccionActualActivo(record);")

                                                 .TopBar(
                                                         Html.X().Toolbar().Hidden(indicaModoLectura)
                                                             .Items(
                                                                 Html.X().Button()
                                                                     .Text("Agregar")
                                                                     .Icon(Icon.Add)
                                                                     .Handler("addRecord(this.up('grid'));"),

                                                                 Html.X().Button()
                                                                     .Text("Eliminar")
                                                                     .Icon(Icon.Delete)
                                                                     .Handler("deleteActualActivo();")

                                                             )
                                                   )
                                           ),
                           X.FieldSet()
                                 .ColumnWidth(0.4)
                                 .Title("PROBLEMAS INACTIVOS")
                                 .MarginSpec("0 05 0 05")
                                 .Defaults(d =>
                                 {
                                     d.Add(new Parameter("LabelWidth", "170"));
                                 })

                                 .DefaultAnchor("100%")
                                 .FieldDefaults(d =>
                                 {
                                     d.LabelAlign = LabelAlign.Left;
                                 })
                                     .Items(
                                            X.GridPanel()
                                                 .ID("grillaProblemasInactivos")
                                                 .Border(false)
                                                 .Store(
                                                     Html.X().Store()
                                                            .ID("storeInActivos")
                                                           .Model(
                                                             Html.X().Model()
                                                                 .IDProperty("CodigoElemento")
                                                                 /*.Fields(

                                                                     Html.X().ModelField().Name("CodigoElemento"),
                                                                     Html.X().ModelField().Name("ValorCodigo1"),
                                                                     Html.X().ModelField().Name("ValorFecha"),
                                                                     Html.X().ModelField().Name("ValorCodigo2"),
                                                                     Html.X().ModelField().Name("ValorCodigo3"),
                                                                     Html.X().ModelField().Name("ValorCodigo4"),
                                                                     Html.X().ModelField().Name("ValorCodigo5")

                                                                 ))*/
                                                                 .Fields(
                                                                        new ModelField("CodigoElemento", ModelFieldType.String),
                                                                        new ModelField("ValorCodigo1", ModelFieldType.String),
                                                                        new ModelField("ValorFecha", ModelFieldType.Date),
                                                                        new ModelField("ValorCodigo2", ModelFieldType.Int),
                                                                        new ModelField("ValorCodigo3", ModelFieldType.String),
                                                                        new ModelField("ValorCodigo4", ModelFieldType.Int),
                                                                        new ModelField("ValorCodigo5", ModelFieldType.String), 
                                                                        new ModelField("ACCION", ModelFieldType.String)
                                                                        
                                                                    ))
                                                         
                                                      .AutoLoad(true)
                                                      .RemoteSort(false)
                                                      .IsPagingStore(true)
                                                      .RemotePaging(true)
                                                      .PageSize(5)
                                                          .Proxy(proxy => proxy.Add(Html.X().AjaxProxy()
                                                                             .Url("CCEP0202_PROBLEMASINACTIVOS")
                                                                             .Reader(reader => reader.Add(Html.X().JsonReader()
                                                                                           .Root("data")
                                                                                           .TotalProperty("total")
                                                                                           .IDProperty("CodigoElemento")))))
                                                 )
                                                 .ColumnModel(
                
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorCodigo1")
                                                         .Text("Nro")
                                                        .Width(30)
                                                         .Component(
                                                             Html.X().TextField()
                                                                    
                                                                    .Listeners(l => { l.Change.Handler = "hhValidation(this);"; })
                                                             ),
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorFecha")
                                                         .Text("Fecha")
                                                          .Width(110)
                                                         .Component(
                                                             Html.X().DateField()
                                                                     .Format("dd/MM/yyyy")
                                                                   // .Listeners(l => { l.Change.Handler = "hhValidation(this);"; })
                                                             ),
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorCodigo2")
                                                         .Text("Tipo")
                                                          .Width(110)
                                                         .Component(
                                                                Html.X().ComboBox()
                                                                        .ID("cbAVALORCODIGO4")
                                                                        .Items(SoluccionSalud.Service.MiscelaneosService.SvcMiscelaneos.comboModelGenerico.GetComboGenerico("TIPOPROBLEMADIAG").Select(d => new ListItem(d.Name, d.ID)))
                                                                        .SimpleSubmit(true) 
                                                             ),     
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorCodigo3")
                                                         .Text("Problema")
                                                         .Flex(1)
                                                         .Component(
                                                             Html.X().TextField()
                                                                    .Listeners(l => { l.Change.Handler = "hhValidation(this);"; })
                                                             ),  
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorCodigo4")
                                                         .Text("Controlado")
                                                         .Width(100)
                                                         .Component(
                                                             Html.X().ComboBox()
                                                                        .ID("cbAVALORCODIGO5")
                                                                        .Items(SoluccionSalud.Service.MiscelaneosService.SvcMiscelaneos.comboModelGenerico.GetComboGenerico("TABCOLABORACION").Select(d => new ListItem(d.Name, d.ID)))
                                                                        .SimpleSubmit(true) 
                                                             ) ,
                                                     Html.X().ComponentColumn()
                                                         .Editor(true)
                                                         .DataIndex("ValorCodigo5")
                                                         .Text("Observaciones")
                                                         .Flex(1)
                                                         .Component(
                                                             Html.X().TextField()
                                                                    .Listeners(l => { l.Change.Handler = "hhValidation(this);"; })
                                                             )
                                                    , Html.X().Column().Text("ACCION").DataIndex("ACCION").Hidden(true)
                                                 )
                                                 .SelectionModel(
                                                     Html.X().RowSelectionModel().Mode(SelectionMode.Multi)
                                                 )
                                                 .Plugins(
                                                     Html.X().CellEditing()
                                                 )
                                                 .Listeners(l => l.CellClick
                                                    .Handler = "setSeleccionActualInactivo(record);")

                                                 .TopBar(
                                                         Html.X().Toolbar().Hidden(indicaModoLectura)
                                                             .Items(
                                                                 Html.X().Button()
                                                                     .Text("Agregar")
                                                                     .Icon(Icon.Add)
                                                                     .Handler("addRecord(this.up('grid'));"),

                                                                 Html.X().Button()
                                                                     .Text("Eliminar")
                                                                     .Icon(Icon.Delete)
                                                                     .Handler("deleteActualInactivo();")

                                                             )
                                                   )
                                     )
                                ////////ADD PARA MSGS/////		
                                ,
                                X.TextArea().ID("taAlerts")
                                .Border(false)
                                .StyleSpec("background:white;border:1px solid gray;")
                                .FieldStyle("color: red")
                                .Hidden(true)
                                .ReadOnly(true)
                                //////////////////////
                     )

                    .TopBar(X.Toolbar().Hidden(indicaModoLectura).Items(                                
				                X.ToolbarSpacer(20)
                                ,
                                Html.X().Container().Layout(LayoutType.HBox)
                                .ID("conthbIndicaError").Hidden(true).Items(
                                    X.Label().Html("<font  size='1.9em'; color='red'>(</font>"),
                                    X.Label().Html("<font  size='3.9em'; color='red'><b>&#161;</b></font>"),
                                    X.Label().Html("<font  size='1.9em'; color='red'>) Verificar los errores presentados</font>")
                                ),                    
                            X.ToolbarFill(),
                            X.Button()
                                .Text("Guardar")
                                .Icon(Icon.Disk)
                                .ID("cmdGuardar")
                                .Handler("App.cmdGuardar.setDisabled(true); EnviarData(this.up('grid'));"),
                                //.OnClientClick("var form = this.up('form'); form.getForm().updateRecord(form.down('grid').getSelectionModel().getLastSelected());"),
                            X.Button()
                                .Text("Cancelar")
                                .ID("btnCancel")
                                .Icon(Icon.Cancel)
                                .OnClientClick("this.up('form').getForm().reset();")
                                ,
                            X.Button()
                                .Text("Editar")
                                .ID("btnOnEdit")
                                .Icon(Icon.ApplicationFormEdit)
                                .Hidden(true)
                                .Handler("eventoOnEditar(App.btnOnEdit);")     
                        ))
                        .Listeners(l => l.FieldChange
                            .Handler = "setIndicaCambios(true);"
                        )                          
                );
        }
        )


      )

    }

