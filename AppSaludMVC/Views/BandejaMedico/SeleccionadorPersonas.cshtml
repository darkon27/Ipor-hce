@model SoluccionSalud.Entidades.Entidades.VW_PERSONAPACIENTE

@{
    var X = Html.X();

    var cap = Model.ACCION;
}

<script>
    var seleccionActual = null;
    var seleccionActual2 = null;
    var seleccionActual3 = null;
    var seleccionActual4 = null;
    var seleccionActual5 = null;
    var seleccionActual6 = null;
    var seleccionActual7 = null;
    var seleccionActual8 = null;
    var seleccionActual9 = null;
    var seleccionActual10 = null;
    var seleccionActual11 = null;
    var seleccionActual12 = null;
    var seleccionActual13 = null;
    var seleccionActual14 = null;
    var seleccionActual15 = null;
    var seleccionActual16 = null;
    var seleccionActual17 = null;
    var seleccionActual18 = null;
    var seleccionActual19 = null;
    var seleccionActual20 = null;
    var seleccionActual21 = null;
    var seleccionActual22 = null;
    var seleccionActual23 = null;
    var seleccionActual24 = null;
    var seleccionActual25 = null;
    var seleccionActual26 = null;
    var seleccionActual27 = null;
    var seleccionActual28 = null;
    var seleccionActual29 = null;
    var seleccionActual30 = null;
    var seleccionActual31 = null;
    var seleccionActual32 = null;
    var seleccionActual33 = null;
    var seleccionActual34 = null;
    var seleccionActual35 = null;
    var seleccionActual36 = null;
    var seleccionActual37 = null;
    var seleccionActual38 = null;
    var seleccionActual39 = null;
    var seleccionActual40 = null;
    var seleccionActual41 = null;
    var seleccionActual42 = null;
    var seleccionActual43 = null;
    var seleccionActual44 = null;
    var seleccionActual45 = null;
    function setSeleccion(param1) {
        seleccionActual = param1.Persona;
        seleccionActual2 = param1.ApellidoPaterno;
        seleccionActual3 = param1.ApellidoMaterno;
        seleccionActual4 = param1.Nombres;
        seleccionActual5 = param1.TipoDocumentoIdentidad;
        seleccionActual6 = param1.DocumentoIdentidad;
        seleccionActual7 = param1.DocumentoFiscal;
        seleccionActual8 = param1.TipoMedico;
        seleccionActual9 = param1.Pais;
        seleccionActual10 = param1.Departamento;
        seleccionActual11 = param1.Provincia;
        seleccionActual12 = param1.CodigoPostal;
        seleccionActual13 = param1.Direccion;
        seleccionActual14 = param1.Origen;
        seleccionActual15 = param1.Sexo;
        seleccionActual16 = param1.FechaNacimiento;
        seleccionActual17 = param1.EstadoCivil;
        seleccionActual18 = param1.Telefono;
        seleccionActual19 = param1.Celular;
        seleccionActual20 = param1.TipoDocumento;
        seleccionActual21 = param1.Documento;
        seleccionActual22 = param1.Busqueda;
        seleccionActual23 = param1.NombreCompleto;
        seleccionActual24 = param1.CorreoElectronico;
        seleccionActual25 = param1.NivelInstruccion;
        seleccionActual26 = param1.rangoEtario;
        seleccionActual27 = param1.edad;
        seleccionActual28 = param1.LugarNacimiento;
        seleccionActual29 = param1.Nacionalidad;
        seleccionActual30 = param1.CodigoHC;
        seleccionActual31 = param1.CodigoHCAnterior;
        seleccionActual32 = param1.CodigoHCSecundario;
        seleccionActual33 = param1.Raza;
        seleccionActual34 = param1.Religion;
        seleccionActual35 = param1.UbicacionHHCC;
        seleccionActual36 = param1.CodigoAsegurado;
        seleccionActual37 = param1.RutaFoto;
        seleccionActual38 = param1.FechaIngreso;
        seleccionActual39 = param1.AreaLaboral;
        seleccionActual40 = param1.Ocupacion;
        seleccionActual41 = param1.LugarProcedencia;
        seleccionActual42 = param1.TipoAlmacenamiento;
    }

    function enviarSeleccion(grid) {
        if (seleccionActual != null) {
            var status = seleccionActual;
            var status2 = seleccionActual2;
            var status3 = seleccionActual3;
            var status4 = seleccionActual4;
            var status5 = seleccionActual5;
            var status6 = seleccionActual6;
            var status7 = seleccionActual7;
            var status8 = seleccionActual8;
            var status9 = seleccionActual9;
            var status10 = seleccionActual10;
            var status11 = seleccionActual11;
            var status12 = seleccionActual12;
            var status13 = seleccionActual13;
            var status14 = seleccionActual14;
            var status15 = seleccionActual15;
            var status16 = seleccionActual16;
            var status17 = seleccionActual17;
            var status18 = seleccionActual18;
            var status19 = seleccionActual19;
            var status20 = seleccionActual20;
            var status21 = seleccionActual21;
            var status22 = seleccionActual22;
            var status23 = seleccionActual23;
            var status24 = seleccionActual24;
            var status25 = seleccionActual25;
            var status26 = seleccionActual26;
            var status27 = seleccionActual27;
            var status28 = seleccionActual28;
            var status29 = seleccionActual29;
            var status30 = seleccionActual30;
            var status31 = seleccionActual31;
            var status32 = seleccionActual32;
            var status33 = seleccionActual33;
            var status34 = seleccionActual34;
            var status35 = seleccionActual35;
            var status36 = seleccionActual36;
            var status37 = seleccionActual37;
            var status38 = seleccionActual38;
            var status39 = seleccionActual39;
            var status40 = seleccionActual40;
            var status41 = seleccionActual41;
            var status42 = seleccionActual42;
            Ext.net.DirectMethod.request({
                url: '@(Url.Action(Model.ACCION))',
                params: {
                    MODO: 'get',
                    persona: status,
                    pat: status2,
                    mat: status3,
                    nom: status4,
                    tdi: status5,
                    docide: status6,
                    docfis: status7,
                    tipmed: status8,
                    pais: status9,
                    depa: status10,
                    prov: status11,
                    dist: status12,
                    dire: status13,
                    orig: status14,
                    sexo: status15,
                    fecnac: status16,
                    estciv: status17,
                    tel: status18,
                    cel: status19,
                    tipdoc: status20,
                    docs: status21,
                    busq: status22,
                    nomcomp: status23,
                    corr: status24,
                    nivins: status25,
                    ranet: status26,
                    edad: status27,
                    lugnac: status28,
                    nac: status29,
                    codhc: status30,
                    codhcant: status31,
                    codhcsec: status32,
                    raza: status33,
                    rel: status34,
                    ubichc: status35,
                    codase: status36,
                    rutfot: status37,
                    fecIng: status38,
                    arelab: status39,
                    ocup: status40,
                    lugproc: status41,
                    tipalm: status42,
                    idWindow: "WindowSelecPersona"
                }
            });
        } else {
            Ext.Msg.alert('Debe Seleccionar un elemento.');
        }
    }

    function enviarSeleccionDirect(param1) {
        var status = param1.Persona;
        var status2 = param1.ApellidoPaterno;
        var status3 = param1.ApellidoMaterno;
        var status4 = param1.Nombres;
        var status5 = param1.TipoDocumentoIdentidad;
        var status6 = param1.DocumentoIdentidad;
        var status7 = param1.DocumentoFiscal;
        var status8 = param1.TipoMedico;
        var status9 = param1.Pais;
        var status10 = param1.Departamento;
        var status11 = param1.Provincia;
        var status12 = param1.CodigoPostal;
        var status13 = param1.Direccion;
        var status14 = param1.Origen;
        var status15 = param1.Sexo;
        var status16 = param1.FechaNacimiento;
        var status17 = param1.EstadoCivil;
        var status18 = param1.Telefono;
        var status19 = param1.Celular;
        var status20 = param1.TipoDocumento;
        var status21 = param1.Documento;
        var status22 = param1.Busqueda;
        var status23 = param1.NombreCompleto;
        var status24 = param1.CorreoElectronico;
        var status25 = param1.NivelInstruccion;
        var status26 = param1.rangoEtario;
        var status27 = param1.edad;
        var status28 = param1.LugarNacimiento;
        var status29 = param1.Nacionalidad;
        var status30 = param1.CodigoHC;
        var status31 = param1.CodigoHCAnterior;
        var status32 = param1.CodigoHCSecundario;
        var status33 = param1.Raza;
        var status34 = param1.Religion;
        var status35 = param1.UbicacionHHCC;
        var status36 = param1.CodigoAsegurado;
        var status37 = param1.RutaFoto;
        var status38 = param1.FechaIngreso;
        var status39 = param1.AreaLaboral;
        var status40 = param1.Ocupacion;
        var status41 = param1.LugarProcedencia;
        var status42 = param1.TipoAlmacenamiento;
        Ext.net.DirectMethod.request({
            url: '@(Url.Action(Model.ACCION))',
            params: {
                MODO: 'get',
                persona: status,
                pat: status2,
                mat: status3,
                nom: status4,
                tdi: status5,
                docide: status6,
                docfis: status7,
                tipmed: status8,
                pais: status9,
                depa: status10,
                prov: status11,
                dist: status12,
                dire: status13,
                orig: status14,
                sexo: status15,
                fecnac: status16,
                estciv: status17,
                tel: status18,
                cel: status19,
                tipdoc: status20,
                docs: status21,
                busq: status22,
                nomcomp: status23,
                corr: status24,
                nivins: status25,
                ranet: status26,
                edad: status27,
                lugnac: status28,
                nac: status29,
                codhc: status30,
                codhcant: status31,
                codhcsec: status32,
                raza: status33,
                rel: status34,
                ubichc: status35,
                codase: status36,
                rutfot: status37,
                fecIng: status38,
                arelab: status39,
                ocup: status40,
                lugproc: status41,
                tipalm: status42,
                idWindow: "WindowSelecPersona"
            }
        });
    }

    var varTipoBuscar = "LOAD";
    var accionBuscarFiltroPersona = function (tipo) {
        varTipoBuscar = tipo;
        App.GridPanel2.getStore().reload();
        varTipoBuscar = 'LOAD';
    };

    var changeEstado = function (value) {
        var template = '<span style="color:{0};">{1}</span>';
        if (value == 'A') {
            return Ext.String.format(template, COLOR_BLUE01, "Activo");
        }
        if (value == 'I') {
            return Ext.String.format(template, COLOR_RED01, "Inactivo");
        }
    };
</script>

@(Html.X().Window()
    .Width(450)
    .Height(500)
    .Maximizable(true)
    .Modal(true)
    .OnEsc("false")
    .AutoScroll(true)
    .Layout(LayoutType.Fit)
    .CloseAction(CloseAction.Destroy)
    .Icon(Icon.ApplicationForm)
    .ID("WindowSelecPersona")
    .Title("Seleccionar Personas")
    .Padding(4)
    .TopBar(
        X.Toolbar()
                                     .Height(30)
                                     .Items(
                                      X.Button().Border(true).Text("Buscar").Icon(Icon.Find).Handler("accionBuscarFiltroPersona('FILTRO');"),
                                        X.ToolbarFill(),
                                        X.Button()
                                            .Text("Aceptar")
                                            .Icon(Icon.Accept)
                                    .Handler("enviarSeleccion(App.GridPanel2.getSelectionSubmit().getSelectionModelField().getValue());")

                                                 ,
                                        X.Button()
                                            .Text("Cancelar")
                                            .Icon(Icon.Cancel)
                                            .Handler("App.WindowSelecPersona.close()")  //modificado 20180129
                                             //.DirectEvents(de =>
                                             // {
                                             //     de.Click.Url = Url.Action("cerrarWindow");
                                             //     de.Click.ExtraParams.Add(new Parameter("id", "WindowSelecPersona", ParameterMode.Value));
                                             // })
                                         )

    )
    .Items(
                      X.GridPanel()
                            .Border(false)
                            .Scroll(ScrollMode.Both)
                            .AutoScroll(true)
                            .ID("GridPanel2")

                            .Margins("0 0 0 0")
                            .TopBar(
                                        X.Toolbar()
                                        .Items(
                                            X.TextField()
                                                .FieldLabel("Nombre").ID("tfBuscarDesc"),
                                            X.ToolbarFill()
                                        )
                                    )

                            .Store(store => store.Add(
                                     Html.X().Store()
                                        .ID("Store2")
                                         .AutoLoad(true)
                                         .RemoteSort(false)
                                         .IsPagingStore(true)
                                         .RemotePaging(true)
                                         .PageSize(20)
                                         .Proxy(proxy => proxy.Add(Html.X().AjaxProxy()
                                            .Url("getGrillaPersonasPac")
                                                .Reader(reader => reader.Add(Html.X().JsonReader()
                                                .Root("data")
                                                .TotalProperty("total")
                                                .IDProperty("Persona"))))
                                                )
                                        .Parameters(ps =>

                                            ps.Add(
                                                new
                                                  {
                                                      persona = 0,
                                                      nombre = JRawValue.From("App.tfBuscarDesc.getValue()"),
                                                      tipoBuscar = JRawValue.From("varTipoBuscar") //AUX: para la accion
                                                  }
                                            )
                                        )
                                         .Model(model => model.Add(Html.X().Model()
                                                 .Fields(fields =>
                                                 {
                                                     fields.Add(Html.X().ModelField().Name("Persona"));
                                                     fields.Add(Html.X().ModelField().Name("NombreCompleto"));
                                                     fields.Add(Html.X().ModelField().Name("Observacion"));
                                                     fields.Add(Html.X().ModelField().Name("Estado"));

                                                     fields.Add(Html.X().ModelField().Name("ApellidoPaterno"));
                                                     fields.Add(Html.X().ModelField().Name("ApellidoMaterno"));
                                                     fields.Add(Html.X().ModelField().Name("Nombres"));
                                                     fields.Add(Html.X().ModelField().Name("TipoDocumentoIdentidad"));
                                                     fields.Add(Html.X().ModelField().Name("DocumentoIdentidad"));

                                                     fields.Add(Html.X().ModelField().Name("DocumentoFiscal"));
                                                     fields.Add(Html.X().ModelField().Name("TipoMedico"));
                                                     fields.Add(Html.X().ModelField().Name("Pais"));
                                                     fields.Add(Html.X().ModelField().Name("Departamento"));
                                                     fields.Add(Html.X().ModelField().Name("Provincia"));

                                                     fields.Add(Html.X().ModelField().Name("CodigoPostal"));
                                                     fields.Add(Html.X().ModelField().Name("Direccion"));
                                                     fields.Add(Html.X().ModelField().Name("Origen"));
                                                     fields.Add(Html.X().ModelField().Name("Sexo"));
                                                     fields.Add(Html.X().ModelField().Name("FechaNacimiento"));

                                                     fields.Add(Html.X().ModelField().Name("EstadoCivil"));
                                                     fields.Add(Html.X().ModelField().Name("Telefono"));
                                                     fields.Add(Html.X().ModelField().Name("Celular"));
                                                     fields.Add(Html.X().ModelField().Name("TipoDocumento"));
                                                     fields.Add(Html.X().ModelField().Name("Documento"));
                                                     fields.Add(Html.X().ModelField().Name("CodigoHC"));
                                                 }))
                                                )
                                              )
                                   )

                                .ColumnModel(columnModel =>
                                 {
                                     columnModel.Columns.Add(Html.X().Column().Text("Código").DataIndex("Persona").Width(65));
                                     columnModel.Columns.Add(Html.X().Column().Text("Nombre").DataIndex("NombreCompleto").Width(300));
                                     columnModel.Columns.Add(Html.X().Column().Text("Tipo Trabajador").DataIndex("Observacion").Width(150).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Estado").DataIndex("Estado").Width(100).Renderer("changeEstado"));

                                     columnModel.Columns.Add(Html.X().Column().Text("ApellidoPaterno").DataIndex("ApellidoPaterno").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("ApellidoMaterno").DataIndex("ApellidoMaterno").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Nombres").DataIndex("Nombres").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("TipoDocumentoIdentidad").DataIndex("TipoDocumentoIdentidad").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("DocumentoIdentidad").DataIndex("DocumentoIdentidad").Width(50).Hidden(true));

                                     columnModel.Columns.Add(Html.X().Column().Text("DocumentoFiscal").DataIndex("DocumentoFiscal").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("TipoMedico").DataIndex("TipoMedico").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Pais").DataIndex("Pais").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Despartamento").DataIndex("Departamento").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Provincia").DataIndex("Provincia").Width(50).Hidden(true));

                                     columnModel.Columns.Add(Html.X().Column().Text("CódigoPostal").DataIndex("CodigoPostal").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Dirección").DataIndex("Direccion").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Origen").DataIndex("Origen").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Sexo").DataIndex("Sexo").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("FechaNacimiento").DataIndex("FechaNacimiento").Width(50).Hidden(true));

                                     columnModel.Columns.Add(Html.X().Column().Text("EstadoCivil").DataIndex("EstadoCivil").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Telefono").DataIndex("Telefono").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Celular").DataIndex("Celular").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("TipoDocumento").DataIndex("TipoDocumento").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("Documentos").DataIndex("Documento").Width(50).Hidden(true));
                                     columnModel.Columns.Add(Html.X().Column().Text("CodigoHC").DataIndex("CodigoHC").Width(50).Hidden(true));
                                     
                                     
                                 })
                                 .View(Html.X().GridView().TrackOver(false))
                                 .Border(false)
                                 .Listeners(l => l.CellDblClick.Handler = "enviarSeleccionDirect(record.data);")
                                 .Listeners(l => l.CellClick.Handler = "setSeleccion(record.data);")
                                .BottomBar(bar => bar.Add(Html.X().PagingToolbar()
                                ))
    )
    .CloseAction(CloseAction.Destroy)
)
@(
 X.KeyNav().Target("WindowSelecPersona").Enter(a => a.Handler = "accionBuscarFiltroPersona('FILTRO');")
)
<a href="~/Reportes/rptReports/rptViewAntFisiologicoPediatricoFEsubrep.rpt">~/Reportes/rptReports/rptViewAntFisiologicoPediatricoFEsubrep.rpt</a>