@model SoluccionSalud.Entidades.Entidades.ENTITY_GLOBAL


@{
    ViewBag.Title = "";
    Layout = "";
    var X = Html.X();
}

<style type="text/css" >

    .x-tree-node-text {
        font-size: 11px;
        line-height: 13px;
        padding-left: 3px;        
        font-family: 'TTmed' !important;
        color: #060606;
    }



</style>

<script>
    var filterTree = function (tf, e) {
        var tree = tf.up("treepanel"),
            store = tree.store,
            logic = App.FilterLogic.getValue() ? tree : store,
            text = tf.getRawValue();

        logic.clearFilter();

        if (Ext.isEmpty(text, false)) {
            return;
        }

        if (e.getKey() === Ext.EventObject.ESC) {
            clearFilter();
        } else {
            var re = new RegExp(".*" + text + ".*", "i");

            logic.filterBy(function (node) {
                return re.test(node.data.text);
            });
        }
    };

    var clearFilter = function () {
        var field = this,
            tree = this.up("treepanel"),
            store = tree.store,
            logic = App.FilterLogic.getValue() ? tree : store;

        field.setValue("");
        logic.clearFilter(true);
        tree.getView().focus();
    };



</script>

<script>

    var nodeLoad = function (view, record, item, index, event) {
        
        
        var nodeId = record.data.id;
        var path = record.getPath('text', '/');  
    };
    var onItemCheck = function (item, checked) {

        msg("Item Check", 'You {1} the \'{0}\' menu item.', item.text, checked ? "checked" : "unchecked");
    };

    var filterPersonales = function (checkItem, checked) {
        var tree = App.TreeWest,
            regex;

        if (checked) {
            tree.clearFilter(true);
            regex = new RegExp("<span>&nbsp;</span>");
            tree.filterBy(function (node) {
                return regex.test(node.data.text);
            });
        } else {
            tree.clearFilter(true);
        }
    };

    function LoadFormatos(container, text) {
        var cod = text;
        Ext.net.DirectMethod.request({
            url: '@(Url.Action("LoadFormatos"))',
            params: {
                text: cod,
                containerId: container
            }
        });
    };

    function DoSave() {
        return;
    };
    function DoCancel() {
     
    };
</script>
@(
 Html.X().TreePanel()
        //.Title("Procesos Salud")
        //.Icon(Icon.World)
            .Height(500)
            .Width(200)
            .Border(true)
            .ID("TreeWest")  
            .TopBar(
                  new Toolbar
                  {
                      Items =
                    {
                        new TriggerField
                        {
                            ID = "SearchField",
                            AutoFocus = true,
                            EnableKeyEvents = true,
                            Flex = 1,
                            EmptyText = "Filter Procesos...",
                            Triggers =
                            {
                                new FieldTrigger
                                {
                                    HideTrigger = true,
                                    Icon = TriggerIcon.Clear
                                }
                            }
                        },
                        new Button
                        {
                            Icon = Icon.Cog,
                            ToolTip = "Perfiles",
                            Menu =
                            {
                                new Menu
                                {
                                    Items =
                                    {

                                        new CheckMenuItem
                                        {
                                            Text = "Opc. Personales",
                                             //CheckHandler = "function (item, checked) { App.direct.ChangeScriptMode(checked); }",
                                             Hidden = false
                                        },
                                        new CheckMenuItem
                                        {
                                            Text = "Opc. Perfil",
                                           // CheckHandler = "onItemCheck",
                                            Hidden = false
                                        },
                                        new CheckMenuItem
                                        {
                                            Text = "Opc. Corporativos",
                                           // CheckHandler = "onItemCheck",
                                            Hidden = false
                                        },
                                        new MenuSeparator(),
                                        new MenuItem
                                        {
                                        Text = "Aplicar",
                                        IconCls = "icon-collapse-all"
                                        //Handler = "this.up('treepanel').collapseAll(false);"
                                        }

                                    }
                                }

                            }
                        }
                    }

                  }

                )
            .Store(
                Html.X().TreeStore()
                    .Proxy(
                              Html.X().AjaxProxy().Url(Url.Action("ArbolBandejaMedico"))
                    )
            )
            .Root(
                    Html.X().Node().NodeID("3064").Text("BANDEJA DEL MEDICO").Expanded(true)
                   // Html.X().Node().NodeID("3064").Text((Model.PERFILACTUAL != null ? Model.PERFILACTUAL.Trim() : "Bandeja de Entrada"))
            )
                .Listeners(l =>
                {
                    l.CheckChange.Handler = "Ext.get(this.getView().getNode(item))[checked ? 'addCls' : 'removeCls']('complete')";

                    l.AfterRender.Handler = "this.getRootNode().expand(true);";
                    l.AfterRender.Delay = 50;
                })
            /*.Listeners(l =>
            {
                l.ItemClick.Handler = "loadCentral(record.data.id,'"+Model.indicadorAuxiliar+"' );";
                //l.ItemClick.Fn = "nodeLoad";                 
            })*/            
            .DirectEvents(ev =>
                        {                            
                            //ev.Select.Url = "HClinica/LoadCentral";
                            ev.Select.Url = "BandejaMedico/validarCambiosFormulario";                            
                            ev.Select.Method = HttpMethod.GET;
                            ev.Select.ExtraParams.Add(new
                                                {
                                                    text = JRawValue.From("record.data.id"),
                                                    containerId = "Center1"
                                                });
 
                        })
           .Listeners(l =>
            {                
                l.ItemClick.Fn = "nodeLoad";                
            })
)
