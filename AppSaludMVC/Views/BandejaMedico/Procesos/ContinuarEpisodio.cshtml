@model SoluccionSalud.Entidades.Entidades.VW_ATENCIONPACIENTE
@{
    ViewBag.Title = "";
    Layout = "";
    var X = Html.X();


}

<style>
    .bold-text {
        font-weight: bold;
        padding-left: 32px;
        margin-bottom: 2px;
        font-size: 110%;
    }
</style>

<script>    

    var COLOR_BLUE01 = "#284A89";
    var COLOR_RED01 = "#990000";
    var COLOR_GREEN01 = "#177506";
    var COLOR_GREEN02 = "#224239";
    var COLOR_YELLOW02 = "#D9A407";

    var changeEstado = function (value) {
        var template = '<span style="color:{0};">{1}</span>';
        if (value == 'CC')
            return Ext.String.format(template, COLOR_YELLOW02, "Pendiente");
        if (value == 'CA')
            return Ext.String.format(template, COLOR_BLUE01, "Atendido");
        if (value == 'AN')
            return Ext.String.format(template, COLOR_RED01, "Anulado");
        if (value == 'FI')
            return Ext.String.format(template, COLOR_GREEN01, "Firmado");
    };

    var changeEstadoOA = function (value) {
        var template = '<span style="color:{0};">{1}</span>';
        if (value == 1)
            return Ext.String.format(template, COLOR_RED01, "Anulado");
        if (value == 2)
            return Ext.String.format(template, COLOR_GREEN01, "En Atención");
        if (value == 3)
            return Ext.String.format(template, COLOR_BLUE01, "Atendido");
        if (value == 0)
            return Ext.String.format(template, COLOR_YELLOW02, "Pendiente");
    };

    var changeEpiClinico = function (value) {
        var template = '<span style="color:{0};">{1}</span>';
        return Ext.String.format(template, COLOR_GREEN02, "Epi. Clínico " + value);
    };
    var changeEpiAtencion = function (value) {
        var template = '<span style="color:{0};">{1}</span>';
        return Ext.String.format(template, COLOR_GREEN02, "Epi. Atención " + value);
    };
    
    var codOACont_aux = null;
    var valorModoCont_aux = null;
    function eventoAutenticacionContinuarPrevia(valores, codOA, empleado, tipoagente) {
        valorModoCont_aux = valores;
        codOACont_aux = codOA;
        if (empleado != 0 && tipoagente > 1) {
            EstadoClinicoContinuar(valores, codOA);
        } else {
            if (seleccionRecordActualCont != null) {
                var ACCION_ = '';
                if (valores == 'C') {
                    ACCION_ = 'NUEVO';
                } else if (valores == 'M') {
                    ACCION_ = 'UPDATE';
                } else if (valores == 'V') {
                    ACCION_ = 'VER';
                }
                var model = seleccionRecordActualCont.data;
                Ext.net.DirectMethod.request({
                    url: '@(Url.Action("AutenticacionAdicional"))',
                    params: {
                        MODO: ACCION_,
                        tipotrab: 'MEDICO',
                        campoEvento: 'txtEventoAutenticaContinuarEpi'
                    }
                });
            }
        }
    }
    function eventoAutenticacionContinuarSuccess() {

        if (App.txtEventoAutenticaContinuarEpi.getValue() != '') {
            if (valorModoCont_aux != null && codOACont_aux != null) {

                EstadoClinicoContinuar(valorModoCont_aux, codOACont_aux);
                valorModoCont_aux = null;
                codOACont_aux = null;
            }
            App.txtEventoAutenticaContinuarEpi.setValue('');
        }
    }


    function EstadoClinicoContinuar(valores, codOA) {        
        if (seleccionRecordActualCont != null) {
            var model = seleccionRecordActualCont.data;
            var ArrayList = new Array();
            var SS_HC_EpisodioAtencion = {
                UnidadReplicacion: model.UnidadReplicacion,
                IdPaciente: model.IdPaciente,
                EpisodioClinico: model.EpisodioClinico,
                IdEpisodioAtencion: model.IdEpisodioAtencion,
                EpisodioAtencion: model.EpisodioAtencion,
                CodigoOA: codOA,
                Estado: model.Estado,
                TipoAtencion: model.TipoAtencion,
                IdOrdenAtencion: model.IdOrdenAtencion,
                LineaOrdenAtencion: model.LineaOrdenAtencion
            };
            ArrayList.push(SS_HC_EpisodioAtencion);
            Ext.net.DirectMethod.request({
                url: '@(Url.Action("EstadoClinico"))',
                params: {
                    selection: ArrayList,
                    accion: "Continuar"
                }
            });
            ActivaUrlContinuar(valores);
        } else {
            Ext.Msg.show({
                title: "Advertencia",
                msg: "Debe Seleccionar una Atención.",
                icon: Ext.Msg.WARNING,
                minWidth: 200,
                buttons: Ext.Msg.OK
            });
        }
    }

    function ActivaUrlContinuar(valores) {
        if (seleccionRecordActualCont != null) {
            switch (valores) {
                case "C":
                    parent.window.location.href = ' @Url.Action("Index", "HClinica") ';
                    break;
                case "V":
                    parent.window.location.href = ' @Url.Action("Index", "HClinica") ';
                    break;
                case "M":
                    parent.window.location.href = ' @Url.Action("Index", "HClinica") ';
                    break;
                case "F":
                    break;
                default:
            }
        } else {
            Ext.Msg.show({
                title: "Advertencia",
                msg: "Debe Seleccionar una Atención.",
                icon: Ext.Msg.WARNING,
                minWidth: 200,
                buttons: Ext.Msg.OK
            });
        }
    };
    var eventoCheckFiltro = function (check, componente) {
        var checkAll = check.getValue();
        if (checkAll) {
            componente.setDisabled(true);
            componente.setValue(null);
        } else {
            componente.setDisabled(false);
        }
    };
    var GlobalSelect = false;
    var varTipoBuscar = "LOAD";

    var accionBuscarFiltroCont = function (tipo) {
        varTipoBuscar = tipo;
        App.GridPanelSelContinuar.getStore().reload();
        varTipoBuscar = 'LOAD';
    };

    var seleccionRecordActualCont = null;
    function setSeleccionRecordContinuar(record) {
        seleccionRecordActualCont = record;
    }

</script>


@(
  X.Window()
    .Width(780)
    .Height(480)
    .Maximizable(true)
    .Modal(true)
    .OnEsc("false")
    .AutoScroll(true)
    .Resizable(false) // 08/05/2019 agrego
    .Constrain(true)   // 08/05/2019 agrego
    .Layout(LayoutType.Fit)
    .CloseAction(CloseAction.Destroy)
    .Icon(Icon.ApplicationForm)
    .ID("WindowContinuarEpi")
    .Title("Episodios de Atenciones Generados" )
    .Padding(4)
     .TopBar(
             X.Toolbar()
                .Height(30)
                .Items(
                    X.Button()
                    .Text("Buscar")
                    .Icon(Icon.PageWhiteFind)
                    .Handler("accionBuscarFiltroCont('FILTRO');")
                    ,                
                    X.ToolbarFill(),
                    X.Button()
                            .Icon(Icon.ShapeSquareAdd)
                            .Text("Asignar Episodio")
                            .Handler("eventoAutenticacionContinuarPrevia('C','" + Model.CodigoOA + "'," + Model.Persona + "," + Model.IdPersonalSalud + ");")
                            //.Handler("EstadoClinicoContinuar('C','"+Model.CodigoOA+"');")                                                  
                         ,
                       
                         
                         X.Button().Text("Cancelar").Handler("App.WindowContinuarEpi.close();").Icon(Icon.Cancel)
                     )
                   )
            .Items(
                     X.Panel()
                        //.Title("Búsqueda por descripción")
                        .ID("EastPanelBienes")
                        .Border(false)
                        //.BodyPadding(0)
                        .Layout(LayoutType.VBox)
                        .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                        //.Icon(Icon.Find)
                        .Items(
                              X.FieldSet().Height(60)
                                    .ColumnWidth(0.4)
                                    .Title("Filtros")
      
                                    .MarginSpec("0 05 0 05")
                                    .Defaults(d =>
                                    {
                                        d.Add(new Parameter("LabelWidth", "90"));
                                        d.Add(new Parameter("DefaultAnchor", "100%"));
                                        d.Add(new Parameter("LabelAlign", "Left"));
                                    })
                                    .DefaultAnchor("100%")
                                    .FieldDefaults(d =>
                                    {
                                        d.LabelAlign = LabelAlign.Left;
                                    })
                                    .Items(
                                    //////

                                    Html.X().Container()
                                       .Layout(LayoutType.HBox)
                                       .Defaults(d =>
                                       {
                                           d.Add(new Parameter("LabelWidth", "110"));
                                       })
                                       .Items(
                                                X.TextField().ID("txtEventoAutenticaContinuarEpi").Hidden(true)
                                            .Listeners(l =>
                                            {
                                                l.Change.Handler = "eventoAutenticacionContinuarSuccess();";
                                            }) ,                                      
                                           X.Checkbox()
                                          .FieldLabel("Codigo OA")
                                          .ID("chOA_Cont")
                                           .Listeners(l => l.Change.Handler = "eventoCheckFiltro(App._Cont,App.txtCodigoOA_Cont);")
                                             .Checked(true),
                                              X.TextField()
                                            .Width(180)
                                            .ID("txtCodigoOA_Cont")
                                            .Disabled(true),
                                           X.Component().Width(30),
                                           X.Checkbox()
                                             .FieldLabel("Fecha Cita")
                                             .ID("chFechas_Cont")
                                              .Listeners(l => l.Change.Handler = @"var checkAll = #{chFechas_Cont}.getValue();
                                                    if(checkAll){
                                                        #{txtFecha1_Cont}.setDisabled(true);
                                                        #{txtFecha1_Cont}.setValue(null);
                                                        #{txtFecha2_Cont}.setDisabled(true);
                                                        #{txtFecha2_Cont}.setValue(null);
                                                    }else{
                                                        #{txtFecha1_Cont}.setDisabled(false);
                                                        #{txtFecha2_Cont}.setDisabled(false);
                                              }")
                                                 .Checked(true),
                                           X.DateField()
                                            .ID("txtFecha1_Cont")
                                                 .Width(75).Value((DateTime.Now.Day < 10 ? "0" : "") 
                                                 + DateTime.Now.Day +
                                                "/" + (DateTime.Now.Month < 10 ? "0" : "") + DateTime.Now.Month + "/" + DateTime.Now.Year)
                                                 .Disabled(true),
                                           X.DateField()
                                                .ID("txtFecha2_Cont")
                                                 .Width(75).Value((DateTime.Now.Day < 10 ? "0" : "") + DateTime.Now.Day +
                                                "/" + (DateTime.Now.Month < 10 ? "0" : "") + DateTime.Now.Month + "/" + DateTime.Now.Year)
                                                 .Disabled(true)
                                         ),                            
                                     Html.X().Container().Hidden(true)
                                       .Layout(LayoutType.HBox)
                                       .Defaults(d =>
                                       {
                                           d.Add(new Parameter("LabelWidth", "110"));
                                       })
                                       .Items(
                                                X.Checkbox()
                                                 .FieldLabel("Paciente")
                                                 .ID("chPaciente_Cont")
                                                 .Listeners(l => l.Change.Handler = "eventoCheckFiltro(App.chPaciente_Cont,App.txtPaciente_Cont);")
                                                 .Checked(true),
                                               X.TextField()
                                                     .ID("txtPaciente_Cont")                
                                                 .Disabled(true)
                                                 /*,
                                              X.Component().Width(30),
                                                X.Checkbox()
                                                 .FieldLabel("Estado de Episodio")
                                                 .ID("chkTipoConsulta")
                                                .Listeners(l => l.Change.Handler = "eventoCheckFiltro(App.chkTipoConsulta,App.cmbTipoConsulta);")                                                                                                                   
                                                 .Checked(true),                                                
                                               X.ComboBox()
                                                 .ID("cmbTipoConsulta")
                                                 .Width(220)
                                                 .Items(
                                                    new ListItem("Anulado", 1), //CA -AT
                                                    new ListItem("En Atención", 2), //CC -PE
                                                    new ListItem("Atendido", 3),
                                                    new ListItem("Pendiente", 0)
                                                  )
                                                 .Disabled(true)*/
                                       )                                                                        
                                    )
                                    ,
                                   //Html.X().Panel().Title("sasas").Height(200)
                                    
                                    Html.X().GridPanel().Flex(1)
                                      .Title("Listado de Atenciones: "+Model.NombreCompleto+" - Nuevo Cód. OA: "+Model.CodigoOA)
                                        .Scroll(ScrollMode.Both)
                                            .AutoScroll(true)
                                            .Layout(LayoutType.Anchor)

                                                     .Anchor("100% 100%")

                                                    .ID("GridPanelSelContinuar")

                                                    .Margins("0 0 2 2")
                                                    .Border(false)

                                                   .Store(store => store.Add(
                                                       Html.X().Store()
                                                            .ID("StoreSelContinuar")

                                                   .AutoLoad(true)
                                                   .RemoteSort(false)
                                                   .IsPagingStore(true)
                                                   .RemotePaging(true)
                                                   .PageSize(10)

                                                   .Proxy(proxy => proxy.Add(Html.X().AjaxProxy()
                                                                           .Url("GrillaListadoAtencionPacientesContinuar")
                                                                       .Reader(reader => reader.Add(Html.X().JsonReader()
                                                                                                              .Root("data")
                                                                                                              .TotalProperty("total")
                                                                                                                  .IDProperty("Persona")))))

                                                    .Parameters(ps =>
                                                    ps.Add(
                                                            new
                                                            {
                                                                //start = 0,
                                                                //limit = 5,                                                            
                                                                txtFecha1 = JRawValue.From("App.txtFecha1_Cont.getValue()"),
                                                                txtFecha2 = JRawValue.From("App.txtFecha2_Cont.getValue()"),
                                                                txtCodigoOA = JRawValue.From("App.txtCodigoOA_Cont.getValue()"),
                                                                txtPaciente = JRawValue.From("App.txtPaciente_Cont.getValue()"),
                                                                tipoConsulta = "CONTINUAR",
                                                                //tipoConsulta = JRawValue.From("App.cmbTipoConsulta.getValue()"),
                                                                tipoEstado=2,
                                                                idPaciente = Model.IdPaciente,
                                                                //tipoEstado = JRawValue.From("App.cmbTipoConsulta_Cont.getValue()"),
                                                                tipoBuscar = JRawValue.From("varTipoBuscar")

                                                            }
                                                        )
                                                    )
                                                    .Model(model => model.Add(Html.X().Model()
                                                                   .Fields(fields =>
                                                                   {

                                                                       fields.Add(Html.X().ModelField().Name("Persona").Type(ModelFieldType.Int));
                                                                       fields.Add(Html.X().ModelField().Name("personanew").Type(ModelFieldType.Int));
                                                                       fields.Add(Html.X().ModelField().Name("PersonaAnt").Type(ModelFieldType.String));
                                                                       fields.Add(Html.X().ModelField().Name("IdPaciente").Type(ModelFieldType.Int));
                                                                       fields.Add(Html.X().ModelField().Name("FechaAtencion"));
                                                                       fields.Add(Html.X().ModelField().Name("FecIniDiscamec"));
                                                                       fields.Add(Html.X().ModelField().Name("FecFinDiscamec"));
                                                                       fields.Add(Html.X().ModelField().Name("CodigoOA"));
                                                                       fields.Add(Html.X().ModelField().Name("TipoPaciente"));
                                                                       fields.Add(Html.X().ModelField().Name("CodigoHC"));
                                                                       fields.Add(Html.X().ModelField().Name("NombreCompleto"));
                                                                       fields.Add(Html.X().ModelField().Name("EpisodioClinico"));
                                                                       fields.Add(Html.X().ModelField().Name("IdEpisodioAtencion"));
                                                                       fields.Add(Html.X().ModelField().Name("Servicio"));
                                                                       fields.Add(Html.X().ModelField().Name("Estado"));
                                                                       fields.Add(Html.X().ModelField().Name("TipoPaciente"));
                                                                       fields.Add(Html.X().ModelField().Name("EsPaciente"));
                                                                       fields.Add(Html.X().ModelField().Name("TipoAtencion"));
                                                                       fields.Add(Html.X().ModelField().Name("Version"));
                                                                       fields.Add(Html.X().ModelField().Name("Cargo"));
                                                                       fields.Add(Html.X().ModelField().Name("UnidadReplicacion"));
                                                                       fields.Add(Html.X().ModelField().Name("EpisodioAtencion"));
                                                                       fields.Add(Html.X().ModelField().Name("ObservacionOrden"));
                                                                       fields.Add(Html.X().ModelField().Name("IdTipoOrden"));
                                                                       fields.Add(Html.X().ModelField().Name("IdOrdenAtencion"));
                                                                       fields.Add(Html.X().ModelField().Name("LineaOrdenAtencion"));
                                                                       
                                                                       
                                                                       
                                                                       
                                                                   }
                                                                   )
                                                                   ))))


                                                   .ColumnModel(columnModel =>
                                                   {
                                                       columnModel.Columns.Add(Html.X().RowNumbererColumn());
                                                       columnModel.Columns.Add(Html.X().Column().Text("ID").DataIndex("Persona").Hidden(true));
                                                       columnModel.Columns.Add(Html.X().Column().Text("IDs").DataIndex("personanew").Hidden(true));
                                                       columnModel.Columns.Add(Html.X().Column().Text("ID").DataIndex("PersonaAnt").Width(150).Hidden(true));
                                                       columnModel.Columns.Add(Html.X().Column().Text("IdPaciente").DataIndex("IdPaciente").Width(150).Hidden(true));

                                                       //columnModel.Columns.Add(Html.X().Column().Text("Paciente").DataIndex("NombreCompleto").Width(210));
                                                       columnModel.Columns.Add(Html.X().Column().Text("Epidosio Clínico").DataIndex("EpisodioClinico").Width(95)
                                                           .StyleSpec("background: #97B6AD")
                                                           .Renderer("changeEpiClinico")
                                                           );
                                                       columnModel.Columns.Add(Html.X().Column().Text("Episodio Atención").DataIndex("EpisodioAtencion").Width(95)
                                                           .StyleSpec("background: #97B6AD")
                                                           .Renderer("changeEpiAtencion")
                                                           );
                                                       columnModel.Columns.Add(Html.X().DateColumn().Text("Fecha Atención").DataIndex("FechaAtencion").Width(100).Format("dd/MM/yyyy HH:mm"));

                                                       columnModel.Columns.Add(Html.X().DateColumn().Text("Hora Inicio").DataIndex("FecIniDiscamec").Width(70).Format("HH:mm:ss").Hidden(true));
                                                       columnModel.Columns.Add(Html.X().DateColumn().Text("Hora Fin").DataIndex("FecFinDiscamec").Width(70).Format("HH:mm:ss").Hidden(true));

                                                       columnModel.Columns.Add(Html.X().Column().Text("Codigo OA").DataIndex("CodigoOA").Width(80));
                                                       //columnModel.Columns.Add(Html.X().Column().Text("Tipo Paciente").DataIndex("EsPaciente").Flex(1));
                                                       columnModel.Columns.Add(Html.X().Column().Text("Diagnóstico").DataIndex("Cargo").Width(160));
                                                       columnModel.Columns.Add(Html.X().Column().Text("Estado").DataIndex("Estado").Width(90)
                                                           .Renderer("changeEstadoOA")
                                                        );                                                       
                                                       columnModel.Columns.Add(Html.X().Column().Text("Tipo Atencion").DataIndex("ObservacionOrden").Width(100));
                                                       columnModel.Columns.Add(Html.X().Column().Text("Tipo Atencion").DataIndex("TipoAtencion").Flex(1).Hidden(true));                                                       
                                                                                                              
                                                       columnModel.Columns.Add(Html.X().Column().Text("Estado Consulta").DataIndex("Servicio").Flex(1)//Width(90)                                                                                              
                                                           .Renderer("changeEstado").Hidden(true)
                                                        );

                                                   })
                                                   .BottomBar(bar => bar.Add(Html.X().PagingToolbar()
                                                                                     .DisplayInfo(true)
                                                       //.DisplayMsg("Displaying customers {0} - {1} of {2}")
                                                                                     ))
                                    //.View(view => view.Add(Html.X().GridView().TrackOver(false)))
                                                   .Border(false)
                                                   .Listeners(l => l.CellClick.Handler = "setSeleccionRecordContinuar(record);") 
                                     
                              )                            
                              /*,
                                                                  
                            */    
                        )
                )


