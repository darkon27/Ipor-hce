@using Region = Ext.Net.Region
@model SoluccionSalud.Entidades.Entidades.USUARIO

@{
    ViewBag.Title = "Portal - Ext.NET MVC Examples";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
    var X = Html.X();
}
@section cabecera
{
    <script>

    var varTipoBuscar = "LOAD";

    var seleccionActual = null;
    function setSeleccion(param1) {
        seleccionActual = param1;
    }
    var Valores;
    var template = '<span style="color:{0};">{1}</span>';

    var COLOR_BLUE01 = "#284A89";
    var COLOR_RED01 = "#990000";
    var COLOR_GREEN01 = "#177506";
    var COLOR_YELLOW02 = "#D9A407";

    var changeEstado = function (value) {
        var template = '<span style="color:{0};">{1}</span>';
            if (value == 'A')
                return Ext.String.format(template, COLOR_BLUE01, "Activo");
            if (value == 'I')
                return Ext.String.format(template, COLOR_RED01, "Inactivo");
        };

    var pctChange = function (value) {
        return Ext.String.format(template, (value > 0) ? "green" : "red", value + "%");
    };
    // funciones relacionadas a al GRILLA
    var onSuccess = function (grid, data) {
        grid.show();
        grid.getStore().loadData(data);
    };

    function deleteSelected(grid) {
        var store = grid.store,
           records = grid.selModel.getSelection();
        store.remove(records);
        App.Window1.AutoDestroy(true);

    };
   function nuevo() {
        Ext.net.DirectMethod.request({
            url: '@(Url.Action("AsignarAutorizacionesRegistro"))',
            params: {
                MODO: 'NUEVO',
                usuario: null
            }
        });
    };
    function modificarSelected(grid) {
            if (seleccionActual != null) {
                var status = seleccionActual;
                Ext.net.DirectMethod.request({
                    url: '@(Url.Action("AsignarAutorizacionesRegistro"))',
                    params: {
                        MODO: 'UPDATE',
                        usuario: status
                    }
                });
            } else {
                Ext.Msg.show({
                    title: "Advertencia",
                    msg: "Debe Seleccionar un Usuario.",
                    icon: Ext.Msg.WARNING,
                    minWidth: 200,
                    buttons: Ext.Msg.OK
                });
            }
        }
        function eliminarSelected(grid) {
            if (seleccionActual != null) {
                var status = seleccionActual;
                Ext.net.DirectMethod.request({
                    url: '@(Url.Action("AsignarAutorizacionesRegistro"))',
                    params: {
                        MODO: 'DELETE',
                        usuario: status
                    }
                });
            } else {
                Ext.Msg.show({
                    title: "Advertencia",
                    msg: "Debe Seleccionar un Usuario.",
                    icon: Ext.Msg.WARNING,
                    minWidth: 200,
                    buttons: Ext.Msg.OK
                });
            }
        }

        function verSelected() {
            eventoVerSelected(seleccionActual);
        }
        function eventoVerSelected(param1) {
            if (param1 != null) {
                var status = param1;
                Ext.net.DirectMethod.request({
                    url: '@(Url.Action("AsignarAutorizacionesRegistro"))',
                    params: {
                        MODO: 'VER',
                        usuario: status
                    }
                });
            } else {
                Ext.Msg.show({
                    title: "Advertencia",
                    msg: "Debe Seleccionar un Elemento.",
                    icon: Ext.Msg.WARNING,
                    minWidth: 200,
                    buttons: Ext.Msg.OK
                });
            }
        }

        var accionBuscarFiltro = function (tipo) {
            varTipoBuscar = tipo;
            App.GridPanel1.getStore().reload();
            varTipoBuscar = 'LOAD';
        };

        var accionFinal = function (btn) {
            App.GridPanel1.getStore().reload();
        };
    </script>
}

@section cuerpo
{
    @(
 Html.X().Viewport()
        .AutoScroll(true)
        .Layout(LayoutType.Border)
        .Items(
           X.Panel()
              .Title("Listado de Autorizaciones  de usuario")
        //.Header(false)
              .Border(false)
              .Region(Region.North)
              .Split(true)
             .Collapsible(true)
        //.Header(false)
              .Height(120)
              .TopBar(
                         X.Toolbar()
                            .Height(30)
                                    .Items(
                           X.Button()
                            .Text("Buscar")
                            .Icon(Icon.Find)
                                .Handler("accionBuscarFiltro('FILTRO');"),
                                    X.ToolbarSeparator(),
                                    X.ToolbarSpacer(),    
                                        X.Button()
                                            .Text("Nuevo")
                                            .Icon(Icon.ApplicationFormAdd)
                                            .Handler("nuevo(); "),
                                        X.Button()
                                            .Text("Modificar")
                                            .Icon(Icon.ApplicationFormEdit)
                                            .Handler("modificarSelected();")
                                                 ,
                                        X.Button()
                                            .Text("Eliminar")
                                            .Icon(Icon.ApplicationFormDelete)
                                        .Handler("eliminarSelected();"),
                                           X.ToolbarSeparator(),
                                            X.Button()
                                                .Text("Ver")
                                                .Icon(Icon.ApplicationViewDetail)
                                                .Handler("verSelected();"),
                                         X.ToolbarFill()
                                      )
              )
             .Items(X.Panel()
                    .Layout(LayoutType.HBox)
                    .BodyPadding(5)
                    .Border(false)
                    .MarginSpec("1 20 1 1")
                    .Items(
                            X.FieldSet()
                                .Flex(1)
                                .Title("Filtros")
                                .MarginSpec("5 5 5 5")
                                .Defaults(d =>
                                {
                                    d.Add(new Parameter("LabelWidth", "120"));
                                })
                                    .Items(Html.X().Container().Layout(LayoutType.HBox)
                                   .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top })
                                   .Items(
                                       X.Checkbox()
                                               .FieldLabel("Descripción")
                                                     .ID("Desc")
                                                          .Listeners(l => l.Change.Handler = @"var checkAll = #{Desc}.getValue();
                                                if(checkAll){
                                                    #{tfBuscar}.setDisabled(true);
                                                    #{tfBuscar}.setValue(null);
                                                }else{
                                                    #{tfBuscar}.setDisabled(false);
                                                }")
                                      .Checked(false),
                                    X.TextField()
                                    .ID("tfBuscar")
                                    .Name("buscar")
                                    .FieldLabel("")
                                ))
                                
        /* .DirectEvents(directEvents =>
          {
              directEvents.Click.Url = "getGrillaListadoUsuariosAutorizacion";
              //directEvents.Click.Url = "../Controllers/Maestros/Usuario/UsuarioController/GrillaListadoPacientes";

              directEvents.Click.CleanRequest = true;
              directEvents.Click.Method = HttpMethod.POST;
              // directEvents.Click.Confirmation.ConfirmRequest = true;
              directEvents.Click.Success = "onSuccess(App.GridPanel1, result.data);";
              directEvents.Click.EventMask.ShowMask = true;
              directEvents.Click.EventMask.Msg = "Espere un momento...";
              directEvents.Click.ExtraParams.Add(new
              {
                  start = 0,
                  limit = 10,
                  /*
                  txtHC = JRawValue.From("App.txtHC.getValue()"),
                  txtFecha1 = JRawValue.From("App.txtFecha1.getValue()"),
                  txtFecha2 = JRawValue.From("App.txtFecha2.getValue()"),
                  txtHCA = JRawValue.From("App.txtHCA.getValue()"),
                  txtCodigoOA = JRawValue.From("App.txtCodigoOA.getValue()"),

                  txtUsuario = JRawValue.From("App.tfBuscar.getValue()")

              });
          }
         ) */
                    )
             ),
            X.Panel()
        //.BaseCls("x-plain").Flex(1)
                .Region(Region.Center)
        //.AutoScroll(true)
        //.Scroll(ScrollMode.Both)
                .ItemID("center")
        //.Height(600)
               .Header(false)
               .Border(false)
               .Items(
                   X.GridPanel()
                        .Border(false)
                        .Scroll(ScrollMode.Both)
                        .AutoScroll(true)
                        .ID("GridPanel1")
        // .DefaultAnchor("100%")
        //.Anchor("100% 100%")
                        .Margins("0 0 0 0")
        ///CONFIGURAR EL STORE
                        .Store(store => store.Add(
                                 Html.X().Store()
                                     .ID("Store1")
                                     .AutoLoad(true)
                                     .RemoteSort(false)
                                     .IsPagingStore(true)
                                     .RemotePaging(true)
                                     .PageSize(10)////CAMBIAR DE ACUERDO A ALGÚN UN CRITERIO
                                     .Proxy(proxy => proxy.Add(Html.X().AjaxProxy()
                                                .Url("getGrillaListadoUsuariosAutorizacion")
                                         //.Url("../LPacientes/GrillaListadoPacientes")
                                         //.Url("../Controllers/Maestros/Usuario/UsuarioController/GrillaListadoPacientes")
                                            .Reader(reader => reader.Add(Html.X().JsonReader()
                                            .Root("data")
                                            .TotalProperty("total")
                                                .IDProperty("USUARIO1"))))
                                            )

                            // .Writer(writer => writer.Add(Html.X().JsonWriter().AllowSingle(true)))

                                     .Model(model => model.Add(Html.X().Model()
                                             .Fields(fields =>
                                             {
                                                 fields.Add(Html.X().ModelField().Name("USUARIO1"));
                                                 fields.Add(Html.X().ModelField().Name("NOMBRE"));
                                                 fields.Add(Html.X().ModelField().Name("ESTADO"));
                                                 fields.Add(Html.X().ModelField().Name("USUARIOPERFIL"));
                                             }))
                                            )
                                          )
                               )

                            ///CONFIGURAR LAS COLUMNAS
                            .ColumnModel(columnModel =>
                             {
                                 columnModel.Columns.Add(Html.X().Column().Text("ID").DataIndex("USUARIO1").Width(150));
                                 columnModel.Columns.Add(Html.X().Column().Text("Usuario").DataIndex("NOMBRE").Width(300));
                                 columnModel.Columns.Add(Html.X().Column().Text("Estado").DataIndex("ESTADO").Width(100)
                                        .Renderer("changeEstado")
                                         );
                                 columnModel.Columns.Add(Html.X().Column().Text("Perfil/Usuario").DataIndex("USUARIOPERFIL").Width(100));
                             })
                             .View(Html.X().GridView().TrackOver(false))
        //.View(view => view.Add(Html.X().GridView().TrackOver(false)))
                             .Border(false)
                             .Listeners(l => l.CellClick
                             .Handler = "setSeleccion(record.data.USUARIO1,record.data.USUARIOPERFIL);")

                            .BottomBar(bar => bar.Add(
                                Html.X().PagingToolbar()
                                //.DisplayInfo(true)
                                .DisplayMsg("Mostrando {0} - {1} de {2}"))
                            ))

                           /*.TopBar(X.Panel()
                                .Height(50)
                                .Title("Buscador")
                                .Border(false)
                            )   */
                )
        //     ,
        //X.Panel()
        //    .Region(Region.South)
        //     //.Split(true)
        //     //.Collapsible(true)
        //     .Header(false)
        //     .Height(30)
        //     .Border(false)
        //     //.BodyPadding(6)
        //     //.Html("South")
        //     .Items(
        //         X.PagingToolbar()
        //         .DisplayInfo(true)
        //         .DisplayMsg("Displaying customers {0} - {1} of {2}")
        //                         //.Height(40)

           //     )

    )
    )

}