@model SoluccionSalud.Entidades.Entidades.SS_HC_CuidadoPreventivo

@{
    var X = Html.X();
}

<script>

    var template = '<span style="color:{0};">{1}</span>';
    var COLOR_BLUE01 = "#284A89";
    var COLOR_RED01 = "#990000";

    var changeEstado = function (value) {
        var template = '<span style="color:{0};">{1}</span>';
        if (value == 0)
            return Ext.String.format(template, COLOR_BLUE01, "Activo");
        if (value == 1)
            return Ext.String.format(template, COLOR_RED01, "Inactivo");
    };

    var seleccionActual = null;
    var seleccionActualDesc = null;
    var seleccionCodPadre = null;

    function setSeleccion(param1, param2,param3) {
        seleccionActual = param1;
        seleccionActualDesc = param2;
        seleccionCodPadre = param3;
    }


    function enviarSeleccion(grid) {
        if (seleccionActual != null) {
            var status = seleccionActual;
            var status2 = seleccionActualDesc;
            var status3 = seleccionCodPadre;
            Ext.net.DirectMethod.request({
                url: '@(Url.Action(Model.Accion))',
                params: {
                    MODO: 'get',
                    id: status,
                    descripcion: status2,      
                    codpadre: status3,
                    idWindow: "WindowSelecCuidadoPreventivo"
              
                }
            });
        } else {
            Ext.Msg.alert('Debe Seleccionar un elemento.');
        }

    }

    function enviarSeleccionDirect(param1, param2, param3) {
        var status = param1;
        var status2 = param2;
        var status3 = param3;
        Ext.net.DirectMethod.request({
            url: '@(Url.Action(Model.Accion))',
            params: {
                MODO: 'get',
                id: status,
                descripcion: status2,
                codpadre: status3,
                idWindow: "WindowSelecCuidadoPreventivo"
               
            }
        });
    }

    var eventoCheckFiltro = function (check, componente) {
        var checkAll = check.getValue();
        if (checkAll) {
            componente.setDisabled(true);
            componente.setValue(null);
        } else {
            componente.setDisabled(false);
        }
    };

    var accionBuscarFiltroCuiPre = function (tipo) {
        varTipoBuscar = tipo;
        App.GridPanelSelCuidadoPreventivo.getStore().reload();
        varTipoBuscar = 'LOAD';
    };
</script>

@(Html.X().Window()
    .Width(450)
    .Height(450)
    .Maximizable(true)
    .Modal(true)
    .OnEsc("false")
    .AutoScroll(true)
    .Layout(LayoutType.Fit)
    .CloseAction(CloseAction.Destroy)
    .Icon(Icon.ApplicationForm)
        .ID("WindowSelecCuidadoPreventivo")
    .Title("Seleccionar Cuidado Preventivo Padre")
    .Padding(4)
        .TopBar(
                                         X.Toolbar()
                                         .Height(30)
                                             .Items(
                                           X.Button()
                                            .Text("Buscar")
                                                .Icon(Icon.Find)
                                                 .Handler("accionBuscarFiltroCuiPre('FILTRO');"),
                                                        X.ToolbarFill(),
                                            X.Button()
                                                .Text("Aceptar")
                                                .Icon(Icon.Accept)
                                                .Handler("enviarSeleccion(App.GridPanelSelCuidadoPreventivo.getSelectionSubmit().getSelectionModelField().getValue());")

                                                     ,
                                            X.Button()
                                                .Text("Cancelar")
                                                .Icon(Icon.Cancel)
                                                 .DirectEvents(de =>
                                                  {
                                                      de.Click.Url = Url.Action("cerrarWindow");

                                                      de.Click.ExtraParams.Add(new Parameter(
                                                            "id", "WindowSelecCuidadoPreventivo", ParameterMode.Value));

                                                  }),
                                          X.ToolbarSpacer(20)     
                                             )

                                           )

                                   .Items(
                                        X.GridPanel()

                                           .TopBar(
                                                X.Toolbar()
                                            .Items(
                                               X.Checkbox().FieldLabel("Descripción").ID("chkId").Checked(true)
                                                   .Handler("eventoCheckFiltro(App.chkId,App.tfBuscarDescc);").LabelWidth(70),
                                            X.TextField()
                                                .ID("tfBuscarDescc").Disabled(true)
                                            .FieldLabel(""),
                                            X.ToolbarFill()
                                        )
                                        )                       
                        
                            .Border(false)
                            .Scroll(ScrollMode.Both)
                            .AutoScroll(true)
                            .ID("GridPanelSelCuidadoPreventivo")

                            .Margins("0 0 0 0")
                        .Store(store => store.Add(
                                 Html.X().Store()
                                     .ID("StoreSelCuidadoPreventivo")
                                     .AutoLoad(true)
                                     .RemoteSort(false)
                                     .IsPagingStore(true)
                                     .RemotePaging(true)
                                     .PageSize(10)
                                   
                                   .Proxy(proxy => proxy.Add(Html.X().AjaxProxy()
                                                        .Url("getGrillaCuidadoPreventivo")
                                            .Reader(reader => reader.Add(Html.X().JsonReader()
                                            .Root("data")
                                            .TotalProperty("total")
                                                     .IDProperty("IdCuidadoPreventivo"))))
                                                )
                                                            .Parameters(ps =>
                                                                    ps.Add(new
                                                                            {
                                                                                descripcion = JRawValue.From("App.tfBuscarDescc.getValue()"),
                                                                                tipoBuscar = JRawValue.From("varTipoBuscar")
                                                                            })
                                                             )
                                     .Model(model => model.Add(Html.X().Model()
                                             .Fields(fields =>
                                             {
                                                 fields.Add(Html.X().ModelField().Name("IdCuidadoPreventivo"));
                                                 fields.Add(Html.X().ModelField().Name("Descripcion"));
                                                 fields.Add(Html.X().ModelField().Name("CodigoCuidadoPreventivoPadre"));
                                                 fields.Add(Html.X().ModelField().Name("CodigoCuidadoPreventivo"));
                                                 fields.Add(Html.X().ModelField().Name("Estado"));
                                             }))
                                            )
                                          )
                               )

                            ///CONFIGURAR LAS COLUMNAS
                            .ColumnModel(columnModel =>
                            {
                                columnModel.Columns.Add(Html.X().Column().Text("ID").DataIndex("IdCuidadoPreventivo").Width(50));
                                columnModel.Columns.Add(Html.X().Column().Text("Descripción").DataIndex("Descripcion").Width(270));
                                columnModel.Columns.Add(Html.X().Column().Text("Código").DataIndex("CodigoCuidadoPreventivo").Width(100));
                                columnModel.Columns.Add(Html.X().Column().Text("Estado").DataIndex("Estado").Width(80)
                                .Renderer("changeEstado"));
                                //.Renderer("changePerfil"));

                            })
                             .View(Html.X().GridView().TrackOver(false))
                                                              .Border(false)
                                .Listeners(l => l.CellDblClick
                                                    .Handler = "enviarSeleccionDirect(record.data.IdCuidadoPreventivo,record.data.Descripcion,record.data.CodigoCuidadoPreventivo);")
                                .Listeners(l => l.CellClick
                                                    .Handler = "setSeleccion(record.data.IdCuidadoPreventivo,record.data.Descripcion,record.data.CodigoCuidadoPreventivo);")
                                .BottomBar(bar => bar.Add(
                                    Html.X().PagingToolbar()

                                ))
                                )
                                 .CloseAction(CloseAction.Destroy)


                                 )
@(
 X.KeyNav()
    .Target("WindowSelecCuidadoPreventivo")
    .Enter(a => a.Handler = "accionBuscarFiltroCuiPre('FILTRO');")
)