//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using SoluccionSalud.SOA.Entidades;
namespace SoluccionSalud.SOA
{
    public partial class ClinicaElGolfEntities : DbContext
    {
        public ClinicaElGolfEntities()
            : base("name=ClinicaElGolfEntities")
        {
            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 300000;
            this.Configuration.LazyLoadingEnabled = false;
            this.Configuration.ProxyCreationEnabled = false;
            this.Configuration.AutoDetectChangesEnabled = true;
            Database.CommandTimeout = 300000;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<PersonaMast> PersonaMast { get; set; }
        public DbSet<VW_ATENCIONPACIENTE_GENERAL> VW_ATENCIONPACIENTE_GENERAL { get; set; }
        public DbSet<SS_CE_Triaje> SS_CE_Triaje { get; set; }
        public DbSet<SS_CE_TriajeAntecedentesAlergias> SS_CE_TriajeAntecedentesAlergias { get; set; }
        public DbSet<SS_CE_TriajeControl> SS_CE_TriajeControl { get; set; }
        public DbSet<SS_CE_TriajeFirma> SS_CE_TriajeFirma { get; set; }
    
        public virtual ObjectResult<VW_ATENCIONPACIENTE_GENERAL> USP_SS_HC_ATENCIONES_SOA(string tipoListado, string citaTipo, Nullable<System.DateTime> citaFecha, string origen, string nombreEspecialidad, string tipoPacienteNombre, string codigoOA, string cama, string tipoOrdenAtencionNombre, string codigoHC, string pacienteNombre, string medicoNombre, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> idHospitalizacion, Nullable<int> idCita, Nullable<int> idPaciente, Nullable<int> tipoPaciente, Nullable<int> tipoAtencion, Nullable<int> idEspecialidad, Nullable<int> idMedico, Nullable<int> tipoOrdenAtencion, string componente, string compania, string sucursal, string estadoPersona, Nullable<int> estadoEpiClinico, string unidadReplicacion, string unidadReplicacionEC, Nullable<long> idEpisodioAtencion, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> estadoEpiAtencion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string codigoHCAnterior, Nullable<int> indicadorCirugia, Nullable<int> indicadorExamenPrincipal, Nullable<int> indicadorSeguro, Nullable<int> modalidad, string sexo, string estadoCivil, string nivelInstruccion, string esPaciente, string esEmpresa, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_ATENCIONPACIENTE_GENERAL).Assembly);
    
            var tipoListadoParameter = tipoListado != null ?
                new ObjectParameter("tipoListado", tipoListado) :
                new ObjectParameter("tipoListado", typeof(string));
    
            var citaTipoParameter = citaTipo != null ?
                new ObjectParameter("CitaTipo", citaTipo) :
                new ObjectParameter("CitaTipo", typeof(string));
    
            var citaFechaParameter = citaFecha.HasValue ?
                new ObjectParameter("CitaFecha", citaFecha) :
                new ObjectParameter("CitaFecha", typeof(System.DateTime));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var nombreEspecialidadParameter = nombreEspecialidad != null ?
                new ObjectParameter("NombreEspecialidad", nombreEspecialidad) :
                new ObjectParameter("NombreEspecialidad", typeof(string));
    
            var tipoPacienteNombreParameter = tipoPacienteNombre != null ?
                new ObjectParameter("TipoPacienteNombre", tipoPacienteNombre) :
                new ObjectParameter("TipoPacienteNombre", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var camaParameter = cama != null ?
                new ObjectParameter("Cama", cama) :
                new ObjectParameter("Cama", typeof(string));
    
            var tipoOrdenAtencionNombreParameter = tipoOrdenAtencionNombre != null ?
                new ObjectParameter("TipoOrdenAtencionNombre", tipoOrdenAtencionNombre) :
                new ObjectParameter("TipoOrdenAtencionNombre", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var pacienteNombreParameter = pacienteNombre != null ?
                new ObjectParameter("PacienteNombre", pacienteNombre) :
                new ObjectParameter("PacienteNombre", typeof(string));
    
            var medicoNombreParameter = medicoNombre != null ?
                new ObjectParameter("MedicoNombre", medicoNombre) :
                new ObjectParameter("MedicoNombre", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var idHospitalizacionParameter = idHospitalizacion.HasValue ?
                new ObjectParameter("IdHospitalizacion", idHospitalizacion) :
                new ObjectParameter("IdHospitalizacion", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var estadoEpiClinicoParameter = estadoEpiClinico.HasValue ?
                new ObjectParameter("EstadoEpiClinico", estadoEpiClinico) :
                new ObjectParameter("EstadoEpiClinico", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var estadoEpiAtencionParameter = estadoEpiAtencion.HasValue ?
                new ObjectParameter("EstadoEpiAtencion", estadoEpiAtencion) :
                new ObjectParameter("EstadoEpiAtencion", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var indicadorCirugiaParameter = indicadorCirugia.HasValue ?
                new ObjectParameter("IndicadorCirugia", indicadorCirugia) :
                new ObjectParameter("IndicadorCirugia", typeof(int));
    
            var indicadorExamenPrincipalParameter = indicadorExamenPrincipal.HasValue ?
                new ObjectParameter("IndicadorExamenPrincipal", indicadorExamenPrincipal) :
                new ObjectParameter("IndicadorExamenPrincipal", typeof(int));
    
            var indicadorSeguroParameter = indicadorSeguro.HasValue ?
                new ObjectParameter("IndicadorSeguro", indicadorSeguro) :
                new ObjectParameter("IndicadorSeguro", typeof(int));
    
            var modalidadParameter = modalidad.HasValue ?
                new ObjectParameter("Modalidad", modalidad) :
                new ObjectParameter("Modalidad", typeof(int));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_ATENCIONPACIENTE_GENERAL>("USP_SS_HC_ATENCIONES_SOA", tipoListadoParameter, citaTipoParameter, citaFechaParameter, origenParameter, nombreEspecialidadParameter, tipoPacienteNombreParameter, codigoOAParameter, camaParameter, tipoOrdenAtencionNombreParameter, codigoHCParameter, pacienteNombreParameter, medicoNombreParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, idHospitalizacionParameter, idCitaParameter, idPacienteParameter, tipoPacienteParameter, tipoAtencionParameter, idEspecialidadParameter, idMedicoParameter, tipoOrdenAtencionParameter, componenteParameter, companiaParameter, sucursalParameter, estadoPersonaParameter, estadoEpiClinicoParameter, unidadReplicacionParameter, unidadReplicacionECParameter, idEpisodioAtencionParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, estadoEpiAtencionParameter, fechaInicioParameter, fechaFinParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, codigoHCAnteriorParameter, indicadorCirugiaParameter, indicadorExamenPrincipalParameter, indicadorSeguroParameter, modalidadParameter, sexoParameter, estadoCivilParameter, nivelInstruccionParameter, esPacienteParameter, esEmpresaParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<VW_ATENCIONPACIENTE_GENERAL> USP_SS_HC_ATENCIONES_SOA(string tipoListado, string citaTipo, Nullable<System.DateTime> citaFecha, string origen, string nombreEspecialidad, string tipoPacienteNombre, string codigoOA, string cama, string tipoOrdenAtencionNombre, string codigoHC, string pacienteNombre, string medicoNombre, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> idHospitalizacion, Nullable<int> idCita, Nullable<int> idPaciente, Nullable<int> tipoPaciente, Nullable<int> tipoAtencion, Nullable<int> idEspecialidad, Nullable<int> idMedico, Nullable<int> tipoOrdenAtencion, string componente, string compania, string sucursal, string estadoPersona, Nullable<int> estadoEpiClinico, string unidadReplicacion, string unidadReplicacionEC, Nullable<long> idEpisodioAtencion, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> estadoEpiAtencion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string codigoHCAnterior, Nullable<int> indicadorCirugia, Nullable<int> indicadorExamenPrincipal, Nullable<int> indicadorSeguro, Nullable<int> modalidad, string sexo, string estadoCivil, string nivelInstruccion, string esPaciente, string esEmpresa, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(VW_ATENCIONPACIENTE_GENERAL).Assembly);
    
            var tipoListadoParameter = tipoListado != null ?
                new ObjectParameter("tipoListado", tipoListado) :
                new ObjectParameter("tipoListado", typeof(string));
    
            var citaTipoParameter = citaTipo != null ?
                new ObjectParameter("CitaTipo", citaTipo) :
                new ObjectParameter("CitaTipo", typeof(string));
    
            var citaFechaParameter = citaFecha.HasValue ?
                new ObjectParameter("CitaFecha", citaFecha) :
                new ObjectParameter("CitaFecha", typeof(System.DateTime));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var nombreEspecialidadParameter = nombreEspecialidad != null ?
                new ObjectParameter("NombreEspecialidad", nombreEspecialidad) :
                new ObjectParameter("NombreEspecialidad", typeof(string));
    
            var tipoPacienteNombreParameter = tipoPacienteNombre != null ?
                new ObjectParameter("TipoPacienteNombre", tipoPacienteNombre) :
                new ObjectParameter("TipoPacienteNombre", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var camaParameter = cama != null ?
                new ObjectParameter("Cama", cama) :
                new ObjectParameter("Cama", typeof(string));
    
            var tipoOrdenAtencionNombreParameter = tipoOrdenAtencionNombre != null ?
                new ObjectParameter("TipoOrdenAtencionNombre", tipoOrdenAtencionNombre) :
                new ObjectParameter("TipoOrdenAtencionNombre", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var pacienteNombreParameter = pacienteNombre != null ?
                new ObjectParameter("PacienteNombre", pacienteNombre) :
                new ObjectParameter("PacienteNombre", typeof(string));
    
            var medicoNombreParameter = medicoNombre != null ?
                new ObjectParameter("MedicoNombre", medicoNombre) :
                new ObjectParameter("MedicoNombre", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var idHospitalizacionParameter = idHospitalizacion.HasValue ?
                new ObjectParameter("IdHospitalizacion", idHospitalizacion) :
                new ObjectParameter("IdHospitalizacion", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var estadoEpiClinicoParameter = estadoEpiClinico.HasValue ?
                new ObjectParameter("EstadoEpiClinico", estadoEpiClinico) :
                new ObjectParameter("EstadoEpiClinico", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var estadoEpiAtencionParameter = estadoEpiAtencion.HasValue ?
                new ObjectParameter("EstadoEpiAtencion", estadoEpiAtencion) :
                new ObjectParameter("EstadoEpiAtencion", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var indicadorCirugiaParameter = indicadorCirugia.HasValue ?
                new ObjectParameter("IndicadorCirugia", indicadorCirugia) :
                new ObjectParameter("IndicadorCirugia", typeof(int));
    
            var indicadorExamenPrincipalParameter = indicadorExamenPrincipal.HasValue ?
                new ObjectParameter("IndicadorExamenPrincipal", indicadorExamenPrincipal) :
                new ObjectParameter("IndicadorExamenPrincipal", typeof(int));
    
            var indicadorSeguroParameter = indicadorSeguro.HasValue ?
                new ObjectParameter("IndicadorSeguro", indicadorSeguro) :
                new ObjectParameter("IndicadorSeguro", typeof(int));
    
            var modalidadParameter = modalidad.HasValue ?
                new ObjectParameter("Modalidad", modalidad) :
                new ObjectParameter("Modalidad", typeof(int));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_ATENCIONPACIENTE_GENERAL>("USP_SS_HC_ATENCIONES_SOA", mergeOption, tipoListadoParameter, citaTipoParameter, citaFechaParameter, origenParameter, nombreEspecialidadParameter, tipoPacienteNombreParameter, codigoOAParameter, camaParameter, tipoOrdenAtencionNombreParameter, codigoHCParameter, pacienteNombreParameter, medicoNombreParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, idHospitalizacionParameter, idCitaParameter, idPacienteParameter, tipoPacienteParameter, tipoAtencionParameter, idEspecialidadParameter, idMedicoParameter, tipoOrdenAtencionParameter, componenteParameter, companiaParameter, sucursalParameter, estadoPersonaParameter, estadoEpiClinicoParameter, unidadReplicacionParameter, unidadReplicacionECParameter, idEpisodioAtencionParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, estadoEpiAtencionParameter, fechaInicioParameter, fechaFinParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, codigoHCAnteriorParameter, indicadorCirugiaParameter, indicadorExamenPrincipalParameter, indicadorSeguroParameter, modalidadParameter, sexoParameter, estadoCivilParameter, nivelInstruccionParameter, esPacienteParameter, esEmpresaParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_HCE_ITListarValidacionEmergencia(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idConsultaExterna, Nullable<int> idOrdenAtencion, Nullable<int> linea, Nullable<int> lineaOrdenAtencion, Nullable<int> tipoOrdenMedica, string componente, Nullable<int> tipoInterConsulta, Nullable<int> medico, Nullable<int> especialidad, Nullable<int> estadoDocumento, Nullable<int> indicadorEPS, Nullable<int> estado, Nullable<int> medicoResponsable, string usuarioCreacion, string usuarioModificacion, string secuenciaHCE, Nullable<System.DateTime> fechaCreacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idConsultaExternaParameter = idConsultaExterna.HasValue ?
                new ObjectParameter("IdConsultaExterna", idConsultaExterna) :
                new ObjectParameter("IdConsultaExterna", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var tipoOrdenMedicaParameter = tipoOrdenMedica.HasValue ?
                new ObjectParameter("TipoOrdenMedica", tipoOrdenMedica) :
                new ObjectParameter("TipoOrdenMedica", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var tipoInterConsultaParameter = tipoInterConsulta.HasValue ?
                new ObjectParameter("TipoInterConsulta", tipoInterConsulta) :
                new ObjectParameter("TipoInterConsulta", typeof(int));
    
            var medicoParameter = medico.HasValue ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(int));
    
            var especialidadParameter = especialidad.HasValue ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(int));
    
            var estadoDocumentoParameter = estadoDocumento.HasValue ?
                new ObjectParameter("EstadoDocumento", estadoDocumento) :
                new ObjectParameter("EstadoDocumento", typeof(int));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var medicoResponsableParameter = medicoResponsable.HasValue ?
                new ObjectParameter("MedicoResponsable", medicoResponsable) :
                new ObjectParameter("MedicoResponsable", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var secuenciaHCEParameter = secuenciaHCE != null ?
                new ObjectParameter("SecuenciaHCE", secuenciaHCE) :
                new ObjectParameter("SecuenciaHCE", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HCE_ITListarValidacionEmergencia", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idConsultaExternaParameter, idOrdenAtencionParameter, lineaParameter, lineaOrdenAtencionParameter, tipoOrdenMedicaParameter, componenteParameter, tipoInterConsultaParameter, medicoParameter, especialidadParameter, estadoDocumentoParameter, indicadorEPSParameter, estadoParameter, medicoResponsableParameter, usuarioCreacionParameter, usuarioModificacionParameter, secuenciaHCEParameter, fechaCreacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
        public virtual ObjectResult<Nullable<int>> SP_HCE_SPRINGRECETAConsultaExternaV2(Nullable<int> idOrdenAtencion, Nullable<int> lineaOA, Nullable<int> idPaciente, string componente, Nullable<int> unidadmedida, string linea, string familia, string subfamilia, string cantidad, Nullable<int> via, string dosis, string diastratamiento, string frecuencia, Nullable<int> indicadorEPS, string usuario, Nullable<DateTime> fechaCreacion, string indicacionEspecifica, Nullable<int> lineamax, Nullable<int> tIPOORDENATENCION, string secuenciaHCE)
        {

            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));

            var lineaOAParameter = lineaOA.HasValue ?
               new ObjectParameter("LineaOA", lineaOA) :
               new ObjectParameter("LineaOA", typeof(int));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));

            var unidadmedidaParameter = unidadmedida != null ?
                new ObjectParameter("Unidadmedida", unidadmedida) :
                new ObjectParameter("Unidadmedida", typeof(string));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subfamiliaParameter = subfamilia != null ?
                new ObjectParameter("Subfamilia", subfamilia) :
                new ObjectParameter("Subfamilia", typeof(string));

            var cantidadParameter = cantidad != null ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(string));

            var viaParameter = via.HasValue ?
                new ObjectParameter("Via", via) :
                new ObjectParameter("Via", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diastratamientoParameter = diastratamiento != null ?
                new ObjectParameter("Diastratamiento", diastratamiento) :
                new ObjectParameter("Diastratamiento", typeof(string));

            var frecuenciaParameter = frecuencia != null ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(string));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var indicacionEspecificaParameter = indicacionEspecifica != null ?
                new ObjectParameter("IndicacionEspecifica", indicacionEspecifica) :
                new ObjectParameter("IndicacionEspecifica", typeof(string));

            var lineamaxParameter = lineamax.HasValue ?
                new ObjectParameter("lineamax", lineamax) :
                new ObjectParameter("lineamax", typeof(int));

            var tIPOORDENATENCIONParameter = tIPOORDENATENCION.HasValue ?
                new ObjectParameter("TIPOORDENATENCION", tIPOORDENATENCION) :
                new ObjectParameter("TIPOORDENATENCION", typeof(int));

            var secuenciaHCEParameter = secuenciaHCE != null ?
                new ObjectParameter("SECUENCIALHCE", secuenciaHCE) :
                new ObjectParameter("SECUENCIALHCE", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HCE_SPRINGRECETAConsultaExternaV2", idOrdenAtencionParameter, lineaOAParameter, idPacienteParameter, componenteParameter, unidadmedidaParameter, lineaParameter, familiaParameter, subfamiliaParameter, cantidadParameter, viaParameter, dosisParameter, diastratamientoParameter, frecuenciaParameter, indicadorEPSParameter, usuarioParameter, fechaCreacionParameter, indicacionEspecificaParameter, lineamaxParameter, tIPOORDENATENCIONParameter, secuenciaHCEParameter);
        }
        public virtual ObjectResult<Nullable<int>> SP_FirmarTriajeSpring(Nullable<int> idTriaje, Nullable<int> tipo, string rutaFoto, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> tamanoImagen, Nullable<int> idEspisodioTriajeHCE)
        {
            var idTriajeParameter = idTriaje.HasValue ?
                new ObjectParameter("IdTriaje", idTriaje) :
                new ObjectParameter("IdTriaje", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            var rutaFotoParameter = rutaFoto != null ?
                new ObjectParameter("RutaFoto", rutaFoto) :
                new ObjectParameter("RutaFoto", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tamanoImagenParameter = tamanoImagen.HasValue ?
                new ObjectParameter("TamanoImagen", tamanoImagen) :
                new ObjectParameter("TamanoImagen", typeof(int));
    
            var idEspisodioTriajeHCEParameter = idEspisodioTriajeHCE.HasValue ?
                new ObjectParameter("IdEspisodioTriajeHCE", idEspisodioTriajeHCE) :
                new ObjectParameter("IdEspisodioTriajeHCE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_FirmarTriajeSpring", idTriajeParameter, tipoParameter, rutaFotoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tamanoImagenParameter, idEspisodioTriajeHCEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SS_GE_PacienteSpring(Nullable<int> persona, string apellidoPaterno, string apellidoMaterno, string nombreCompleto, string tipoDocumento, string documento, string codigoBarras, string esCliente, string esEmpleado, string esOtro, string tipoPersona, string esProveedor, Nullable<System.DateTime> fechaNacimiento, string ciudadNacimiento, string sexo, string nacionalidad, string estadoCivil, string nivelInstruccion, string direccion, string codigoPostal, string provincia, string departamento, string telefono, string documentoFiscal, string documentoIdentidad, string aCCION, Nullable<int> edad, string rangoEtario, Nullable<int> tipoMedico, Nullable<int> correcion, string esPaciente, string esEmpresa, string pais, string flagActualizacion, string cuentaMonedaLocal_tmp, string cuentaMonedaExtranjera_tmp, string correlativoSCTR, string seguroDiscamec, string codDiscamec, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, string lugarNacimiento, string celular, string celularEmergencia, string parentescoEmergencia, string direccionReferencia, Nullable<System.DateTime> ultimaFechaModif, string tipoPersonaUsuario, string ultimoUsuario, string estado, string direccionEmergencia, string telefonoEmergencia, string bancoMonedaLocal, string tipoCuentaLocal, string cuentaMonedaLocal, string bancoMonedaExtranjera, string tipoCuentaExtranjera, string cuentaMonedaExtranjera, string correoElectronico, string enfermedadGraveFlag, Nullable<System.DateTime> ingresoFechaRegistro, string ingresoAplicacionCodigo, string ingresoUsuario, string pYMEFlag, Nullable<int> paciente, Nullable<int> tipoPaciente, string raza, string areaLaboral, string ocupacion, string codigoHC, string codigoHCAnterior, string codigoHCSecundario, string tipoAlmacenamiento, string tipoHistoria, string tipoSituacion, Nullable<int> idUbicacion, string lugarProcedencia, string rutaFoto, Nullable<int> estadoPaciente, Nullable<int> numeroFile, string servicio, string observacion, Nullable<int> indicadorAsistencia, Nullable<int> cantidadAsistencia, Nullable<int> ubicacionHHCC, Nullable<int> indicadorMigradoSiteds, string numeroCaja, Nullable<int> indicadorCodigoBarras, Nullable<int> iDPACIENTE_OK, string codigoAsegurado, Nullable<int> numeroPoliza, Nullable<int> numeroCertificado, string codigoProducto, string codigoPlan, Nullable<int> tipoParentesco, string codigoBeneficio, Nullable<int> situacion, Nullable<int> tomoActual, Nullable<int> indicadorHistoriaFisica, string descripcionHistoria, string personaAnt, string nombres, string busqueda, Nullable<int> idPersonal, string atencionLugar, string atencion, string idEstablecimientoIngreso, string idServicioIngreso, string prestacion, string destino, Nullable<int> nroAutorizacion, Nullable<decimal> monto, Nullable<System.DateTime> fechaIngresoHosp, Nullable<System.DateTime> fechaCorteHosp, string establecimiento01, string referenciaHoja01, string establecimiento02, string referenciaHoja02)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var codigoBarrasParameter = codigoBarras != null ?
                new ObjectParameter("CodigoBarras", codigoBarras) :
                new ObjectParameter("CodigoBarras", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var ciudadNacimientoParameter = ciudadNacimiento != null ?
                new ObjectParameter("CiudadNacimiento", ciudadNacimiento) :
                new ObjectParameter("CiudadNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var documentoFiscalParameter = documentoFiscal != null ?
                new ObjectParameter("DocumentoFiscal", documentoFiscal) :
                new ObjectParameter("DocumentoFiscal", typeof(string));
    
            var documentoIdentidadParameter = documentoIdentidad != null ?
                new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
                new ObjectParameter("DocumentoIdentidad", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var rangoEtarioParameter = rangoEtario != null ?
                new ObjectParameter("rangoEtario", rangoEtario) :
                new ObjectParameter("rangoEtario", typeof(string));
    
            var tipoMedicoParameter = tipoMedico.HasValue ?
                new ObjectParameter("TipoMedico", tipoMedico) :
                new ObjectParameter("TipoMedico", typeof(int));
    
            var correcionParameter = correcion.HasValue ?
                new ObjectParameter("Correcion", correcion) :
                new ObjectParameter("Correcion", typeof(int));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var flagActualizacionParameter = flagActualizacion != null ?
                new ObjectParameter("FlagActualizacion", flagActualizacion) :
                new ObjectParameter("FlagActualizacion", typeof(string));
    
            var cuentaMonedaLocal_tmpParameter = cuentaMonedaLocal_tmp != null ?
                new ObjectParameter("CuentaMonedaLocal_tmp", cuentaMonedaLocal_tmp) :
                new ObjectParameter("CuentaMonedaLocal_tmp", typeof(string));
    
            var cuentaMonedaExtranjera_tmpParameter = cuentaMonedaExtranjera_tmp != null ?
                new ObjectParameter("CuentaMonedaExtranjera_tmp", cuentaMonedaExtranjera_tmp) :
                new ObjectParameter("CuentaMonedaExtranjera_tmp", typeof(string));
    
            var correlativoSCTRParameter = correlativoSCTR != null ?
                new ObjectParameter("CorrelativoSCTR", correlativoSCTR) :
                new ObjectParameter("CorrelativoSCTR", typeof(string));
    
            var seguroDiscamecParameter = seguroDiscamec != null ?
                new ObjectParameter("SeguroDiscamec", seguroDiscamec) :
                new ObjectParameter("SeguroDiscamec", typeof(string));
    
            var codDiscamecParameter = codDiscamec != null ?
                new ObjectParameter("CodDiscamec", codDiscamec) :
                new ObjectParameter("CodDiscamec", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var lugarNacimientoParameter = lugarNacimiento != null ?
                new ObjectParameter("LugarNacimiento", lugarNacimiento) :
                new ObjectParameter("LugarNacimiento", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var celularEmergenciaParameter = celularEmergencia != null ?
                new ObjectParameter("CelularEmergencia", celularEmergencia) :
                new ObjectParameter("CelularEmergencia", typeof(string));
    
            var parentescoEmergenciaParameter = parentescoEmergencia != null ?
                new ObjectParameter("ParentescoEmergencia", parentescoEmergencia) :
                new ObjectParameter("ParentescoEmergencia", typeof(string));
    
            var direccionReferenciaParameter = direccionReferencia != null ?
                new ObjectParameter("DireccionReferencia", direccionReferencia) :
                new ObjectParameter("DireccionReferencia", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var tipoPersonaUsuarioParameter = tipoPersonaUsuario != null ?
                new ObjectParameter("TipoPersonaUsuario", tipoPersonaUsuario) :
                new ObjectParameter("TipoPersonaUsuario", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var direccionEmergenciaParameter = direccionEmergencia != null ?
                new ObjectParameter("DireccionEmergencia", direccionEmergencia) :
                new ObjectParameter("DireccionEmergencia", typeof(string));
    
            var telefonoEmergenciaParameter = telefonoEmergencia != null ?
                new ObjectParameter("TelefonoEmergencia", telefonoEmergencia) :
                new ObjectParameter("TelefonoEmergencia", typeof(string));
    
            var bancoMonedaLocalParameter = bancoMonedaLocal != null ?
                new ObjectParameter("BancoMonedaLocal", bancoMonedaLocal) :
                new ObjectParameter("BancoMonedaLocal", typeof(string));
    
            var tipoCuentaLocalParameter = tipoCuentaLocal != null ?
                new ObjectParameter("TipoCuentaLocal", tipoCuentaLocal) :
                new ObjectParameter("TipoCuentaLocal", typeof(string));
    
            var cuentaMonedaLocalParameter = cuentaMonedaLocal != null ?
                new ObjectParameter("CuentaMonedaLocal", cuentaMonedaLocal) :
                new ObjectParameter("CuentaMonedaLocal", typeof(string));
    
            var bancoMonedaExtranjeraParameter = bancoMonedaExtranjera != null ?
                new ObjectParameter("BancoMonedaExtranjera", bancoMonedaExtranjera) :
                new ObjectParameter("BancoMonedaExtranjera", typeof(string));
    
            var tipoCuentaExtranjeraParameter = tipoCuentaExtranjera != null ?
                new ObjectParameter("TipoCuentaExtranjera", tipoCuentaExtranjera) :
                new ObjectParameter("TipoCuentaExtranjera", typeof(string));
    
            var cuentaMonedaExtranjeraParameter = cuentaMonedaExtranjera != null ?
                new ObjectParameter("CuentaMonedaExtranjera", cuentaMonedaExtranjera) :
                new ObjectParameter("CuentaMonedaExtranjera", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var enfermedadGraveFlagParameter = enfermedadGraveFlag != null ?
                new ObjectParameter("EnfermedadGraveFlag", enfermedadGraveFlag) :
                new ObjectParameter("EnfermedadGraveFlag", typeof(string));
    
            var ingresoFechaRegistroParameter = ingresoFechaRegistro.HasValue ?
                new ObjectParameter("IngresoFechaRegistro", ingresoFechaRegistro) :
                new ObjectParameter("IngresoFechaRegistro", typeof(System.DateTime));
    
            var ingresoAplicacionCodigoParameter = ingresoAplicacionCodigo != null ?
                new ObjectParameter("IngresoAplicacionCodigo", ingresoAplicacionCodigo) :
                new ObjectParameter("IngresoAplicacionCodigo", typeof(string));
    
            var ingresoUsuarioParameter = ingresoUsuario != null ?
                new ObjectParameter("IngresoUsuario", ingresoUsuario) :
                new ObjectParameter("IngresoUsuario", typeof(string));
    
            var pYMEFlagParameter = pYMEFlag != null ?
                new ObjectParameter("PYMEFlag", pYMEFlag) :
                new ObjectParameter("PYMEFlag", typeof(string));
    
            var pacienteParameter = paciente.HasValue ?
                new ObjectParameter("Paciente", paciente) :
                new ObjectParameter("Paciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var razaParameter = raza != null ?
                new ObjectParameter("Raza", raza) :
                new ObjectParameter("Raza", typeof(string));
    
            var areaLaboralParameter = areaLaboral != null ?
                new ObjectParameter("AreaLaboral", areaLaboral) :
                new ObjectParameter("AreaLaboral", typeof(string));
    
            var ocupacionParameter = ocupacion != null ?
                new ObjectParameter("Ocupacion", ocupacion) :
                new ObjectParameter("Ocupacion", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoHCSecundarioParameter = codigoHCSecundario != null ?
                new ObjectParameter("CodigoHCSecundario", codigoHCSecundario) :
                new ObjectParameter("CodigoHCSecundario", typeof(string));
    
            var tipoAlmacenamientoParameter = tipoAlmacenamiento != null ?
                new ObjectParameter("TipoAlmacenamiento", tipoAlmacenamiento) :
                new ObjectParameter("TipoAlmacenamiento", typeof(string));
    
            var tipoHistoriaParameter = tipoHistoria != null ?
                new ObjectParameter("TipoHistoria", tipoHistoria) :
                new ObjectParameter("TipoHistoria", typeof(string));
    
            var tipoSituacionParameter = tipoSituacion != null ?
                new ObjectParameter("TipoSituacion", tipoSituacion) :
                new ObjectParameter("TipoSituacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var lugarProcedenciaParameter = lugarProcedencia != null ?
                new ObjectParameter("LugarProcedencia", lugarProcedencia) :
                new ObjectParameter("LugarProcedencia", typeof(string));
    
            var rutaFotoParameter = rutaFoto != null ?
                new ObjectParameter("RutaFoto", rutaFoto) :
                new ObjectParameter("RutaFoto", typeof(string));
    
            var estadoPacienteParameter = estadoPaciente.HasValue ?
                new ObjectParameter("EstadoPaciente", estadoPaciente) :
                new ObjectParameter("EstadoPaciente", typeof(int));
    
            var numeroFileParameter = numeroFile.HasValue ?
                new ObjectParameter("NumeroFile", numeroFile) :
                new ObjectParameter("NumeroFile", typeof(int));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var indicadorAsistenciaParameter = indicadorAsistencia.HasValue ?
                new ObjectParameter("IndicadorAsistencia", indicadorAsistencia) :
                new ObjectParameter("IndicadorAsistencia", typeof(int));
    
            var cantidadAsistenciaParameter = cantidadAsistencia.HasValue ?
                new ObjectParameter("CantidadAsistencia", cantidadAsistencia) :
                new ObjectParameter("CantidadAsistencia", typeof(int));
    
            var ubicacionHHCCParameter = ubicacionHHCC.HasValue ?
                new ObjectParameter("UbicacionHHCC", ubicacionHHCC) :
                new ObjectParameter("UbicacionHHCC", typeof(int));
    
            var indicadorMigradoSitedsParameter = indicadorMigradoSiteds.HasValue ?
                new ObjectParameter("IndicadorMigradoSiteds", indicadorMigradoSiteds) :
                new ObjectParameter("IndicadorMigradoSiteds", typeof(int));
    
            var numeroCajaParameter = numeroCaja != null ?
                new ObjectParameter("NumeroCaja", numeroCaja) :
                new ObjectParameter("NumeroCaja", typeof(string));
    
            var indicadorCodigoBarrasParameter = indicadorCodigoBarras.HasValue ?
                new ObjectParameter("IndicadorCodigoBarras", indicadorCodigoBarras) :
                new ObjectParameter("IndicadorCodigoBarras", typeof(int));
    
            var iDPACIENTE_OKParameter = iDPACIENTE_OK.HasValue ?
                new ObjectParameter("IDPACIENTE_OK", iDPACIENTE_OK) :
                new ObjectParameter("IDPACIENTE_OK", typeof(int));
    
            var codigoAseguradoParameter = codigoAsegurado != null ?
                new ObjectParameter("CodigoAsegurado", codigoAsegurado) :
                new ObjectParameter("CodigoAsegurado", typeof(string));
    
            var numeroPolizaParameter = numeroPoliza.HasValue ?
                new ObjectParameter("NumeroPoliza", numeroPoliza) :
                new ObjectParameter("NumeroPoliza", typeof(int));
    
            var numeroCertificadoParameter = numeroCertificado.HasValue ?
                new ObjectParameter("NumeroCertificado", numeroCertificado) :
                new ObjectParameter("NumeroCertificado", typeof(int));
    
            var codigoProductoParameter = codigoProducto != null ?
                new ObjectParameter("CodigoProducto", codigoProducto) :
                new ObjectParameter("CodigoProducto", typeof(string));
    
            var codigoPlanParameter = codigoPlan != null ?
                new ObjectParameter("CodigoPlan", codigoPlan) :
                new ObjectParameter("CodigoPlan", typeof(string));
    
            var tipoParentescoParameter = tipoParentesco.HasValue ?
                new ObjectParameter("TipoParentesco", tipoParentesco) :
                new ObjectParameter("TipoParentesco", typeof(int));
    
            var codigoBeneficioParameter = codigoBeneficio != null ?
                new ObjectParameter("CodigoBeneficio", codigoBeneficio) :
                new ObjectParameter("CodigoBeneficio", typeof(string));
    
            var situacionParameter = situacion.HasValue ?
                new ObjectParameter("Situacion", situacion) :
                new ObjectParameter("Situacion", typeof(int));
    
            var tomoActualParameter = tomoActual.HasValue ?
                new ObjectParameter("TomoActual", tomoActual) :
                new ObjectParameter("TomoActual", typeof(int));
    
            var indicadorHistoriaFisicaParameter = indicadorHistoriaFisica.HasValue ?
                new ObjectParameter("IndicadorHistoriaFisica", indicadorHistoriaFisica) :
                new ObjectParameter("IndicadorHistoriaFisica", typeof(int));
    
            var descripcionHistoriaParameter = descripcionHistoria != null ?
                new ObjectParameter("DescripcionHistoria", descripcionHistoria) :
                new ObjectParameter("DescripcionHistoria", typeof(string));
    
            var personaAntParameter = personaAnt != null ?
                new ObjectParameter("PersonaAnt", personaAnt) :
                new ObjectParameter("PersonaAnt", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var idPersonalParameter = idPersonal.HasValue ?
                new ObjectParameter("IdPersonal", idPersonal) :
                new ObjectParameter("IdPersonal", typeof(int));
    
            var atencionLugarParameter = atencionLugar != null ?
                new ObjectParameter("AtencionLugar", atencionLugar) :
                new ObjectParameter("AtencionLugar", typeof(string));
    
            var atencionParameter = atencion != null ?
                new ObjectParameter("Atencion", atencion) :
                new ObjectParameter("Atencion", typeof(string));
    
            var idEstablecimientoIngresoParameter = idEstablecimientoIngreso != null ?
                new ObjectParameter("IdEstablecimientoIngreso", idEstablecimientoIngreso) :
                new ObjectParameter("IdEstablecimientoIngreso", typeof(string));
    
            var idServicioIngresoParameter = idServicioIngreso != null ?
                new ObjectParameter("IdServicioIngreso", idServicioIngreso) :
                new ObjectParameter("IdServicioIngreso", typeof(string));
    
            var prestacionParameter = prestacion != null ?
                new ObjectParameter("Prestacion", prestacion) :
                new ObjectParameter("Prestacion", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            var nroAutorizacionParameter = nroAutorizacion.HasValue ?
                new ObjectParameter("NroAutorizacion", nroAutorizacion) :
                new ObjectParameter("NroAutorizacion", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaIngresoHospParameter = fechaIngresoHosp.HasValue ?
                new ObjectParameter("FechaIngresoHosp", fechaIngresoHosp) :
                new ObjectParameter("FechaIngresoHosp", typeof(System.DateTime));
    
            var fechaCorteHospParameter = fechaCorteHosp.HasValue ?
                new ObjectParameter("FechaCorteHosp", fechaCorteHosp) :
                new ObjectParameter("FechaCorteHosp", typeof(System.DateTime));
    
            var establecimiento01Parameter = establecimiento01 != null ?
                new ObjectParameter("Establecimiento01", establecimiento01) :
                new ObjectParameter("Establecimiento01", typeof(string));
    
            var referenciaHoja01Parameter = referenciaHoja01 != null ?
                new ObjectParameter("ReferenciaHoja01", referenciaHoja01) :
                new ObjectParameter("ReferenciaHoja01", typeof(string));
    
            var establecimiento02Parameter = establecimiento02 != null ?
                new ObjectParameter("Establecimiento02", establecimiento02) :
                new ObjectParameter("Establecimiento02", typeof(string));
    
            var referenciaHoja02Parameter = referenciaHoja02 != null ?
                new ObjectParameter("ReferenciaHoja02", referenciaHoja02) :
                new ObjectParameter("ReferenciaHoja02", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_GE_PacienteSpring", personaParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombreCompletoParameter, tipoDocumentoParameter, documentoParameter, codigoBarrasParameter, esClienteParameter, esEmpleadoParameter, esOtroParameter, tipoPersonaParameter, esProveedorParameter, fechaNacimientoParameter, ciudadNacimientoParameter, sexoParameter, nacionalidadParameter, estadoCivilParameter, nivelInstruccionParameter, direccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, telefonoParameter, documentoFiscalParameter, documentoIdentidadParameter, aCCIONParameter, edadParameter, rangoEtarioParameter, tipoMedicoParameter, correcionParameter, esPacienteParameter, esEmpresaParameter, paisParameter, flagActualizacionParameter, cuentaMonedaLocal_tmpParameter, cuentaMonedaExtranjera_tmpParameter, correlativoSCTRParameter, seguroDiscamecParameter, codDiscamecParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, lugarNacimientoParameter, celularParameter, celularEmergenciaParameter, parentescoEmergenciaParameter, direccionReferenciaParameter, ultimaFechaModifParameter, tipoPersonaUsuarioParameter, ultimoUsuarioParameter, estadoParameter, direccionEmergenciaParameter, telefonoEmergenciaParameter, bancoMonedaLocalParameter, tipoCuentaLocalParameter, cuentaMonedaLocalParameter, bancoMonedaExtranjeraParameter, tipoCuentaExtranjeraParameter, cuentaMonedaExtranjeraParameter, correoElectronicoParameter, enfermedadGraveFlagParameter, ingresoFechaRegistroParameter, ingresoAplicacionCodigoParameter, ingresoUsuarioParameter, pYMEFlagParameter, pacienteParameter, tipoPacienteParameter, razaParameter, areaLaboralParameter, ocupacionParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoHCSecundarioParameter, tipoAlmacenamientoParameter, tipoHistoriaParameter, tipoSituacionParameter, idUbicacionParameter, lugarProcedenciaParameter, rutaFotoParameter, estadoPacienteParameter, numeroFileParameter, servicioParameter, observacionParameter, indicadorAsistenciaParameter, cantidadAsistenciaParameter, ubicacionHHCCParameter, indicadorMigradoSitedsParameter, numeroCajaParameter, indicadorCodigoBarrasParameter, iDPACIENTE_OKParameter, codigoAseguradoParameter, numeroPolizaParameter, numeroCertificadoParameter, codigoProductoParameter, codigoPlanParameter, tipoParentescoParameter, codigoBeneficioParameter, situacionParameter, tomoActualParameter, indicadorHistoriaFisicaParameter, descripcionHistoriaParameter, personaAntParameter, nombresParameter, busquedaParameter, idPersonalParameter, atencionLugarParameter, atencionParameter, idEstablecimientoIngresoParameter, idServicioIngresoParameter, prestacionParameter, destinoParameter, nroAutorizacionParameter, montoParameter, fechaIngresoHospParameter, fechaCorteHospParameter, establecimiento01Parameter, referenciaHoja01Parameter, establecimiento02Parameter, referenciaHoja02Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_SS_GE_PacienteSpring(Nullable<int> persona, string apellidoPaterno, string apellidoMaterno, string nombreCompleto, string tipoDocumento, string documento, string codigoBarras, string esCliente, string esEmpleado, string esOtro, string tipoPersona, string esProveedor, Nullable<System.DateTime> fechaNacimiento, string ciudadNacimiento, string sexo, string nacionalidad, string estadoCivil, string nivelInstruccion, string direccion, string codigoPostal, string provincia, string departamento, string telefono, string documentoFiscal, string documentoIdentidad, string aCCION, Nullable<int> edad, string rangoEtario, Nullable<int> tipoMedico, Nullable<int> correcion, string esPaciente, string esEmpresa, string pais, string flagActualizacion, string cuentaMonedaLocal_tmp, string cuentaMonedaExtranjera_tmp, string correlativoSCTR, string seguroDiscamec, string codDiscamec, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, string lugarNacimiento, string celular, string celularEmergencia, string parentescoEmergencia, string direccionReferencia, Nullable<System.DateTime> ultimaFechaModif, string tipoPersonaUsuario, string ultimoUsuario, string estado, string direccionEmergencia, string telefonoEmergencia, string bancoMonedaLocal, string tipoCuentaLocal, string cuentaMonedaLocal, string bancoMonedaExtranjera, string tipoCuentaExtranjera, string cuentaMonedaExtranjera, string correoElectronico, string enfermedadGraveFlag, Nullable<System.DateTime> ingresoFechaRegistro, string ingresoAplicacionCodigo, string ingresoUsuario, string pYMEFlag, Nullable<int> paciente, Nullable<int> tipoPaciente, string raza, string areaLaboral, string ocupacion, string codigoHC, string codigoHCAnterior, string codigoHCSecundario, string tipoAlmacenamiento, string tipoHistoria, string tipoSituacion, Nullable<int> idUbicacion, string lugarProcedencia, string rutaFoto, Nullable<int> estadoPaciente, Nullable<int> numeroFile, string servicio, string observacion, Nullable<int> indicadorAsistencia, Nullable<int> cantidadAsistencia, Nullable<int> ubicacionHHCC, Nullable<int> indicadorMigradoSiteds, string numeroCaja, Nullable<int> indicadorCodigoBarras, Nullable<int> iDPACIENTE_OK, string codigoAsegurado, Nullable<int> numeroPoliza, Nullable<int> numeroCertificado, string codigoProducto, string codigoPlan, Nullable<int> tipoParentesco, string codigoBeneficio, Nullable<int> situacion, Nullable<int> tomoActual, Nullable<int> indicadorHistoriaFisica, string descripcionHistoria, string personaAnt, string nombres, string busqueda, Nullable<int> idPersonal, string atencionLugar, string atencion, string idEstablecimientoIngreso, string idServicioIngreso, string prestacion, string destino, Nullable<int> nroAutorizacion, Nullable<decimal> monto, Nullable<System.DateTime> fechaIngresoHosp, Nullable<System.DateTime> fechaCorteHosp, string establecimiento01, string referenciaHoja01, string establecimiento02, string referenciaHoja02)
        {
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var codigoBarrasParameter = codigoBarras != null ?
                new ObjectParameter("CodigoBarras", codigoBarras) :
                new ObjectParameter("CodigoBarras", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var ciudadNacimientoParameter = ciudadNacimiento != null ?
                new ObjectParameter("CiudadNacimiento", ciudadNacimiento) :
                new ObjectParameter("CiudadNacimiento", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var documentoFiscalParameter = documentoFiscal != null ?
                new ObjectParameter("DocumentoFiscal", documentoFiscal) :
                new ObjectParameter("DocumentoFiscal", typeof(string));
    
            var documentoIdentidadParameter = documentoIdentidad != null ?
                new ObjectParameter("DocumentoIdentidad", documentoIdentidad) :
                new ObjectParameter("DocumentoIdentidad", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var rangoEtarioParameter = rangoEtario != null ?
                new ObjectParameter("rangoEtario", rangoEtario) :
                new ObjectParameter("rangoEtario", typeof(string));
    
            var tipoMedicoParameter = tipoMedico.HasValue ?
                new ObjectParameter("TipoMedico", tipoMedico) :
                new ObjectParameter("TipoMedico", typeof(int));
    
            var correcionParameter = correcion.HasValue ?
                new ObjectParameter("Correcion", correcion) :
                new ObjectParameter("Correcion", typeof(int));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var flagActualizacionParameter = flagActualizacion != null ?
                new ObjectParameter("FlagActualizacion", flagActualizacion) :
                new ObjectParameter("FlagActualizacion", typeof(string));
    
            var cuentaMonedaLocal_tmpParameter = cuentaMonedaLocal_tmp != null ?
                new ObjectParameter("CuentaMonedaLocal_tmp", cuentaMonedaLocal_tmp) :
                new ObjectParameter("CuentaMonedaLocal_tmp", typeof(string));
    
            var cuentaMonedaExtranjera_tmpParameter = cuentaMonedaExtranjera_tmp != null ?
                new ObjectParameter("CuentaMonedaExtranjera_tmp", cuentaMonedaExtranjera_tmp) :
                new ObjectParameter("CuentaMonedaExtranjera_tmp", typeof(string));
    
            var correlativoSCTRParameter = correlativoSCTR != null ?
                new ObjectParameter("CorrelativoSCTR", correlativoSCTR) :
                new ObjectParameter("CorrelativoSCTR", typeof(string));
    
            var seguroDiscamecParameter = seguroDiscamec != null ?
                new ObjectParameter("SeguroDiscamec", seguroDiscamec) :
                new ObjectParameter("SeguroDiscamec", typeof(string));
    
            var codDiscamecParameter = codDiscamec != null ?
                new ObjectParameter("CodDiscamec", codDiscamec) :
                new ObjectParameter("CodDiscamec", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var lugarNacimientoParameter = lugarNacimiento != null ?
                new ObjectParameter("LugarNacimiento", lugarNacimiento) :
                new ObjectParameter("LugarNacimiento", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var celularEmergenciaParameter = celularEmergencia != null ?
                new ObjectParameter("CelularEmergencia", celularEmergencia) :
                new ObjectParameter("CelularEmergencia", typeof(string));
    
            var parentescoEmergenciaParameter = parentescoEmergencia != null ?
                new ObjectParameter("ParentescoEmergencia", parentescoEmergencia) :
                new ObjectParameter("ParentescoEmergencia", typeof(string));
    
            var direccionReferenciaParameter = direccionReferencia != null ?
                new ObjectParameter("DireccionReferencia", direccionReferencia) :
                new ObjectParameter("DireccionReferencia", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var tipoPersonaUsuarioParameter = tipoPersonaUsuario != null ?
                new ObjectParameter("TipoPersonaUsuario", tipoPersonaUsuario) :
                new ObjectParameter("TipoPersonaUsuario", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var direccionEmergenciaParameter = direccionEmergencia != null ?
                new ObjectParameter("DireccionEmergencia", direccionEmergencia) :
                new ObjectParameter("DireccionEmergencia", typeof(string));
    
            var telefonoEmergenciaParameter = telefonoEmergencia != null ?
                new ObjectParameter("TelefonoEmergencia", telefonoEmergencia) :
                new ObjectParameter("TelefonoEmergencia", typeof(string));
    
            var bancoMonedaLocalParameter = bancoMonedaLocal != null ?
                new ObjectParameter("BancoMonedaLocal", bancoMonedaLocal) :
                new ObjectParameter("BancoMonedaLocal", typeof(string));
    
            var tipoCuentaLocalParameter = tipoCuentaLocal != null ?
                new ObjectParameter("TipoCuentaLocal", tipoCuentaLocal) :
                new ObjectParameter("TipoCuentaLocal", typeof(string));
    
            var cuentaMonedaLocalParameter = cuentaMonedaLocal != null ?
                new ObjectParameter("CuentaMonedaLocal", cuentaMonedaLocal) :
                new ObjectParameter("CuentaMonedaLocal", typeof(string));
    
            var bancoMonedaExtranjeraParameter = bancoMonedaExtranjera != null ?
                new ObjectParameter("BancoMonedaExtranjera", bancoMonedaExtranjera) :
                new ObjectParameter("BancoMonedaExtranjera", typeof(string));
    
            var tipoCuentaExtranjeraParameter = tipoCuentaExtranjera != null ?
                new ObjectParameter("TipoCuentaExtranjera", tipoCuentaExtranjera) :
                new ObjectParameter("TipoCuentaExtranjera", typeof(string));
    
            var cuentaMonedaExtranjeraParameter = cuentaMonedaExtranjera != null ?
                new ObjectParameter("CuentaMonedaExtranjera", cuentaMonedaExtranjera) :
                new ObjectParameter("CuentaMonedaExtranjera", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var enfermedadGraveFlagParameter = enfermedadGraveFlag != null ?
                new ObjectParameter("EnfermedadGraveFlag", enfermedadGraveFlag) :
                new ObjectParameter("EnfermedadGraveFlag", typeof(string));
    
            var ingresoFechaRegistroParameter = ingresoFechaRegistro.HasValue ?
                new ObjectParameter("IngresoFechaRegistro", ingresoFechaRegistro) :
                new ObjectParameter("IngresoFechaRegistro", typeof(System.DateTime));
    
            var ingresoAplicacionCodigoParameter = ingresoAplicacionCodigo != null ?
                new ObjectParameter("IngresoAplicacionCodigo", ingresoAplicacionCodigo) :
                new ObjectParameter("IngresoAplicacionCodigo", typeof(string));
    
            var ingresoUsuarioParameter = ingresoUsuario != null ?
                new ObjectParameter("IngresoUsuario", ingresoUsuario) :
                new ObjectParameter("IngresoUsuario", typeof(string));
    
            var pYMEFlagParameter = pYMEFlag != null ?
                new ObjectParameter("PYMEFlag", pYMEFlag) :
                new ObjectParameter("PYMEFlag", typeof(string));
    
            var pacienteParameter = paciente.HasValue ?
                new ObjectParameter("Paciente", paciente) :
                new ObjectParameter("Paciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var razaParameter = raza != null ?
                new ObjectParameter("Raza", raza) :
                new ObjectParameter("Raza", typeof(string));
    
            var areaLaboralParameter = areaLaboral != null ?
                new ObjectParameter("AreaLaboral", areaLaboral) :
                new ObjectParameter("AreaLaboral", typeof(string));
    
            var ocupacionParameter = ocupacion != null ?
                new ObjectParameter("Ocupacion", ocupacion) :
                new ObjectParameter("Ocupacion", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoHCSecundarioParameter = codigoHCSecundario != null ?
                new ObjectParameter("CodigoHCSecundario", codigoHCSecundario) :
                new ObjectParameter("CodigoHCSecundario", typeof(string));
    
            var tipoAlmacenamientoParameter = tipoAlmacenamiento != null ?
                new ObjectParameter("TipoAlmacenamiento", tipoAlmacenamiento) :
                new ObjectParameter("TipoAlmacenamiento", typeof(string));
    
            var tipoHistoriaParameter = tipoHistoria != null ?
                new ObjectParameter("TipoHistoria", tipoHistoria) :
                new ObjectParameter("TipoHistoria", typeof(string));
    
            var tipoSituacionParameter = tipoSituacion != null ?
                new ObjectParameter("TipoSituacion", tipoSituacion) :
                new ObjectParameter("TipoSituacion", typeof(string));
    
            var idUbicacionParameter = idUbicacion.HasValue ?
                new ObjectParameter("IdUbicacion", idUbicacion) :
                new ObjectParameter("IdUbicacion", typeof(int));
    
            var lugarProcedenciaParameter = lugarProcedencia != null ?
                new ObjectParameter("LugarProcedencia", lugarProcedencia) :
                new ObjectParameter("LugarProcedencia", typeof(string));
    
            var rutaFotoParameter = rutaFoto != null ?
                new ObjectParameter("RutaFoto", rutaFoto) :
                new ObjectParameter("RutaFoto", typeof(string));
    
            var estadoPacienteParameter = estadoPaciente.HasValue ?
                new ObjectParameter("EstadoPaciente", estadoPaciente) :
                new ObjectParameter("EstadoPaciente", typeof(int));
    
            var numeroFileParameter = numeroFile.HasValue ?
                new ObjectParameter("NumeroFile", numeroFile) :
                new ObjectParameter("NumeroFile", typeof(int));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var indicadorAsistenciaParameter = indicadorAsistencia.HasValue ?
                new ObjectParameter("IndicadorAsistencia", indicadorAsistencia) :
                new ObjectParameter("IndicadorAsistencia", typeof(int));
    
            var cantidadAsistenciaParameter = cantidadAsistencia.HasValue ?
                new ObjectParameter("CantidadAsistencia", cantidadAsistencia) :
                new ObjectParameter("CantidadAsistencia", typeof(int));
    
            var ubicacionHHCCParameter = ubicacionHHCC.HasValue ?
                new ObjectParameter("UbicacionHHCC", ubicacionHHCC) :
                new ObjectParameter("UbicacionHHCC", typeof(int));
    
            var indicadorMigradoSitedsParameter = indicadorMigradoSiteds.HasValue ?
                new ObjectParameter("IndicadorMigradoSiteds", indicadorMigradoSiteds) :
                new ObjectParameter("IndicadorMigradoSiteds", typeof(int));
    
            var numeroCajaParameter = numeroCaja != null ?
                new ObjectParameter("NumeroCaja", numeroCaja) :
                new ObjectParameter("NumeroCaja", typeof(string));
    
            var indicadorCodigoBarrasParameter = indicadorCodigoBarras.HasValue ?
                new ObjectParameter("IndicadorCodigoBarras", indicadorCodigoBarras) :
                new ObjectParameter("IndicadorCodigoBarras", typeof(int));
    
            var iDPACIENTE_OKParameter = iDPACIENTE_OK.HasValue ?
                new ObjectParameter("IDPACIENTE_OK", iDPACIENTE_OK) :
                new ObjectParameter("IDPACIENTE_OK", typeof(int));
    
            var codigoAseguradoParameter = codigoAsegurado != null ?
                new ObjectParameter("CodigoAsegurado", codigoAsegurado) :
                new ObjectParameter("CodigoAsegurado", typeof(string));
    
            var numeroPolizaParameter = numeroPoliza.HasValue ?
                new ObjectParameter("NumeroPoliza", numeroPoliza) :
                new ObjectParameter("NumeroPoliza", typeof(int));
    
            var numeroCertificadoParameter = numeroCertificado.HasValue ?
                new ObjectParameter("NumeroCertificado", numeroCertificado) :
                new ObjectParameter("NumeroCertificado", typeof(int));
    
            var codigoProductoParameter = codigoProducto != null ?
                new ObjectParameter("CodigoProducto", codigoProducto) :
                new ObjectParameter("CodigoProducto", typeof(string));
    
            var codigoPlanParameter = codigoPlan != null ?
                new ObjectParameter("CodigoPlan", codigoPlan) :
                new ObjectParameter("CodigoPlan", typeof(string));
    
            var tipoParentescoParameter = tipoParentesco.HasValue ?
                new ObjectParameter("TipoParentesco", tipoParentesco) :
                new ObjectParameter("TipoParentesco", typeof(int));
    
            var codigoBeneficioParameter = codigoBeneficio != null ?
                new ObjectParameter("CodigoBeneficio", codigoBeneficio) :
                new ObjectParameter("CodigoBeneficio", typeof(string));
    
            var situacionParameter = situacion.HasValue ?
                new ObjectParameter("Situacion", situacion) :
                new ObjectParameter("Situacion", typeof(int));
    
            var tomoActualParameter = tomoActual.HasValue ?
                new ObjectParameter("TomoActual", tomoActual) :
                new ObjectParameter("TomoActual", typeof(int));
    
            var indicadorHistoriaFisicaParameter = indicadorHistoriaFisica.HasValue ?
                new ObjectParameter("IndicadorHistoriaFisica", indicadorHistoriaFisica) :
                new ObjectParameter("IndicadorHistoriaFisica", typeof(int));
    
            var descripcionHistoriaParameter = descripcionHistoria != null ?
                new ObjectParameter("DescripcionHistoria", descripcionHistoria) :
                new ObjectParameter("DescripcionHistoria", typeof(string));
    
            var personaAntParameter = personaAnt != null ?
                new ObjectParameter("PersonaAnt", personaAnt) :
                new ObjectParameter("PersonaAnt", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("Busqueda", busqueda) :
                new ObjectParameter("Busqueda", typeof(string));
    
            var idPersonalParameter = idPersonal.HasValue ?
                new ObjectParameter("IdPersonal", idPersonal) :
                new ObjectParameter("IdPersonal", typeof(int));
    
            var atencionLugarParameter = atencionLugar != null ?
                new ObjectParameter("AtencionLugar", atencionLugar) :
                new ObjectParameter("AtencionLugar", typeof(string));
    
            var atencionParameter = atencion != null ?
                new ObjectParameter("Atencion", atencion) :
                new ObjectParameter("Atencion", typeof(string));
    
            var idEstablecimientoIngresoParameter = idEstablecimientoIngreso != null ?
                new ObjectParameter("IdEstablecimientoIngreso", idEstablecimientoIngreso) :
                new ObjectParameter("IdEstablecimientoIngreso", typeof(string));
    
            var idServicioIngresoParameter = idServicioIngreso != null ?
                new ObjectParameter("IdServicioIngreso", idServicioIngreso) :
                new ObjectParameter("IdServicioIngreso", typeof(string));
    
            var prestacionParameter = prestacion != null ?
                new ObjectParameter("Prestacion", prestacion) :
                new ObjectParameter("Prestacion", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            var nroAutorizacionParameter = nroAutorizacion.HasValue ?
                new ObjectParameter("NroAutorizacion", nroAutorizacion) :
                new ObjectParameter("NroAutorizacion", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaIngresoHospParameter = fechaIngresoHosp.HasValue ?
                new ObjectParameter("FechaIngresoHosp", fechaIngresoHosp) :
                new ObjectParameter("FechaIngresoHosp", typeof(System.DateTime));
    
            var fechaCorteHospParameter = fechaCorteHosp.HasValue ?
                new ObjectParameter("FechaCorteHosp", fechaCorteHosp) :
                new ObjectParameter("FechaCorteHosp", typeof(System.DateTime));
    
            var establecimiento01Parameter = establecimiento01 != null ?
                new ObjectParameter("Establecimiento01", establecimiento01) :
                new ObjectParameter("Establecimiento01", typeof(string));
    
            var referenciaHoja01Parameter = referenciaHoja01 != null ?
                new ObjectParameter("ReferenciaHoja01", referenciaHoja01) :
                new ObjectParameter("ReferenciaHoja01", typeof(string));
    
            var establecimiento02Parameter = establecimiento02 != null ?
                new ObjectParameter("Establecimiento02", establecimiento02) :
                new ObjectParameter("Establecimiento02", typeof(string));
    
            var referenciaHoja02Parameter = referenciaHoja02 != null ?
                new ObjectParameter("ReferenciaHoja02", referenciaHoja02) :
                new ObjectParameter("ReferenciaHoja02", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_GE_PacienteSpring", personaParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombreCompletoParameter, tipoDocumentoParameter, documentoParameter, codigoBarrasParameter, esClienteParameter, esEmpleadoParameter, esOtroParameter, tipoPersonaParameter, esProveedorParameter, fechaNacimientoParameter, ciudadNacimientoParameter, sexoParameter, nacionalidadParameter, estadoCivilParameter, nivelInstruccionParameter, direccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, telefonoParameter, documentoFiscalParameter, documentoIdentidadParameter, aCCIONParameter, edadParameter, rangoEtarioParameter, tipoMedicoParameter, correcionParameter, esPacienteParameter, esEmpresaParameter, paisParameter, flagActualizacionParameter, cuentaMonedaLocal_tmpParameter, cuentaMonedaExtranjera_tmpParameter, correlativoSCTRParameter, seguroDiscamecParameter, codDiscamecParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, lugarNacimientoParameter, celularParameter, celularEmergenciaParameter, parentescoEmergenciaParameter, direccionReferenciaParameter, ultimaFechaModifParameter, tipoPersonaUsuarioParameter, ultimoUsuarioParameter, estadoParameter, direccionEmergenciaParameter, telefonoEmergenciaParameter, bancoMonedaLocalParameter, tipoCuentaLocalParameter, cuentaMonedaLocalParameter, bancoMonedaExtranjeraParameter, tipoCuentaExtranjeraParameter, cuentaMonedaExtranjeraParameter, correoElectronicoParameter, enfermedadGraveFlagParameter, ingresoFechaRegistroParameter, ingresoAplicacionCodigoParameter, ingresoUsuarioParameter, pYMEFlagParameter, pacienteParameter, tipoPacienteParameter, razaParameter, areaLaboralParameter, ocupacionParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoHCSecundarioParameter, tipoAlmacenamientoParameter, tipoHistoriaParameter, tipoSituacionParameter, idUbicacionParameter, lugarProcedenciaParameter, rutaFotoParameter, estadoPacienteParameter, numeroFileParameter, servicioParameter, observacionParameter, indicadorAsistenciaParameter, cantidadAsistenciaParameter, ubicacionHHCCParameter, indicadorMigradoSitedsParameter, numeroCajaParameter, indicadorCodigoBarrasParameter, iDPACIENTE_OKParameter, codigoAseguradoParameter, numeroPolizaParameter, numeroCertificadoParameter, codigoProductoParameter, codigoPlanParameter, tipoParentescoParameter, codigoBeneficioParameter, situacionParameter, tomoActualParameter, indicadorHistoriaFisicaParameter, descripcionHistoriaParameter, personaAntParameter, nombresParameter, busquedaParameter, idPersonalParameter, atencionLugarParameter, atencionParameter, idEstablecimientoIngresoParameter, idServicioIngresoParameter, prestacionParameter, destinoParameter, nroAutorizacionParameter, montoParameter, fechaIngresoHospParameter, fechaCorteHospParameter, establecimiento01Parameter, referenciaHoja01Parameter, establecimiento02Parameter, referenciaHoja02Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_FirmarTriajeSpring(Nullable<int> idTriaje, Nullable<int> tipo, string rutaFoto, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> tamanoImagen, Nullable<int> idEspisodioTriajeHCE)
        {
            var idTriajeParameter = idTriaje.HasValue ?
                new ObjectParameter("IdTriaje", idTriaje) :
                new ObjectParameter("IdTriaje", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            var rutaFotoParameter = rutaFoto != null ?
                new ObjectParameter("RutaFoto", rutaFoto) :
                new ObjectParameter("RutaFoto", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var tamanoImagenParameter = tamanoImagen.HasValue ?
                new ObjectParameter("TamanoImagen", tamanoImagen) :
                new ObjectParameter("TamanoImagen", typeof(int));
    
            var idEspisodioTriajeHCEParameter = idEspisodioTriajeHCE.HasValue ?
                new ObjectParameter("IdEspisodioTriajeHCE", idEspisodioTriajeHCE) :
                new ObjectParameter("IdEspisodioTriajeHCE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_FirmarTriajeSpring", idTriajeParameter, tipoParameter, rutaFotoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tamanoImagenParameter, idEspisodioTriajeHCEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_TriajeHceSpring(string accion, Nullable<System.DateTime> fechaInicio, Nullable<System.TimeSpan> hora, Nullable<int> nivelTriaje, Nullable<int> estadoDocumento, string usuarioCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaCreacion, Nullable<System.DateTime> fechaModificacion, string unidadReplicaciom, Nullable<int> presionMinima, Nullable<int> presionMaxima, Nullable<int> pulso, Nullable<int> respiracion, Nullable<decimal> temperatura, Nullable<decimal> saturacionMaxima, string sintomas, string tiempoEnfermedad, Nullable<int> idPaciente, Nullable<int> indAproTriaje, string sucursal, Nullable<int> idEspecialidad, Nullable<int> idEpisodioTriajeHCE)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.TimeSpan));
    
            var nivelTriajeParameter = nivelTriaje.HasValue ?
                new ObjectParameter("NivelTriaje", nivelTriaje) :
                new ObjectParameter("NivelTriaje", typeof(int));
    
            var estadoDocumentoParameter = estadoDocumento.HasValue ?
                new ObjectParameter("EstadoDocumento", estadoDocumento) :
                new ObjectParameter("EstadoDocumento", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var unidadReplicaciomParameter = unidadReplicaciom != null ?
                new ObjectParameter("UnidadReplicaciom", unidadReplicaciom) :
                new ObjectParameter("UnidadReplicaciom", typeof(string));
    
            var presionMinimaParameter = presionMinima.HasValue ?
                new ObjectParameter("PresionMinima", presionMinima) :
                new ObjectParameter("PresionMinima", typeof(int));
    
            var presionMaximaParameter = presionMaxima.HasValue ?
                new ObjectParameter("PresionMaxima", presionMaxima) :
                new ObjectParameter("PresionMaxima", typeof(int));
    
            var pulsoParameter = pulso.HasValue ?
                new ObjectParameter("Pulso", pulso) :
                new ObjectParameter("Pulso", typeof(int));
    
            var respiracionParameter = respiracion.HasValue ?
                new ObjectParameter("Respiracion", respiracion) :
                new ObjectParameter("Respiracion", typeof(int));
    
            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));
    
            var saturacionMaximaParameter = saturacionMaxima.HasValue ?
                new ObjectParameter("SaturacionMaxima", saturacionMaxima) :
                new ObjectParameter("SaturacionMaxima", typeof(decimal));
    
            var sintomasParameter = sintomas != null ?
                new ObjectParameter("Sintomas", sintomas) :
                new ObjectParameter("Sintomas", typeof(string));
    
            var tiempoEnfermedadParameter = tiempoEnfermedad != null ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var indAproTriajeParameter = indAproTriaje.HasValue ?
                new ObjectParameter("IndAproTriaje", indAproTriaje) :
                new ObjectParameter("IndAproTriaje", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idEpisodioTriajeHCEParameter = idEpisodioTriajeHCE.HasValue ?
                new ObjectParameter("IdEpisodioTriajeHCE", idEpisodioTriajeHCE) :
                new ObjectParameter("IdEpisodioTriajeHCE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_TriajeHceSpring", accionParameter, fechaInicioParameter, horaParameter, nivelTriajeParameter, estadoDocumentoParameter, usuarioCreacionParameter, usuarioModificacionParameter, fechaCreacionParameter, fechaModificacionParameter, unidadReplicaciomParameter, presionMinimaParameter, presionMaximaParameter, pulsoParameter, respiracionParameter, temperaturaParameter, saturacionMaximaParameter, sintomasParameter, tiempoEnfermedadParameter, idPacienteParameter, indAproTriajeParameter, sucursalParameter, idEspecialidadParameter, idEpisodioTriajeHCEParameter);
        }
    }
}
