//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using SoluccionSalud.Entidades.Entidades;
using System.Data.Entity.Core.Objects;


namespace SoluccionSalud.ModelERP_FORM
{
    public partial class ModelFormularios : DbContext
    {
        public ModelFormularios()
            : base("name=ModelFormularios")
        {
            Configuration.LazyLoadingEnabled = false;
            Configuration.ProxyCreationEnabled = false;
            Database.CommandTimeout = 300000;
            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 300000;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<SS_HC_DescansoMedico_FE> SS_HC_DescansoMedico_FE { get; set; }
        public virtual DbSet<SS_HC_Diagnostico_FE> SS_HC_Diagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_ProximaAtencion_FE> SS_HC_ProximaAtencion_FE { get; set; }
        public virtual DbSet<SS_HC_ProximaAtencionDiagnostico_FE> SS_HC_ProximaAtencionDiagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_Anamnesis_AF_Enfermedad_FE> SS_HC_Anamnesis_AF_Enfermedad_FE { get; set; }
        public virtual DbSet<SS_HC_Anamnesis_AF_FE> SS_HC_Anamnesis_AF_FE { get; set; }
        public virtual DbSet<SS_HC_Anamnesis_AFAM_Enfermedad_FE> SS_HC_Anamnesis_AFAM_Enfermedad_FE { get; set; }
        public virtual DbSet<SS_HC_InterConsulta_FE> SS_HC_InterConsulta_FE { get; set; }
        public virtual DbSet<SS_HC_SolucitudTransfusionalDiagnostico_FE> SS_HC_SolucitudTransfusionalDiagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_AntecedentesPersonalesINDetalle_FE> SS_HC_AntecedentesPersonalesINDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_AntecedentesPersonalesIAdulDetalle_FE> SS_HC_AntecedentesPersonalesIAdulDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_CONTRARREFERENCIA_FE> SS_HC_CONTRARREFERENCIA_FE { get; set; }
        public virtual DbSet<SS_HC_CONTRARREFERENCIA_Diagnostico_FE> SS_HC_CONTRARREFERENCIA_Diagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_GINECOOBSTETRICOS_Diagnostico_FE> SS_HC_GINECOOBSTETRICOS_Diagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_AntePerGinecoObstetricosCatalogoCirugia_FE> SS_HC_AntePerGinecoObstetricosCatalogoCirugia_FE { get; set; }
        public virtual DbSet<SS_HC_AntePerGinecoObstetricos_FE> SS_HC_AntePerGinecoObstetricos_FE { get; set; }
        public virtual DbSet<SS_HC_Anamnesis_AFAM_CAB_FE> SS_HC_Anamnesis_AFAM_CAB_FE { get; set; }
        public virtual DbSet<SS_HC_EvolucionMedica_FE> SS_HC_EvolucionMedica_FE { get; set; }
        public virtual DbSet<SS_HC_DescansoMedico_Diagnostico_FE> SS_HC_DescansoMedico_Diagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_SolucitudTransfusional_FE> SS_HC_SolucitudTransfusional_FE { get; set; }
        public virtual DbSet<SS_HC_ValoracionAM_FE> SS_HC_ValoracionAM_FE { get; set; }
        public virtual DbSet<SS_HC_ValoracionFuncionalAM_FE> SS_HC_ValoracionFuncionalAM_FE { get; set; }
        public virtual DbSet<SS_HC_ValoracionSocioFamAM_FE> SS_HC_ValoracionSocioFamAM_FE { get; set; }
        public virtual DbSet<SS_HC_ValoracionMentalAM_FE> SS_HC_ValoracionMentalAM_FE { get; set; }
        public virtual DbSet<SS_HC_ENFER_VIGI_CATETERURINARIO_FE> SS_HC_ENFER_VIGI_CATETERURINARIO_FE { get; set; }
        public virtual DbSet<SS_HC_ENFER_VIGI_CateterPeriferico_FE> SS_HC_ENFER_VIGI_CateterPeriferico_FE { get; set; }
        public virtual DbSet<SS_HC_ENFER_VIGI_VentilacionMecanica_FE> SS_HC_ENFER_VIGI_VentilacionMecanica_FE { get; set; }
        public virtual DbSet<SS_HC_Referencia_FE> SS_HC_Referencia_FE { get; set; }
        public virtual DbSet<SS_HC_ReferenciaDetalle_FE> SS_HC_ReferenciaDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_Evaluacion_DolorEvaAdultos_FE> SS_HC_Evaluacion_DolorEvaAdultos_FE { get; set; }
        public virtual DbSet<SS_HC_Evaluacion_GradoDependencia_FE> SS_HC_Evaluacion_GradoDependencia_FE { get; set; }
        public virtual DbSet<SS_HC_Indicaciones_FE> SS_HC_Indicaciones_FE { get; set; }
        public virtual DbSet<SS_HC_Evaluacion_DolorEvaNinios_FE> SS_HC_Evaluacion_DolorEvaNinios_FE { get; set; }
        public virtual DbSet<SS_HC_EvaluacionNeonatos_FE> SS_HC_EvaluacionNeonatos_FE { get; set; }
        public virtual DbSet<SS_HC_SeguridadCirugia_Pausa_FE> SS_HC_SeguridadCirugia_Pausa_FE { get; set; }
        public virtual DbSet<SS_HC_SeguridadCirugia_FE> SS_HC_SeguridadCirugia_FE { get; set; }
        public virtual DbSet<SS_HC_AntecedentesPersonalesFisiologicos_FE> SS_HC_AntecedentesPersonalesFisiologicos_FE { get; set; }
        public virtual DbSet<SS_HC_Medicamento_FE> SS_HC_Medicamento_FE { get; set; }
        public virtual DbSet<SS_HC_EscalaBromage_FE> SS_HC_EscalaBromage_FE { get; set; }
        public virtual DbSet<SS_HC_EscalaStewart_FE> SS_HC_EscalaStewart_FE { get; set; }
        public virtual DbSet<SS_HC_EscalaAldrete_FE> SS_HC_EscalaAldrete_FE { get; set; }
        public virtual DbSet<SS_HC_EscalaAltaCirugiaAmbulatoria_FE> SS_HC_EscalaAltaCirugiaAmbulatoria_FE { get; set; }
        public virtual DbSet<SS_HC_EscalaRamsay_FE> SS_HC_EscalaRamsay_FE { get; set; }
        public virtual DbSet<SS_HC_RetiroVoluntario_FE> SS_HC_RetiroVoluntario_FE { get; set; }
        public virtual DbSet<SS_HC_Escala_Glasgow_FE> SS_HC_Escala_Glasgow_FE { get; set; }
        public virtual DbSet<SS_HC_EscalaNorton_FE> SS_HC_EscalaNorton_FE { get; set; }
        public virtual DbSet<SS_HC_EscalaSedacionRass_FE> SS_HC_EscalaSedacionRass_FE { get; set; }
        public virtual DbSet<SS_HC_ApoyoDiagnostico_FE> SS_HC_ApoyoDiagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_ApoyoDiagnosticoDet_FE> SS_HC_ApoyoDiagnosticoDet_FE { get; set; }
        public virtual DbSet<SS_HC_Evaluacion_DolorEvaNeonatosPrematuros_FE> SS_HC_Evaluacion_DolorEvaNeonatosPrematuros_FE { get; set; }
        public virtual DbSet<SS_HC_EscalaWoodDownes_FE> SS_HC_EscalaWoodDownes_FE { get; set; }
        public virtual DbSet<SS_HC_ExamenSolicitadoDet_FE> SS_HC_ExamenSolicitadoDet_FE { get; set; }
        public virtual DbSet<SS_HC_EnfermedadActual_FE> SS_HC_EnfermedadActual_FE { get; set; }
        public virtual DbSet<SS_HC_EnfermedadActualDetalle_FE> SS_HC_EnfermedadActualDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_EvolucionObstetricaPuerperio_FE> SS_HC_EvolucionObstetricaPuerperio_FE { get; set; }
        public virtual DbSet<SS_HC_InformeAlta_Diagnostico_FE> SS_HC_InformeAlta_Diagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_InformeAlta_Examen_FE> SS_HC_InformeAlta_Examen_FE { get; set; }
        public virtual DbSet<SS_HC_InformeAlta_FE> SS_HC_InformeAlta_FE { get; set; }
        public virtual DbSet<SS_HC_Alergia_FE> SS_HC_Alergia_FE { get; set; }
        public virtual DbSet<SS_HC_AlergiaDetalle_FE> SS_HC_AlergiaDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_VIGILANCIA_DISPOSITIVOS_FE> SS_HC_VIGILANCIA_DISPOSITIVOS_FE { get; set; }
        public virtual DbSet<SS_HC_InformeAltaAPD_FE> SS_HC_InformeAltaAPD_FE { get; set; }
        public virtual DbSet<SS_HC_InformeAltaDiagAlt_FE> SS_HC_InformeAltaDiagAlt_FE { get; set; }
        public virtual DbSet<SS_HC_InformeAltaDiagIng_FE> SS_HC_InformeAltaDiagIng_FE { get; set; }
        public virtual DbSet<SS_HC_InformeAltaProxCita_FE> SS_HC_InformeAltaProxCita_FE { get; set; }
        public virtual DbSet<SS_HC_MedicamentoAlta_FE> SS_HC_MedicamentoAlta_FE { get; set; }
        public virtual DbSet<SS_HC_SolucionesAdministradas_FE> SS_HC_SolucionesAdministradas_FE { get; set; }
        public virtual DbSet<SS_HC_ApoyoDiagnosticoFile_FE> SS_HC_ApoyoDiagnosticoFile_FE { get; set; }
        public virtual DbSet<SS_HC_BalanceHidroElect_FE> SS_HC_BalanceHidroElect_FE { get; set; }
        public virtual DbSet<SS_HC_BalanceHidroElectDetalle_FE> SS_HC_BalanceHidroElectDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_Monitoreo_Obs_Diagnostico_FE> SS_HC_Monitoreo_Obs_Diagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_Monitoreo_Obs_FE> SS_HC_Monitoreo_Obs_FE { get; set; }
        public virtual DbSet<SS_HC_FichaAnestesia_1_FE> SS_HC_FichaAnestesia_1_FE { get; set; }
        public virtual DbSet<SS_HC_AnestesiaDiagnosticoDetalle_FE> SS_HC_AnestesiaDiagnosticoDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_AnestesiaExamenApoyoDetalle_FE> SS_HC_AnestesiaExamenApoyoDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_Monitoreo_Obs_Ing_FE> SS_HC_Monitoreo_Obs_Ing_FE { get; set; }
        public virtual DbSet<SS_HC_Partograma_FE> SS_HC_Partograma_FE { get; set; }
        public virtual DbSet<SS_HC_PartogramaDetalle_FE> SS_HC_PartogramaDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_RESPARTO_EMB_ACT_FE> SS_HC_RESPARTO_EMB_ACT_FE { get; set; }
        public virtual DbSet<SS_HC_RESPARTO_EMB_ANT_FE> SS_HC_RESPARTO_EMB_ANT_FE { get; set; }
        public virtual DbSet<SS_HC_RESUMEN_PARTO_FE> SS_HC_RESUMEN_PARTO_FE { get; set; }
        public virtual DbSet<SS_HC_FuncionesVitales_FE> SS_HC_FuncionesVitales_FE { get; set; }
        public virtual DbSet<SS_HC_Ant_Fisiologico_Pediatrico_FE> SS_HC_Ant_Fisiologico_Pediatrico_FE { get; set; }
        public virtual DbSet<SS_HC_Anamnesis_AFAM_FE> SS_HC_Anamnesis_AFAM_FE { get; set; }
        public virtual DbSet<SS_HC_AntecedentesPersonalesIAdul_FE> SS_HC_AntecedentesPersonalesIAdul_FE { get; set; }
        public virtual DbSet<SS_HC_AntecedentesPersonalesIN_FE> SS_HC_AntecedentesPersonalesIN_FE { get; set; }
        public virtual DbSet<SS_HC_Anam_AP_PatologicosGenerales_FE> SS_HC_Anam_AP_PatologicosGenerales_FE { get; set; }
        public virtual DbSet<SS_HC_Anam_AP_PatologicosGeneralesDetalle_FE> SS_HC_Anam_AP_PatologicosGeneralesDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_Apoyo_Diagnostico_FE> SS_HC_Apoyo_Diagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_ExamenSolicitadoFE> SS_HC_ExamenSolicitadoFE { get; set; }
        public virtual DbSet<SS_HC_ExamenSolicitado_Diagnostico_FE> SS_HC_ExamenSolicitado_Diagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_Pre_Operatorio_1_FE> SS_HC_Pre_Operatorio_1_FE { get; set; }
        public virtual DbSet<rptViewPreOperatorio_1_FE> rptViewPreOperatorio_1_FE { get; set; }
        public virtual DbSet<SS_HC_Pre_Operatorio_2_FE> SS_HC_Pre_Operatorio_2_FE { get; set; }
        public virtual DbSet<rptViewPreOperatorio2> rptViewPreOperatorio2 { get; set; }
        public virtual DbSet<SS_HC_Kardex1_FE> SS_HC_Kardex1_FE { get; set; }
        public virtual DbSet<SS_HC_Medicamento_Kardex> SS_HC_Medicamento_Kardex { get; set; }
        public virtual DbSet<SS_HC_Kardex3FE> SS_HC_Kardex3FE { get; set; }
        public virtual DbSet<SS_HC_Medicamento_Kardex_FE> SS_HC_Medicamento_Kardex_FE { get; set; }
        public virtual DbSet<SS_HC_Ficha_Anestesia_2_FE> SS_HC_Ficha_Anestesia_2_FE { get; set; }
        public virtual DbSet<SS_HC_Ficha_Anestesia_5_FE> SS_HC_Ficha_Anestesia_5_FE { get; set; }
        public virtual DbSet<SS_HC_FichaAnestesia_2_FE> SS_HC_FichaAnestesia_2_FE { get; set; }
        public virtual DbSet<SS_HC_FichaAnestesia_3_FE> SS_HC_FichaAnestesia_3_FE { get; set; }
        public virtual DbSet<SS_HC_FichaAnestesia_5_FE> SS_HC_FichaAnestesia_5_FE { get; set; }
        public virtual DbSet<SS_HC_Medicamento_FE_Epi2> SS_HC_Medicamento_FE_Epi2 { get; set; }
        public virtual DbSet<SS_HC_Anestesia_Farmaco_FE> SS_HC_Anestesia_Farmaco_FE { get; set; }
        public virtual DbSet<SS_HC_Anestesia_Farmacos_Detalle_FE> SS_HC_Anestesia_Farmacos_Detalle_FE { get; set; }
        public virtual DbSet<SS_HC_Examen_Kardex_FE> SS_HC_Examen_Kardex_FE { get; set; }
        public virtual DbSet<SS_HC_InterConsulta_Kardex_FE> SS_HC_InterConsulta_Kardex_FE { get; set; }
        public virtual DbSet<SS_HC_Epicrisis_3_Diag_Principal> SS_HC_Epicrisis_3_Diag_Principal { get; set; }
        public virtual DbSet<SS_HC_Epicrisis_3_Diag_Secundaria> SS_HC_Epicrisis_3_Diag_Secundaria { get; set; }
        public virtual DbSet<SS_HC_Epicrisis_3_Diagnostico> SS_HC_Epicrisis_3_Diagnostico { get; set; }
        public virtual DbSet<SS_HC_Epicrisis_3> SS_HC_Epicrisis_3 { get; set; }
        public virtual DbSet<SS_HC_ExamenClinico_FE> SS_HC_ExamenClinico_FE { get; set; }
        public virtual DbSet<SS_HC_HojaRecienNacido_FE> SS_HC_HojaRecienNacido_FE { get; set; }
        public virtual DbSet<SS_HC_HojaRecienNacidoDetalle_FE> SS_HC_HojaRecienNacidoDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_Oftalmologico_FE> SS_HC_Oftalmologico_FE { get; set; }
        public virtual DbSet<SS_FA_Notificacion> SS_FA_Notificacion { get; set; }
        public virtual DbSet<SS_FA_NotificacionDetalle> SS_FA_NotificacionDetalle { get; set; }
        

        public virtual DbSet<SS_HC_Nota_Ingreso_FE> SS_HC_Nota_Ingreso_FE { get; set; }
        public virtual DbSet<SS_HC_NotasIngreso_FE> SS_HC_NotasIngreso_FE { get; set; }
        public virtual DbSet<SS_HC_NotaIngreso_Diagnostico_FE> SS_HC_NotaIngreso_Diagnostico_FE { get; set; }
        public virtual DbSet<SS_HC_NotaIngreso_ExamenApoyo_FE> SS_HC_NotaIngreso_ExamenApoyo_FE { get; set; }
        public virtual DbSet<SS_HC_EpisodioNotificaciones_FE> SS_HC_EpisodioNotificaciones_FE { get; set; }
        public virtual DbSet<SS_HC_TriajeEmergencia_FE> SS_HC_TriajeEmergencia_FE { get; set; }
        public virtual DbSet<SS_HC_Triaje_Ant_Alergia_FE> SS_HC_Triaje_Ant_Alergia_FE { get; set; }
        public virtual DbSet<SS_HC_Triaje_Ant_AlergiaDetalle_FE> SS_HC_Triaje_Ant_AlergiaDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_EpisodioTriaje> SS_HC_EpisodioTriaje { get; set; }
        public virtual DbSet<SS_HC_SolicitudTransfusional_2_FE> SS_HC_SolicitudTransfusional_2_FE { get; set; }
        public virtual DbSet<SS_HC_Epicrisis_2_Detalle_FE> SS_HC_Epicrisis_2_Detalle_FE { get; set; }
        public virtual DbSet<SS_HC_Epicrisis_2_FE> SS_HC_Epicrisis_2_FE { get; set; }
        public virtual DbSet<SS_HC_Epicrisis_1_Detalle_FE> SS_HC_Epicrisis_1_Detalle_FE { get; set; }
        public virtual DbSet<SS_HC_Epicrisis_1_FE> SS_HC_Epicrisis_1_FE { get; set; }
        public virtual DbSet<SS_HC_OrdenInterQuiruDiagnosticoDetalle_FE> SS_HC_OrdenInterQuiruDiagnosticoDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_OrdenInterQuiruExamenApoyoDetalle_FE> SS_HC_OrdenInterQuiruExamenApoyoDetalle_FE { get; set; }
        public virtual DbSet<SS_HC_OrdenIntervencionQuirurgicaCab_FE> SS_HC_OrdenIntervencionQuirurgicaCab_FE { get; set; }
        public virtual DbSet<SS_HC_Epidemiologia_FE> SS_HC_Epidemiologia_FE { get; set; }
        public virtual DbSet<SS_HC_EpidemiologiaDetalleLugar_FE> SS_HC_EpidemiologiaDetalleLugar_FE { get; set; }
        public virtual DbSet<SS_HC_EpidemiologiaDetalleCasos_FE> SS_HC_EpidemiologiaDetalleCasos_FE { get; set; }
        public virtual DbSet<SS_HC_NotasEnfermeria_FE> SS_HC_NotasEnfermeria_FE { get; set; }
        public virtual DbSet<SS_HC_InterConsulta_Epricrisis3_FE> SS_HC_InterConsulta_Epricrisis3_FE { get; set; }
        public virtual DbSet<SS_HC_RESUMEN_PARTO_FE_2> SS_HC_RESUMEN_PARTO_FE_2 { get; set; }
        public virtual DbSet<SS_HC_RESUMEN_PARTO_FE_3> SS_HC_RESUMEN_PARTO_FE_3 { get; set; }

        public virtual ObjectResult<Nullable<int>> USP_DescansoMedico_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fechaInicioDescanso, Nullable<System.DateTime> fechaFinDescanso, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> dias, Nullable<System.DateTime> fecha, Nullable<int> idDiagnostico, Nullable<int> idFormaInicio)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaInicioDescansoParameter = fechaInicioDescanso.HasValue ?
                new ObjectParameter("FechaInicioDescanso", fechaInicioDescanso) :
                new ObjectParameter("FechaInicioDescanso", typeof(System.DateTime));

            var fechaFinDescansoParameter = fechaFinDescanso.HasValue ?
                new ObjectParameter("FechaFinDescanso", fechaFinDescanso) :
                new ObjectParameter("FechaFinDescanso", typeof(System.DateTime));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var diasParameter = dias.HasValue ?
                new ObjectParameter("Dias", dias) :
                new ObjectParameter("Dias", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_DescansoMedico_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaInicioDescansoParameter, fechaFinDescansoParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, diasParameter, fechaParameter, idDiagnosticoParameter, idFormaInicioParameter);
        }

        public virtual ObjectResult<SS_HC_DescansoMedico_FE> USP_DescansoMedicoListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fechaInicioDescanso, Nullable<System.DateTime> fechaFinDescanso, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> dias, Nullable<int> idFormaInicio)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaInicioDescansoParameter = fechaInicioDescanso.HasValue ?
                new ObjectParameter("FechaInicioDescanso", fechaInicioDescanso) :
                new ObjectParameter("FechaInicioDescanso", typeof(System.DateTime));

            var fechaFinDescansoParameter = fechaFinDescanso.HasValue ?
                new ObjectParameter("FechaFinDescanso", fechaFinDescanso) :
                new ObjectParameter("FechaFinDescanso", typeof(System.DateTime));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var diasParameter = dias.HasValue ?
                new ObjectParameter("Dias", dias) :
                new ObjectParameter("Dias", typeof(int));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_DescansoMedico_FE>("USP_DescansoMedicoListar_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaInicioDescansoParameter, fechaFinDescansoParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, diasParameter, idFormaInicioParameter);
        }

        public virtual ObjectResult<SS_HC_DescansoMedico_FE> USP_DescansoMedicoListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fechaInicioDescanso, Nullable<System.DateTime> fechaFinDescanso, string observacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> dias, Nullable<int> idFormaInicio, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaInicioDescansoParameter = fechaInicioDescanso.HasValue ?
                new ObjectParameter("FechaInicioDescanso", fechaInicioDescanso) :
                new ObjectParameter("FechaInicioDescanso", typeof(System.DateTime));

            var fechaFinDescansoParameter = fechaFinDescanso.HasValue ?
                new ObjectParameter("FechaFinDescanso", fechaFinDescanso) :
                new ObjectParameter("FechaFinDescanso", typeof(System.DateTime));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var diasParameter = dias.HasValue ?
                new ObjectParameter("Dias", dias) :
                new ObjectParameter("Dias", typeof(int));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_DescansoMedico_FE>("USP_DescansoMedicoListar_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaInicioDescansoParameter, fechaFinDescansoParameter, observacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, diasParameter, idFormaInicioParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_Diagnostico_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fechaRegistro, Nullable<int> idDiagnostico, Nullable<int> idDiagnosticoValoracion, string determinacionDiagnostica, Nullable<int> idDiagnosticoPrincipal, string gradoAfeccion, string observacion, Nullable<int> indicadorAntecedente, string tipoAntecedente, Nullable<int> indicadorPreExistencia, Nullable<int> indicadorCronico, Nullable<int> indicadorNuevo, string detalleDiagnostico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var idDiagnosticoValoracionParameter = idDiagnosticoValoracion.HasValue ?
                new ObjectParameter("IdDiagnosticoValoracion", idDiagnosticoValoracion) :
                new ObjectParameter("IdDiagnosticoValoracion", typeof(int));

            var determinacionDiagnosticaParameter = determinacionDiagnostica != null ?
                new ObjectParameter("DeterminacionDiagnostica", determinacionDiagnostica) :
                new ObjectParameter("DeterminacionDiagnostica", typeof(string));

            var idDiagnosticoPrincipalParameter = idDiagnosticoPrincipal.HasValue ?
                new ObjectParameter("IdDiagnosticoPrincipal", idDiagnosticoPrincipal) :
                new ObjectParameter("IdDiagnosticoPrincipal", typeof(int));

            var gradoAfeccionParameter = gradoAfeccion != null ?
                new ObjectParameter("GradoAfeccion", gradoAfeccion) :
                new ObjectParameter("GradoAfeccion", typeof(string));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var indicadorAntecedenteParameter = indicadorAntecedente.HasValue ?
                new ObjectParameter("IndicadorAntecedente", indicadorAntecedente) :
                new ObjectParameter("IndicadorAntecedente", typeof(int));

            var tipoAntecedenteParameter = tipoAntecedente != null ?
                new ObjectParameter("TipoAntecedente", tipoAntecedente) :
                new ObjectParameter("TipoAntecedente", typeof(string));

            var indicadorPreExistenciaParameter = indicadorPreExistencia.HasValue ?
                new ObjectParameter("IndicadorPreExistencia", indicadorPreExistencia) :
                new ObjectParameter("IndicadorPreExistencia", typeof(int));

            var indicadorCronicoParameter = indicadorCronico.HasValue ?
                new ObjectParameter("IndicadorCronico", indicadorCronico) :
                new ObjectParameter("IndicadorCronico", typeof(int));

            var indicadorNuevoParameter = indicadorNuevo.HasValue ?
                new ObjectParameter("IndicadorNuevo", indicadorNuevo) :
                new ObjectParameter("IndicadorNuevo", typeof(int));

            var detalleDiagnosticoParameter = detalleDiagnostico != null ?
                new ObjectParameter("DetalleDiagnostico", detalleDiagnostico) :
                new ObjectParameter("DetalleDiagnostico", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_Diagnostico_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaRegistroParameter, idDiagnosticoParameter, idDiagnosticoValoracionParameter, determinacionDiagnosticaParameter, idDiagnosticoPrincipalParameter, gradoAfeccionParameter, observacionParameter, indicadorAntecedenteParameter, tipoAntecedenteParameter, indicadorPreExistenciaParameter, indicadorCronicoParameter, indicadorNuevoParameter, detalleDiagnosticoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Diagnostico_FE> USP_DiagnosticoListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fechaRegistro, Nullable<int> idDiagnostico, Nullable<int> idDiagnosticoValoracion, string determinacionDiagnostica, Nullable<int> idDiagnosticoPrincipal, string gradoAfeccion, string observacion, Nullable<int> indicadorAntecedente, string tipoAntecedente, Nullable<int> indicadorPreExistencia, Nullable<int> indicadorCronico, Nullable<int> indicadorNuevo, string detalleDiagnostico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var idDiagnosticoValoracionParameter = idDiagnosticoValoracion.HasValue ?
                new ObjectParameter("IdDiagnosticoValoracion", idDiagnosticoValoracion) :
                new ObjectParameter("IdDiagnosticoValoracion", typeof(int));

            var determinacionDiagnosticaParameter = determinacionDiagnostica != null ?
                new ObjectParameter("DeterminacionDiagnostica", determinacionDiagnostica) :
                new ObjectParameter("DeterminacionDiagnostica", typeof(string));

            var idDiagnosticoPrincipalParameter = idDiagnosticoPrincipal.HasValue ?
                new ObjectParameter("IdDiagnosticoPrincipal", idDiagnosticoPrincipal) :
                new ObjectParameter("IdDiagnosticoPrincipal", typeof(int));

            var gradoAfeccionParameter = gradoAfeccion != null ?
                new ObjectParameter("GradoAfeccion", gradoAfeccion) :
                new ObjectParameter("GradoAfeccion", typeof(string));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var indicadorAntecedenteParameter = indicadorAntecedente.HasValue ?
                new ObjectParameter("IndicadorAntecedente", indicadorAntecedente) :
                new ObjectParameter("IndicadorAntecedente", typeof(int));

            var tipoAntecedenteParameter = tipoAntecedente != null ?
                new ObjectParameter("TipoAntecedente", tipoAntecedente) :
                new ObjectParameter("TipoAntecedente", typeof(string));

            var indicadorPreExistenciaParameter = indicadorPreExistencia.HasValue ?
                new ObjectParameter("IndicadorPreExistencia", indicadorPreExistencia) :
                new ObjectParameter("IndicadorPreExistencia", typeof(int));

            var indicadorCronicoParameter = indicadorCronico.HasValue ?
                new ObjectParameter("IndicadorCronico", indicadorCronico) :
                new ObjectParameter("IndicadorCronico", typeof(int));

            var indicadorNuevoParameter = indicadorNuevo.HasValue ?
                new ObjectParameter("IndicadorNuevo", indicadorNuevo) :
                new ObjectParameter("IndicadorNuevo", typeof(int));

            var detalleDiagnosticoParameter = detalleDiagnostico != null ?
                new ObjectParameter("DetalleDiagnostico", detalleDiagnostico) :
                new ObjectParameter("DetalleDiagnostico", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Diagnostico_FE>("USP_DiagnosticoListar_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaRegistroParameter, idDiagnosticoParameter, idDiagnosticoValoracionParameter, determinacionDiagnosticaParameter, idDiagnosticoPrincipalParameter, gradoAfeccionParameter, observacionParameter, indicadorAntecedenteParameter, tipoAntecedenteParameter, indicadorPreExistenciaParameter, indicadorCronicoParameter, indicadorNuevoParameter, detalleDiagnosticoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Diagnostico_FE> USP_DiagnosticoListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fechaRegistro, Nullable<int> idDiagnostico, Nullable<int> idDiagnosticoValoracion, string determinacionDiagnostica, Nullable<int> idDiagnosticoPrincipal, string gradoAfeccion, string observacion, Nullable<int> indicadorAntecedente, string tipoAntecedente, Nullable<int> indicadorPreExistencia, Nullable<int> indicadorCronico, Nullable<int> indicadorNuevo, string detalleDiagnostico, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var idDiagnosticoValoracionParameter = idDiagnosticoValoracion.HasValue ?
                new ObjectParameter("IdDiagnosticoValoracion", idDiagnosticoValoracion) :
                new ObjectParameter("IdDiagnosticoValoracion", typeof(int));

            var determinacionDiagnosticaParameter = determinacionDiagnostica != null ?
                new ObjectParameter("DeterminacionDiagnostica", determinacionDiagnostica) :
                new ObjectParameter("DeterminacionDiagnostica", typeof(string));

            var idDiagnosticoPrincipalParameter = idDiagnosticoPrincipal.HasValue ?
                new ObjectParameter("IdDiagnosticoPrincipal", idDiagnosticoPrincipal) :
                new ObjectParameter("IdDiagnosticoPrincipal", typeof(int));

            var gradoAfeccionParameter = gradoAfeccion != null ?
                new ObjectParameter("GradoAfeccion", gradoAfeccion) :
                new ObjectParameter("GradoAfeccion", typeof(string));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var indicadorAntecedenteParameter = indicadorAntecedente.HasValue ?
                new ObjectParameter("IndicadorAntecedente", indicadorAntecedente) :
                new ObjectParameter("IndicadorAntecedente", typeof(int));

            var tipoAntecedenteParameter = tipoAntecedente != null ?
                new ObjectParameter("TipoAntecedente", tipoAntecedente) :
                new ObjectParameter("TipoAntecedente", typeof(string));

            var indicadorPreExistenciaParameter = indicadorPreExistencia.HasValue ?
                new ObjectParameter("IndicadorPreExistencia", indicadorPreExistencia) :
                new ObjectParameter("IndicadorPreExistencia", typeof(int));

            var indicadorCronicoParameter = indicadorCronico.HasValue ?
                new ObjectParameter("IndicadorCronico", indicadorCronico) :
                new ObjectParameter("IndicadorCronico", typeof(int));

            var indicadorNuevoParameter = indicadorNuevo.HasValue ?
                new ObjectParameter("IndicadorNuevo", indicadorNuevo) :
                new ObjectParameter("IndicadorNuevo", typeof(int));

            var detalleDiagnosticoParameter = detalleDiagnostico != null ?
                new ObjectParameter("DetalleDiagnostico", detalleDiagnostico) :
                new ObjectParameter("DetalleDiagnostico", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Diagnostico_FE>("USP_DiagnosticoListar_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaRegistroParameter, idDiagnosticoParameter, idDiagnosticoValoracionParameter, determinacionDiagnosticaParameter, idDiagnosticoPrincipalParameter, gradoAfeccionParameter, observacionParameter, indicadorAntecedenteParameter, tipoAntecedenteParameter, indicadorPreExistenciaParameter, indicadorCronicoParameter, indicadorNuevoParameter, detalleDiagnosticoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_ProximaAtencion_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string proximaAtencionFlag, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idEstablecimientoSalud, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacion, Nullable<int> idProcedimiento, string codigoComponente, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPersonalSalud, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));

            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));

            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));

            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ProximaAtencion_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, proximaAtencionFlagParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idEstablecimientoSaludParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionParameter, idProcedimientoParameter, codigoComponenteParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPersonalSaludParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_ApoyoDiagnostico_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string nroInforme, string observacion, Nullable<System.DateTime> fechaSolicitada, Nullable<int> idEspecialidad, Nullable<int> idTipoInterConsulta, Nullable<int> idProcedimiento, Nullable<int> tipoOrdenAtencion, string codigoComponente, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText, string nombre, string rutaInforme, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var nroInformeParameter = nroInforme != null ?
                new ObjectParameter("NroInforme", nroInforme) :
                new ObjectParameter("NroInforme", typeof(string));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));

            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));

            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));

            var rutaInformeParameter = rutaInforme != null ?
                new ObjectParameter("RutaInforme", rutaInforme) :
                new ObjectParameter("RutaInforme", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ApoyoDiagnostico_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, nroInformeParameter, observacionParameter, fechaSolicitadaParameter, idEspecialidadParameter, idTipoInterConsultaParameter, idProcedimientoParameter, tipoOrdenAtencionParameter, codigoComponenteParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter, nombreParameter, rutaInformeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual int USP_ApoyoDiagnostico_FEListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string nroInforme, string observacion, Nullable<System.DateTime> fechaSolicitada, Nullable<int> idEspecialidad, Nullable<int> idTipoInterConsulta, Nullable<int> idProcedimiento, Nullable<int> tipoOrdenAtencion, string codigoComponente, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var nroInformeParameter = nroInforme != null ?
                new ObjectParameter("NroInforme", nroInforme) :
                new ObjectParameter("NroInforme", typeof(string));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));

            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_ApoyoDiagnostico_FEListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, nroInformeParameter, observacionParameter, fechaSolicitadaParameter, idEspecialidadParameter, idTipoInterConsultaParameter, idProcedimientoParameter, tipoOrdenAtencionParameter, codigoComponenteParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_ExamenSolicitadoFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idProcedimiento, Nullable<int> idEspecialidad, Nullable<int> idTipoExamen, Nullable<System.DateTime> fechaSolitada, string conceptos, string codigoComponente, string observacion, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string tipoCodigo, string codigoSegus, string version, Nullable<int> cantidad, string resumen, string motivo, string tipoExamen, string accion, Nullable<int> idDiagnostico)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idTipoExamenParameter = idTipoExamen.HasValue ?
                new ObjectParameter("IdTipoExamen", idTipoExamen) :
                new ObjectParameter("IdTipoExamen", typeof(int));

            var fechaSolitadaParameter = fechaSolitada.HasValue ?
                new ObjectParameter("FechaSolitada", fechaSolitada) :
                new ObjectParameter("FechaSolitada", typeof(System.DateTime));

            var conceptosParameter = conceptos != null ?
                new ObjectParameter("Conceptos", conceptos) :
                new ObjectParameter("Conceptos", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var tipoCodigoParameter = tipoCodigo != null ?
                new ObjectParameter("TipoCodigo", tipoCodigo) :
                new ObjectParameter("TipoCodigo", typeof(string));

            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));

            var resumenParameter = resumen != null ?
                new ObjectParameter("Resumen", resumen) :
                new ObjectParameter("Resumen", typeof(string));

            var motivoParameter = motivo != null ?
                new ObjectParameter("Motivo", motivo) :
                new ObjectParameter("Motivo", typeof(string));

            var tipoExamenParameter = tipoExamen != null ?
                new ObjectParameter("TipoExamen", tipoExamen) :
                new ObjectParameter("TipoExamen", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_ExamenSolicitadoFE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idProcedimientoParameter, idEspecialidadParameter, idTipoExamenParameter, fechaSolitadaParameter, conceptosParameter, codigoComponenteParameter, observacionParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoCodigoParameter, codigoSegusParameter, versionParameter, cantidadParameter, resumenParameter, motivoParameter, tipoExamenParameter, accionParameter, idDiagnosticoParameter);
        }

        public virtual ObjectResult<SS_HC_ExamenSolicitadoFE> USP_ExamenSolicitadoListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idProcedimiento, Nullable<int> idEspecialidad, Nullable<System.DateTime> fechaSolitada, string codigoComponente, string observacion, Nullable<int> indicadorEPS, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string tipoCodigo, string codigoSegus, string version, Nullable<int> cantidad, string accion, Nullable<int> inicio, Nullable<int> numerofilas)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var fechaSolitadaParameter = fechaSolitada.HasValue ?
                new ObjectParameter("FechaSolitada", fechaSolitada) :
                new ObjectParameter("FechaSolitada", typeof(System.DateTime));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var tipoCodigoParameter = tipoCodigo != null ?
                new ObjectParameter("TipoCodigo", tipoCodigo) :
                new ObjectParameter("TipoCodigo", typeof(string));

            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(int));

            var numerofilasParameter = numerofilas.HasValue ?
                new ObjectParameter("numerofilas", numerofilas) :
                new ObjectParameter("numerofilas", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ExamenSolicitadoFE>("USP_ExamenSolicitadoListarFE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idProcedimientoParameter, idEspecialidadParameter, fechaSolitadaParameter, codigoComponenteParameter, observacionParameter, indicadorEPSParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoCodigoParameter, codigoSegusParameter, versionParameter, cantidadParameter, accionParameter, inicioParameter, numerofilasParameter);
        }

        public virtual ObjectResult<SS_HC_ExamenSolicitadoFE> USP_ExamenSolicitadoListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idProcedimiento, Nullable<int> idEspecialidad, Nullable<System.DateTime> fechaSolitada, string codigoComponente, string observacion, Nullable<int> indicadorEPS, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string tipoCodigo, string codigoSegus, string version, Nullable<int> cantidad, string accion, Nullable<int> inicio, Nullable<int> numerofilas, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var fechaSolitadaParameter = fechaSolitada.HasValue ?
                new ObjectParameter("FechaSolitada", fechaSolitada) :
                new ObjectParameter("FechaSolitada", typeof(System.DateTime));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var tipoCodigoParameter = tipoCodigo != null ?
                new ObjectParameter("TipoCodigo", tipoCodigo) :
                new ObjectParameter("TipoCodigo", typeof(string));

            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(int));

            var numerofilasParameter = numerofilas.HasValue ?
                new ObjectParameter("numerofilas", numerofilas) :
                new ObjectParameter("numerofilas", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ExamenSolicitadoFE>("USP_ExamenSolicitadoListarFE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idProcedimientoParameter, idEspecialidadParameter, fechaSolitadaParameter, codigoComponenteParameter, observacionParameter, indicadorEPSParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, tipoCodigoParameter, codigoSegusParameter, versionParameter, cantidadParameter, accionParameter, inicioParameter, numerofilasParameter);
        }

        public virtual ObjectResult<SS_HC_Alergia_FE> USP_Alergia_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tieneHistoria, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string comentarioAdicional, string prioridad, string idMedicamento, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tieneHistoriaParameter = tieneHistoria != null ?
                new ObjectParameter("TieneHistoria", tieneHistoria) :
                new ObjectParameter("TieneHistoria", typeof(string));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var comentarioAdicionalParameter = comentarioAdicional != null ?
                new ObjectParameter("ComentarioAdicional", comentarioAdicional) :
                new ObjectParameter("ComentarioAdicional", typeof(string));

            var prioridadParameter = prioridad != null ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(string));

            var idMedicamentoParameter = idMedicamento != null ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(string));

            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Alergia_FE>("USP_Alergia_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tieneHistoriaParameter, idFormaInicioParameter, idCursoEnfermedadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, comentarioAdicionalParameter, prioridadParameter, idMedicamentoParameter, aCCIONParameter);
        }

        public virtual ObjectResult<SS_HC_Alergia_FE> USP_Alergia_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tieneHistoria, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string comentarioAdicional, string prioridad, string idMedicamento, string aCCION, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tieneHistoriaParameter = tieneHistoria != null ?
                new ObjectParameter("TieneHistoria", tieneHistoria) :
                new ObjectParameter("TieneHistoria", typeof(string));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var comentarioAdicionalParameter = comentarioAdicional != null ?
                new ObjectParameter("ComentarioAdicional", comentarioAdicional) :
                new ObjectParameter("ComentarioAdicional", typeof(string));

            var prioridadParameter = prioridad != null ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(string));

            var idMedicamentoParameter = idMedicamento != null ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(string));

            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Alergia_FE>("USP_Alergia_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tieneHistoriaParameter, idFormaInicioParameter, idCursoEnfermedadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, comentarioAdicionalParameter, prioridadParameter, idMedicamentoParameter, aCCIONParameter);
        }

        public virtual ObjectResult<SS_HC_InterConsulta_FE> USP_InterConsulta_FEListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string proximaAtencionFlag, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idEstablecimientoSalud, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacion, Nullable<int> idProcedimiento, string codigoComponente, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPersonalSalud, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));

            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));

            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));

            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_InterConsulta_FE>("USP_InterConsulta_FEListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, proximaAtencionFlagParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idEstablecimientoSaludParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionParameter, idProcedimientoParameter, codigoComponenteParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPersonalSaludParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter);
        }

        public virtual ObjectResult<SS_HC_InterConsulta_FE> USP_InterConsulta_FEListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string proximaAtencionFlag, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idEstablecimientoSalud, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacion, Nullable<int> idProcedimiento, string codigoComponente, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPersonalSalud, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));

            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));

            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));

            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_InterConsulta_FE>("USP_InterConsulta_FEListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, proximaAtencionFlagParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idEstablecimientoSaludParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionParameter, idProcedimientoParameter, codigoComponenteParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPersonalSaludParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter);
        }

        public virtual ObjectResult<SS_HC_ProximaAtencion_FE> USP_ProximaAtencion_FEListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string proximaAtencionFlag, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idEstablecimientoSalud, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacion, Nullable<int> idProcedimiento, string codigoComponente, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPersonalSalud, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));

            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));

            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));

            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ProximaAtencion_FE>("USP_ProximaAtencion_FEListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, proximaAtencionFlagParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idEstablecimientoSaludParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionParameter, idProcedimientoParameter, codigoComponenteParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPersonalSaludParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter);
        }

        public virtual ObjectResult<SS_HC_ProximaAtencion_FE> USP_ProximaAtencion_FEListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string proximaAtencionFlag, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idEstablecimientoSalud, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacion, Nullable<int> idProcedimiento, string codigoComponente, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPersonalSalud, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));

            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));

            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));

            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ProximaAtencion_FE>("USP_ProximaAtencion_FEListar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, proximaAtencionFlagParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idEstablecimientoSaludParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionParameter, idProcedimientoParameter, codigoComponenteParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPersonalSaludParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter);
        }

        public virtual ObjectResult<SS_HC_AntecedentesPersonalesIN_FE> USP_AntecedentesPersonalesINListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> codigoSecuencia, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var codigoSecuenciaParameter = codigoSecuencia.HasValue ?
                new ObjectParameter("CodigoSecuencia", codigoSecuencia) :
                new ObjectParameter("CodigoSecuencia", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntecedentesPersonalesIN_FE>("USP_AntecedentesPersonalesINListarFE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, codigoSecuenciaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_AntecedentesPersonalesIN_FE> USP_AntecedentesPersonalesINListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> codigoSecuencia, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var codigoSecuenciaParameter = codigoSecuencia.HasValue ?
                new ObjectParameter("CodigoSecuencia", codigoSecuencia) :
                new ObjectParameter("CodigoSecuencia", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntecedentesPersonalesIN_FE>("USP_AntecedentesPersonalesINListarFE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, codigoSecuenciaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_AntecedentesPersonalesINDetalle_FE> USP_AntecedentesPersonalesINDetalleListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntecedentesPersonalesINDetalle_FE>("USP_AntecedentesPersonalesINDetalleListar_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_AntecedentesPersonalesINDetalle_FE> USP_AntecedentesPersonalesINDetalleListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntecedentesPersonalesINDetalle_FE>("USP_AntecedentesPersonalesINDetalleListar_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_AntecedentesPersonalesIAdulDetalle_FE> USP_AntecedentesPersonalesIAdulDetalleListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntecedentesPersonalesIAdulDetalle_FE>("USP_AntecedentesPersonalesIAdulDetalleListar_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_AntecedentesPersonalesIAdulDetalle_FE> USP_AntecedentesPersonalesIAdulDetalleListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntecedentesPersonalesIAdulDetalle_FE>("USP_AntecedentesPersonalesIAdulDetalleListar_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_AntecedentesPersonalesIAdul_FE> USP_AntecedentesPersonalesIAdulListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> codigoSecuencia, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var codigoSecuenciaParameter = codigoSecuencia.HasValue ?
                new ObjectParameter("CodigoSecuencia", codigoSecuencia) :
                new ObjectParameter("CodigoSecuencia", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntecedentesPersonalesIAdul_FE>("USP_AntecedentesPersonalesIAdulListarFE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, codigoSecuenciaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_AntecedentesPersonalesIAdul_FE> USP_AntecedentesPersonalesIAdulListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> codigoSecuencia, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var codigoSecuenciaParameter = codigoSecuencia.HasValue ?
                new ObjectParameter("CodigoSecuencia", codigoSecuencia) :
                new ObjectParameter("CodigoSecuencia", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntecedentesPersonalesIAdul_FE>("USP_AntecedentesPersonalesIAdulListarFE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, codigoSecuenciaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_AntePerGinecoObstetricos_FE> USP_AntePerGinecoObstetricosListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idGinecoobstetricos, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idGinecoobstetricosParameter = idGinecoobstetricos.HasValue ?
                new ObjectParameter("IdGinecoobstetricos", idGinecoobstetricos) :
                new ObjectParameter("IdGinecoobstetricos", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntePerGinecoObstetricos_FE>("USP_AntePerGinecoObstetricosListarFE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idGinecoobstetricosParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_AntePerGinecoObstetricos_FE> USP_AntePerGinecoObstetricosListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idGinecoobstetricos, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idGinecoobstetricosParameter = idGinecoobstetricos.HasValue ?
                new ObjectParameter("IdGinecoobstetricos", idGinecoobstetricos) :
                new ObjectParameter("IdGinecoobstetricos", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntePerGinecoObstetricos_FE>("USP_AntePerGinecoObstetricosListarFE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idGinecoobstetricosParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual int USP_SP_Referencia_FEListar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idReferencia, string nroReferencia, Nullable<int> estado)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idReferenciaParameter = idReferencia.HasValue ?
                new ObjectParameter("IdReferencia", idReferencia) :
                new ObjectParameter("IdReferencia", typeof(int));

            var nroReferenciaParameter = nroReferencia != null ?
                new ObjectParameter("NroReferencia", nroReferencia) :
                new ObjectParameter("NroReferencia", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_SP_Referencia_FEListar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idReferenciaParameter, nroReferenciaParameter, estadoParameter);
        }

        public virtual ObjectResult<SS_HC_AntePerGinecoObstetricosCatalogoCirugia_FE> USP_SS_HC_AntePerGinecoObstetricosCatalogoCirugia_Listar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idGinecoobstetricos, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idGinecoobstetricosParameter = idGinecoobstetricos.HasValue ?
                new ObjectParameter("IdGinecoobstetricos", idGinecoobstetricos) :
                new ObjectParameter("IdGinecoobstetricos", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntePerGinecoObstetricosCatalogoCirugia_FE>("USP_SS_HC_AntePerGinecoObstetricosCatalogoCirugia_Listar_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idGinecoobstetricosParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_AntePerGinecoObstetricosCatalogoCirugia_FE> USP_SS_HC_AntePerGinecoObstetricosCatalogoCirugia_Listar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idGinecoobstetricos, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idGinecoobstetricosParameter = idGinecoobstetricos.HasValue ?
                new ObjectParameter("IdGinecoobstetricos", idGinecoobstetricos) :
                new ObjectParameter("IdGinecoobstetricos", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_AntePerGinecoObstetricosCatalogoCirugia_FE>("USP_SS_HC_AntePerGinecoObstetricosCatalogoCirugia_Listar_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idGinecoobstetricosParameter, accionParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_IndicacionesFE(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuenciaMedicamento, Nullable<int> secuencia, string tipoRegistro, Nullable<int> correlativo, Nullable<int> idTipoIndicacion, string descripcion, Nullable<int> grupoMedicamento, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaMedicamentoParameter = secuenciaMedicamento.HasValue ?
                new ObjectParameter("SecuenciaMedicamento", secuenciaMedicamento) :
                new ObjectParameter("SecuenciaMedicamento", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoRegistroParameter = tipoRegistro != null ?
                new ObjectParameter("TipoRegistro", tipoRegistro) :
                new ObjectParameter("TipoRegistro", typeof(string));

            var correlativoParameter = correlativo.HasValue ?
                new ObjectParameter("Correlativo", correlativo) :
                new ObjectParameter("Correlativo", typeof(int));

            var idTipoIndicacionParameter = idTipoIndicacion.HasValue ?
                new ObjectParameter("IdTipoIndicacion", idTipoIndicacion) :
                new ObjectParameter("IdTipoIndicacion", typeof(int));

            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_IndicacionesFE", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaMedicamentoParameter, secuenciaParameter, tipoRegistroParameter, correlativoParameter, idTipoIndicacionParameter, descripcionParameter, grupoMedicamentoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Indicaciones_FE> USP_IndicacionesListarFE(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuenciaMedicamento, Nullable<int> secuencia, string tipoRegistro, Nullable<int> correlativo, Nullable<int> idTipoIndicacion, string descripcion, Nullable<int> grupoMedicamento, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaMedicamentoParameter = secuenciaMedicamento.HasValue ?
                new ObjectParameter("SecuenciaMedicamento", secuenciaMedicamento) :
                new ObjectParameter("SecuenciaMedicamento", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoRegistroParameter = tipoRegistro != null ?
                new ObjectParameter("TipoRegistro", tipoRegistro) :
                new ObjectParameter("TipoRegistro", typeof(string));

            var correlativoParameter = correlativo.HasValue ?
                new ObjectParameter("Correlativo", correlativo) :
                new ObjectParameter("Correlativo", typeof(int));

            var idTipoIndicacionParameter = idTipoIndicacion.HasValue ?
                new ObjectParameter("IdTipoIndicacion", idTipoIndicacion) :
                new ObjectParameter("IdTipoIndicacion", typeof(int));

            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Indicaciones_FE>("USP_IndicacionesListarFE", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaMedicamentoParameter, secuenciaParameter, tipoRegistroParameter, correlativoParameter, idTipoIndicacionParameter, descripcionParameter, grupoMedicamentoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Indicaciones_FE> USP_IndicacionesListarFE(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuenciaMedicamento, Nullable<int> secuencia, string tipoRegistro, Nullable<int> correlativo, Nullable<int> idTipoIndicacion, string descripcion, Nullable<int> grupoMedicamento, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaMedicamentoParameter = secuenciaMedicamento.HasValue ?
                new ObjectParameter("SecuenciaMedicamento", secuenciaMedicamento) :
                new ObjectParameter("SecuenciaMedicamento", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoRegistroParameter = tipoRegistro != null ?
                new ObjectParameter("TipoRegistro", tipoRegistro) :
                new ObjectParameter("TipoRegistro", typeof(string));

            var correlativoParameter = correlativo.HasValue ?
                new ObjectParameter("Correlativo", correlativo) :
                new ObjectParameter("Correlativo", typeof(int));

            var idTipoIndicacionParameter = idTipoIndicacion.HasValue ?
                new ObjectParameter("IdTipoIndicacion", idTipoIndicacion) :
                new ObjectParameter("IdTipoIndicacion", typeof(int));

            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Indicaciones_FE>("USP_IndicacionesListarFE", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaMedicamentoParameter, secuenciaParameter, tipoRegistroParameter, correlativoParameter, idTipoIndicacionParameter, descripcionParameter, grupoMedicamentoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_Alergia_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tieneHistoria, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string idMedicamento, string linea, string familia, string subFamilia, Nullable<int> idTipoAlergia, string aCCION, string desdeCuandoDet, Nullable<int> estudioAlegistaDet, string observacionesDet, string tipoRegistroDet, string descripcionManualDet)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tieneHistoriaParameter = tieneHistoria != null ?
                new ObjectParameter("TieneHistoria", tieneHistoria) :
                new ObjectParameter("TieneHistoria", typeof(string));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var idMedicamentoParameter = idMedicamento != null ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(string));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var idTipoAlergiaParameter = idTipoAlergia.HasValue ?
                new ObjectParameter("IdTipoAlergia", idTipoAlergia) :
                new ObjectParameter("IdTipoAlergia", typeof(int));

            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));

            var desdeCuandoDetParameter = desdeCuandoDet != null ?
                new ObjectParameter("DesdeCuandoDet", desdeCuandoDet) :
                new ObjectParameter("DesdeCuandoDet", typeof(string));

            var estudioAlegistaDetParameter = estudioAlegistaDet.HasValue ?
                new ObjectParameter("EstudioAlegistaDet", estudioAlegistaDet) :
                new ObjectParameter("EstudioAlegistaDet", typeof(int));

            var observacionesDetParameter = observacionesDet != null ?
                new ObjectParameter("ObservacionesDet", observacionesDet) :
                new ObjectParameter("ObservacionesDet", typeof(string));

            var tipoRegistroDetParameter = tipoRegistroDet != null ?
                new ObjectParameter("TipoRegistroDet", tipoRegistroDet) :
                new ObjectParameter("TipoRegistroDet", typeof(string));

            var descripcionManualDetParameter = descripcionManualDet != null ?
                new ObjectParameter("DescripcionManualDet", descripcionManualDet) :
                new ObjectParameter("DescripcionManualDet", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_Alergia_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tieneHistoriaParameter, idFormaInicioParameter, idCursoEnfermedadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idMedicamentoParameter, lineaParameter, familiaParameter, subFamiliaParameter, idTipoAlergiaParameter, aCCIONParameter, desdeCuandoDetParameter, estudioAlegistaDetParameter, observacionesDetParameter, tipoRegistroDetParameter, descripcionManualDetParameter);
        }

        public virtual ObjectResult<SS_HC_Anam_AP_PatologicosGeneralesDetalle_FE> USP_Anam_AP_PatologicosGeneralesDetalleListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anam_AP_PatologicosGeneralesDetalle_FE>("USP_Anam_AP_PatologicosGeneralesDetalleListar_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_Anam_AP_PatologicosGeneralesDetalle_FE> USP_Anam_AP_PatologicosGeneralesDetalleListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anam_AP_PatologicosGeneralesDetalle_FE>("USP_Anam_AP_PatologicosGeneralesDetalleListar_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_Anam_AP_PatologicosGenerales_FE> USP_Anam_AP_PatologicosGeneralesListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> codigoSecuencia, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var codigoSecuenciaParameter = codigoSecuencia.HasValue ?
                new ObjectParameter("CodigoSecuencia", codigoSecuencia) :
                new ObjectParameter("CodigoSecuencia", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anam_AP_PatologicosGenerales_FE>("USP_Anam_AP_PatologicosGeneralesListar_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, codigoSecuenciaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_Anam_AP_PatologicosGenerales_FE> USP_Anam_AP_PatologicosGeneralesListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> codigoSecuencia, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var codigoSecuenciaParameter = codigoSecuencia.HasValue ?
                new ObjectParameter("CodigoSecuencia", codigoSecuencia) :
                new ObjectParameter("CodigoSecuencia", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anam_AP_PatologicosGenerales_FE>("USP_Anam_AP_PatologicosGeneralesListar_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, codigoSecuenciaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_SS_GE_Medicamento_FE(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, Nullable<int> grupoMedicamento, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadTiempo, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPadreNutriente, Nullable<int> idHijoNutriente, string secuencialHCE, string codAlmacen)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPadreNutrienteParameter = idPadreNutriente.HasValue ?
                new ObjectParameter("IdPadreNutriente", idPadreNutriente) :
                new ObjectParameter("IdPadreNutriente", typeof(int));

            var idHijoNutrienteParameter = idHijoNutriente.HasValue ?
                new ObjectParameter("IdHijoNutriente", idHijoNutriente) :
                new ObjectParameter("IdHijoNutriente", typeof(int));

            var secuencialHCEParameter = secuencialHCE != null ?
                new ObjectParameter("SecuencialHCE", secuencialHCE) :
                new ObjectParameter("SecuencialHCE", typeof(string));

            var codAlmacenParameter = codAlmacen != null ?
                new ObjectParameter("CodAlmacen", codAlmacen) :
                new ObjectParameter("CodAlmacen", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_GE_Medicamento_FE", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, grupoMedicamentoParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadTiempoParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPadreNutrienteParameter, idHijoNutrienteParameter, secuencialHCEParameter, codAlmacenParameter);
        }

        public virtual ObjectResult<SS_HC_Medicamento_FE> USP_SS_GE_Medicamento_FEListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, Nullable<int> grupoMedicamento, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadTiempo, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPadreNutriente, Nullable<int> idHijoNutriente)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPadreNutrienteParameter = idPadreNutriente.HasValue ?
                new ObjectParameter("IdPadreNutriente", idPadreNutriente) :
                new ObjectParameter("IdPadreNutriente", typeof(int));

            var idHijoNutrienteParameter = idHijoNutriente.HasValue ?
                new ObjectParameter("IdHijoNutriente", idHijoNutriente) :
                new ObjectParameter("IdHijoNutriente", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Medicamento_FE>("USP_SS_GE_Medicamento_FEListar", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, grupoMedicamentoParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadTiempoParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPadreNutrienteParameter, idHijoNutrienteParameter);
        }

        public virtual ObjectResult<SS_HC_Medicamento_FE> USP_SS_GE_Medicamento_FEListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, Nullable<int> grupoMedicamento, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadTiempo, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPadreNutriente, Nullable<int> idHijoNutriente, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPadreNutrienteParameter = idPadreNutriente.HasValue ?
                new ObjectParameter("IdPadreNutriente", idPadreNutriente) :
                new ObjectParameter("IdPadreNutriente", typeof(int));

            var idHijoNutrienteParameter = idHijoNutriente.HasValue ?
                new ObjectParameter("IdHijoNutriente", idHijoNutriente) :
                new ObjectParameter("IdHijoNutriente", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Medicamento_FE>("USP_SS_GE_Medicamento_FEListar", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, grupoMedicamentoParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadTiempoParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPadreNutrienteParameter, idHijoNutrienteParameter);
        }

        public virtual int SP_Alergia_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tieneHistoria, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string comentarioAdicional, string prioridad, string idMedicamento, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tieneHistoriaParameter = tieneHistoria != null ?
                new ObjectParameter("TieneHistoria", tieneHistoria) :
                new ObjectParameter("TieneHistoria", typeof(string));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var comentarioAdicionalParameter = comentarioAdicional != null ?
                new ObjectParameter("ComentarioAdicional", comentarioAdicional) :
                new ObjectParameter("ComentarioAdicional", typeof(string));

            var prioridadParameter = prioridad != null ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(string));

            var idMedicamentoParameter = idMedicamento != null ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(string));

            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Alergia_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tieneHistoriaParameter, idFormaInicioParameter, idCursoEnfermedadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, comentarioAdicionalParameter, prioridadParameter, idMedicamentoParameter, aCCIONParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_InformeAltaAPD_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string examenDescripcion, string codigoSegus, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var examenDescripcionParameter = examenDescripcion != null ?
                new ObjectParameter("ExamenDescripcion", examenDescripcion) :
                new ObjectParameter("ExamenDescripcion", typeof(string));

            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_InformeAltaAPD_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, examenDescripcionParameter, codigoSegusParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_InformeAltaAPD_FE> SP_SS_HC_InformeAltaAPD_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string examenDescripcion, string codigoSegus, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var examenDescripcionParameter = examenDescripcion != null ?
                new ObjectParameter("ExamenDescripcion", examenDescripcion) :
                new ObjectParameter("ExamenDescripcion", typeof(string));

            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_InformeAltaAPD_FE>("SP_SS_HC_InformeAltaAPD_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, examenDescripcionParameter, codigoSegusParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_InformeAltaAPD_FE> SP_SS_HC_InformeAltaAPD_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string examenDescripcion, string codigoSegus, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var examenDescripcionParameter = examenDescripcion != null ?
                new ObjectParameter("ExamenDescripcion", examenDescripcion) :
                new ObjectParameter("ExamenDescripcion", typeof(string));

            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_InformeAltaAPD_FE>("SP_SS_HC_InformeAltaAPD_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, examenDescripcionParameter, codigoSegusParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_InformeAltaDiagAlt_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string diagnosticoDescripcion, string codigo, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_InformeAltaDiagAlt_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, diagnosticoDescripcionParameter, codigoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_InformeAltaDiagAlt_FE> SP_SS_HC_InformeAltaDiagAlt_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string diagnosticoDescripcion, string codigo, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_InformeAltaDiagAlt_FE>("SP_SS_HC_InformeAltaDiagAlt_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, diagnosticoDescripcionParameter, codigoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_InformeAltaDiagAlt_FE> SP_SS_HC_InformeAltaDiagAlt_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string diagnosticoDescripcion, string codigo, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_InformeAltaDiagAlt_FE>("SP_SS_HC_InformeAltaDiagAlt_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, diagnosticoDescripcionParameter, codigoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_InformeAltaDiagIng_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string diagnosticoDescripcion, string codigo, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_InformeAltaDiagIng_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, diagnosticoDescripcionParameter, codigoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_InformeAltaDiagIng_FE> SP_SS_HC_InformeAltaDiagIng_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string diagnosticoDescripcion, string codigo, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_InformeAltaDiagIng_FE>("SP_SS_HC_InformeAltaDiagIng_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, diagnosticoDescripcionParameter, codigoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_InformeAltaDiagIng_FE> SP_SS_HC_InformeAltaDiagIng_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string diagnosticoDescripcion, string codigo, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_InformeAltaDiagIng_FE>("SP_SS_HC_InformeAltaDiagIng_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, diagnosticoDescripcionParameter, codigoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_InformeAltaProxCita_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fechaCita, Nullable<int> idEspecialidad, string observacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fechaCitaParameter = fechaCita.HasValue ?
                new ObjectParameter("FechaCita", fechaCita) :
                new ObjectParameter("FechaCita", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_InformeAltaProxCita_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaCitaParameter, idEspecialidadParameter, observacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_InformeAltaProxCita_FE> SP_SS_HC_InformeAltaProxCita_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fechaCita, Nullable<int> idEspecialidad, string observacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fechaCitaParameter = fechaCita.HasValue ?
                new ObjectParameter("FechaCita", fechaCita) :
                new ObjectParameter("FechaCita", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_InformeAltaProxCita_FE>("SP_SS_HC_InformeAltaProxCita_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaCitaParameter, idEspecialidadParameter, observacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_InformeAltaProxCita_FE> SP_SS_HC_InformeAltaProxCita_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fechaCita, Nullable<int> idEspecialidad, string observacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fechaCitaParameter = fechaCita.HasValue ?
                new ObjectParameter("FechaCita", fechaCita) :
                new ObjectParameter("FechaCita", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_InformeAltaProxCita_FE>("SP_SS_HC_InformeAltaProxCita_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaCitaParameter, idEspecialidadParameter, observacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_GE_MedicamentoAlta_FE(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, Nullable<int> grupoMedicamento, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadTiempo, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string secuencialHCE)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var secuencialHCEParameter = secuencialHCE != null ?
                new ObjectParameter("SecuencialHCE", secuencialHCE) :
                new ObjectParameter("SecuencialHCE", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_GE_MedicamentoAlta_FE", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, grupoMedicamentoParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadTiempoParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, secuencialHCEParameter);
        }

        public virtual ObjectResult<SS_HC_MedicamentoAlta_FE> SP_SS_GE_MedicamentoAlta_FEListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, Nullable<int> grupoMedicamento, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadTiempo, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string secuencialHCE, Nullable<int> indicadorTI)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var secuencialHCEParameter = secuencialHCE != null ?
              new ObjectParameter("SecuencialHCE", secuencialHCE) :
              new ObjectParameter("SecuencialHCE", typeof(string));

            var indicadorTIParameter = indicadorTI.HasValue ?
    new ObjectParameter("INDICADORTI", indicadorTI) :
    new ObjectParameter("INDICADORTI", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_MedicamentoAlta_FE>("SP_SS_GE_MedicamentoAlta_FEListar", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, grupoMedicamentoParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadTiempoParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, secuencialHCEParameter, indicadorTIParameter);
        }

        public virtual ObjectResult<SS_HC_MedicamentoAlta_FE> SP_SS_GE_MedicamentoAlta_FEListar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, Nullable<int> grupoMedicamento, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadTiempo, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string secuencialHCE, Nullable<int> indicadorTI, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var secuencialHCEParameter = secuencialHCE != null ?
  new ObjectParameter("SecuencialHCE", secuencialHCE) :
  new ObjectParameter("SecuencialHCE", typeof(string));

            var indicadorTIParameter = indicadorTI.HasValue ?
    new ObjectParameter("INDICADORTI", indicadorTI) :
    new ObjectParameter("INDICADORTI", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_MedicamentoAlta_FE>("SP_SS_GE_MedicamentoAlta_FEListar", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, grupoMedicamentoParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadTiempoParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, secuencialHCEParameter, indicadorTIParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_InformeAlta_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idMedico, Nullable<int> idEspecialidad, Nullable<int> idTipoAlta, Nullable<int> idPronostico, string procedimientos, string indigenerales, string actividafisica, string indidieta, string restricciones, Nullable<System.DateTime> proximacitas, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idTipoAltaParameter = idTipoAlta.HasValue ?
                new ObjectParameter("IdTipoAlta", idTipoAlta) :
                new ObjectParameter("IdTipoAlta", typeof(int));

            var idPronosticoParameter = idPronostico.HasValue ?
                new ObjectParameter("IdPronostico", idPronostico) :
                new ObjectParameter("IdPronostico", typeof(int));

            var procedimientosParameter = procedimientos != null ?
                new ObjectParameter("Procedimientos", procedimientos) :
                new ObjectParameter("Procedimientos", typeof(string));

            var indigeneralesParameter = indigenerales != null ?
                new ObjectParameter("indigenerales", indigenerales) :
                new ObjectParameter("indigenerales", typeof(string));

            var actividafisicaParameter = actividafisica != null ?
                new ObjectParameter("actividafisica", actividafisica) :
                new ObjectParameter("actividafisica", typeof(string));

            var indidietaParameter = indidieta != null ?
                new ObjectParameter("indidieta", indidieta) :
                new ObjectParameter("indidieta", typeof(string));

            var restriccionesParameter = restricciones != null ?
                new ObjectParameter("restricciones", restricciones) :
                new ObjectParameter("restricciones", typeof(string));

            var proximacitasParameter = proximacitas.HasValue ?
                new ObjectParameter("proximacitas", proximacitas) :
                new ObjectParameter("proximacitas", typeof(System.DateTime));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_InformeAlta_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idMedicoParameter, idEspecialidadParameter, idTipoAltaParameter, idPronosticoParameter, procedimientosParameter, indigeneralesParameter, actividafisicaParameter, indidietaParameter, restriccionesParameter, proximacitasParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_SolucionesAdministradas_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> tipo, Nullable<int> tipoSolucion, string solucionDescripcion, Nullable<decimal> cantidadCC, string especificacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var tipoSolucionParameter = tipoSolucion.HasValue ?
                new ObjectParameter("TipoSolucion", tipoSolucion) :
                new ObjectParameter("TipoSolucion", typeof(int));

            var solucionDescripcionParameter = solucionDescripcion != null ?
                new ObjectParameter("SolucionDescripcion", solucionDescripcion) :
                new ObjectParameter("SolucionDescripcion", typeof(string));

            var cantidadCCParameter = cantidadCC.HasValue ?
                new ObjectParameter("CantidadCC", cantidadCC) :
                new ObjectParameter("CantidadCC", typeof(decimal));

            var especificacionParameter = especificacion != null ?
                new ObjectParameter("Especificacion", especificacion) :
                new ObjectParameter("Especificacion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_SolucionesAdministradas_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, tipoParameter, tipoSolucionParameter, solucionDescripcionParameter, cantidadCCParameter, especificacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_SolucionesAdministradas_FE> SP_SS_HC_SolucionesAdministradas_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> tipo, Nullable<int> tipoSolucion, string solucionDescripcion, Nullable<decimal> cantidadCC, string especificacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var tipoSolucionParameter = tipoSolucion.HasValue ?
                new ObjectParameter("TipoSolucion", tipoSolucion) :
                new ObjectParameter("TipoSolucion", typeof(int));

            var solucionDescripcionParameter = solucionDescripcion != null ?
                new ObjectParameter("SolucionDescripcion", solucionDescripcion) :
                new ObjectParameter("SolucionDescripcion", typeof(string));

            var cantidadCCParameter = cantidadCC.HasValue ?
                new ObjectParameter("CantidadCC", cantidadCC) :
                new ObjectParameter("CantidadCC", typeof(decimal));

            var especificacionParameter = especificacion != null ?
                new ObjectParameter("Especificacion", especificacion) :
                new ObjectParameter("Especificacion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_SolucionesAdministradas_FE>("SP_SS_HC_SolucionesAdministradas_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, tipoParameter, tipoSolucionParameter, solucionDescripcionParameter, cantidadCCParameter, especificacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_SolucionesAdministradas_FE> SP_SS_HC_SolucionesAdministradas_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> tipo, Nullable<int> tipoSolucion, string solucionDescripcion, Nullable<decimal> cantidadCC, string especificacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var tipoSolucionParameter = tipoSolucion.HasValue ?
                new ObjectParameter("TipoSolucion", tipoSolucion) :
                new ObjectParameter("TipoSolucion", typeof(int));

            var solucionDescripcionParameter = solucionDescripcion != null ?
                new ObjectParameter("SolucionDescripcion", solucionDescripcion) :
                new ObjectParameter("SolucionDescripcion", typeof(string));

            var cantidadCCParameter = cantidadCC.HasValue ?
                new ObjectParameter("CantidadCC", cantidadCC) :
                new ObjectParameter("CantidadCC", typeof(decimal));

            var especificacionParameter = especificacion != null ?
                new ObjectParameter("Especificacion", especificacion) :
                new ObjectParameter("Especificacion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_SolucionesAdministradas_FE>("SP_SS_HC_SolucionesAdministradas_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, tipoParameter, tipoSolucionParameter, solucionDescripcionParameter, cantidadCCParameter, especificacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_ApoyoDiagnosticoFile_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string nroInforme, Nullable<int> secuencia, string nombre, string rutaInforme, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var nroInformeParameter = nroInforme != null ?
                new ObjectParameter("NroInforme", nroInforme) :
                new ObjectParameter("NroInforme", typeof(string));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));

            var rutaInformeParameter = rutaInforme != null ?
                new ObjectParameter("RutaInforme", rutaInforme) :
                new ObjectParameter("RutaInforme", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_ApoyoDiagnosticoFile_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, nroInformeParameter, secuenciaParameter, nombreParameter, rutaInformeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_ApoyoDiagnosticoFile_FE> SP_SS_HC_ApoyoDiagnosticoFileListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string nroInforme, Nullable<int> secuencia, string nombre, string rutaInforme, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var nroInformeParameter = nroInforme != null ?
                new ObjectParameter("NroInforme", nroInforme) :
                new ObjectParameter("NroInforme", typeof(string));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));

            var rutaInformeParameter = rutaInforme != null ?
                new ObjectParameter("RutaInforme", rutaInforme) :
                new ObjectParameter("RutaInforme", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ApoyoDiagnosticoFile_FE>("SP_SS_HC_ApoyoDiagnosticoFileListar_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, nroInformeParameter, secuenciaParameter, nombreParameter, rutaInformeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_ApoyoDiagnosticoFile_FE> SP_SS_HC_ApoyoDiagnosticoFileListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string nroInforme, Nullable<int> secuencia, string nombre, string rutaInforme, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var nroInformeParameter = nroInforme != null ?
                new ObjectParameter("NroInforme", nroInforme) :
                new ObjectParameter("NroInforme", typeof(string));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));

            var rutaInformeParameter = rutaInforme != null ?
                new ObjectParameter("RutaInforme", rutaInforme) :
                new ObjectParameter("RutaInforme", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ApoyoDiagnosticoFile_FE>("SP_SS_HC_ApoyoDiagnosticoFileListar_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, nroInformeParameter, secuenciaParameter, nombreParameter, rutaInformeParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_BalanceHidroElect_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> tipoBalance, Nullable<System.DateTime> fechaControl, Nullable<int> turno, Nullable<decimal> peso, Nullable<int> hora, Nullable<decimal> alimentacionOral, Nullable<decimal> sNG, string detalleSNG, Nullable<decimal> totalIngresos, Nullable<int> perdidaInsensible, Nullable<decimal> perdidaCantidad, Nullable<decimal> orina, Nullable<decimal> heces, Nullable<decimal> vomitos, Nullable<decimal> temperatura, string temperaturaDescripcion, Nullable<decimal> superficieCorporal, string superficieDescripion, Nullable<decimal> succion, Nullable<decimal> perdidaSNG, Nullable<decimal> totalEgresos, Nullable<decimal> balanceHidrico, Nullable<decimal> balanceAcumulado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version,Nullable<int> drenaje,Nullable<int> autolisis)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tipoBalanceParameter = tipoBalance.HasValue ?
                new ObjectParameter("TipoBalance", tipoBalance) :
                new ObjectParameter("TipoBalance", typeof(int));

            var fechaControlParameter = fechaControl.HasValue ?
                new ObjectParameter("FechaControl", fechaControl) :
                new ObjectParameter("FechaControl", typeof(System.DateTime));

            var turnoParameter = turno.HasValue ?
                new ObjectParameter("Turno", turno) :
                new ObjectParameter("Turno", typeof(int));

            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(int));

            var alimentacionOralParameter = alimentacionOral.HasValue ?
                new ObjectParameter("AlimentacionOral", alimentacionOral) :
                new ObjectParameter("AlimentacionOral", typeof(decimal));

            var sNGParameter = sNG.HasValue ?
                new ObjectParameter("SNG", sNG) :
                new ObjectParameter("SNG", typeof(decimal));

            var detalleSNGParameter = detalleSNG != null ?
                new ObjectParameter("DetalleSNG", detalleSNG) :
                new ObjectParameter("DetalleSNG", typeof(string));

            var totalIngresosParameter = totalIngresos.HasValue ?
                new ObjectParameter("TotalIngresos", totalIngresos) :
                new ObjectParameter("TotalIngresos", typeof(decimal));

            var perdidaInsensibleParameter = perdidaInsensible.HasValue ?
                new ObjectParameter("PerdidaInsensible", perdidaInsensible) :
                new ObjectParameter("PerdidaInsensible", typeof(int));

            var perdidaCantidadParameter = perdidaCantidad.HasValue ?
                new ObjectParameter("PerdidaCantidad", perdidaCantidad) :
                new ObjectParameter("PerdidaCantidad", typeof(decimal));

            var orinaParameter = orina.HasValue ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(decimal));

            var hecesParameter = heces.HasValue ?
                new ObjectParameter("Heces", heces) :
                new ObjectParameter("Heces", typeof(decimal));

            var vomitosParameter = vomitos.HasValue ?
                new ObjectParameter("Vomitos", vomitos) :
                new ObjectParameter("Vomitos", typeof(decimal));

            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));

            var temperaturaDescripcionParameter = temperaturaDescripcion != null ?
                new ObjectParameter("TemperaturaDescripcion", temperaturaDescripcion) :
                new ObjectParameter("TemperaturaDescripcion", typeof(string));

            var superficieCorporalParameter = superficieCorporal.HasValue ?
                new ObjectParameter("SuperficieCorporal", superficieCorporal) :
                new ObjectParameter("SuperficieCorporal", typeof(decimal));

            var superficieDescripionParameter = superficieDescripion != null ?
                new ObjectParameter("SuperficieDescripion", superficieDescripion) :
                new ObjectParameter("SuperficieDescripion", typeof(string));

            var succionParameter = succion.HasValue ?
                new ObjectParameter("Succion", succion) :
                new ObjectParameter("Succion", typeof(decimal));

            var perdidaSNGParameter = perdidaSNG.HasValue ?
                new ObjectParameter("PerdidaSNG", perdidaSNG) :
                new ObjectParameter("PerdidaSNG", typeof(decimal));

            var totalEgresosParameter = totalEgresos.HasValue ?
                new ObjectParameter("TotalEgresos", totalEgresos) :
                new ObjectParameter("TotalEgresos", typeof(decimal));

            var balanceHidricoParameter = balanceHidrico.HasValue ?
                new ObjectParameter("BalanceHidrico", balanceHidrico) :
                new ObjectParameter("BalanceHidrico", typeof(decimal));

            var balanceAcumuladoParameter = balanceAcumulado.HasValue ?
                new ObjectParameter("BalanceAcumulado", balanceAcumulado) :
                new ObjectParameter("BalanceAcumulado", typeof(decimal));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var drenajeParameter = drenaje.HasValue ?
            new ObjectParameter("Drenaje", drenaje) :
            new ObjectParameter("Drenaje", typeof(int));

            var autolisisParameter = autolisis.HasValue ?
            new ObjectParameter("Autolisis", autolisis) :
            new ObjectParameter("Autolisis", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_BalanceHidroElect_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoBalanceParameter, fechaControlParameter, turnoParameter, pesoParameter, horaParameter, alimentacionOralParameter, sNGParameter, detalleSNGParameter, totalIngresosParameter, perdidaInsensibleParameter, perdidaCantidadParameter, orinaParameter, hecesParameter, vomitosParameter, temperaturaParameter, temperaturaDescripcionParameter, superficieCorporalParameter, superficieDescripionParameter, succionParameter, perdidaSNGParameter, totalEgresosParameter, balanceHidricoParameter, balanceAcumuladoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, drenajeParameter, autolisisParameter);
        }

        public virtual ObjectResult<SS_HC_BalanceHidroElect_FE> SP_SS_HC_BalanceHidroElect_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> tipoBalance, Nullable<System.DateTime> fechaControl, Nullable<int> turno, Nullable<int> drenaje, Nullable<int> autolisis, Nullable<decimal> peso, Nullable<int> hora, Nullable<decimal> alimentacionOral, Nullable<decimal> sNG, string detalleSNG, Nullable<decimal> totalIngresos, Nullable<int> perdidaInsensible, Nullable<decimal> perdidaCantidad, Nullable<decimal> orina, Nullable<decimal> heces, Nullable<decimal> vomitos, Nullable<decimal> temperatura, string temperaturaDescripcion, Nullable<decimal> superficieCorporal, string superficieDescripion, Nullable<decimal> succion, Nullable<decimal> perdidaSNG, Nullable<decimal> totalEgresos, Nullable<decimal> balanceHidrico, Nullable<decimal> balanceAcumulado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tipoBalanceParameter = tipoBalance.HasValue ?
                new ObjectParameter("TipoBalance", tipoBalance) :
                new ObjectParameter("TipoBalance", typeof(int));

            var fechaControlParameter = fechaControl.HasValue ?
                new ObjectParameter("FechaControl", fechaControl) :
                new ObjectParameter("FechaControl", typeof(System.DateTime));

            var turnoParameter = turno.HasValue ?
                new ObjectParameter("Turno", turno) :
                new ObjectParameter("Turno", typeof(int));


            var drenajeParameter = drenaje.HasValue ?
                new ObjectParameter("Drenaje", drenaje) :
                new ObjectParameter("Drenaje", typeof(int));


            var autolisisParameter = autolisis.HasValue ?
                new ObjectParameter("Autolisis", autolisis) :
                new ObjectParameter("Autolisis", typeof(int));

            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(int));

            var alimentacionOralParameter = alimentacionOral.HasValue ?
                new ObjectParameter("AlimentacionOral", alimentacionOral) :
                new ObjectParameter("AlimentacionOral", typeof(decimal));

            var sNGParameter = sNG.HasValue ?
                new ObjectParameter("SNG", sNG) :
                new ObjectParameter("SNG", typeof(decimal));

            var detalleSNGParameter = detalleSNG != null ?
                new ObjectParameter("DetalleSNG", detalleSNG) :
                new ObjectParameter("DetalleSNG", typeof(string));

            var totalIngresosParameter = totalIngresos.HasValue ?
                new ObjectParameter("TotalIngresos", totalIngresos) :
                new ObjectParameter("TotalIngresos", typeof(decimal));

            var perdidaInsensibleParameter = perdidaInsensible.HasValue ?
                new ObjectParameter("PerdidaInsensible", perdidaInsensible) :
                new ObjectParameter("PerdidaInsensible", typeof(int));

            var perdidaCantidadParameter = perdidaCantidad.HasValue ?
                new ObjectParameter("PerdidaCantidad", perdidaCantidad) :
                new ObjectParameter("PerdidaCantidad", typeof(decimal));

            var orinaParameter = orina.HasValue ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(decimal));

            var hecesParameter = heces.HasValue ?
                new ObjectParameter("Heces", heces) :
                new ObjectParameter("Heces", typeof(decimal));

            var vomitosParameter = vomitos.HasValue ?
                new ObjectParameter("Vomitos", vomitos) :
                new ObjectParameter("Vomitos", typeof(decimal));

            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));

            var temperaturaDescripcionParameter = temperaturaDescripcion != null ?
                new ObjectParameter("TemperaturaDescripcion", temperaturaDescripcion) :
                new ObjectParameter("TemperaturaDescripcion", typeof(string));

            var superficieCorporalParameter = superficieCorporal.HasValue ?
                new ObjectParameter("SuperficieCorporal", superficieCorporal) :
                new ObjectParameter("SuperficieCorporal", typeof(decimal));

            var superficieDescripionParameter = superficieDescripion != null ?
                new ObjectParameter("SuperficieDescripion", superficieDescripion) :
                new ObjectParameter("SuperficieDescripion", typeof(string));

            var succionParameter = succion.HasValue ?
                new ObjectParameter("Succion", succion) :
                new ObjectParameter("Succion", typeof(decimal));

            var perdidaSNGParameter = perdidaSNG.HasValue ?
                new ObjectParameter("PerdidaSNG", perdidaSNG) :
                new ObjectParameter("PerdidaSNG", typeof(decimal));

            var totalEgresosParameter = totalEgresos.HasValue ?
                new ObjectParameter("TotalEgresos", totalEgresos) :
                new ObjectParameter("TotalEgresos", typeof(decimal));

            var balanceHidricoParameter = balanceHidrico.HasValue ?
                new ObjectParameter("BalanceHidrico", balanceHidrico) :
                new ObjectParameter("BalanceHidrico", typeof(decimal));

            var balanceAcumuladoParameter = balanceAcumulado.HasValue ?
                new ObjectParameter("BalanceAcumulado", balanceAcumulado) :
                new ObjectParameter("BalanceAcumulado", typeof(decimal));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_BalanceHidroElect_FE>("SP_SS_HC_BalanceHidroElect_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoBalanceParameter, fechaControlParameter, turnoParameter, drenajeParameter, autolisisParameter, pesoParameter, horaParameter, alimentacionOralParameter, sNGParameter, detalleSNGParameter, totalIngresosParameter, perdidaInsensibleParameter, perdidaCantidadParameter, orinaParameter, hecesParameter, vomitosParameter, temperaturaParameter, temperaturaDescripcionParameter, superficieCorporalParameter, superficieDescripionParameter, succionParameter, perdidaSNGParameter, totalEgresosParameter, balanceHidricoParameter, balanceAcumuladoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_BalanceHidroElect_FE> SP_SS_HC_BalanceHidroElect_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> tipoBalance, Nullable<System.DateTime> fechaControl, Nullable<int> turno, Nullable<int> drenaje, Nullable<int> autolisis, Nullable<decimal> peso, Nullable<int> hora, Nullable<decimal> alimentacionOral, Nullable<decimal> sNG, string detalleSNG, Nullable<decimal> totalIngresos, Nullable<int> perdidaInsensible, Nullable<decimal> perdidaCantidad, Nullable<decimal> orina, Nullable<decimal> heces, Nullable<decimal> vomitos, Nullable<decimal> temperatura, string temperaturaDescripcion, Nullable<decimal> superficieCorporal, string superficieDescripion, Nullable<decimal> succion, Nullable<decimal> perdidaSNG, Nullable<decimal> totalEgresos, Nullable<decimal> balanceHidrico, Nullable<decimal> balanceAcumulado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tipoBalanceParameter = tipoBalance.HasValue ?
                new ObjectParameter("TipoBalance", tipoBalance) :
                new ObjectParameter("TipoBalance", typeof(int));

            var fechaControlParameter = fechaControl.HasValue ?
                new ObjectParameter("FechaControl", fechaControl) :
                new ObjectParameter("FechaControl", typeof(System.DateTime));

            var turnoParameter = turno.HasValue ?
                new ObjectParameter("Turno", turno) :
                new ObjectParameter("Turno", typeof(int));

            var drenajeParameter = drenaje.HasValue ?
                new ObjectParameter("Drenaje", drenaje) :
                new ObjectParameter("Drenaje", typeof(int));


            var autolisisParameter = autolisis.HasValue ?
                new ObjectParameter("Autolisis", autolisis) :
                new ObjectParameter("Autolisis", typeof(int));

            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(int));

            var alimentacionOralParameter = alimentacionOral.HasValue ?
                new ObjectParameter("AlimentacionOral", alimentacionOral) :
                new ObjectParameter("AlimentacionOral", typeof(decimal));

            var sNGParameter = sNG.HasValue ?
                new ObjectParameter("SNG", sNG) :
                new ObjectParameter("SNG", typeof(decimal));

            var detalleSNGParameter = detalleSNG != null ?
                new ObjectParameter("DetalleSNG", detalleSNG) :
                new ObjectParameter("DetalleSNG", typeof(string));

            var totalIngresosParameter = totalIngresos.HasValue ?
                new ObjectParameter("TotalIngresos", totalIngresos) :
                new ObjectParameter("TotalIngresos", typeof(decimal));

            var perdidaInsensibleParameter = perdidaInsensible.HasValue ?
                new ObjectParameter("PerdidaInsensible", perdidaInsensible) :
                new ObjectParameter("PerdidaInsensible", typeof(int));

            var perdidaCantidadParameter = perdidaCantidad.HasValue ?
                new ObjectParameter("PerdidaCantidad", perdidaCantidad) :
                new ObjectParameter("PerdidaCantidad", typeof(decimal));

            var orinaParameter = orina.HasValue ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(decimal));

            var hecesParameter = heces.HasValue ?
                new ObjectParameter("Heces", heces) :
                new ObjectParameter("Heces", typeof(decimal));

            var vomitosParameter = vomitos.HasValue ?
                new ObjectParameter("Vomitos", vomitos) :
                new ObjectParameter("Vomitos", typeof(decimal));

            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));

            var temperaturaDescripcionParameter = temperaturaDescripcion != null ?
                new ObjectParameter("TemperaturaDescripcion", temperaturaDescripcion) :
                new ObjectParameter("TemperaturaDescripcion", typeof(string));

            var superficieCorporalParameter = superficieCorporal.HasValue ?
                new ObjectParameter("SuperficieCorporal", superficieCorporal) :
                new ObjectParameter("SuperficieCorporal", typeof(decimal));

            var superficieDescripionParameter = superficieDescripion != null ?
                new ObjectParameter("SuperficieDescripion", superficieDescripion) :
                new ObjectParameter("SuperficieDescripion", typeof(string));

            var succionParameter = succion.HasValue ?
                new ObjectParameter("Succion", succion) :
                new ObjectParameter("Succion", typeof(decimal));

            var perdidaSNGParameter = perdidaSNG.HasValue ?
                new ObjectParameter("PerdidaSNG", perdidaSNG) :
                new ObjectParameter("PerdidaSNG", typeof(decimal));

            var totalEgresosParameter = totalEgresos.HasValue ?
                new ObjectParameter("TotalEgresos", totalEgresos) :
                new ObjectParameter("TotalEgresos", typeof(decimal));

            var balanceHidricoParameter = balanceHidrico.HasValue ?
                new ObjectParameter("BalanceHidrico", balanceHidrico) :
                new ObjectParameter("BalanceHidrico", typeof(decimal));

            var balanceAcumuladoParameter = balanceAcumulado.HasValue ?
                new ObjectParameter("BalanceAcumulado", balanceAcumulado) :
                new ObjectParameter("BalanceAcumulado", typeof(decimal));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_BalanceHidroElect_FE>("SP_SS_HC_BalanceHidroElect_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoBalanceParameter, fechaControlParameter, turnoParameter,drenajeParameter,autolisisParameter, pesoParameter, horaParameter, alimentacionOralParameter, sNGParameter, detalleSNGParameter, totalIngresosParameter, perdidaInsensibleParameter, perdidaCantidadParameter, orinaParameter, hecesParameter, vomitosParameter, temperaturaParameter, temperaturaDescripcionParameter, superficieCorporalParameter, superficieDescripionParameter, succionParameter, perdidaSNGParameter, totalEgresosParameter, balanceHidricoParameter, balanceAcumuladoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_BalanceHidroElectDetalle_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> tipoBalance, Nullable<int> secuencia, Nullable<int> tipo, Nullable<int> tipoSolucion, string solucionDescripcion, Nullable<decimal> cantidadCC, string especificacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tipoBalanceParameter = tipoBalance.HasValue ?
                new ObjectParameter("TipoBalance", tipoBalance) :
                new ObjectParameter("TipoBalance", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var tipoSolucionParameter = tipoSolucion.HasValue ?
                new ObjectParameter("TipoSolucion", tipoSolucion) :
                new ObjectParameter("TipoSolucion", typeof(int));

            var solucionDescripcionParameter = solucionDescripcion != null ?
                new ObjectParameter("SolucionDescripcion", solucionDescripcion) :
                new ObjectParameter("SolucionDescripcion", typeof(string));

            var cantidadCCParameter = cantidadCC.HasValue ?
                new ObjectParameter("CantidadCC", cantidadCC) :
                new ObjectParameter("CantidadCC", typeof(decimal));

            var especificacionParameter = especificacion != null ?
                new ObjectParameter("Especificacion", especificacion) :
                new ObjectParameter("Especificacion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_BalanceHidroElectDetalle_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoBalanceParameter, secuenciaParameter, tipoParameter, tipoSolucionParameter, solucionDescripcionParameter, cantidadCCParameter, especificacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_BalanceHidroElectDetalle_FE> SP_SS_HC_BalanceHidroElectDetalle_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> tipoBalance, Nullable<int> secuencia, Nullable<int> tipo, Nullable<int> tipoSolucion, string solucionDescripcion, Nullable<decimal> cantidadCC, string especificacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tipoBalanceParameter = tipoBalance.HasValue ?
                new ObjectParameter("TipoBalance", tipoBalance) :
                new ObjectParameter("TipoBalance", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var tipoSolucionParameter = tipoSolucion.HasValue ?
                new ObjectParameter("TipoSolucion", tipoSolucion) :
                new ObjectParameter("TipoSolucion", typeof(int));

            var solucionDescripcionParameter = solucionDescripcion != null ?
                new ObjectParameter("SolucionDescripcion", solucionDescripcion) :
                new ObjectParameter("SolucionDescripcion", typeof(string));

            var cantidadCCParameter = cantidadCC.HasValue ?
                new ObjectParameter("CantidadCC", cantidadCC) :
                new ObjectParameter("CantidadCC", typeof(decimal));

            var especificacionParameter = especificacion != null ?
                new ObjectParameter("Especificacion", especificacion) :
                new ObjectParameter("Especificacion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_BalanceHidroElectDetalle_FE>("SP_SS_HC_BalanceHidroElectDetalle_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoBalanceParameter, secuenciaParameter, tipoParameter, tipoSolucionParameter, solucionDescripcionParameter, cantidadCCParameter, especificacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_BalanceHidroElectDetalle_FE> SP_SS_HC_BalanceHidroElectDetalle_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> tipoBalance, Nullable<int> secuencia, Nullable<int> tipo, Nullable<int> tipoSolucion, string solucionDescripcion, Nullable<decimal> cantidadCC, string especificacion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tipoBalanceParameter = tipoBalance.HasValue ?
                new ObjectParameter("TipoBalance", tipoBalance) :
                new ObjectParameter("TipoBalance", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var tipoSolucionParameter = tipoSolucion.HasValue ?
                new ObjectParameter("TipoSolucion", tipoSolucion) :
                new ObjectParameter("TipoSolucion", typeof(int));

            var solucionDescripcionParameter = solucionDescripcion != null ?
                new ObjectParameter("SolucionDescripcion", solucionDescripcion) :
                new ObjectParameter("SolucionDescripcion", typeof(string));

            var cantidadCCParameter = cantidadCC.HasValue ?
                new ObjectParameter("CantidadCC", cantidadCC) :
                new ObjectParameter("CantidadCC", typeof(decimal));

            var especificacionParameter = especificacion != null ?
                new ObjectParameter("Especificacion", especificacion) :
                new ObjectParameter("Especificacion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_BalanceHidroElectDetalle_FE>("SP_SS_HC_BalanceHidroElectDetalle_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoBalanceParameter, secuenciaParameter, tipoParameter, tipoSolucionParameter, solucionDescripcionParameter, cantidadCCParameter, especificacionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_Monitoreo_Obs_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idMedico, Nullable<int> idEspecialidad, Nullable<int> idMonitoreo, Nullable<System.DateTime> hora_Inicio, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idDiagnostico, Nullable<int> idFormaInicio, Nullable<int> estado)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idMonitoreoParameter = idMonitoreo.HasValue ?
                new ObjectParameter("IdMonitoreo", idMonitoreo) :
                new ObjectParameter("IdMonitoreo", typeof(int));

            var hora_InicioParameter = hora_Inicio.HasValue ?
                new ObjectParameter("Hora_Inicio", hora_Inicio) :
                new ObjectParameter("Hora_Inicio", typeof(System.DateTime));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_Monitoreo_Obs_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idMedicoParameter, idEspecialidadParameter, idMonitoreoParameter, hora_InicioParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idDiagnosticoParameter, idFormaInicioParameter, estadoParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_Monitoreo_Obs_Ing_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<System.DateTime> hora, Nullable<int> goteoxmin, Nullable<int> mU, Nullable<int> fun_Vital_PA1, Nullable<int> fun_Vital_PA2, Nullable<int> fun_Vital_P, Nullable<int> fun_Vital_R, Nullable<decimal> fun_Vital_T, Nullable<int> fCF, Nullable<int> din_Ut_Frec, Nullable<int> din_Ut_Dur, Nullable<int> din_Ut_Int, Nullable<int> ex_Val_Dilat, Nullable<int> ex_Val_Incorp, Nullable<int> ex_Val_AP, Nullable<int> ex_Val_IdM, string observaciones, string firma, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var goteoxminParameter = goteoxmin.HasValue ?
                new ObjectParameter("Goteoxmin", goteoxmin) :
                new ObjectParameter("Goteoxmin", typeof(int));

            var mUParameter = mU.HasValue ?
                new ObjectParameter("MU", mU) :
                new ObjectParameter("MU", typeof(int));

            var fun_Vital_PA1Parameter = fun_Vital_PA1.HasValue ?
                new ObjectParameter("Fun_Vital_PA1", fun_Vital_PA1) :
                new ObjectParameter("Fun_Vital_PA1", typeof(int));

            var fun_Vital_PA2Parameter = fun_Vital_PA2.HasValue ?
                new ObjectParameter("Fun_Vital_PA2", fun_Vital_PA2) :
                new ObjectParameter("Fun_Vital_PA2", typeof(int));

            var fun_Vital_PParameter = fun_Vital_P.HasValue ?
                new ObjectParameter("Fun_Vital_P", fun_Vital_P) :
                new ObjectParameter("Fun_Vital_P", typeof(int));

            var fun_Vital_RParameter = fun_Vital_R.HasValue ?
                new ObjectParameter("Fun_Vital_R", fun_Vital_R) :
                new ObjectParameter("Fun_Vital_R", typeof(int));

            var fun_Vital_TParameter = fun_Vital_T.HasValue ?
                new ObjectParameter("Fun_Vital_T", fun_Vital_T) :
                new ObjectParameter("Fun_Vital_T", typeof(decimal));

            var fCFParameter = fCF.HasValue ?
                new ObjectParameter("FCF", fCF) :
                new ObjectParameter("FCF", typeof(int));

            var din_Ut_FrecParameter = din_Ut_Frec.HasValue ?
                new ObjectParameter("Din_Ut_Frec", din_Ut_Frec) :
                new ObjectParameter("Din_Ut_Frec", typeof(int));

            var din_Ut_DurParameter = din_Ut_Dur.HasValue ?
                new ObjectParameter("Din_Ut_Dur", din_Ut_Dur) :
                new ObjectParameter("Din_Ut_Dur", typeof(int));

            var din_Ut_IntParameter = din_Ut_Int.HasValue ?
                new ObjectParameter("Din_Ut_Int", din_Ut_Int) :
                new ObjectParameter("Din_Ut_Int", typeof(int));

            var ex_Val_DilatParameter = ex_Val_Dilat.HasValue ?
                new ObjectParameter("Ex_Val_Dilat", ex_Val_Dilat) :
                new ObjectParameter("Ex_Val_Dilat", typeof(int));

            var ex_Val_IncorpParameter = ex_Val_Incorp.HasValue ?
                new ObjectParameter("Ex_Val_Incorp", ex_Val_Incorp) :
                new ObjectParameter("Ex_Val_Incorp", typeof(int));

            var ex_Val_APParameter = ex_Val_AP.HasValue ?
                new ObjectParameter("Ex_Val_AP", ex_Val_AP) :
                new ObjectParameter("Ex_Val_AP", typeof(int));

            var ex_Val_IdMParameter = ex_Val_IdM.HasValue ?
                new ObjectParameter("Ex_Val_IdM", ex_Val_IdM) :
                new ObjectParameter("Ex_Val_IdM", typeof(int));

            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));

            var firmaParameter = firma != null ?
                new ObjectParameter("Firma", firma) :
                new ObjectParameter("Firma", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_Monitoreo_Obs_Ing_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaParameter, horaParameter, goteoxminParameter, mUParameter, fun_Vital_PA1Parameter, fun_Vital_PA2Parameter, fun_Vital_PParameter, fun_Vital_RParameter, fun_Vital_TParameter, fCFParameter, din_Ut_FrecParameter, din_Ut_DurParameter, din_Ut_IntParameter, ex_Val_DilatParameter, ex_Val_IncorpParameter, ex_Val_APParameter, ex_Val_IdMParameter, observacionesParameter, firmaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Monitoreo_Obs_Ing_FE> SP_SS_HC_Monitoreo_Obs_Ing_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<System.DateTime> hora, Nullable<int> goteoxmin, Nullable<int> mU, Nullable<int> fun_Vital_PA1, Nullable<int> fun_Vital_PA2, Nullable<int> fun_Vital_P, Nullable<int> fun_Vital_R, Nullable<decimal> fun_Vital_T, Nullable<int> fCF, Nullable<int> din_Ut_Frec, Nullable<int> din_Ut_Dur, Nullable<int> din_Ut_Int, Nullable<int> ex_Val_Dilat, Nullable<int> ex_Val_Incorp, Nullable<int> ex_Val_AP, Nullable<int> ex_Val_IdM, string observaciones, string firma, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var goteoxminParameter = goteoxmin.HasValue ?
                new ObjectParameter("Goteoxmin", goteoxmin) :
                new ObjectParameter("Goteoxmin", typeof(int));

            var mUParameter = mU.HasValue ?
                new ObjectParameter("MU", mU) :
                new ObjectParameter("MU", typeof(int));

            var fun_Vital_PA1Parameter = fun_Vital_PA1.HasValue ?
                new ObjectParameter("Fun_Vital_PA1", fun_Vital_PA1) :
                new ObjectParameter("Fun_Vital_PA1", typeof(int));

            var fun_Vital_PA2Parameter = fun_Vital_PA2.HasValue ?
                new ObjectParameter("Fun_Vital_PA2", fun_Vital_PA2) :
                new ObjectParameter("Fun_Vital_PA2", typeof(int));

            var fun_Vital_PParameter = fun_Vital_P.HasValue ?
                new ObjectParameter("Fun_Vital_P", fun_Vital_P) :
                new ObjectParameter("Fun_Vital_P", typeof(int));

            var fun_Vital_RParameter = fun_Vital_R.HasValue ?
                new ObjectParameter("Fun_Vital_R", fun_Vital_R) :
                new ObjectParameter("Fun_Vital_R", typeof(int));

            var fun_Vital_TParameter = fun_Vital_T.HasValue ?
                new ObjectParameter("Fun_Vital_T", fun_Vital_T) :
                new ObjectParameter("Fun_Vital_T", typeof(decimal));

            var fCFParameter = fCF.HasValue ?
                new ObjectParameter("FCF", fCF) :
                new ObjectParameter("FCF", typeof(int));

            var din_Ut_FrecParameter = din_Ut_Frec.HasValue ?
                new ObjectParameter("Din_Ut_Frec", din_Ut_Frec) :
                new ObjectParameter("Din_Ut_Frec", typeof(int));

            var din_Ut_DurParameter = din_Ut_Dur.HasValue ?
                new ObjectParameter("Din_Ut_Dur", din_Ut_Dur) :
                new ObjectParameter("Din_Ut_Dur", typeof(int));

            var din_Ut_IntParameter = din_Ut_Int.HasValue ?
                new ObjectParameter("Din_Ut_Int", din_Ut_Int) :
                new ObjectParameter("Din_Ut_Int", typeof(int));

            var ex_Val_DilatParameter = ex_Val_Dilat.HasValue ?
                new ObjectParameter("Ex_Val_Dilat", ex_Val_Dilat) :
                new ObjectParameter("Ex_Val_Dilat", typeof(int));

            var ex_Val_IncorpParameter = ex_Val_Incorp.HasValue ?
                new ObjectParameter("Ex_Val_Incorp", ex_Val_Incorp) :
                new ObjectParameter("Ex_Val_Incorp", typeof(int));

            var ex_Val_APParameter = ex_Val_AP.HasValue ?
                new ObjectParameter("Ex_Val_AP", ex_Val_AP) :
                new ObjectParameter("Ex_Val_AP", typeof(int));

            var ex_Val_IdMParameter = ex_Val_IdM.HasValue ?
                new ObjectParameter("Ex_Val_IdM", ex_Val_IdM) :
                new ObjectParameter("Ex_Val_IdM", typeof(int));

            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));

            var firmaParameter = firma != null ?
                new ObjectParameter("Firma", firma) :
                new ObjectParameter("Firma", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Monitoreo_Obs_Ing_FE>("SP_SS_HC_Monitoreo_Obs_Ing_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaParameter, horaParameter, goteoxminParameter, mUParameter, fun_Vital_PA1Parameter, fun_Vital_PA2Parameter, fun_Vital_PParameter, fun_Vital_RParameter, fun_Vital_TParameter, fCFParameter, din_Ut_FrecParameter, din_Ut_DurParameter, din_Ut_IntParameter, ex_Val_DilatParameter, ex_Val_IncorpParameter, ex_Val_APParameter, ex_Val_IdMParameter, observacionesParameter, firmaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Monitoreo_Obs_Ing_FE> SP_SS_HC_Monitoreo_Obs_Ing_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fecha, Nullable<System.DateTime> hora, Nullable<int> goteoxmin, Nullable<int> mU, Nullable<int> fun_Vital_PA1, Nullable<int> fun_Vital_PA2, Nullable<int> fun_Vital_P, Nullable<int> fun_Vital_R, Nullable<decimal> fun_Vital_T, Nullable<int> fCF, Nullable<int> din_Ut_Frec, Nullable<int> din_Ut_Dur, Nullable<int> din_Ut_Int, Nullable<int> ex_Val_Dilat, Nullable<int> ex_Val_Incorp, Nullable<int> ex_Val_AP, Nullable<int> ex_Val_IdM, string observaciones, string firma, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var goteoxminParameter = goteoxmin.HasValue ?
                new ObjectParameter("Goteoxmin", goteoxmin) :
                new ObjectParameter("Goteoxmin", typeof(int));

            var mUParameter = mU.HasValue ?
                new ObjectParameter("MU", mU) :
                new ObjectParameter("MU", typeof(int));

            var fun_Vital_PA1Parameter = fun_Vital_PA1.HasValue ?
                new ObjectParameter("Fun_Vital_PA1", fun_Vital_PA1) :
                new ObjectParameter("Fun_Vital_PA1", typeof(int));

            var fun_Vital_PA2Parameter = fun_Vital_PA2.HasValue ?
                new ObjectParameter("Fun_Vital_PA2", fun_Vital_PA2) :
                new ObjectParameter("Fun_Vital_PA2", typeof(int));

            var fun_Vital_PParameter = fun_Vital_P.HasValue ?
                new ObjectParameter("Fun_Vital_P", fun_Vital_P) :
                new ObjectParameter("Fun_Vital_P", typeof(int));

            var fun_Vital_RParameter = fun_Vital_R.HasValue ?
                new ObjectParameter("Fun_Vital_R", fun_Vital_R) :
                new ObjectParameter("Fun_Vital_R", typeof(int));

            var fun_Vital_TParameter = fun_Vital_T.HasValue ?
                new ObjectParameter("Fun_Vital_T", fun_Vital_T) :
                new ObjectParameter("Fun_Vital_T", typeof(decimal));

            var fCFParameter = fCF.HasValue ?
                new ObjectParameter("FCF", fCF) :
                new ObjectParameter("FCF", typeof(int));

            var din_Ut_FrecParameter = din_Ut_Frec.HasValue ?
                new ObjectParameter("Din_Ut_Frec", din_Ut_Frec) :
                new ObjectParameter("Din_Ut_Frec", typeof(int));

            var din_Ut_DurParameter = din_Ut_Dur.HasValue ?
                new ObjectParameter("Din_Ut_Dur", din_Ut_Dur) :
                new ObjectParameter("Din_Ut_Dur", typeof(int));

            var din_Ut_IntParameter = din_Ut_Int.HasValue ?
                new ObjectParameter("Din_Ut_Int", din_Ut_Int) :
                new ObjectParameter("Din_Ut_Int", typeof(int));

            var ex_Val_DilatParameter = ex_Val_Dilat.HasValue ?
                new ObjectParameter("Ex_Val_Dilat", ex_Val_Dilat) :
                new ObjectParameter("Ex_Val_Dilat", typeof(int));

            var ex_Val_IncorpParameter = ex_Val_Incorp.HasValue ?
                new ObjectParameter("Ex_Val_Incorp", ex_Val_Incorp) :
                new ObjectParameter("Ex_Val_Incorp", typeof(int));

            var ex_Val_APParameter = ex_Val_AP.HasValue ?
                new ObjectParameter("Ex_Val_AP", ex_Val_AP) :
                new ObjectParameter("Ex_Val_AP", typeof(int));

            var ex_Val_IdMParameter = ex_Val_IdM.HasValue ?
                new ObjectParameter("Ex_Val_IdM", ex_Val_IdM) :
                new ObjectParameter("Ex_Val_IdM", typeof(int));

            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));

            var firmaParameter = firma != null ?
                new ObjectParameter("Firma", firma) :
                new ObjectParameter("Firma", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Monitoreo_Obs_Ing_FE>("SP_SS_HC_Monitoreo_Obs_Ing_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fechaParameter, horaParameter, goteoxminParameter, mUParameter, fun_Vital_PA1Parameter, fun_Vital_PA2Parameter, fun_Vital_PParameter, fun_Vital_RParameter, fun_Vital_TParameter, fCFParameter, din_Ut_FrecParameter, din_Ut_DurParameter, din_Ut_IntParameter, ex_Val_DilatParameter, ex_Val_IncorpParameter, ex_Val_APParameter, ex_Val_IdMParameter, observacionesParameter, firmaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Monitoreo_Obs_FE> SP_SS_HC_Monitoreo_Obs_Listar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idMedico, Nullable<int> idEspecialidad, Nullable<int> idMonitoreo, Nullable<System.DateTime> hora_Inicio, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idDiagnostico, Nullable<int> idFormaInicio, Nullable<int> estado)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idMonitoreoParameter = idMonitoreo.HasValue ?
                new ObjectParameter("IdMonitoreo", idMonitoreo) :
                new ObjectParameter("IdMonitoreo", typeof(int));

            var hora_InicioParameter = hora_Inicio.HasValue ?
                new ObjectParameter("Hora_Inicio", hora_Inicio) :
                new ObjectParameter("Hora_Inicio", typeof(System.DateTime));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Monitoreo_Obs_FE>("SP_SS_HC_Monitoreo_Obs_Listar_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idMedicoParameter, idEspecialidadParameter, idMonitoreoParameter, hora_InicioParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idDiagnosticoParameter, idFormaInicioParameter, estadoParameter);
        }

        public virtual ObjectResult<SS_HC_Monitoreo_Obs_FE> SP_SS_HC_Monitoreo_Obs_Listar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idMedico, Nullable<int> idEspecialidad, Nullable<int> idMonitoreo, Nullable<System.DateTime> hora_Inicio, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idDiagnostico, Nullable<int> idFormaInicio, Nullable<int> estado, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idMonitoreoParameter = idMonitoreo.HasValue ?
                new ObjectParameter("IdMonitoreo", idMonitoreo) :
                new ObjectParameter("IdMonitoreo", typeof(int));

            var hora_InicioParameter = hora_Inicio.HasValue ?
                new ObjectParameter("Hora_Inicio", hora_Inicio) :
                new ObjectParameter("Hora_Inicio", typeof(System.DateTime));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Monitoreo_Obs_FE>("SP_SS_HC_Monitoreo_Obs_Listar_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idMedicoParameter, idEspecialidadParameter, idMonitoreoParameter, hora_InicioParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idDiagnosticoParameter, idFormaInicioParameter, estadoParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_Partograma_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fecha, Nullable<int> frecCardiacaFetal, string membranas, string liquido, Nullable<int> dilatacionCuelloUt, Nullable<int> descensoCefalico, Nullable<int> tactosVaginales, Nullable<int> duracionContracciones, Nullable<int> contracTEENmin, Nullable<int> oxitocina, Nullable<int> fVPulso, Nullable<int> fVPresionArterial, Nullable<int> fVPresionArterialD, Nullable<decimal> fVTemperatura, Nullable<decimal> proteina, Nullable<decimal> acetona, Nullable<int> volumen, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var frecCardiacaFetalParameter = frecCardiacaFetal.HasValue ?
                new ObjectParameter("FrecCardiacaFetal", frecCardiacaFetal) :
                new ObjectParameter("FrecCardiacaFetal", typeof(int));

            var membranasParameter = membranas != null ?
                new ObjectParameter("Membranas", membranas) :
                new ObjectParameter("Membranas", typeof(string));

            var liquidoParameter = liquido != null ?
                new ObjectParameter("Liquido", liquido) :
                new ObjectParameter("Liquido", typeof(string));

            var dilatacionCuelloUtParameter = dilatacionCuelloUt.HasValue ?
                new ObjectParameter("DilatacionCuelloUt", dilatacionCuelloUt) :
                new ObjectParameter("DilatacionCuelloUt", typeof(int));

            var descensoCefalicoParameter = descensoCefalico.HasValue ?
                new ObjectParameter("DescensoCefalico", descensoCefalico) :
                new ObjectParameter("DescensoCefalico", typeof(int));

            var tactosVaginalesParameter = tactosVaginales.HasValue ?
                new ObjectParameter("TactosVaginales", tactosVaginales) :
                new ObjectParameter("TactosVaginales", typeof(int));

            var duracionContraccionesParameter = duracionContracciones.HasValue ?
                new ObjectParameter("DuracionContracciones", duracionContracciones) :
                new ObjectParameter("DuracionContracciones", typeof(int));

            var contracTEENminParameter = contracTEENmin.HasValue ?
                new ObjectParameter("ContracTEENmin", contracTEENmin) :
                new ObjectParameter("ContracTEENmin", typeof(int));

            var oxitocinaParameter = oxitocina.HasValue ?
                new ObjectParameter("Oxitocina", oxitocina) :
                new ObjectParameter("Oxitocina", typeof(int));

            var fVPulsoParameter = fVPulso.HasValue ?
                new ObjectParameter("FVPulso", fVPulso) :
                new ObjectParameter("FVPulso", typeof(int));

            var fVPresionArterialParameter = fVPresionArterial.HasValue ?
                new ObjectParameter("FVPresionArterial", fVPresionArterial) :
                new ObjectParameter("FVPresionArterial", typeof(int));

            var fVPresionArterialDParameter = fVPresionArterialD.HasValue ?
                new ObjectParameter("FVPresionArterialD", fVPresionArterialD) :
                new ObjectParameter("FVPresionArterialD", typeof(int));

            var fVTemperaturaParameter = fVTemperatura.HasValue ?
                new ObjectParameter("FVTemperatura", fVTemperatura) :
                new ObjectParameter("FVTemperatura", typeof(decimal));

            var proteinaParameter = proteina.HasValue ?
                new ObjectParameter("Proteina", proteina) :
                new ObjectParameter("Proteina", typeof(decimal));

            var acetonaParameter = acetona.HasValue ?
                new ObjectParameter("Acetona", acetona) :
                new ObjectParameter("Acetona", typeof(decimal));

            var volumenParameter = volumen.HasValue ?
                new ObjectParameter("Volumen", volumen) :
                new ObjectParameter("Volumen", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_Partograma_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaParameter, frecCardiacaFetalParameter, membranasParameter, liquidoParameter, dilatacionCuelloUtParameter, descensoCefalicoParameter, tactosVaginalesParameter, duracionContraccionesParameter, contracTEENminParameter, oxitocinaParameter, fVPulsoParameter, fVPresionArterialParameter, fVPresionArterialDParameter, fVTemperaturaParameter, proteinaParameter, acetonaParameter, volumenParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Partograma_FE> SP_SS_HC_Partograma_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fecha, Nullable<int> frecCardiacaFetal, string membranas, string liquido, Nullable<int> dilatacionCuelloUt, Nullable<int> descensoCefalico, Nullable<int> tactosVaginales, Nullable<int> duracionContracciones, Nullable<int> contracTEENmin, Nullable<int> oxitocina, Nullable<int> fVPulso, Nullable<int> fVPresionArterial, Nullable<int> fVPresionArterialD, Nullable<decimal> fVTemperatura, Nullable<decimal> proteina, Nullable<decimal> acetona, Nullable<int> volumen, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var frecCardiacaFetalParameter = frecCardiacaFetal.HasValue ?
                new ObjectParameter("FrecCardiacaFetal", frecCardiacaFetal) :
                new ObjectParameter("FrecCardiacaFetal", typeof(int));

            var membranasParameter = membranas != null ?
                new ObjectParameter("Membranas", membranas) :
                new ObjectParameter("Membranas", typeof(string));

            var liquidoParameter = liquido != null ?
                new ObjectParameter("Liquido", liquido) :
                new ObjectParameter("Liquido", typeof(string));

            var dilatacionCuelloUtParameter = dilatacionCuelloUt.HasValue ?
                new ObjectParameter("DilatacionCuelloUt", dilatacionCuelloUt) :
                new ObjectParameter("DilatacionCuelloUt", typeof(int));

            var descensoCefalicoParameter = descensoCefalico.HasValue ?
                new ObjectParameter("DescensoCefalico", descensoCefalico) :
                new ObjectParameter("DescensoCefalico", typeof(int));

            var tactosVaginalesParameter = tactosVaginales.HasValue ?
                new ObjectParameter("TactosVaginales", tactosVaginales) :
                new ObjectParameter("TactosVaginales", typeof(int));

            var duracionContraccionesParameter = duracionContracciones.HasValue ?
                new ObjectParameter("DuracionContracciones", duracionContracciones) :
                new ObjectParameter("DuracionContracciones", typeof(int));

            var contracTEENminParameter = contracTEENmin.HasValue ?
                new ObjectParameter("ContracTEENmin", contracTEENmin) :
                new ObjectParameter("ContracTEENmin", typeof(int));

            var oxitocinaParameter = oxitocina.HasValue ?
                new ObjectParameter("Oxitocina", oxitocina) :
                new ObjectParameter("Oxitocina", typeof(int));

            var fVPulsoParameter = fVPulso.HasValue ?
                new ObjectParameter("FVPulso", fVPulso) :
                new ObjectParameter("FVPulso", typeof(int));

            var fVPresionArterialParameter = fVPresionArterial.HasValue ?
                new ObjectParameter("FVPresionArterial", fVPresionArterial) :
                new ObjectParameter("FVPresionArterial", typeof(int));

            var fVPresionArterialDParameter = fVPresionArterialD.HasValue ?
                new ObjectParameter("FVPresionArterialD", fVPresionArterialD) :
                new ObjectParameter("FVPresionArterialD", typeof(int));

            var fVTemperaturaParameter = fVTemperatura.HasValue ?
                new ObjectParameter("FVTemperatura", fVTemperatura) :
                new ObjectParameter("FVTemperatura", typeof(decimal));

            var proteinaParameter = proteina.HasValue ?
                new ObjectParameter("Proteina", proteina) :
                new ObjectParameter("Proteina", typeof(decimal));

            var acetonaParameter = acetona.HasValue ?
                new ObjectParameter("Acetona", acetona) :
                new ObjectParameter("Acetona", typeof(decimal));

            var volumenParameter = volumen.HasValue ?
                new ObjectParameter("Volumen", volumen) :
                new ObjectParameter("Volumen", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Partograma_FE>("SP_SS_HC_Partograma_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaParameter, frecCardiacaFetalParameter, membranasParameter, liquidoParameter, dilatacionCuelloUtParameter, descensoCefalicoParameter, tactosVaginalesParameter, duracionContraccionesParameter, contracTEENminParameter, oxitocinaParameter, fVPulsoParameter, fVPresionArterialParameter, fVPresionArterialDParameter, fVTemperaturaParameter, proteinaParameter, acetonaParameter, volumenParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Partograma_FE> SP_SS_HC_Partograma_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fecha, Nullable<int> frecCardiacaFetal, string membranas, string liquido, Nullable<int> dilatacionCuelloUt, Nullable<int> descensoCefalico, Nullable<int> tactosVaginales, Nullable<int> duracionContracciones, Nullable<int> contracTEENmin, Nullable<int> oxitocina, Nullable<int> fVPulso, Nullable<int> fVPresionArterial, Nullable<int> fVPresionArterialD, Nullable<decimal> fVTemperatura, Nullable<decimal> proteina, Nullable<decimal> acetona, Nullable<int> volumen, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var frecCardiacaFetalParameter = frecCardiacaFetal.HasValue ?
                new ObjectParameter("FrecCardiacaFetal", frecCardiacaFetal) :
                new ObjectParameter("FrecCardiacaFetal", typeof(int));

            var membranasParameter = membranas != null ?
                new ObjectParameter("Membranas", membranas) :
                new ObjectParameter("Membranas", typeof(string));

            var liquidoParameter = liquido != null ?
                new ObjectParameter("Liquido", liquido) :
                new ObjectParameter("Liquido", typeof(string));

            var dilatacionCuelloUtParameter = dilatacionCuelloUt.HasValue ?
                new ObjectParameter("DilatacionCuelloUt", dilatacionCuelloUt) :
                new ObjectParameter("DilatacionCuelloUt", typeof(int));

            var descensoCefalicoParameter = descensoCefalico.HasValue ?
                new ObjectParameter("DescensoCefalico", descensoCefalico) :
                new ObjectParameter("DescensoCefalico", typeof(int));

            var tactosVaginalesParameter = tactosVaginales.HasValue ?
                new ObjectParameter("TactosVaginales", tactosVaginales) :
                new ObjectParameter("TactosVaginales", typeof(int));

            var duracionContraccionesParameter = duracionContracciones.HasValue ?
                new ObjectParameter("DuracionContracciones", duracionContracciones) :
                new ObjectParameter("DuracionContracciones", typeof(int));

            var contracTEENminParameter = contracTEENmin.HasValue ?
                new ObjectParameter("ContracTEENmin", contracTEENmin) :
                new ObjectParameter("ContracTEENmin", typeof(int));

            var oxitocinaParameter = oxitocina.HasValue ?
                new ObjectParameter("Oxitocina", oxitocina) :
                new ObjectParameter("Oxitocina", typeof(int));

            var fVPulsoParameter = fVPulso.HasValue ?
                new ObjectParameter("FVPulso", fVPulso) :
                new ObjectParameter("FVPulso", typeof(int));

            var fVPresionArterialParameter = fVPresionArterial.HasValue ?
                new ObjectParameter("FVPresionArterial", fVPresionArterial) :
                new ObjectParameter("FVPresionArterial", typeof(int));

            var fVPresionArterialDParameter = fVPresionArterialD.HasValue ?
                new ObjectParameter("FVPresionArterialD", fVPresionArterialD) :
                new ObjectParameter("FVPresionArterialD", typeof(int));

            var fVTemperaturaParameter = fVTemperatura.HasValue ?
                new ObjectParameter("FVTemperatura", fVTemperatura) :
                new ObjectParameter("FVTemperatura", typeof(decimal));

            var proteinaParameter = proteina.HasValue ?
                new ObjectParameter("Proteina", proteina) :
                new ObjectParameter("Proteina", typeof(decimal));

            var acetonaParameter = acetona.HasValue ?
                new ObjectParameter("Acetona", acetona) :
                new ObjectParameter("Acetona", typeof(decimal));

            var volumenParameter = volumen.HasValue ?
                new ObjectParameter("Volumen", volumen) :
                new ObjectParameter("Volumen", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Partograma_FE>("SP_SS_HC_Partograma_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaParameter, frecCardiacaFetalParameter, membranasParameter, liquidoParameter, dilatacionCuelloUtParameter, descensoCefalicoParameter, tactosVaginalesParameter, duracionContraccionesParameter, contracTEENminParameter, oxitocinaParameter, fVPulsoParameter, fVPresionArterialParameter, fVPresionArterialDParameter, fVTemperaturaParameter, proteinaParameter, acetonaParameter, volumenParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_PartogramaDetalle_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string medicamento, Nullable<System.DateTime> hora, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var medicamentoParameter = medicamento != null ?
                new ObjectParameter("Medicamento", medicamento) :
                new ObjectParameter("Medicamento", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_PartogramaDetalle_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, medicamentoParameter, horaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_PartogramaDetalle_FE> SP_SS_HC_PartogramaDetalleListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string medicamento, Nullable<System.DateTime> hora, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var medicamentoParameter = medicamento != null ?
                new ObjectParameter("Medicamento", medicamento) :
                new ObjectParameter("Medicamento", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_PartogramaDetalle_FE>("SP_SS_HC_PartogramaDetalleListar_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, medicamentoParameter, horaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_PartogramaDetalle_FE> SP_SS_HC_PartogramaDetalleListar_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string medicamento, Nullable<System.DateTime> hora, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var medicamentoParameter = medicamento != null ?
                new ObjectParameter("Medicamento", medicamento) :
                new ObjectParameter("Medicamento", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_PartogramaDetalle_FE>("SP_SS_HC_PartogramaDetalleListar_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, medicamentoParameter, horaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_RESPARTO_EMB_ACT_FE_(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fUR, Nullable<System.DateTime> fPP, string eGXFUR, string pFGECO, string eG, string aU, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fURParameter = fUR.HasValue ?
                new ObjectParameter("FUR", fUR) :
                new ObjectParameter("FUR", typeof(System.DateTime));

            var fPPParameter = fPP.HasValue ?
                new ObjectParameter("FPP", fPP) :
                new ObjectParameter("FPP", typeof(System.DateTime));

            var eGXFURParameter = eGXFUR != null ?
                new ObjectParameter("EGXFUR", eGXFUR) :
                new ObjectParameter("EGXFUR", typeof(string));

            var pFGECOParameter = pFGECO != null ?
                new ObjectParameter("PFGECO", pFGECO) :
                new ObjectParameter("PFGECO", typeof(string));

            var eGParameter = eG != null ?
                new ObjectParameter("EG", eG) :
                new ObjectParameter("EG", typeof(string));

            var aUParameter = aU != null ?
                new ObjectParameter("AU", aU) :
                new ObjectParameter("AU", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_RESPARTO_EMB_ACT_FE_", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fURParameter, fPPParameter, eGXFURParameter, pFGECOParameter, eGParameter, aUParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_RESPARTO_EMB_ACT_FE> SP_SS_HC_RESPARTO_EMB_ACT_FE_LISTAR(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fUR, Nullable<System.DateTime> fPP, string eGXFUR, string pFGECO, string eG, string aU, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fURParameter = fUR.HasValue ?
                new ObjectParameter("FUR", fUR) :
                new ObjectParameter("FUR", typeof(System.DateTime));

            var fPPParameter = fPP.HasValue ?
                new ObjectParameter("FPP", fPP) :
                new ObjectParameter("FPP", typeof(System.DateTime));

            var eGXFURParameter = eGXFUR != null ?
                new ObjectParameter("EGXFUR", eGXFUR) :
                new ObjectParameter("EGXFUR", typeof(string));

            var pFGECOParameter = pFGECO != null ?
                new ObjectParameter("PFGECO", pFGECO) :
                new ObjectParameter("PFGECO", typeof(string));

            var eGParameter = eG != null ?
                new ObjectParameter("EG", eG) :
                new ObjectParameter("EG", typeof(string));

            var aUParameter = aU != null ?
                new ObjectParameter("AU", aU) :
                new ObjectParameter("AU", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_RESPARTO_EMB_ACT_FE>("SP_SS_HC_RESPARTO_EMB_ACT_FE_LISTAR", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fURParameter, fPPParameter, eGXFURParameter, pFGECOParameter, eGParameter, aUParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_RESPARTO_EMB_ACT_FE> SP_SS_HC_RESPARTO_EMB_ACT_FE_LISTAR(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<System.DateTime> fUR, Nullable<System.DateTime> fPP, string eGXFUR, string pFGECO, string eG, string aU, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fURParameter = fUR.HasValue ?
                new ObjectParameter("FUR", fUR) :
                new ObjectParameter("FUR", typeof(System.DateTime));

            var fPPParameter = fPP.HasValue ?
                new ObjectParameter("FPP", fPP) :
                new ObjectParameter("FPP", typeof(System.DateTime));

            var eGXFURParameter = eGXFUR != null ?
                new ObjectParameter("EGXFUR", eGXFUR) :
                new ObjectParameter("EGXFUR", typeof(string));

            var pFGECOParameter = pFGECO != null ?
                new ObjectParameter("PFGECO", pFGECO) :
                new ObjectParameter("PFGECO", typeof(string));

            var eGParameter = eG != null ?
                new ObjectParameter("EG", eG) :
                new ObjectParameter("EG", typeof(string));

            var aUParameter = aU != null ?
                new ObjectParameter("AU", aU) :
                new ObjectParameter("AU", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_RESPARTO_EMB_ACT_FE>("SP_SS_HC_RESPARTO_EMB_ACT_FE_LISTAR", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, fURParameter, fPPParameter, eGXFURParameter, pFGECOParameter, eGParameter, aUParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_RESPARTO_EMB_ANT_FE_(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> pariedad1, Nullable<int> pariedad2, Nullable<int> pariedad3, Nullable<int> pariedad4, Nullable<int> gravidez, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var pariedad1Parameter = pariedad1.HasValue ?
                new ObjectParameter("Pariedad1", pariedad1) :
                new ObjectParameter("Pariedad1", typeof(int));

            var pariedad2Parameter = pariedad2.HasValue ?
                new ObjectParameter("Pariedad2", pariedad2) :
                new ObjectParameter("Pariedad2", typeof(int));

            var pariedad3Parameter = pariedad3.HasValue ?
                new ObjectParameter("Pariedad3", pariedad3) :
                new ObjectParameter("Pariedad3", typeof(int));

            var pariedad4Parameter = pariedad4.HasValue ?
                new ObjectParameter("Pariedad4", pariedad4) :
                new ObjectParameter("Pariedad4", typeof(int));

            var gravidezParameter = gravidez.HasValue ?
                new ObjectParameter("Gravidez", gravidez) :
                new ObjectParameter("Gravidez", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_RESPARTO_EMB_ANT_FE_", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, pariedad1Parameter, pariedad2Parameter, pariedad3Parameter, pariedad4Parameter, gravidezParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_RESPARTO_EMB_ANT_FE> SP_SS_HC_RESPARTO_EMB_ANT_FE_LISTAR(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> pariedad1, Nullable<int> pariedad2, Nullable<int> pariedad3, Nullable<int> pariedad4, Nullable<int> gravidez, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var pariedad1Parameter = pariedad1.HasValue ?
                new ObjectParameter("Pariedad1", pariedad1) :
                new ObjectParameter("Pariedad1", typeof(int));

            var pariedad2Parameter = pariedad2.HasValue ?
                new ObjectParameter("Pariedad2", pariedad2) :
                new ObjectParameter("Pariedad2", typeof(int));

            var pariedad3Parameter = pariedad3.HasValue ?
                new ObjectParameter("Pariedad3", pariedad3) :
                new ObjectParameter("Pariedad3", typeof(int));

            var pariedad4Parameter = pariedad4.HasValue ?
                new ObjectParameter("Pariedad4", pariedad4) :
                new ObjectParameter("Pariedad4", typeof(int));

            var gravidezParameter = gravidez.HasValue ?
                new ObjectParameter("Gravidez", gravidez) :
                new ObjectParameter("Gravidez", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_RESPARTO_EMB_ANT_FE>("SP_SS_HC_RESPARTO_EMB_ANT_FE_LISTAR", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, pariedad1Parameter, pariedad2Parameter, pariedad3Parameter, pariedad4Parameter, gravidezParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_RESPARTO_EMB_ANT_FE> SP_SS_HC_RESPARTO_EMB_ANT_FE_LISTAR(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> pariedad1, Nullable<int> pariedad2, Nullable<int> pariedad3, Nullable<int> pariedad4, Nullable<int> gravidez, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var pariedad1Parameter = pariedad1.HasValue ?
                new ObjectParameter("Pariedad1", pariedad1) :
                new ObjectParameter("Pariedad1", typeof(int));

            var pariedad2Parameter = pariedad2.HasValue ?
                new ObjectParameter("Pariedad2", pariedad2) :
                new ObjectParameter("Pariedad2", typeof(int));

            var pariedad3Parameter = pariedad3.HasValue ?
                new ObjectParameter("Pariedad3", pariedad3) :
                new ObjectParameter("Pariedad3", typeof(int));

            var pariedad4Parameter = pariedad4.HasValue ?
                new ObjectParameter("Pariedad4", pariedad4) :
                new ObjectParameter("Pariedad4", typeof(int));

            var gravidezParameter = gravidez.HasValue ?
                new ObjectParameter("Gravidez", gravidez) :
                new ObjectParameter("Gravidez", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_RESPARTO_EMB_ANT_FE>("SP_SS_HC_RESPARTO_EMB_ANT_FE_LISTAR", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, pariedad1Parameter, pariedad2Parameter, pariedad3Parameter, pariedad4Parameter, gravidezParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_RESUMEN_PARTO_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idResParto, Nullable<System.DateTime> fecha_Ing, Nullable<System.DateTime> hora_Ing, Nullable<int> controladora, Nullable<int> membranas, string horas_memb, Nullable<int> p_Selector1, Nullable<int> p_Selector2, string p_Observacion, string p_Dur_Parto, Nullable<int> s_Selector1, string observaciones1_S, Nullable<System.DateTime> s_Fecha_Parto, Nullable<System.DateTime> s_Hora_Parto, Nullable<int> s_Selector2, Nullable<int> s_Episiotomia, Nullable<int> s_Desgarro, Nullable<int> s_Selector3, Nullable<int> s_Selector4, string observaciones2_S, string s_Dur_Parto, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> estado)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idResPartoParameter = idResParto.HasValue ?
                new ObjectParameter("IdResParto", idResParto) :
                new ObjectParameter("IdResParto", typeof(int));

            var fecha_IngParameter = fecha_Ing.HasValue ?
                new ObjectParameter("Fecha_Ing", fecha_Ing) :
                new ObjectParameter("Fecha_Ing", typeof(System.DateTime));

            var hora_IngParameter = hora_Ing.HasValue ?
                new ObjectParameter("Hora_Ing", hora_Ing) :
                new ObjectParameter("Hora_Ing", typeof(System.DateTime));

            var controladoraParameter = controladora.HasValue ?
                new ObjectParameter("Controladora", controladora) :
                new ObjectParameter("Controladora", typeof(int));

            var membranasParameter = membranas.HasValue ?
                new ObjectParameter("Membranas", membranas) :
                new ObjectParameter("Membranas", typeof(int));

            var horas_membParameter = horas_memb != null ?
                new ObjectParameter("Horas_memb", horas_memb) :
                new ObjectParameter("Horas_memb", typeof(string));

            var p_Selector1Parameter = p_Selector1.HasValue ?
                new ObjectParameter("P_Selector1", p_Selector1) :
                new ObjectParameter("P_Selector1", typeof(int));

            var p_Selector2Parameter = p_Selector2.HasValue ?
                new ObjectParameter("P_Selector2", p_Selector2) :
                new ObjectParameter("P_Selector2", typeof(int));

            var p_ObservacionParameter = p_Observacion != null ?
                new ObjectParameter("P_Observacion", p_Observacion) :
                new ObjectParameter("P_Observacion", typeof(string));

            var p_Dur_PartoParameter = p_Dur_Parto != null ?
                new ObjectParameter("P_Dur_Parto", p_Dur_Parto) :
                new ObjectParameter("P_Dur_Parto", typeof(string));

            var s_Selector1Parameter = s_Selector1.HasValue ?
                new ObjectParameter("S_Selector1", s_Selector1) :
                new ObjectParameter("S_Selector1", typeof(int));

            var observaciones1_SParameter = observaciones1_S != null ?
                new ObjectParameter("Observaciones1_S", observaciones1_S) :
                new ObjectParameter("Observaciones1_S", typeof(string));

            var s_Fecha_PartoParameter = s_Fecha_Parto.HasValue ?
                new ObjectParameter("S_Fecha_Parto", s_Fecha_Parto) :
                new ObjectParameter("S_Fecha_Parto", typeof(System.DateTime));

            var s_Hora_PartoParameter = s_Hora_Parto.HasValue ?
                new ObjectParameter("S_Hora_Parto", s_Hora_Parto) :
                new ObjectParameter("S_Hora_Parto", typeof(System.DateTime));

            var s_Selector2Parameter = s_Selector2.HasValue ?
                new ObjectParameter("S_Selector2", s_Selector2) :
                new ObjectParameter("S_Selector2", typeof(int));

            var s_EpisiotomiaParameter = s_Episiotomia.HasValue ?
                new ObjectParameter("S_Episiotomia", s_Episiotomia) :
                new ObjectParameter("S_Episiotomia", typeof(int));

            var s_DesgarroParameter = s_Desgarro.HasValue ?
                new ObjectParameter("S_Desgarro", s_Desgarro) :
                new ObjectParameter("S_Desgarro", typeof(int));

            var s_Selector3Parameter = s_Selector3.HasValue ?
                new ObjectParameter("S_Selector3", s_Selector3) :
                new ObjectParameter("S_Selector3", typeof(int));

            var s_Selector4Parameter = s_Selector4.HasValue ?
                new ObjectParameter("S_Selector4", s_Selector4) :
                new ObjectParameter("S_Selector4", typeof(int));

            var observaciones2_SParameter = observaciones2_S != null ?
                new ObjectParameter("Observaciones2_S", observaciones2_S) :
                new ObjectParameter("Observaciones2_S", typeof(string));

            var s_Dur_PartoParameter = s_Dur_Parto != null ?
                new ObjectParameter("S_Dur_Parto", s_Dur_Parto) :
                new ObjectParameter("S_Dur_Parto", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_RESUMEN_PARTO_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idResPartoParameter, fecha_IngParameter, hora_IngParameter, controladoraParameter, membranasParameter, horas_membParameter, p_Selector1Parameter, p_Selector2Parameter, p_ObservacionParameter, p_Dur_PartoParameter, s_Selector1Parameter, observaciones1_SParameter, s_Fecha_PartoParameter, s_Hora_PartoParameter, s_Selector2Parameter, s_EpisiotomiaParameter, s_DesgarroParameter, s_Selector3Parameter, s_Selector4Parameter, observaciones2_SParameter, s_Dur_PartoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, estadoParameter);
        }

        public virtual ObjectResult<SS_HC_RESUMEN_PARTO_FE> SP_SS_HC_RESUMEN_PARTO_LISTAR_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idResParto, Nullable<System.DateTime> fecha_Ing, Nullable<System.DateTime> hora_Ing, Nullable<int> controladora, Nullable<int> membranas, string horas_memb, Nullable<int> p_Selector1, Nullable<int> p_Selector2, string p_Observacion, string p_Dur_Parto, Nullable<int> s_Selector1, string observaciones1_S, Nullable<System.DateTime> s_Fecha_Parto, Nullable<System.DateTime> s_Hora_Parto, Nullable<int> s_Selector2, Nullable<int> s_Episiotomia, Nullable<int> s_Desgarro, Nullable<int> s_Selector3, Nullable<int> s_Selector4, string observaciones2_S, string s_Dur_Parto, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> estado)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idResPartoParameter = idResParto.HasValue ?
                new ObjectParameter("IdResParto", idResParto) :
                new ObjectParameter("IdResParto", typeof(int));

            var fecha_IngParameter = fecha_Ing.HasValue ?
                new ObjectParameter("Fecha_Ing", fecha_Ing) :
                new ObjectParameter("Fecha_Ing", typeof(System.DateTime));

            var hora_IngParameter = hora_Ing.HasValue ?
                new ObjectParameter("Hora_Ing", hora_Ing) :
                new ObjectParameter("Hora_Ing", typeof(System.DateTime));

            var controladoraParameter = controladora.HasValue ?
                new ObjectParameter("Controladora", controladora) :
                new ObjectParameter("Controladora", typeof(int));

            var membranasParameter = membranas.HasValue ?
                new ObjectParameter("Membranas", membranas) :
                new ObjectParameter("Membranas", typeof(int));

            var horas_membParameter = horas_memb != null ?
                new ObjectParameter("Horas_memb", horas_memb) :
                new ObjectParameter("Horas_memb", typeof(string));

            var p_Selector1Parameter = p_Selector1.HasValue ?
                new ObjectParameter("P_Selector1", p_Selector1) :
                new ObjectParameter("P_Selector1", typeof(int));

            var p_Selector2Parameter = p_Selector2.HasValue ?
                new ObjectParameter("P_Selector2", p_Selector2) :
                new ObjectParameter("P_Selector2", typeof(int));

            var p_ObservacionParameter = p_Observacion != null ?
                new ObjectParameter("P_Observacion", p_Observacion) :
                new ObjectParameter("P_Observacion", typeof(string));

            var p_Dur_PartoParameter = p_Dur_Parto != null ?
                new ObjectParameter("P_Dur_Parto", p_Dur_Parto) :
                new ObjectParameter("P_Dur_Parto", typeof(string));

            var s_Selector1Parameter = s_Selector1.HasValue ?
                new ObjectParameter("S_Selector1", s_Selector1) :
                new ObjectParameter("S_Selector1", typeof(int));

            var observaciones1_SParameter = observaciones1_S != null ?
                new ObjectParameter("Observaciones1_S", observaciones1_S) :
                new ObjectParameter("Observaciones1_S", typeof(string));

            var s_Fecha_PartoParameter = s_Fecha_Parto.HasValue ?
                new ObjectParameter("S_Fecha_Parto", s_Fecha_Parto) :
                new ObjectParameter("S_Fecha_Parto", typeof(System.DateTime));

            var s_Hora_PartoParameter = s_Hora_Parto.HasValue ?
                new ObjectParameter("S_Hora_Parto", s_Hora_Parto) :
                new ObjectParameter("S_Hora_Parto", typeof(System.DateTime));

            var s_Selector2Parameter = s_Selector2.HasValue ?
                new ObjectParameter("S_Selector2", s_Selector2) :
                new ObjectParameter("S_Selector2", typeof(int));

            var s_EpisiotomiaParameter = s_Episiotomia.HasValue ?
                new ObjectParameter("S_Episiotomia", s_Episiotomia) :
                new ObjectParameter("S_Episiotomia", typeof(int));

            var s_DesgarroParameter = s_Desgarro.HasValue ?
                new ObjectParameter("S_Desgarro", s_Desgarro) :
                new ObjectParameter("S_Desgarro", typeof(int));

            var s_Selector3Parameter = s_Selector3.HasValue ?
                new ObjectParameter("S_Selector3", s_Selector3) :
                new ObjectParameter("S_Selector3", typeof(int));

            var s_Selector4Parameter = s_Selector4.HasValue ?
                new ObjectParameter("S_Selector4", s_Selector4) :
                new ObjectParameter("S_Selector4", typeof(int));

            var observaciones2_SParameter = observaciones2_S != null ?
                new ObjectParameter("Observaciones2_S", observaciones2_S) :
                new ObjectParameter("Observaciones2_S", typeof(string));

            var s_Dur_PartoParameter = s_Dur_Parto != null ?
                new ObjectParameter("S_Dur_Parto", s_Dur_Parto) :
                new ObjectParameter("S_Dur_Parto", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_RESUMEN_PARTO_FE>("SP_SS_HC_RESUMEN_PARTO_LISTAR_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idResPartoParameter, fecha_IngParameter, hora_IngParameter, controladoraParameter, membranasParameter, horas_membParameter, p_Selector1Parameter, p_Selector2Parameter, p_ObservacionParameter, p_Dur_PartoParameter, s_Selector1Parameter, observaciones1_SParameter, s_Fecha_PartoParameter, s_Hora_PartoParameter, s_Selector2Parameter, s_EpisiotomiaParameter, s_DesgarroParameter, s_Selector3Parameter, s_Selector4Parameter, observaciones2_SParameter, s_Dur_PartoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, estadoParameter);
        }

        public virtual ObjectResult<SS_HC_RESUMEN_PARTO_FE> SP_SS_HC_RESUMEN_PARTO_LISTAR_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idResParto, Nullable<System.DateTime> fecha_Ing, Nullable<System.DateTime> hora_Ing, Nullable<int> controladora, Nullable<int> membranas, string horas_memb, Nullable<int> p_Selector1, Nullable<int> p_Selector2, string p_Observacion, string p_Dur_Parto, Nullable<int> s_Selector1, string observaciones1_S, Nullable<System.DateTime> s_Fecha_Parto, Nullable<System.DateTime> s_Hora_Parto, Nullable<int> s_Selector2, Nullable<int> s_Episiotomia, Nullable<int> s_Desgarro, Nullable<int> s_Selector3, Nullable<int> s_Selector4, string observaciones2_S, string s_Dur_Parto, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> estado, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idResPartoParameter = idResParto.HasValue ?
                new ObjectParameter("IdResParto", idResParto) :
                new ObjectParameter("IdResParto", typeof(int));

            var fecha_IngParameter = fecha_Ing.HasValue ?
                new ObjectParameter("Fecha_Ing", fecha_Ing) :
                new ObjectParameter("Fecha_Ing", typeof(System.DateTime));

            var hora_IngParameter = hora_Ing.HasValue ?
                new ObjectParameter("Hora_Ing", hora_Ing) :
                new ObjectParameter("Hora_Ing", typeof(System.DateTime));

            var controladoraParameter = controladora.HasValue ?
                new ObjectParameter("Controladora", controladora) :
                new ObjectParameter("Controladora", typeof(int));

            var membranasParameter = membranas.HasValue ?
                new ObjectParameter("Membranas", membranas) :
                new ObjectParameter("Membranas", typeof(int));

            var horas_membParameter = horas_memb != null ?
                new ObjectParameter("Horas_memb", horas_memb) :
                new ObjectParameter("Horas_memb", typeof(string));

            var p_Selector1Parameter = p_Selector1.HasValue ?
                new ObjectParameter("P_Selector1", p_Selector1) :
                new ObjectParameter("P_Selector1", typeof(int));

            var p_Selector2Parameter = p_Selector2.HasValue ?
                new ObjectParameter("P_Selector2", p_Selector2) :
                new ObjectParameter("P_Selector2", typeof(int));

            var p_ObservacionParameter = p_Observacion != null ?
                new ObjectParameter("P_Observacion", p_Observacion) :
                new ObjectParameter("P_Observacion", typeof(string));

            var p_Dur_PartoParameter = p_Dur_Parto != null ?
                new ObjectParameter("P_Dur_Parto", p_Dur_Parto) :
                new ObjectParameter("P_Dur_Parto", typeof(string));

            var s_Selector1Parameter = s_Selector1.HasValue ?
                new ObjectParameter("S_Selector1", s_Selector1) :
                new ObjectParameter("S_Selector1", typeof(int));

            var observaciones1_SParameter = observaciones1_S != null ?
                new ObjectParameter("Observaciones1_S", observaciones1_S) :
                new ObjectParameter("Observaciones1_S", typeof(string));

            var s_Fecha_PartoParameter = s_Fecha_Parto.HasValue ?
                new ObjectParameter("S_Fecha_Parto", s_Fecha_Parto) :
                new ObjectParameter("S_Fecha_Parto", typeof(System.DateTime));

            var s_Hora_PartoParameter = s_Hora_Parto.HasValue ?
                new ObjectParameter("S_Hora_Parto", s_Hora_Parto) :
                new ObjectParameter("S_Hora_Parto", typeof(System.DateTime));

            var s_Selector2Parameter = s_Selector2.HasValue ?
                new ObjectParameter("S_Selector2", s_Selector2) :
                new ObjectParameter("S_Selector2", typeof(int));

            var s_EpisiotomiaParameter = s_Episiotomia.HasValue ?
                new ObjectParameter("S_Episiotomia", s_Episiotomia) :
                new ObjectParameter("S_Episiotomia", typeof(int));

            var s_DesgarroParameter = s_Desgarro.HasValue ?
                new ObjectParameter("S_Desgarro", s_Desgarro) :
                new ObjectParameter("S_Desgarro", typeof(int));

            var s_Selector3Parameter = s_Selector3.HasValue ?
                new ObjectParameter("S_Selector3", s_Selector3) :
                new ObjectParameter("S_Selector3", typeof(int));

            var s_Selector4Parameter = s_Selector4.HasValue ?
                new ObjectParameter("S_Selector4", s_Selector4) :
                new ObjectParameter("S_Selector4", typeof(int));

            var observaciones2_SParameter = observaciones2_S != null ?
                new ObjectParameter("Observaciones2_S", observaciones2_S) :
                new ObjectParameter("Observaciones2_S", typeof(string));

            var s_Dur_PartoParameter = s_Dur_Parto != null ?
                new ObjectParameter("S_Dur_Parto", s_Dur_Parto) :
                new ObjectParameter("S_Dur_Parto", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_RESUMEN_PARTO_FE>("SP_SS_HC_RESUMEN_PARTO_LISTAR_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idResPartoParameter, fecha_IngParameter, hora_IngParameter, controladoraParameter, membranasParameter, horas_membParameter, p_Selector1Parameter, p_Selector2Parameter, p_ObservacionParameter, p_Dur_PartoParameter, s_Selector1Parameter, observaciones1_SParameter, s_Fecha_PartoParameter, s_Hora_PartoParameter, s_Selector2Parameter, s_EpisiotomiaParameter, s_DesgarroParameter, s_Selector3Parameter, s_Selector4Parameter, observaciones2_SParameter, s_Dur_PartoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, estadoParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_Apoyo_Diagnostico_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string accion, Nullable<int> idDiagnostico, Nullable<int> idFormaInicio)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Apoyo_Diagnostico_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, accionParameter, idDiagnosticoParameter, idFormaInicioParameter);
        }

        public virtual ObjectResult<SS_HC_Medicamento_Kardex> SP_SS_Medicamento_Programacion_Kardex_Listar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Medicamento_Kardex>("SP_SS_Medicamento_Programacion_Kardex_Listar", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_Medicamento_Kardex> SP_SS_Medicamento_Programacion_Kardex_Listar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Medicamento_Kardex>("SP_SS_Medicamento_Programacion_Kardex_Listar", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, accionParameter);
        }

        public virtual int SP_SS_HC_Medicamento_Kardex_Insert(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idMedicacion, string medicacion, string dosis, string frecuencia, Nullable<decimal> diasTratamiento, Nullable<decimal> diaTratamiento, Nullable<System.DateTime> horaInicio, Nullable<System.DateTime> horaAdministracion, Nullable<int> hora0, Nullable<int> hora1, Nullable<int> hora2, Nullable<int> hora3, Nullable<int> hora4, Nullable<int> hora5, Nullable<int> hora6, Nullable<int> hora7, Nullable<int> hora8, Nullable<int> hora9, Nullable<int> hora10, Nullable<int> hora11, Nullable<int> hora12, Nullable<int> hora13, Nullable<int> hora14, Nullable<int> hora15, Nullable<int> hora16, Nullable<int> hora17, Nullable<int> hora18, Nullable<int> hora19, Nullable<int> hora20, Nullable<int> hora21, Nullable<int> hora22, Nullable<int> hora23, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var idMedicacionParameter = idMedicacion.HasValue ?
                new ObjectParameter("IdMedicacion", idMedicacion) :
                new ObjectParameter("IdMedicacion", typeof(int));

            var medicacionParameter = medicacion != null ?
                new ObjectParameter("Medicacion", medicacion) :
                new ObjectParameter("Medicacion", typeof(string));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var frecuenciaParameter = frecuencia != null ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var diaTratamientoParameter = diaTratamiento.HasValue ?
                new ObjectParameter("DiaTratamiento", diaTratamiento) :
                new ObjectParameter("DiaTratamiento", typeof(decimal));

            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("HoraInicio", horaInicio) :
                new ObjectParameter("HoraInicio", typeof(System.DateTime));

            var horaAdministracionParameter = horaAdministracion.HasValue ?
                new ObjectParameter("HoraAdministracion", horaAdministracion) :
                new ObjectParameter("HoraAdministracion", typeof(System.DateTime));

            var hora0Parameter = hora0.HasValue ?
                new ObjectParameter("Hora0", hora0) :
                new ObjectParameter("Hora0", typeof(int));

            var hora1Parameter = hora1.HasValue ?
                new ObjectParameter("Hora1", hora1) :
                new ObjectParameter("Hora1", typeof(int));

            var hora2Parameter = hora2.HasValue ?
                new ObjectParameter("Hora2", hora2) :
                new ObjectParameter("Hora2", typeof(int));

            var hora3Parameter = hora3.HasValue ?
                new ObjectParameter("Hora3", hora3) :
                new ObjectParameter("Hora3", typeof(int));

            var hora4Parameter = hora4.HasValue ?
                new ObjectParameter("Hora4", hora4) :
                new ObjectParameter("Hora4", typeof(int));

            var hora5Parameter = hora5.HasValue ?
                new ObjectParameter("Hora5", hora5) :
                new ObjectParameter("Hora5", typeof(int));

            var hora6Parameter = hora6.HasValue ?
                new ObjectParameter("Hora6", hora6) :
                new ObjectParameter("Hora6", typeof(int));

            var hora7Parameter = hora7.HasValue ?
                new ObjectParameter("Hora7", hora7) :
                new ObjectParameter("Hora7", typeof(int));

            var hora8Parameter = hora8.HasValue ?
                new ObjectParameter("Hora8", hora8) :
                new ObjectParameter("Hora8", typeof(int));

            var hora9Parameter = hora9.HasValue ?
                new ObjectParameter("Hora9", hora9) :
                new ObjectParameter("Hora9", typeof(int));

            var hora10Parameter = hora10.HasValue ?
                new ObjectParameter("Hora10", hora10) :
                new ObjectParameter("Hora10", typeof(int));

            var hora11Parameter = hora11.HasValue ?
                new ObjectParameter("Hora11", hora11) :
                new ObjectParameter("Hora11", typeof(int));

            var hora12Parameter = hora12.HasValue ?
                new ObjectParameter("Hora12", hora12) :
                new ObjectParameter("Hora12", typeof(int));

            var hora13Parameter = hora13.HasValue ?
                new ObjectParameter("Hora13", hora13) :
                new ObjectParameter("Hora13", typeof(int));

            var hora14Parameter = hora14.HasValue ?
                new ObjectParameter("Hora14", hora14) :
                new ObjectParameter("Hora14", typeof(int));

            var hora15Parameter = hora15.HasValue ?
                new ObjectParameter("Hora15", hora15) :
                new ObjectParameter("Hora15", typeof(int));

            var hora16Parameter = hora16.HasValue ?
                new ObjectParameter("Hora16", hora16) :
                new ObjectParameter("Hora16", typeof(int));

            var hora17Parameter = hora17.HasValue ?
                new ObjectParameter("Hora17", hora17) :
                new ObjectParameter("Hora17", typeof(int));

            var hora18Parameter = hora18.HasValue ?
                new ObjectParameter("Hora18", hora18) :
                new ObjectParameter("Hora18", typeof(int));

            var hora19Parameter = hora19.HasValue ?
                new ObjectParameter("Hora19", hora19) :
                new ObjectParameter("Hora19", typeof(int));

            var hora20Parameter = hora20.HasValue ?
                new ObjectParameter("Hora20", hora20) :
                new ObjectParameter("Hora20", typeof(int));

            var hora21Parameter = hora21.HasValue ?
                new ObjectParameter("Hora21", hora21) :
                new ObjectParameter("Hora21", typeof(int));

            var hora22Parameter = hora22.HasValue ?
                new ObjectParameter("Hora22", hora22) :
                new ObjectParameter("Hora22", typeof(int));

            var hora23Parameter = hora23.HasValue ?
                new ObjectParameter("Hora23", hora23) :
                new ObjectParameter("Hora23", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_HC_Medicamento_Kardex_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idMedicacionParameter, medicacionParameter, dosisParameter, frecuenciaParameter, diasTratamientoParameter, diaTratamientoParameter, horaInicioParameter, horaAdministracionParameter, hora0Parameter, hora1Parameter, hora2Parameter, hora3Parameter, hora4Parameter, hora5Parameter, hora6Parameter, hora7Parameter, hora8Parameter, hora9Parameter, hora10Parameter, hora11Parameter, hora12Parameter, hora13Parameter, hora14Parameter, hora15Parameter, hora16Parameter, hora17Parameter, hora18Parameter, hora19Parameter, hora20Parameter, hora21Parameter, hora22Parameter, hora23Parameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual int SP_SS_HC_Medicamento_Kardex_FE_Insert(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, string descripcion, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string periodo, Nullable<int> unidadTiempo, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<System.DateTime> horaInicio, Nullable<System.DateTime> horaAdministracion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("HoraInicio", horaInicio) :
                new ObjectParameter("HoraInicio", typeof(System.DateTime));

            var horaAdministracionParameter = horaAdministracion.HasValue ?
                new ObjectParameter("HoraAdministracion", horaAdministracion) :
                new ObjectParameter("HoraAdministracion", typeof(System.DateTime));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_HC_Medicamento_Kardex_FE_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, descripcionParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, periodoParameter, unidadTiempoParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, horaInicioParameter, horaAdministracionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Kardex1_FE> SP_SS_HC_Kardex1_Listar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Kardex1_FE>("SP_SS_HC_Kardex1_Listar", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_Kardex1_FE> SP_SS_HC_Kardex1_Listar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Kardex1_FE>("SP_SS_HC_Kardex1_Listar", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, accionParameter);
        }

        public virtual int SP_SS_HC_Kardex1_FE_Insert(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idMedico, Nullable<int> cMP, Nullable<int> estado, string nombreMedico, string religion, Nullable<int> ayuno, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));

            var cMPParameter = cMP.HasValue ?
                new ObjectParameter("CMP", cMP) :
                new ObjectParameter("CMP", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var nombreMedicoParameter = nombreMedico != null ?
                new ObjectParameter("NombreMedico", nombreMedico) :
                new ObjectParameter("NombreMedico", typeof(string));

            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));

            var ayunoParameter = ayuno.HasValue ?
                new ObjectParameter("Ayuno", ayuno) :
                new ObjectParameter("Ayuno", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_HC_Kardex1_FE_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idMedicoParameter, cMPParameter, estadoParameter, nombreMedicoParameter, religionParameter, ayunoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_GE_Medicamento_FE_Epi2(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, Nullable<int> grupoMedicamento, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadTiempo, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPadreNutriente, Nullable<int> idHijoNutriente)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPadreNutrienteParameter = idPadreNutriente.HasValue ?
                new ObjectParameter("IdPadreNutriente", idPadreNutriente) :
                new ObjectParameter("IdPadreNutriente", typeof(int));

            var idHijoNutrienteParameter = idHijoNutriente.HasValue ?
                new ObjectParameter("IdHijoNutriente", idHijoNutriente) :
                new ObjectParameter("IdHijoNutriente", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_GE_Medicamento_FE_Epi2", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, grupoMedicamentoParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadTiempoParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPadreNutrienteParameter, idHijoNutrienteParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_Anestesia_Farmaco_Detalle_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> tipo, Nullable<int> tipoVia, string farmacoDescripcion, string dosis, string horario, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var tipoViaParameter = tipoVia.HasValue ?
                new ObjectParameter("TipoVia", tipoVia) :
                new ObjectParameter("TipoVia", typeof(int));

            var farmacoDescripcionParameter = farmacoDescripcion != null ?
                new ObjectParameter("FarmacoDescripcion", farmacoDescripcion) :
                new ObjectParameter("FarmacoDescripcion", typeof(string));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var horarioParameter = horario != null ?
                new ObjectParameter("Horario", horario) :
                new ObjectParameter("Horario", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_Anestesia_Farmaco_Detalle_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, tipoParameter, tipoViaParameter, farmacoDescripcionParameter, dosisParameter, horarioParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_Anestesia_Farmaco_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> ingresos1, Nullable<int> ingresos2, Nullable<int> ingresos3, Nullable<int> ingresos4, Nullable<int> ingresos5, Nullable<int> ingresos6, Nullable<int> ingresos7, Nullable<int> ingresos8, Nullable<int> ingresosCantidad1, Nullable<int> ingresosCantidad2, Nullable<int> ingresosCantidad3, Nullable<int> ingresosCantidad4, Nullable<int> ingresosCantidad5, Nullable<int> ingresosCantidad6, Nullable<int> ingresosCantidad7, Nullable<int> ingresosCantidad8, Nullable<int> ingresosHorario1, Nullable<int> ingresosHorario2, Nullable<int> ingresosHorario3, Nullable<int> ingresosHorario4, Nullable<int> ingresosHorario5, Nullable<int> ingresosHorario6, Nullable<int> ingresosHorario7, Nullable<int> ingresosHorario8, Nullable<int> totalIngresos, Nullable<int> perdidas1, Nullable<int> perdidas2, Nullable<int> perdidas3, Nullable<int> perdidas4, Nullable<int> perdidas5, Nullable<int> perdidas6, Nullable<int> perdidasCantidad1, Nullable<int> perdidasCantidad2, Nullable<int> perdidasCantidad3, Nullable<int> perdidasCantidad4, Nullable<int> perdidasCantidad5, Nullable<int> perdidasCantidad6, Nullable<int> perdidasHorario1, Nullable<int> perdidasHorario2, Nullable<int> perdidasHorario3, Nullable<int> perdidasHorario4, Nullable<int> perdidasHorario5, Nullable<int> perdidasHorario6, Nullable<int> totalPerdidas, Nullable<int> balanceHidrico, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var ingresos1Parameter = ingresos1.HasValue ?
                new ObjectParameter("Ingresos1", ingresos1) :
                new ObjectParameter("Ingresos1", typeof(int));

            var ingresos2Parameter = ingresos2.HasValue ?
                new ObjectParameter("Ingresos2", ingresos2) :
                new ObjectParameter("Ingresos2", typeof(int));

            var ingresos3Parameter = ingresos3.HasValue ?
                new ObjectParameter("Ingresos3", ingresos3) :
                new ObjectParameter("Ingresos3", typeof(int));

            var ingresos4Parameter = ingresos4.HasValue ?
                new ObjectParameter("Ingresos4", ingresos4) :
                new ObjectParameter("Ingresos4", typeof(int));

            var ingresos5Parameter = ingresos5.HasValue ?
                new ObjectParameter("Ingresos5", ingresos5) :
                new ObjectParameter("Ingresos5", typeof(int));

            var ingresos6Parameter = ingresos6.HasValue ?
                new ObjectParameter("Ingresos6", ingresos6) :
                new ObjectParameter("Ingresos6", typeof(int));

            var ingresos7Parameter = ingresos7.HasValue ?
                new ObjectParameter("Ingresos7", ingresos7) :
                new ObjectParameter("Ingresos7", typeof(int));

            var ingresos8Parameter = ingresos8.HasValue ?
                new ObjectParameter("Ingresos8", ingresos8) :
                new ObjectParameter("Ingresos8", typeof(int));

            var ingresosCantidad1Parameter = ingresosCantidad1.HasValue ?
                new ObjectParameter("IngresosCantidad1", ingresosCantidad1) :
                new ObjectParameter("IngresosCantidad1", typeof(int));

            var ingresosCantidad2Parameter = ingresosCantidad2.HasValue ?
                new ObjectParameter("IngresosCantidad2", ingresosCantidad2) :
                new ObjectParameter("IngresosCantidad2", typeof(int));

            var ingresosCantidad3Parameter = ingresosCantidad3.HasValue ?
                new ObjectParameter("IngresosCantidad3", ingresosCantidad3) :
                new ObjectParameter("IngresosCantidad3", typeof(int));

            var ingresosCantidad4Parameter = ingresosCantidad4.HasValue ?
                new ObjectParameter("IngresosCantidad4", ingresosCantidad4) :
                new ObjectParameter("IngresosCantidad4", typeof(int));

            var ingresosCantidad5Parameter = ingresosCantidad5.HasValue ?
                new ObjectParameter("IngresosCantidad5", ingresosCantidad5) :
                new ObjectParameter("IngresosCantidad5", typeof(int));

            var ingresosCantidad6Parameter = ingresosCantidad6.HasValue ?
                new ObjectParameter("IngresosCantidad6", ingresosCantidad6) :
                new ObjectParameter("IngresosCantidad6", typeof(int));

            var ingresosCantidad7Parameter = ingresosCantidad7.HasValue ?
                new ObjectParameter("IngresosCantidad7", ingresosCantidad7) :
                new ObjectParameter("IngresosCantidad7", typeof(int));

            var ingresosCantidad8Parameter = ingresosCantidad8.HasValue ?
                new ObjectParameter("IngresosCantidad8", ingresosCantidad8) :
                new ObjectParameter("IngresosCantidad8", typeof(int));

            var ingresosHorario1Parameter = ingresosHorario1.HasValue ?
                new ObjectParameter("IngresosHorario1", ingresosHorario1) :
                new ObjectParameter("IngresosHorario1", typeof(int));

            var ingresosHorario2Parameter = ingresosHorario2.HasValue ?
                new ObjectParameter("IngresosHorario2", ingresosHorario2) :
                new ObjectParameter("IngresosHorario2", typeof(int));

            var ingresosHorario3Parameter = ingresosHorario3.HasValue ?
                new ObjectParameter("IngresosHorario3", ingresosHorario3) :
                new ObjectParameter("IngresosHorario3", typeof(int));

            var ingresosHorario4Parameter = ingresosHorario4.HasValue ?
                new ObjectParameter("IngresosHorario4", ingresosHorario4) :
                new ObjectParameter("IngresosHorario4", typeof(int));

            var ingresosHorario5Parameter = ingresosHorario5.HasValue ?
                new ObjectParameter("IngresosHorario5", ingresosHorario5) :
                new ObjectParameter("IngresosHorario5", typeof(int));

            var ingresosHorario6Parameter = ingresosHorario6.HasValue ?
                new ObjectParameter("IngresosHorario6", ingresosHorario6) :
                new ObjectParameter("IngresosHorario6", typeof(int));

            var ingresosHorario7Parameter = ingresosHorario7.HasValue ?
                new ObjectParameter("IngresosHorario7", ingresosHorario7) :
                new ObjectParameter("IngresosHorario7", typeof(int));

            var ingresosHorario8Parameter = ingresosHorario8.HasValue ?
                new ObjectParameter("IngresosHorario8", ingresosHorario8) :
                new ObjectParameter("IngresosHorario8", typeof(int));

            var totalIngresosParameter = totalIngresos.HasValue ?
                new ObjectParameter("TotalIngresos", totalIngresos) :
                new ObjectParameter("TotalIngresos", typeof(int));

            var perdidas1Parameter = perdidas1.HasValue ?
                new ObjectParameter("Perdidas1", perdidas1) :
                new ObjectParameter("Perdidas1", typeof(int));

            var perdidas2Parameter = perdidas2.HasValue ?
                new ObjectParameter("Perdidas2", perdidas2) :
                new ObjectParameter("Perdidas2", typeof(int));

            var perdidas3Parameter = perdidas3.HasValue ?
                new ObjectParameter("Perdidas3", perdidas3) :
                new ObjectParameter("Perdidas3", typeof(int));

            var perdidas4Parameter = perdidas4.HasValue ?
                new ObjectParameter("Perdidas4", perdidas4) :
                new ObjectParameter("Perdidas4", typeof(int));

            var perdidas5Parameter = perdidas5.HasValue ?
                new ObjectParameter("Perdidas5", perdidas5) :
                new ObjectParameter("Perdidas5", typeof(int));

            var perdidas6Parameter = perdidas6.HasValue ?
                new ObjectParameter("Perdidas6", perdidas6) :
                new ObjectParameter("Perdidas6", typeof(int));

            var perdidasCantidad1Parameter = perdidasCantidad1.HasValue ?
                new ObjectParameter("PerdidasCantidad1", perdidasCantidad1) :
                new ObjectParameter("PerdidasCantidad1", typeof(int));

            var perdidasCantidad2Parameter = perdidasCantidad2.HasValue ?
                new ObjectParameter("PerdidasCantidad2", perdidasCantidad2) :
                new ObjectParameter("PerdidasCantidad2", typeof(int));

            var perdidasCantidad3Parameter = perdidasCantidad3.HasValue ?
                new ObjectParameter("PerdidasCantidad3", perdidasCantidad3) :
                new ObjectParameter("PerdidasCantidad3", typeof(int));

            var perdidasCantidad4Parameter = perdidasCantidad4.HasValue ?
                new ObjectParameter("PerdidasCantidad4", perdidasCantidad4) :
                new ObjectParameter("PerdidasCantidad4", typeof(int));

            var perdidasCantidad5Parameter = perdidasCantidad5.HasValue ?
                new ObjectParameter("PerdidasCantidad5", perdidasCantidad5) :
                new ObjectParameter("PerdidasCantidad5", typeof(int));

            var perdidasCantidad6Parameter = perdidasCantidad6.HasValue ?
                new ObjectParameter("PerdidasCantidad6", perdidasCantidad6) :
                new ObjectParameter("PerdidasCantidad6", typeof(int));

            var perdidasHorario1Parameter = perdidasHorario1.HasValue ?
                new ObjectParameter("PerdidasHorario1", perdidasHorario1) :
                new ObjectParameter("PerdidasHorario1", typeof(int));

            var perdidasHorario2Parameter = perdidasHorario2.HasValue ?
                new ObjectParameter("PerdidasHorario2", perdidasHorario2) :
                new ObjectParameter("PerdidasHorario2", typeof(int));

            var perdidasHorario3Parameter = perdidasHorario3.HasValue ?
                new ObjectParameter("PerdidasHorario3", perdidasHorario3) :
                new ObjectParameter("PerdidasHorario3", typeof(int));

            var perdidasHorario4Parameter = perdidasHorario4.HasValue ?
                new ObjectParameter("PerdidasHorario4", perdidasHorario4) :
                new ObjectParameter("PerdidasHorario4", typeof(int));

            var perdidasHorario5Parameter = perdidasHorario5.HasValue ?
                new ObjectParameter("PerdidasHorario5", perdidasHorario5) :
                new ObjectParameter("PerdidasHorario5", typeof(int));

            var perdidasHorario6Parameter = perdidasHorario6.HasValue ?
                new ObjectParameter("PerdidasHorario6", perdidasHorario6) :
                new ObjectParameter("PerdidasHorario6", typeof(int));

            var totalPerdidasParameter = totalPerdidas.HasValue ?
                new ObjectParameter("TotalPerdidas", totalPerdidas) :
                new ObjectParameter("TotalPerdidas", typeof(int));

            var balanceHidricoParameter = balanceHidrico.HasValue ?
                new ObjectParameter("BalanceHidrico", balanceHidrico) :
                new ObjectParameter("BalanceHidrico", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_Anestesia_Farmaco_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, ingresos1Parameter, ingresos2Parameter, ingresos3Parameter, ingresos4Parameter, ingresos5Parameter, ingresos6Parameter, ingresos7Parameter, ingresos8Parameter, ingresosCantidad1Parameter, ingresosCantidad2Parameter, ingresosCantidad3Parameter, ingresosCantidad4Parameter, ingresosCantidad5Parameter, ingresosCantidad6Parameter, ingresosCantidad7Parameter, ingresosCantidad8Parameter, ingresosHorario1Parameter, ingresosHorario2Parameter, ingresosHorario3Parameter, ingresosHorario4Parameter, ingresosHorario5Parameter, ingresosHorario6Parameter, ingresosHorario7Parameter, ingresosHorario8Parameter, totalIngresosParameter, perdidas1Parameter, perdidas2Parameter, perdidas3Parameter, perdidas4Parameter, perdidas5Parameter, perdidas6Parameter, perdidasCantidad1Parameter, perdidasCantidad2Parameter, perdidasCantidad3Parameter, perdidasCantidad4Parameter, perdidasCantidad5Parameter, perdidasCantidad6Parameter, perdidasHorario1Parameter, perdidasHorario2Parameter, perdidasHorario3Parameter, perdidasHorario4Parameter, perdidasHorario5Parameter, perdidasHorario6Parameter, totalPerdidasParameter, balanceHidricoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Anestesia_Farmaco_FE> SP_SS_HC_Anestesia_Farmaco_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anestesia_Farmaco_FE>("SP_SS_HC_Anestesia_Farmaco_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_Anestesia_Farmaco_FE> SP_SS_HC_Anestesia_Farmaco_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anestesia_Farmaco_FE>("SP_SS_HC_Anestesia_Farmaco_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_Anestesia_Farmacos_Detalle_FE> SP_SS_HC_Anestesia_Farmacos_Detalle_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> tipo, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anestesia_Farmacos_Detalle_FE>("SP_SS_HC_Anestesia_Farmacos_Detalle_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_Anestesia_Farmacos_Detalle_FE> SP_SS_HC_Anestesia_Farmacos_Detalle_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> tipo, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Anestesia_Farmacos_Detalle_FE>("SP_SS_HC_Anestesia_Farmacos_Detalle_FE_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_Epicrisis_3_Diagnostico> SP_SS_HC_Epicrisis_3_Diagnosticos_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Epicrisis_3_Diagnostico>("SP_SS_HC_Epicrisis_3_Diagnosticos_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Epicrisis_3_Diagnostico> SP_SS_HC_Epicrisis_3_Diagnosticos_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Epicrisis_3_Diagnostico>("SP_SS_HC_Epicrisis_3_Diagnosticos_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Epicrisis_3> SP_SS_HC_Epicrisis_3_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Epicrisis_3>("SP_SS_HC_Epicrisis_3_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Epicrisis_3> SP_SS_HC_Epicrisis_3_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Epicrisis_3>("SP_SS_HC_Epicrisis_3_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Epicrisis_3_Diag_Principal> SP_SS_HC_Epicrisis_3_Principal_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Epicrisis_3_Diag_Principal>("SP_SS_HC_Epicrisis_3_Principal_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Epicrisis_3_Diag_Principal> SP_SS_HC_Epicrisis_3_Principal_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Epicrisis_3_Diag_Principal>("SP_SS_HC_Epicrisis_3_Principal_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Epicrisis_3_Diag_Secundaria> SP_SS_HC_Epicrisis_3_Secundario_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Epicrisis_3_Diag_Secundaria>("SP_SS_HC_Epicrisis_3_Secundario_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Epicrisis_3_Diag_Secundaria> SP_SS_HC_Epicrisis_3_Secundario_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Epicrisis_3_Diag_Secundaria>("SP_SS_HC_Epicrisis_3_Secundario_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual int SP_SS_HC_Epicrisis_Diagnostico_Insert(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idEpicrisis3, string diagnosticoDescripcion, string codigo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var idEpicrisis3Parameter = idEpicrisis3.HasValue ?
                new ObjectParameter("IdEpicrisis3", idEpicrisis3) :
                new ObjectParameter("IdEpicrisis3", typeof(int));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_HC_Epicrisis_Diagnostico_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idEpicrisis3Parameter, diagnosticoDescripcionParameter, codigoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual int SP_SS_HC_Epicrisis_Insert(string unidadReplicacion, Nullable<int> episodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEpicrisis3, string complicaciones, Nullable<int> pronostico, Nullable<int> tipoAlta, Nullable<int> condicionEgreso, string causaMuerte, string planAlta, Nullable<int> necropsia, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(int));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpicrisis3Parameter = idEpicrisis3.HasValue ?
                new ObjectParameter("IdEpicrisis3", idEpicrisis3) :
                new ObjectParameter("IdEpicrisis3", typeof(int));

            var complicacionesParameter = complicaciones != null ?
                new ObjectParameter("Complicaciones", complicaciones) :
                new ObjectParameter("Complicaciones", typeof(string));

            var pronosticoParameter = pronostico.HasValue ?
                new ObjectParameter("Pronostico", pronostico) :
                new ObjectParameter("Pronostico", typeof(int));

            var tipoAltaParameter = tipoAlta.HasValue ?
                new ObjectParameter("TipoAlta", tipoAlta) :
                new ObjectParameter("TipoAlta", typeof(int));

            var condicionEgresoParameter = condicionEgreso.HasValue ?
                new ObjectParameter("CondicionEgreso", condicionEgreso) :
                new ObjectParameter("CondicionEgreso", typeof(int));

            var causaMuerteParameter = causaMuerte != null ?
                new ObjectParameter("CausaMuerte", causaMuerte) :
                new ObjectParameter("CausaMuerte", typeof(string));

            var planAltaParameter = planAlta != null ?
                new ObjectParameter("PlanAlta", planAlta) :
                new ObjectParameter("PlanAlta", typeof(string));

            var necropsiaParameter = necropsia.HasValue ?
                new ObjectParameter("Necropsia", necropsia) :
                new ObjectParameter("Necropsia", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_HC_Epicrisis_Insert", unidadReplicacionParameter, episodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idEpicrisis3Parameter, complicacionesParameter, pronosticoParameter, tipoAltaParameter, condicionEgresoParameter, causaMuerteParameter, planAltaParameter, necropsiaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual int SP_SS_HC_Epicrisis_Principal_Insert(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idEpicrisis3, string diagnosticoDescripcion, string codigo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var idEpicrisis3Parameter = idEpicrisis3.HasValue ?
                new ObjectParameter("IdEpicrisis3", idEpicrisis3) :
                new ObjectParameter("IdEpicrisis3", typeof(int));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_HC_Epicrisis_Principal_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idEpicrisis3Parameter, diagnosticoDescripcionParameter, codigoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual int SP_SS_HC_Epicrisis_Secundario_Insert(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, Nullable<int> idEpicrisis3, string diagnosticoDescripcion, string codigo, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var idEpicrisis3Parameter = idEpicrisis3.HasValue ?
                new ObjectParameter("IdEpicrisis3", idEpicrisis3) :
                new ObjectParameter("IdEpicrisis3", typeof(int));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SS_HC_Epicrisis_Secundario_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, idEpicrisis3Parameter, diagnosticoDescripcionParameter, codigoParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_EnfermedadActual_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tipoAnamnesis, string tipoAnamnesisDescrip, string motivoIngreso, string formaInicio, string cursoEnfermedad, Nullable<int> tiempoEnfermedad, string tiempoEnfermedadUnidad, string relatoCronologico, string apetito, string sed, string sudor, string animo, string orina, string orina_Roja, string orina_Espumosa, string orina_Otros, string deposiciones, string deposiciones_Moco, string deposiciones_Sangre, string deposiciones_Otros, string sueño, string pesoHabitual, Nullable<int> pesoHabitualSub, Nullable<System.DateTime> fechaSolicitada, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string sintomas, Nullable<int> secuencia)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tipoAnamnesisParameter = tipoAnamnesis != null ?
                new ObjectParameter("TipoAnamnesis", tipoAnamnesis) :
                new ObjectParameter("TipoAnamnesis", typeof(string));

            var tipoAnamnesisDescripParameter = tipoAnamnesisDescrip != null ?
                new ObjectParameter("TipoAnamnesisDescrip", tipoAnamnesisDescrip) :
                new ObjectParameter("TipoAnamnesisDescrip", typeof(string));

            var motivoIngresoParameter = motivoIngreso != null ?
                new ObjectParameter("MotivoIngreso", motivoIngreso) :
                new ObjectParameter("MotivoIngreso", typeof(string));

            var formaInicioParameter = formaInicio != null ?
                new ObjectParameter("FormaInicio", formaInicio) :
                new ObjectParameter("FormaInicio", typeof(string));

            var cursoEnfermedadParameter = cursoEnfermedad != null ?
                new ObjectParameter("CursoEnfermedad", cursoEnfermedad) :
                new ObjectParameter("CursoEnfermedad", typeof(string));

            var tiempoEnfermedadParameter = tiempoEnfermedad.HasValue ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(int));

            var tiempoEnfermedadUnidadParameter = tiempoEnfermedadUnidad != null ?
                new ObjectParameter("TiempoEnfermedadUnidad", tiempoEnfermedadUnidad) :
                new ObjectParameter("TiempoEnfermedadUnidad", typeof(string));

            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));

            var apetitoParameter = apetito != null ?
                new ObjectParameter("Apetito", apetito) :
                new ObjectParameter("Apetito", typeof(string));

            var sedParameter = sed != null ?
                new ObjectParameter("Sed", sed) :
                new ObjectParameter("Sed", typeof(string));

            var sudorParameter = sudor != null ?
                new ObjectParameter("Sudor", sudor) :
                new ObjectParameter("Sudor", typeof(string));

            var animoParameter = animo != null ?
                new ObjectParameter("Animo", animo) :
                new ObjectParameter("Animo", typeof(string));

            var orinaParameter = orina != null ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(string));

            var orina_RojaParameter = orina_Roja != null ?
                new ObjectParameter("Orina_Roja", orina_Roja) :
                new ObjectParameter("Orina_Roja", typeof(string));

            var orina_EspumosaParameter = orina_Espumosa != null ?
                new ObjectParameter("Orina_Espumosa", orina_Espumosa) :
                new ObjectParameter("Orina_Espumosa", typeof(string));

            var orina_OtrosParameter = orina_Otros != null ?
                new ObjectParameter("Orina_Otros", orina_Otros) :
                new ObjectParameter("Orina_Otros", typeof(string));

            var deposicionesParameter = deposiciones != null ?
                new ObjectParameter("Deposiciones", deposiciones) :
                new ObjectParameter("Deposiciones", typeof(string));

            var deposiciones_MocoParameter = deposiciones_Moco != null ?
                new ObjectParameter("Deposiciones_Moco", deposiciones_Moco) :
                new ObjectParameter("Deposiciones_Moco", typeof(string));

            var deposiciones_SangreParameter = deposiciones_Sangre != null ?
                new ObjectParameter("Deposiciones_Sangre", deposiciones_Sangre) :
                new ObjectParameter("Deposiciones_Sangre", typeof(string));

            var deposiciones_OtrosParameter = deposiciones_Otros != null ?
                new ObjectParameter("Deposiciones_Otros", deposiciones_Otros) :
                new ObjectParameter("Deposiciones_Otros", typeof(string));

            var sueñoParameter = sueño != null ?
                new ObjectParameter("Sueño", sueño) :
                new ObjectParameter("Sueño", typeof(string));

            var pesoHabitualParameter = pesoHabitual != null ?
                new ObjectParameter("PesoHabitual", pesoHabitual) :
                new ObjectParameter("PesoHabitual", typeof(string));

            var pesoHabitualSubParameter = pesoHabitualSub.HasValue ?
                new ObjectParameter("PesoHabitualSub", pesoHabitualSub) :
                new ObjectParameter("PesoHabitualSub", typeof(int));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var sintomasParameter = sintomas != null ?
                new ObjectParameter("Sintomas", sintomas) :
                new ObjectParameter("Sintomas", typeof(string));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_EnfermedadActual_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoAnamnesisParameter, tipoAnamnesisDescripParameter, motivoIngresoParameter, formaInicioParameter, cursoEnfermedadParameter, tiempoEnfermedadParameter, tiempoEnfermedadUnidadParameter, relatoCronologicoParameter, apetitoParameter, sedParameter, sudorParameter, animoParameter, orinaParameter, orina_RojaParameter, orina_EspumosaParameter, orina_OtrosParameter, deposicionesParameter, deposiciones_MocoParameter, deposiciones_SangreParameter, deposiciones_OtrosParameter, sueñoParameter, pesoHabitualParameter, pesoHabitualSubParameter, fechaSolicitadaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, sintomasParameter, secuenciaParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_EnfermedadActual_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string tipoAnamnesis, string tipoAnamnesisDescrip, string motivoIngreso, string formaInicio, string cursoEnfermedad, Nullable<int> tiempoEnfermedad, string tiempoEnfermedadUnidad, string relatoCronologico, string apetito, string sed, string sudor, string animo, string orina, string orina_Roja, string orina_Espumosa, string orina_Otros, string deposiciones, string deposiciones_Moco, string deposiciones_Sangre, string deposiciones_Otros, string sueño, string pesoHabitual, Nullable<int> pesoHabitualSub, Nullable<System.DateTime> fechaSolicitada, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, string sintomas, Nullable<int> secuencia)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var tipoAnamnesisParameter = tipoAnamnesis != null ?
                new ObjectParameter("TipoAnamnesis", tipoAnamnesis) :
                new ObjectParameter("TipoAnamnesis", typeof(string));

            var tipoAnamnesisDescripParameter = tipoAnamnesisDescrip != null ?
                new ObjectParameter("TipoAnamnesisDescrip", tipoAnamnesisDescrip) :
                new ObjectParameter("TipoAnamnesisDescrip", typeof(string));

            var motivoIngresoParameter = motivoIngreso != null ?
                new ObjectParameter("MotivoIngreso", motivoIngreso) :
                new ObjectParameter("MotivoIngreso", typeof(string));

            var formaInicioParameter = formaInicio != null ?
                new ObjectParameter("FormaInicio", formaInicio) :
                new ObjectParameter("FormaInicio", typeof(string));

            var cursoEnfermedadParameter = cursoEnfermedad != null ?
                new ObjectParameter("CursoEnfermedad", cursoEnfermedad) :
                new ObjectParameter("CursoEnfermedad", typeof(string));

            var tiempoEnfermedadParameter = tiempoEnfermedad.HasValue ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(int));

            var tiempoEnfermedadUnidadParameter = tiempoEnfermedadUnidad != null ?
                new ObjectParameter("TiempoEnfermedadUnidad", tiempoEnfermedadUnidad) :
                new ObjectParameter("TiempoEnfermedadUnidad", typeof(string));

            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));

            var apetitoParameter = apetito != null ?
                new ObjectParameter("Apetito", apetito) :
                new ObjectParameter("Apetito", typeof(string));

            var sedParameter = sed != null ?
                new ObjectParameter("Sed", sed) :
                new ObjectParameter("Sed", typeof(string));

            var sudorParameter = sudor != null ?
                new ObjectParameter("Sudor", sudor) :
                new ObjectParameter("Sudor", typeof(string));

            var animoParameter = animo != null ?
                new ObjectParameter("Animo", animo) :
                new ObjectParameter("Animo", typeof(string));

            var orinaParameter = orina != null ?
                new ObjectParameter("Orina", orina) :
                new ObjectParameter("Orina", typeof(string));

            var orina_RojaParameter = orina_Roja != null ?
                new ObjectParameter("Orina_Roja", orina_Roja) :
                new ObjectParameter("Orina_Roja", typeof(string));

            var orina_EspumosaParameter = orina_Espumosa != null ?
                new ObjectParameter("Orina_Espumosa", orina_Espumosa) :
                new ObjectParameter("Orina_Espumosa", typeof(string));

            var orina_OtrosParameter = orina_Otros != null ?
                new ObjectParameter("Orina_Otros", orina_Otros) :
                new ObjectParameter("Orina_Otros", typeof(string));

            var deposicionesParameter = deposiciones != null ?
                new ObjectParameter("Deposiciones", deposiciones) :
                new ObjectParameter("Deposiciones", typeof(string));

            var deposiciones_MocoParameter = deposiciones_Moco != null ?
                new ObjectParameter("Deposiciones_Moco", deposiciones_Moco) :
                new ObjectParameter("Deposiciones_Moco", typeof(string));

            var deposiciones_SangreParameter = deposiciones_Sangre != null ?
                new ObjectParameter("Deposiciones_Sangre", deposiciones_Sangre) :
                new ObjectParameter("Deposiciones_Sangre", typeof(string));

            var deposiciones_OtrosParameter = deposiciones_Otros != null ?
                new ObjectParameter("Deposiciones_Otros", deposiciones_Otros) :
                new ObjectParameter("Deposiciones_Otros", typeof(string));

            var sueñoParameter = sueño != null ?
                new ObjectParameter("Sueño", sueño) :
                new ObjectParameter("Sueño", typeof(string));

            var pesoHabitualParameter = pesoHabitual != null ?
                new ObjectParameter("PesoHabitual", pesoHabitual) :
                new ObjectParameter("PesoHabitual", typeof(string));

            var pesoHabitualSubParameter = pesoHabitualSub.HasValue ?
                new ObjectParameter("PesoHabitualSub", pesoHabitualSub) :
                new ObjectParameter("PesoHabitualSub", typeof(int));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var sintomasParameter = sintomas != null ?
                new ObjectParameter("Sintomas", sintomas) :
                new ObjectParameter("Sintomas", typeof(string));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_EnfermedadActual_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, tipoAnamnesisParameter, tipoAnamnesisDescripParameter, motivoIngresoParameter, formaInicioParameter, cursoEnfermedadParameter, tiempoEnfermedadParameter, tiempoEnfermedadUnidadParameter, relatoCronologicoParameter, apetitoParameter, sedParameter, sudorParameter, animoParameter, orinaParameter, orina_RojaParameter, orina_EspumosaParameter, orina_OtrosParameter, deposicionesParameter, deposiciones_MocoParameter, deposiciones_SangreParameter, deposiciones_OtrosParameter, sueñoParameter, pesoHabitualParameter, pesoHabitualSubParameter, fechaSolicitadaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, sintomasParameter, secuenciaParameter);
        }

        public virtual ObjectResult<SP_HC_Nota_Ingreso_FE_Result> SP_HC_Nota_Ingreso_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fecha, Nullable<System.DateTime> hora, string gradoAsistencia, string motivoIngreso, string gradoAsistencia_Enfermedad, string cursoEnfermedad, Nullable<int> tiempoEnfermedad, string tiempoEnfermedadUnidad, string relatoCronologico, Nullable<int> presionArterialMSD1, Nullable<int> presionArterialMSD2, Nullable<int> presionArterialMSI, Nullable<int> presionArterialMS2, Nullable<decimal> frecuenciaCardiaca, Nullable<int> frecuenciaRespiratoria, Nullable<decimal> temperatura, Nullable<int> saturacionOxigeno, Nullable<int> fi02, Nullable<int> frecuenciaCardFetal_Flag, Nullable<int> frecuenciaCard_FetalAdd, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> iMC, string antecedentes_Importancia, string examen_Fisico, string plantrabajo_Inicial, string cristerios_Hospitalizacion, string comentarios, string accion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var gradoAsistenciaParameter = gradoAsistencia != null ?
                new ObjectParameter("GradoAsistencia", gradoAsistencia) :
                new ObjectParameter("GradoAsistencia", typeof(string));

            var motivoIngresoParameter = motivoIngreso != null ?
                new ObjectParameter("MotivoIngreso", motivoIngreso) :
                new ObjectParameter("MotivoIngreso", typeof(string));

            var gradoAsistencia_EnfermedadParameter = gradoAsistencia_Enfermedad != null ?
                new ObjectParameter("GradoAsistencia_Enfermedad", gradoAsistencia_Enfermedad) :
                new ObjectParameter("GradoAsistencia_Enfermedad", typeof(string));

            var cursoEnfermedadParameter = cursoEnfermedad != null ?
                new ObjectParameter("CursoEnfermedad", cursoEnfermedad) :
                new ObjectParameter("CursoEnfermedad", typeof(string));

            var tiempoEnfermedadParameter = tiempoEnfermedad.HasValue ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(int));

            var tiempoEnfermedadUnidadParameter = tiempoEnfermedadUnidad != null ?
                new ObjectParameter("TiempoEnfermedadUnidad", tiempoEnfermedadUnidad) :
                new ObjectParameter("TiempoEnfermedadUnidad", typeof(string));

            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));

            var presionArterialMSD1Parameter = presionArterialMSD1.HasValue ?
                new ObjectParameter("PresionArterialMSD1", presionArterialMSD1) :
                new ObjectParameter("PresionArterialMSD1", typeof(int));

            var presionArterialMSD2Parameter = presionArterialMSD2.HasValue ?
                new ObjectParameter("PresionArterialMSD2", presionArterialMSD2) :
                new ObjectParameter("PresionArterialMSD2", typeof(int));

            var presionArterialMSIParameter = presionArterialMSI.HasValue ?
                new ObjectParameter("PresionArterialMSI", presionArterialMSI) :
                new ObjectParameter("PresionArterialMSI", typeof(int));

            var presionArterialMS2Parameter = presionArterialMS2.HasValue ?
                new ObjectParameter("PresionArterialMS2", presionArterialMS2) :
                new ObjectParameter("PresionArterialMS2", typeof(int));

            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));

            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(int));

            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));

            var saturacionOxigenoParameter = saturacionOxigeno.HasValue ?
                new ObjectParameter("SaturacionOxigeno", saturacionOxigeno) :
                new ObjectParameter("SaturacionOxigeno", typeof(int));

            var fi02Parameter = fi02.HasValue ?
                new ObjectParameter("Fi02", fi02) :
                new ObjectParameter("Fi02", typeof(int));

            var frecuenciaCardFetal_FlagParameter = frecuenciaCardFetal_Flag.HasValue ?
                new ObjectParameter("FrecuenciaCardFetal_Flag", frecuenciaCardFetal_Flag) :
                new ObjectParameter("FrecuenciaCardFetal_Flag", typeof(int));

            var frecuenciaCard_FetalAddParameter = frecuenciaCard_FetalAdd.HasValue ?
                new ObjectParameter("FrecuenciaCard_FetalAdd", frecuenciaCard_FetalAdd) :
                new ObjectParameter("FrecuenciaCard_FetalAdd", typeof(int));

            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));

            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));

            var iMCParameter = iMC.HasValue ?
                new ObjectParameter("IMC", iMC) :
                new ObjectParameter("IMC", typeof(decimal));

            var antecedentes_ImportanciaParameter = antecedentes_Importancia != null ?
                new ObjectParameter("Antecedentes_Importancia", antecedentes_Importancia) :
                new ObjectParameter("Antecedentes_Importancia", typeof(string));

            var examen_FisicoParameter = examen_Fisico != null ?
                new ObjectParameter("Examen_Fisico", examen_Fisico) :
                new ObjectParameter("Examen_Fisico", typeof(string));

            var plantrabajo_InicialParameter = plantrabajo_Inicial != null ?
                new ObjectParameter("Plantrabajo_Inicial", plantrabajo_Inicial) :
                new ObjectParameter("Plantrabajo_Inicial", typeof(string));

            var cristerios_HospitalizacionParameter = cristerios_Hospitalizacion != null ?
                new ObjectParameter("Cristerios_Hospitalizacion", cristerios_Hospitalizacion) :
                new ObjectParameter("Cristerios_Hospitalizacion", typeof(string));

            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HC_Nota_Ingreso_FE_Result>("SP_HC_Nota_Ingreso_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaParameter, horaParameter, gradoAsistenciaParameter, motivoIngresoParameter, gradoAsistencia_EnfermedadParameter, cursoEnfermedadParameter, tiempoEnfermedadParameter, tiempoEnfermedadUnidadParameter, relatoCronologicoParameter, presionArterialMSD1Parameter, presionArterialMSD2Parameter, presionArterialMSIParameter, presionArterialMS2Parameter, frecuenciaCardiacaParameter, frecuenciaRespiratoriaParameter, temperaturaParameter, saturacionOxigenoParameter, fi02Parameter, frecuenciaCardFetal_FlagParameter, frecuenciaCard_FetalAddParameter, pesoParameter, tallaParameter, iMCParameter, antecedentes_ImportanciaParameter, examen_FisicoParameter, plantrabajo_InicialParameter, cristerios_HospitalizacionParameter, comentariosParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }

        public virtual ObjectResult<SS_HC_Nota_Ingreso_FE> USP_HC_Nota_Ingreso_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fecha, Nullable<System.DateTime> hora, string gradoAsistencia, string motivoIngreso, string gradoAsistencia_Enfermedad, string cursoEnfermedad, Nullable<int> tiempoEnfermedad, string tiempoEnfermedadUnidad, string relatoCronologico, Nullable<int> presionArterialMSD1, Nullable<int> presionArterialMSD2, Nullable<int> presionArterialMSI, Nullable<int> presionArterialMS2, Nullable<decimal> frecuenciaCardiaca, Nullable<int> frecuenciaRespiratoria, Nullable<decimal> temperatura, Nullable<int> saturacionOxigeno, Nullable<int> fi02, Nullable<int> frecuenciaCardFetal_Flag, Nullable<int> frecuenciaCard_FetalAdd, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> iMC, string antecedentes_Importancia, string examen_Fisico, string plantrabajo_Inicial, string cristerios_Hospitalizacion, string comentarios, string accion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var gradoAsistenciaParameter = gradoAsistencia != null ?
                new ObjectParameter("GradoAsistencia", gradoAsistencia) :
                new ObjectParameter("GradoAsistencia", typeof(string));

            var motivoIngresoParameter = motivoIngreso != null ?
                new ObjectParameter("MotivoIngreso", motivoIngreso) :
                new ObjectParameter("MotivoIngreso", typeof(string));

            var gradoAsistencia_EnfermedadParameter = gradoAsistencia_Enfermedad != null ?
                new ObjectParameter("GradoAsistencia_Enfermedad", gradoAsistencia_Enfermedad) :
                new ObjectParameter("GradoAsistencia_Enfermedad", typeof(string));

            var cursoEnfermedadParameter = cursoEnfermedad != null ?
                new ObjectParameter("CursoEnfermedad", cursoEnfermedad) :
                new ObjectParameter("CursoEnfermedad", typeof(string));

            var tiempoEnfermedadParameter = tiempoEnfermedad.HasValue ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(int));

            var tiempoEnfermedadUnidadParameter = tiempoEnfermedadUnidad != null ?
                new ObjectParameter("TiempoEnfermedadUnidad", tiempoEnfermedadUnidad) :
                new ObjectParameter("TiempoEnfermedadUnidad", typeof(string));

            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));

            var presionArterialMSD1Parameter = presionArterialMSD1.HasValue ?
                new ObjectParameter("PresionArterialMSD1", presionArterialMSD1) :
                new ObjectParameter("PresionArterialMSD1", typeof(int));

            var presionArterialMSD2Parameter = presionArterialMSD2.HasValue ?
                new ObjectParameter("PresionArterialMSD2", presionArterialMSD2) :
                new ObjectParameter("PresionArterialMSD2", typeof(int));

            var presionArterialMSIParameter = presionArterialMSI.HasValue ?
                new ObjectParameter("PresionArterialMSI", presionArterialMSI) :
                new ObjectParameter("PresionArterialMSI", typeof(int));

            var presionArterialMS2Parameter = presionArterialMS2.HasValue ?
                new ObjectParameter("PresionArterialMS2", presionArterialMS2) :
                new ObjectParameter("PresionArterialMS2", typeof(int));

            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));

            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(int));

            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));

            var saturacionOxigenoParameter = saturacionOxigeno.HasValue ?
                new ObjectParameter("SaturacionOxigeno", saturacionOxigeno) :
                new ObjectParameter("SaturacionOxigeno", typeof(int));

            var fi02Parameter = fi02.HasValue ?
                new ObjectParameter("Fi02", fi02) :
                new ObjectParameter("Fi02", typeof(int));

            var frecuenciaCardFetal_FlagParameter = frecuenciaCardFetal_Flag.HasValue ?
                new ObjectParameter("FrecuenciaCardFetal_Flag", frecuenciaCardFetal_Flag) :
                new ObjectParameter("FrecuenciaCardFetal_Flag", typeof(int));

            var frecuenciaCard_FetalAddParameter = frecuenciaCard_FetalAdd.HasValue ?
                new ObjectParameter("FrecuenciaCard_FetalAdd", frecuenciaCard_FetalAdd) :
                new ObjectParameter("FrecuenciaCard_FetalAdd", typeof(int));

            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));

            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));

            var iMCParameter = iMC.HasValue ?
                new ObjectParameter("IMC", iMC) :
                new ObjectParameter("IMC", typeof(decimal));

            var antecedentes_ImportanciaParameter = antecedentes_Importancia != null ?
                new ObjectParameter("Antecedentes_Importancia", antecedentes_Importancia) :
                new ObjectParameter("Antecedentes_Importancia", typeof(string));

            var examen_FisicoParameter = examen_Fisico != null ?
                new ObjectParameter("Examen_Fisico", examen_Fisico) :
                new ObjectParameter("Examen_Fisico", typeof(string));

            var plantrabajo_InicialParameter = plantrabajo_Inicial != null ?
                new ObjectParameter("Plantrabajo_Inicial", plantrabajo_Inicial) :
                new ObjectParameter("Plantrabajo_Inicial", typeof(string));

            var cristerios_HospitalizacionParameter = cristerios_Hospitalizacion != null ?
                new ObjectParameter("Cristerios_Hospitalizacion", cristerios_Hospitalizacion) :
                new ObjectParameter("Cristerios_Hospitalizacion", typeof(string));

            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Nota_Ingreso_FE>("USP_HC_Nota_Ingreso_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaParameter, horaParameter, gradoAsistenciaParameter, motivoIngresoParameter, gradoAsistencia_EnfermedadParameter, cursoEnfermedadParameter, tiempoEnfermedadParameter, tiempoEnfermedadUnidadParameter, relatoCronologicoParameter, presionArterialMSD1Parameter, presionArterialMSD2Parameter, presionArterialMSIParameter, presionArterialMS2Parameter, frecuenciaCardiacaParameter, frecuenciaRespiratoriaParameter, temperaturaParameter, saturacionOxigenoParameter, fi02Parameter, frecuenciaCardFetal_FlagParameter, frecuenciaCard_FetalAddParameter, pesoParameter, tallaParameter, iMCParameter, antecedentes_ImportanciaParameter, examen_FisicoParameter, plantrabajo_InicialParameter, cristerios_HospitalizacionParameter, comentariosParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }

        public virtual ObjectResult<SS_HC_Nota_Ingreso_FE> USP_HC_Nota_Ingreso_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fecha, Nullable<System.DateTime> hora, string gradoAsistencia, string motivoIngreso, string gradoAsistencia_Enfermedad, string cursoEnfermedad, Nullable<int> tiempoEnfermedad, string tiempoEnfermedadUnidad, string relatoCronologico, Nullable<int> presionArterialMSD1, Nullable<int> presionArterialMSD2, Nullable<int> presionArterialMSI, Nullable<int> presionArterialMS2, Nullable<decimal> frecuenciaCardiaca, Nullable<int> frecuenciaRespiratoria, Nullable<decimal> temperatura, Nullable<int> saturacionOxigeno, Nullable<int> fi02, Nullable<int> frecuenciaCardFetal_Flag, Nullable<int> frecuenciaCard_FetalAdd, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> iMC, string antecedentes_Importancia, string examen_Fisico, string plantrabajo_Inicial, string cristerios_Hospitalizacion, string comentarios, string accion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var gradoAsistenciaParameter = gradoAsistencia != null ?
                new ObjectParameter("GradoAsistencia", gradoAsistencia) :
                new ObjectParameter("GradoAsistencia", typeof(string));

            var motivoIngresoParameter = motivoIngreso != null ?
                new ObjectParameter("MotivoIngreso", motivoIngreso) :
                new ObjectParameter("MotivoIngreso", typeof(string));

            var gradoAsistencia_EnfermedadParameter = gradoAsistencia_Enfermedad != null ?
                new ObjectParameter("GradoAsistencia_Enfermedad", gradoAsistencia_Enfermedad) :
                new ObjectParameter("GradoAsistencia_Enfermedad", typeof(string));

            var cursoEnfermedadParameter = cursoEnfermedad != null ?
                new ObjectParameter("CursoEnfermedad", cursoEnfermedad) :
                new ObjectParameter("CursoEnfermedad", typeof(string));

            var tiempoEnfermedadParameter = tiempoEnfermedad.HasValue ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(int));

            var tiempoEnfermedadUnidadParameter = tiempoEnfermedadUnidad != null ?
                new ObjectParameter("TiempoEnfermedadUnidad", tiempoEnfermedadUnidad) :
                new ObjectParameter("TiempoEnfermedadUnidad", typeof(string));

            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));

            var presionArterialMSD1Parameter = presionArterialMSD1.HasValue ?
                new ObjectParameter("PresionArterialMSD1", presionArterialMSD1) :
                new ObjectParameter("PresionArterialMSD1", typeof(int));

            var presionArterialMSD2Parameter = presionArterialMSD2.HasValue ?
                new ObjectParameter("PresionArterialMSD2", presionArterialMSD2) :
                new ObjectParameter("PresionArterialMSD2", typeof(int));

            var presionArterialMSIParameter = presionArterialMSI.HasValue ?
                new ObjectParameter("PresionArterialMSI", presionArterialMSI) :
                new ObjectParameter("PresionArterialMSI", typeof(int));

            var presionArterialMS2Parameter = presionArterialMS2.HasValue ?
                new ObjectParameter("PresionArterialMS2", presionArterialMS2) :
                new ObjectParameter("PresionArterialMS2", typeof(int));

            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));

            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(int));

            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));

            var saturacionOxigenoParameter = saturacionOxigeno.HasValue ?
                new ObjectParameter("SaturacionOxigeno", saturacionOxigeno) :
                new ObjectParameter("SaturacionOxigeno", typeof(int));

            var fi02Parameter = fi02.HasValue ?
                new ObjectParameter("Fi02", fi02) :
                new ObjectParameter("Fi02", typeof(int));

            var frecuenciaCardFetal_FlagParameter = frecuenciaCardFetal_Flag.HasValue ?
                new ObjectParameter("FrecuenciaCardFetal_Flag", frecuenciaCardFetal_Flag) :
                new ObjectParameter("FrecuenciaCardFetal_Flag", typeof(int));

            var frecuenciaCard_FetalAddParameter = frecuenciaCard_FetalAdd.HasValue ?
                new ObjectParameter("FrecuenciaCard_FetalAdd", frecuenciaCard_FetalAdd) :
                new ObjectParameter("FrecuenciaCard_FetalAdd", typeof(int));

            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));

            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));

            var iMCParameter = iMC.HasValue ?
                new ObjectParameter("IMC", iMC) :
                new ObjectParameter("IMC", typeof(decimal));

            var antecedentes_ImportanciaParameter = antecedentes_Importancia != null ?
                new ObjectParameter("Antecedentes_Importancia", antecedentes_Importancia) :
                new ObjectParameter("Antecedentes_Importancia", typeof(string));

            var examen_FisicoParameter = examen_Fisico != null ?
                new ObjectParameter("Examen_Fisico", examen_Fisico) :
                new ObjectParameter("Examen_Fisico", typeof(string));

            var plantrabajo_InicialParameter = plantrabajo_Inicial != null ?
                new ObjectParameter("Plantrabajo_Inicial", plantrabajo_Inicial) :
                new ObjectParameter("Plantrabajo_Inicial", typeof(string));

            var cristerios_HospitalizacionParameter = cristerios_Hospitalizacion != null ?
                new ObjectParameter("Cristerios_Hospitalizacion", cristerios_Hospitalizacion) :
                new ObjectParameter("Cristerios_Hospitalizacion", typeof(string));

            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Nota_Ingreso_FE>("USP_HC_Nota_Ingreso_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaParameter, horaParameter, gradoAsistenciaParameter, motivoIngresoParameter, gradoAsistencia_EnfermedadParameter, cursoEnfermedadParameter, tiempoEnfermedadParameter, tiempoEnfermedadUnidadParameter, relatoCronologicoParameter, presionArterialMSD1Parameter, presionArterialMSD2Parameter, presionArterialMSIParameter, presionArterialMS2Parameter, frecuenciaCardiacaParameter, frecuenciaRespiratoriaParameter, temperaturaParameter, saturacionOxigenoParameter, fi02Parameter, frecuenciaCardFetal_FlagParameter, frecuenciaCard_FetalAddParameter, pesoParameter, tallaParameter, iMCParameter, antecedentes_ImportanciaParameter, examen_FisicoParameter, plantrabajo_InicialParameter, cristerios_HospitalizacionParameter, comentariosParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }

        public virtual int SP_HC_Nota_Ingreso_FE_Insert(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fecha, Nullable<System.DateTime> hora, string gradoAsistencia, string motivoIngreso, string gradoAsistencia_Enfermedad, string cursoEnfermedad, Nullable<int> tiempoEnfermedad, string tiempoEnfermedadUnidad, string relatoCronologico, Nullable<int> presionArterialMSD1, Nullable<int> presionArterialMSD2, Nullable<int> presionArterialMSI, Nullable<int> presionArterialMS2, Nullable<decimal> frecuenciaCardiaca, Nullable<int> frecuenciaRespiratoria, Nullable<decimal> temperatura, Nullable<int> saturacionOxigeno, Nullable<int> fi02, Nullable<int> frecuenciaCardFetal_Flag, Nullable<int> frecuenciaCard_FetalAdd, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> iMC, string antecedentes_Importancia, string examen_Fisico, string plantrabajo_Inicial, string criterios_Hospitalizacion, string comentarios, string accion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var gradoAsistenciaParameter = gradoAsistencia != null ?
                new ObjectParameter("GradoAsistencia", gradoAsistencia) :
                new ObjectParameter("GradoAsistencia", typeof(string));

            var motivoIngresoParameter = motivoIngreso != null ?
                new ObjectParameter("MotivoIngreso", motivoIngreso) :
                new ObjectParameter("MotivoIngreso", typeof(string));

            var gradoAsistencia_EnfermedadParameter = gradoAsistencia_Enfermedad != null ?
                new ObjectParameter("GradoAsistencia_Enfermedad", gradoAsistencia_Enfermedad) :
                new ObjectParameter("GradoAsistencia_Enfermedad", typeof(string));

            var cursoEnfermedadParameter = cursoEnfermedad != null ?
                new ObjectParameter("CursoEnfermedad", cursoEnfermedad) :
                new ObjectParameter("CursoEnfermedad", typeof(string));

            var tiempoEnfermedadParameter = tiempoEnfermedad.HasValue ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(int));

            var tiempoEnfermedadUnidadParameter = tiempoEnfermedadUnidad != null ?
                new ObjectParameter("TiempoEnfermedadUnidad", tiempoEnfermedadUnidad) :
                new ObjectParameter("TiempoEnfermedadUnidad", typeof(string));

            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));

            var presionArterialMSD1Parameter = presionArterialMSD1.HasValue ?
                new ObjectParameter("PresionArterialMSD1", presionArterialMSD1) :
                new ObjectParameter("PresionArterialMSD1", typeof(int));

            var presionArterialMSD2Parameter = presionArterialMSD2.HasValue ?
                new ObjectParameter("PresionArterialMSD2", presionArterialMSD2) :
                new ObjectParameter("PresionArterialMSD2", typeof(int));

            var presionArterialMSIParameter = presionArterialMSI.HasValue ?
                new ObjectParameter("PresionArterialMSI", presionArterialMSI) :
                new ObjectParameter("PresionArterialMSI", typeof(int));

            var presionArterialMS2Parameter = presionArterialMS2.HasValue ?
                new ObjectParameter("PresionArterialMS2", presionArterialMS2) :
                new ObjectParameter("PresionArterialMS2", typeof(int));

            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));

            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(int));

            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));

            var saturacionOxigenoParameter = saturacionOxigeno.HasValue ?
                new ObjectParameter("SaturacionOxigeno", saturacionOxigeno) :
                new ObjectParameter("SaturacionOxigeno", typeof(int));

            var fi02Parameter = fi02.HasValue ?
                new ObjectParameter("Fi02", fi02) :
                new ObjectParameter("Fi02", typeof(int));

            var frecuenciaCardFetal_FlagParameter = frecuenciaCardFetal_Flag.HasValue ?
                new ObjectParameter("FrecuenciaCardFetal_Flag", frecuenciaCardFetal_Flag) :
                new ObjectParameter("FrecuenciaCardFetal_Flag", typeof(int));

            var frecuenciaCard_FetalAddParameter = frecuenciaCard_FetalAdd.HasValue ?
                new ObjectParameter("FrecuenciaCard_FetalAdd", frecuenciaCard_FetalAdd) :
                new ObjectParameter("FrecuenciaCard_FetalAdd", typeof(int));

            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));

            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));

            var iMCParameter = iMC.HasValue ?
                new ObjectParameter("IMC", iMC) :
                new ObjectParameter("IMC", typeof(decimal));

            var antecedentes_ImportanciaParameter = antecedentes_Importancia != null ?
                new ObjectParameter("Antecedentes_Importancia", antecedentes_Importancia) :
                new ObjectParameter("Antecedentes_Importancia", typeof(string));

            var examen_FisicoParameter = examen_Fisico != null ?
                new ObjectParameter("Examen_Fisico", examen_Fisico) :
                new ObjectParameter("Examen_Fisico", typeof(string));

            var plantrabajo_InicialParameter = plantrabajo_Inicial != null ?
                new ObjectParameter("Plantrabajo_Inicial", plantrabajo_Inicial) :
                new ObjectParameter("Plantrabajo_Inicial", typeof(string));

            var criterios_HospitalizacionParameter = criterios_Hospitalizacion != null ?
                new ObjectParameter("Criterios_Hospitalizacion", criterios_Hospitalizacion) :
                new ObjectParameter("Criterios_Hospitalizacion", typeof(string));

            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HC_Nota_Ingreso_FE_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaParameter, horaParameter, gradoAsistenciaParameter, motivoIngresoParameter, gradoAsistencia_EnfermedadParameter, cursoEnfermedadParameter, tiempoEnfermedadParameter, tiempoEnfermedadUnidadParameter, relatoCronologicoParameter, presionArterialMSD1Parameter, presionArterialMSD2Parameter, presionArterialMSIParameter, presionArterialMS2Parameter, frecuenciaCardiacaParameter, frecuenciaRespiratoriaParameter, temperaturaParameter, saturacionOxigenoParameter, fi02Parameter, frecuenciaCardFetal_FlagParameter, frecuenciaCard_FetalAddParameter, pesoParameter, tallaParameter, iMCParameter, antecedentes_ImportanciaParameter, examen_FisicoParameter, plantrabajo_InicialParameter, criterios_HospitalizacionParameter, comentariosParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }

        public virtual int SP_HC_NotaIngreso_Diagnostico_FE_Insert(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string codigo, string diagnosticoDescripcion, string determinacionDiagnostica, string gradoAfeccion, Nullable<int> idDiagnosticoPrincipal, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var determinacionDiagnosticaParameter = determinacionDiagnostica != null ?
                new ObjectParameter("DeterminacionDiagnostica", determinacionDiagnostica) :
                new ObjectParameter("DeterminacionDiagnostica", typeof(string));

            var gradoAfeccionParameter = gradoAfeccion != null ?
                new ObjectParameter("GradoAfeccion", gradoAfeccion) :
                new ObjectParameter("GradoAfeccion", typeof(string));

            var idDiagnosticoPrincipalParameter = idDiagnosticoPrincipal.HasValue ?
                new ObjectParameter("IdDiagnosticoPrincipal", idDiagnosticoPrincipal) :
                new ObjectParameter("IdDiagnosticoPrincipal", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HC_NotaIngreso_Diagnostico_FE_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, codigoParameter, diagnosticoDescripcionParameter, determinacionDiagnosticaParameter, gradoAfeccionParameter, idDiagnosticoPrincipalParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual int Sp_HC_NotaIngreso_ExamenApoyo_FE_Insertar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string codigoSegus, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, string codigoComponente, string examenDescripcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var examenDescripcionParameter = examenDescripcion != null ?
                new ObjectParameter("ExamenDescripcion", examenDescripcion) :
                new ObjectParameter("ExamenDescripcion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_HC_NotaIngreso_ExamenApoyo_FE_Insertar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, codigoSegusParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, codigoComponenteParameter, examenDescripcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_HC_Nota_Ingreso_FE_Insert(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<System.DateTime> fecha, Nullable<System.DateTime> hora, string gradoAsistencia, string motivoIngreso, string gradoAsistencia_Enfermedad, string cursoEnfermedad, Nullable<int> tiempoEnfermedad, string tiempoEnfermedadUnidad, string relatoCronologico, Nullable<int> presionArterialMSD1, Nullable<int> presionArterialMSD2, Nullable<int> presionArterialMSI, Nullable<int> presionArterialMS2, Nullable<decimal> frecuenciaCardiaca, Nullable<int> frecuenciaRespiratoria, Nullable<decimal> temperatura, Nullable<int> saturacionOxigeno, Nullable<int> fi02, Nullable<int> frecuenciaCardFetal_Flag, Nullable<int> frecuenciaCard_FetalAdd, Nullable<decimal> peso, Nullable<decimal> talla, Nullable<decimal> iMC, string antecedentes_Importancia, string examen_Fisico, string plantrabajo_Inicial, string criterios_Hospitalizacion, string comentarios, string accion, string version, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var gradoAsistenciaParameter = gradoAsistencia != null ?
                new ObjectParameter("GradoAsistencia", gradoAsistencia) :
                new ObjectParameter("GradoAsistencia", typeof(string));

            var motivoIngresoParameter = motivoIngreso != null ?
                new ObjectParameter("MotivoIngreso", motivoIngreso) :
                new ObjectParameter("MotivoIngreso", typeof(string));

            var gradoAsistencia_EnfermedadParameter = gradoAsistencia_Enfermedad != null ?
                new ObjectParameter("GradoAsistencia_Enfermedad", gradoAsistencia_Enfermedad) :
                new ObjectParameter("GradoAsistencia_Enfermedad", typeof(string));

            var cursoEnfermedadParameter = cursoEnfermedad != null ?
                new ObjectParameter("CursoEnfermedad", cursoEnfermedad) :
                new ObjectParameter("CursoEnfermedad", typeof(string));

            var tiempoEnfermedadParameter = tiempoEnfermedad.HasValue ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(int));

            var tiempoEnfermedadUnidadParameter = tiempoEnfermedadUnidad != null ?
                new ObjectParameter("TiempoEnfermedadUnidad", tiempoEnfermedadUnidad) :
                new ObjectParameter("TiempoEnfermedadUnidad", typeof(string));

            var relatoCronologicoParameter = relatoCronologico != null ?
                new ObjectParameter("RelatoCronologico", relatoCronologico) :
                new ObjectParameter("RelatoCronologico", typeof(string));

            var presionArterialMSD1Parameter = presionArterialMSD1.HasValue ?
                new ObjectParameter("PresionArterialMSD1", presionArterialMSD1) :
                new ObjectParameter("PresionArterialMSD1", typeof(int));

            var presionArterialMSD2Parameter = presionArterialMSD2.HasValue ?
                new ObjectParameter("PresionArterialMSD2", presionArterialMSD2) :
                new ObjectParameter("PresionArterialMSD2", typeof(int));

            var presionArterialMSIParameter = presionArterialMSI.HasValue ?
                new ObjectParameter("PresionArterialMSI", presionArterialMSI) :
                new ObjectParameter("PresionArterialMSI", typeof(int));

            var presionArterialMS2Parameter = presionArterialMS2.HasValue ?
                new ObjectParameter("PresionArterialMS2", presionArterialMS2) :
                new ObjectParameter("PresionArterialMS2", typeof(int));

            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));

            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(int));

            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));

            var saturacionOxigenoParameter = saturacionOxigeno.HasValue ?
                new ObjectParameter("SaturacionOxigeno", saturacionOxigeno) :
                new ObjectParameter("SaturacionOxigeno", typeof(int));

            var fi02Parameter = fi02.HasValue ?
                new ObjectParameter("Fi02", fi02) :
                new ObjectParameter("Fi02", typeof(int));

            var frecuenciaCardFetal_FlagParameter = frecuenciaCardFetal_Flag.HasValue ?
                new ObjectParameter("FrecuenciaCardFetal_Flag", frecuenciaCardFetal_Flag) :
                new ObjectParameter("FrecuenciaCardFetal_Flag", typeof(int));

            var frecuenciaCard_FetalAddParameter = frecuenciaCard_FetalAdd.HasValue ?
                new ObjectParameter("FrecuenciaCard_FetalAdd", frecuenciaCard_FetalAdd) :
                new ObjectParameter("FrecuenciaCard_FetalAdd", typeof(int));

            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));

            var tallaParameter = talla.HasValue ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(decimal));

            var iMCParameter = iMC.HasValue ?
                new ObjectParameter("IMC", iMC) :
                new ObjectParameter("IMC", typeof(decimal));

            var antecedentes_ImportanciaParameter = antecedentes_Importancia != null ?
                new ObjectParameter("Antecedentes_Importancia", antecedentes_Importancia) :
                new ObjectParameter("Antecedentes_Importancia", typeof(string));

            var examen_FisicoParameter = examen_Fisico != null ?
                new ObjectParameter("Examen_Fisico", examen_Fisico) :
                new ObjectParameter("Examen_Fisico", typeof(string));

            var plantrabajo_InicialParameter = plantrabajo_Inicial != null ?
                new ObjectParameter("Plantrabajo_Inicial", plantrabajo_Inicial) :
                new ObjectParameter("Plantrabajo_Inicial", typeof(string));

            var criterios_HospitalizacionParameter = criterios_Hospitalizacion != null ?
                new ObjectParameter("Criterios_Hospitalizacion", criterios_Hospitalizacion) :
                new ObjectParameter("Criterios_Hospitalizacion", typeof(string));

            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_HC_Nota_Ingreso_FE_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, fechaParameter, horaParameter, gradoAsistenciaParameter, motivoIngresoParameter, gradoAsistencia_EnfermedadParameter, cursoEnfermedadParameter, tiempoEnfermedadParameter, tiempoEnfermedadUnidadParameter, relatoCronologicoParameter, presionArterialMSD1Parameter, presionArterialMSD2Parameter, presionArterialMSIParameter, presionArterialMS2Parameter, frecuenciaCardiacaParameter, frecuenciaRespiratoriaParameter, temperaturaParameter, saturacionOxigenoParameter, fi02Parameter, frecuenciaCardFetal_FlagParameter, frecuenciaCard_FetalAddParameter, pesoParameter, tallaParameter, iMCParameter, antecedentes_ImportanciaParameter, examen_FisicoParameter, plantrabajo_InicialParameter, criterios_HospitalizacionParameter, comentariosParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_HC_NotaIngreso_Diagnostico_FE_Insert1(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string codigo, string diagnosticoDescripcion, string determinacionDiagnostica, string gradoAfeccion, Nullable<int> idDiagnosticoPrincipal, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var determinacionDiagnosticaParameter = determinacionDiagnostica != null ?
                new ObjectParameter("DeterminacionDiagnostica", determinacionDiagnostica) :
                new ObjectParameter("DeterminacionDiagnostica", typeof(string));

            var gradoAfeccionParameter = gradoAfeccion != null ?
                new ObjectParameter("GradoAfeccion", gradoAfeccion) :
                new ObjectParameter("GradoAfeccion", typeof(string));

            var idDiagnosticoPrincipalParameter = idDiagnosticoPrincipal.HasValue ?
                new ObjectParameter("IdDiagnosticoPrincipal", idDiagnosticoPrincipal) :
                new ObjectParameter("IdDiagnosticoPrincipal", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HC_NotaIngreso_Diagnostico_FE_Insert1", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, codigoParameter, diagnosticoDescripcionParameter, determinacionDiagnosticaParameter, gradoAfeccionParameter, idDiagnosticoPrincipalParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> Sp_HC_NotaIngreso_ExamenApoyo_FE_Insertar1(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string codigoSegus, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, string codigoComponente, string examenDescripcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var examenDescripcionParameter = examenDescripcion != null ?
                new ObjectParameter("ExamenDescripcion", examenDescripcion) :
                new ObjectParameter("ExamenDescripcion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_HC_NotaIngreso_ExamenApoyo_FE_Insertar1", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, codigoSegusParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, codigoComponenteParameter, examenDescripcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_HC_NotaIngreso_Diagnostico_FE_Insert(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string codigo, string diagnosticoDescripcion, string determinacionDiagnostica, string gradoAfeccion, Nullable<int> idDiagnosticoPrincipal, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var determinacionDiagnosticaParameter = determinacionDiagnostica != null ?
                new ObjectParameter("DeterminacionDiagnostica", determinacionDiagnostica) :
                new ObjectParameter("DeterminacionDiagnostica", typeof(string));

            var gradoAfeccionParameter = gradoAfeccion != null ?
                new ObjectParameter("GradoAfeccion", gradoAfeccion) :
                new ObjectParameter("GradoAfeccion", typeof(string));

            var idDiagnosticoPrincipalParameter = idDiagnosticoPrincipal.HasValue ?
                new ObjectParameter("IdDiagnosticoPrincipal", idDiagnosticoPrincipal) :
                new ObjectParameter("IdDiagnosticoPrincipal", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_HC_NotaIngreso_Diagnostico_FE_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, codigoParameter, diagnosticoDescripcionParameter, determinacionDiagnosticaParameter, gradoAfeccionParameter, idDiagnosticoPrincipalParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> USp_HC_NotaIngreso_ExamenApoyo_FE_Insertar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string codigoSegus, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, string codigoComponente, string examenDescripcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var examenDescripcionParameter = examenDescripcion != null ?
                new ObjectParameter("ExamenDescripcion", examenDescripcion) :
                new ObjectParameter("ExamenDescripcion", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USp_HC_NotaIngreso_ExamenApoyo_FE_Insertar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, codigoSegusParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, codigoComponenteParameter, examenDescripcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_HC_TriajeEmergencia_FE_Insert(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idFuncionVital, Nullable<System.DateTime> fecha, Nullable<System.DateTime> hora, Nullable<int> presionArterialMSD1, Nullable<int> presionArterialMSD2, Nullable<int> presionArterialMSI, Nullable<int> presionArterialMS2, Nullable<decimal> frecuenciaCardiaca, Nullable<int> frecuenciaRespiratoria, Nullable<decimal> temperatura, Nullable<int> saturacionOxigeno, Nullable<int> frecuenciaCardFetal_Flag, Nullable<int> frecuenciaCard_FetalAdd, Nullable<decimal> peso, Nullable<int> tiempoEnfermedad, string tiempoEnfermedadUnidad, string motivodeingreso, string sintomas, Nullable<int> prioridad, string especialidad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idFuncionVitalParameter = idFuncionVital.HasValue ?
                new ObjectParameter("IdFuncionVital", idFuncionVital) :
                new ObjectParameter("IdFuncionVital", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var presionArterialMSD1Parameter = presionArterialMSD1.HasValue ?
                new ObjectParameter("PresionArterialMSD1", presionArterialMSD1) :
                new ObjectParameter("PresionArterialMSD1", typeof(int));

            var presionArterialMSD2Parameter = presionArterialMSD2.HasValue ?
                new ObjectParameter("PresionArterialMSD2", presionArterialMSD2) :
                new ObjectParameter("PresionArterialMSD2", typeof(int));

            var presionArterialMSIParameter = presionArterialMSI.HasValue ?
                new ObjectParameter("PresionArterialMSI", presionArterialMSI) :
                new ObjectParameter("PresionArterialMSI", typeof(int));

            var presionArterialMS2Parameter = presionArterialMS2.HasValue ?
                new ObjectParameter("PresionArterialMS2", presionArterialMS2) :
                new ObjectParameter("PresionArterialMS2", typeof(int));

            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));

            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(int));

            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));

            var saturacionOxigenoParameter = saturacionOxigeno.HasValue ?
                new ObjectParameter("SaturacionOxigeno", saturacionOxigeno) :
                new ObjectParameter("SaturacionOxigeno", typeof(int));

            var frecuenciaCardFetal_FlagParameter = frecuenciaCardFetal_Flag.HasValue ?
                new ObjectParameter("FrecuenciaCardFetal_Flag", frecuenciaCardFetal_Flag) :
                new ObjectParameter("FrecuenciaCardFetal_Flag", typeof(int));

            var frecuenciaCard_FetalAddParameter = frecuenciaCard_FetalAdd.HasValue ?
                new ObjectParameter("FrecuenciaCard_FetalAdd", frecuenciaCard_FetalAdd) :
                new ObjectParameter("FrecuenciaCard_FetalAdd", typeof(int));

            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));

            var tiempoEnfermedadParameter = tiempoEnfermedad.HasValue ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(int));

            var tiempoEnfermedadUnidadParameter = tiempoEnfermedadUnidad != null ?
                new ObjectParameter("TiempoEnfermedadUnidad", tiempoEnfermedadUnidad) :
                new ObjectParameter("TiempoEnfermedadUnidad", typeof(string));

            var motivodeingresoParameter = motivodeingreso != null ?
                new ObjectParameter("Motivodeingreso", motivodeingreso) :
                new ObjectParameter("Motivodeingreso", typeof(string));

            var sintomasParameter = sintomas != null ?
                new ObjectParameter("Sintomas", sintomas) :
                new ObjectParameter("Sintomas", typeof(string));

            var prioridadParameter = prioridad.HasValue ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(int));

            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HC_TriajeEmergencia_FE_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idFuncionVitalParameter, fechaParameter, horaParameter, presionArterialMSD1Parameter, presionArterialMSD2Parameter, presionArterialMSIParameter, presionArterialMS2Parameter, frecuenciaCardiacaParameter, frecuenciaRespiratoriaParameter, temperaturaParameter, saturacionOxigenoParameter, frecuenciaCardFetal_FlagParameter, frecuenciaCard_FetalAddParameter, pesoParameter, tiempoEnfermedadParameter, tiempoEnfermedadUnidadParameter, motivodeingresoParameter, sintomasParameter, prioridadParameter, especialidadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SP_HC_TriajeEmergencia_FE_Listar_Result> SP_HC_TriajeEmergencia_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idFuncionVital, Nullable<System.DateTime> fecha, Nullable<System.DateTime> hora, Nullable<int> presionArterialMSD1, Nullable<int> presionArterialMSD2, Nullable<int> presionArterialMSI, Nullable<int> presionArterialMS2, Nullable<decimal> frecuenciaCardiaca, Nullable<int> frecuenciaRespiratoria, Nullable<decimal> temperatura, Nullable<int> saturacionOxigeno, Nullable<int> frecuenciaCard_FetalFlag, Nullable<int> frecuenciaCard_FetalAdd, Nullable<decimal> peso, Nullable<int> tiempoEnfermedad, string tiempoEnfermedadUnidad, string motivodeingreso, string sintomas, Nullable<int> prioridad, string especialidad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idFuncionVitalParameter = idFuncionVital.HasValue ?
                new ObjectParameter("IdFuncionVital", idFuncionVital) :
                new ObjectParameter("IdFuncionVital", typeof(int));

            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var presionArterialMSD1Parameter = presionArterialMSD1.HasValue ?
                new ObjectParameter("PresionArterialMSD1", presionArterialMSD1) :
                new ObjectParameter("PresionArterialMSD1", typeof(int));

            var presionArterialMSD2Parameter = presionArterialMSD2.HasValue ?
                new ObjectParameter("PresionArterialMSD2", presionArterialMSD2) :
                new ObjectParameter("PresionArterialMSD2", typeof(int));

            var presionArterialMSIParameter = presionArterialMSI.HasValue ?
                new ObjectParameter("PresionArterialMSI", presionArterialMSI) :
                new ObjectParameter("PresionArterialMSI", typeof(int));

            var presionArterialMS2Parameter = presionArterialMS2.HasValue ?
                new ObjectParameter("PresionArterialMS2", presionArterialMS2) :
                new ObjectParameter("PresionArterialMS2", typeof(int));

            var frecuenciaCardiacaParameter = frecuenciaCardiaca.HasValue ?
                new ObjectParameter("FrecuenciaCardiaca", frecuenciaCardiaca) :
                new ObjectParameter("FrecuenciaCardiaca", typeof(decimal));

            var frecuenciaRespiratoriaParameter = frecuenciaRespiratoria.HasValue ?
                new ObjectParameter("FrecuenciaRespiratoria", frecuenciaRespiratoria) :
                new ObjectParameter("FrecuenciaRespiratoria", typeof(int));

            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(decimal));

            var saturacionOxigenoParameter = saturacionOxigeno.HasValue ?
                new ObjectParameter("SaturacionOxigeno", saturacionOxigeno) :
                new ObjectParameter("SaturacionOxigeno", typeof(int));

            var frecuenciaCard_FetalFlagParameter = frecuenciaCard_FetalFlag.HasValue ?
                new ObjectParameter("FrecuenciaCard_FetalFlag", frecuenciaCard_FetalFlag) :
                new ObjectParameter("FrecuenciaCard_FetalFlag", typeof(int));

            var frecuenciaCard_FetalAddParameter = frecuenciaCard_FetalAdd.HasValue ?
                new ObjectParameter("FrecuenciaCard_FetalAdd", frecuenciaCard_FetalAdd) :
                new ObjectParameter("FrecuenciaCard_FetalAdd", typeof(int));

            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));

            var tiempoEnfermedadParameter = tiempoEnfermedad.HasValue ?
                new ObjectParameter("TiempoEnfermedad", tiempoEnfermedad) :
                new ObjectParameter("TiempoEnfermedad", typeof(int));

            var tiempoEnfermedadUnidadParameter = tiempoEnfermedadUnidad != null ?
                new ObjectParameter("TiempoEnfermedadUnidad", tiempoEnfermedadUnidad) :
                new ObjectParameter("TiempoEnfermedadUnidad", typeof(string));

            var motivodeingresoParameter = motivodeingreso != null ?
                new ObjectParameter("Motivodeingreso", motivodeingreso) :
                new ObjectParameter("Motivodeingreso", typeof(string));

            var sintomasParameter = sintomas != null ?
                new ObjectParameter("Sintomas", sintomas) :
                new ObjectParameter("Sintomas", typeof(string));

            var prioridadParameter = prioridad.HasValue ?
                new ObjectParameter("Prioridad", prioridad) :
                new ObjectParameter("Prioridad", typeof(int));

            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HC_TriajeEmergencia_FE_Listar_Result>("SP_HC_TriajeEmergencia_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idFuncionVitalParameter, fechaParameter, horaParameter, presionArterialMSD1Parameter, presionArterialMSD2Parameter, presionArterialMSIParameter, presionArterialMS2Parameter, frecuenciaCardiacaParameter, frecuenciaRespiratoriaParameter, temperaturaParameter, saturacionOxigenoParameter, frecuenciaCard_FetalFlagParameter, frecuenciaCard_FetalAddParameter, pesoParameter, tiempoEnfermedadParameter, tiempoEnfermedadUnidadParameter, motivodeingresoParameter, sintomasParameter, prioridadParameter, especialidadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual int SP_InterConsulta_FE_Insert(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string proximaAtencionFlag, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idEstablecimientoSalud, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacion, Nullable<int> idProcedimiento, string codigoComponente, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPersonalSalud, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText, Nullable<int> indicadorTI, string codigoOA, Nullable<int> idOrdenAtencion, Nullable<int> linea)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));

            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));

            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));

            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));

            var indicadorTIParameter = indicadorTI.HasValue ?
                new ObjectParameter("IndicadorTI", indicadorTI) :
                new ObjectParameter("IndicadorTI", typeof(int));

            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));

            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));

            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InterConsulta_FE_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, proximaAtencionFlagParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idEstablecimientoSaludParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionParameter, idProcedimientoParameter, codigoComponenteParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPersonalSaludParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter, indicadorTIParameter, codigoOAParameter, idOrdenAtencionParameter, lineaParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_InterConsulta_FE_Insert(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> secuencia, string proximaAtencionFlag, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idEstablecimientoSalud, Nullable<int> idTipoInterConsulta, Nullable<int> idTipoReferencia, string observacion, Nullable<int> idProcedimiento, string codigoComponente, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPersonalSalud, Nullable<int> idDiagnostico, string procedimientoText, string diagnosticoText, Nullable<int> indicadorTI, string codigoOA, Nullable<int> idOrdenAtencion, Nullable<int> linea)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var proximaAtencionFlagParameter = proximaAtencionFlag != null ?
                new ObjectParameter("ProximaAtencionFlag", proximaAtencionFlag) :
                new ObjectParameter("ProximaAtencionFlag", typeof(string));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));

            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));

            var idTipoReferenciaParameter = idTipoReferencia.HasValue ?
                new ObjectParameter("IdTipoReferencia", idTipoReferencia) :
                new ObjectParameter("IdTipoReferencia", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));

            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));

            var procedimientoTextParameter = procedimientoText != null ?
                new ObjectParameter("ProcedimientoText", procedimientoText) :
                new ObjectParameter("ProcedimientoText", typeof(string));

            var diagnosticoTextParameter = diagnosticoText != null ?
                new ObjectParameter("DiagnosticoText", diagnosticoText) :
                new ObjectParameter("DiagnosticoText", typeof(string));

            var indicadorTIParameter = indicadorTI.HasValue ?
                new ObjectParameter("IndicadorTI", indicadorTI) :
                new ObjectParameter("IndicadorTI", typeof(int));

            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));

            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));

            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_InterConsulta_FE_Insert", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, secuenciaParameter, proximaAtencionFlagParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idEstablecimientoSaludParameter, idTipoInterConsultaParameter, idTipoReferenciaParameter, observacionParameter, idProcedimientoParameter, codigoComponenteParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPersonalSaludParameter, idDiagnosticoParameter, procedimientoTextParameter, diagnosticoTextParameter, indicadorTIParameter, codigoOAParameter, idOrdenAtencionParameter, lineaParameter);
        }

        public virtual ObjectResult<SP_SS_HC_BANDEJA_NOTIFI_EPISODIO_HEADER_LISTAR_Result> SP_SS_HC_BANDEJA_NOTIFI_EPISODIO_HEADER_LISTAR(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> idOrdenAtencion, Nullable<int> tipo, Nullable<int> idEspecialidad, string codigoOA, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> grupoMedicamento, string comentario, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadaTiempo, string usuarioAuditoria, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNDICADORTI, Nullable<int> idPadreNutriente, Nullable<int> idHijoNutriente, string secuencialHCE, string codAlmacen, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadaTiempoParameter = unidadaTiempo.HasValue ?
                new ObjectParameter("UnidadaTiempo", unidadaTiempo) :
                new ObjectParameter("UnidadaTiempo", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var iNDICADORTIParameter = iNDICADORTI.HasValue ?
                new ObjectParameter("INDICADORTI", iNDICADORTI) :
                new ObjectParameter("INDICADORTI", typeof(int));

            var idPadreNutrienteParameter = idPadreNutriente.HasValue ?
                new ObjectParameter("IdPadreNutriente", idPadreNutriente) :
                new ObjectParameter("IdPadreNutriente", typeof(int));

            var idHijoNutrienteParameter = idHijoNutriente.HasValue ?
                new ObjectParameter("IdHijoNutriente", idHijoNutriente) :
                new ObjectParameter("IdHijoNutriente", typeof(int));

            var secuencialHCEParameter = secuencialHCE != null ?
                new ObjectParameter("SecuencialHCE", secuencialHCE) :
                new ObjectParameter("SecuencialHCE", typeof(string));

            var codAlmacenParameter = codAlmacen != null ?
                new ObjectParameter("CodAlmacen", codAlmacen) :
                new ObjectParameter("CodAlmacen", typeof(string));

            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));

            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_HC_BANDEJA_NOTIFI_EPISODIO_HEADER_LISTAR_Result>("SP_SS_HC_BANDEJA_NOTIFI_EPISODIO_HEADER_LISTAR", unidadReplicacionParameter, idPacienteParameter, idOrdenAtencionParameter, tipoParameter, idEspecialidadParameter, codigoOAParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, grupoMedicamentoParameter, comentarioParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadaTiempoParameter, usuarioAuditoriaParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNDICADORTIParameter, idPadreNutrienteParameter, idHijoNutrienteParameter, secuencialHCEParameter, codAlmacenParameter, iNICIOParameter, nUMEROFILASParameter);
        }

        public virtual ObjectResult<SS_HC_EpisodioNotificaciones_FE> USP_SS_HC_BANDEJA_NOTIFI_EPISODIO_HEADER_LISTAR(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> idOrdenAtencion, Nullable<int> tipo, Nullable<int> idEspecialidad, string codigoOA, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> grupoMedicamento, string comentario, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadaTiempo, string usuarioAuditoria, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNDICADORTI, Nullable<int> idPadreNutriente, Nullable<int> idHijoNutriente, string secuencialHCE, string codAlmacen, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadaTiempoParameter = unidadaTiempo.HasValue ?
                new ObjectParameter("UnidadaTiempo", unidadaTiempo) :
                new ObjectParameter("UnidadaTiempo", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var iNDICADORTIParameter = iNDICADORTI.HasValue ?
                new ObjectParameter("INDICADORTI", iNDICADORTI) :
                new ObjectParameter("INDICADORTI", typeof(int));

            var idPadreNutrienteParameter = idPadreNutriente.HasValue ?
                new ObjectParameter("IdPadreNutriente", idPadreNutriente) :
                new ObjectParameter("IdPadreNutriente", typeof(int));

            var idHijoNutrienteParameter = idHijoNutriente.HasValue ?
                new ObjectParameter("IdHijoNutriente", idHijoNutriente) :
                new ObjectParameter("IdHijoNutriente", typeof(int));

            var secuencialHCEParameter = secuencialHCE != null ?
                new ObjectParameter("SecuencialHCE", secuencialHCE) :
                new ObjectParameter("SecuencialHCE", typeof(string));

            var codAlmacenParameter = codAlmacen != null ?
                new ObjectParameter("CodAlmacen", codAlmacen) :
                new ObjectParameter("CodAlmacen", typeof(string));

            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));

            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_EpisodioNotificaciones_FE>("USP_SS_HC_BANDEJA_NOTIFI_EPISODIO_HEADER_LISTAR", unidadReplicacionParameter, idPacienteParameter, idOrdenAtencionParameter, tipoParameter, idEspecialidadParameter, codigoOAParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, grupoMedicamentoParameter, comentarioParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadaTiempoParameter, usuarioAuditoriaParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNDICADORTIParameter, idPadreNutrienteParameter, idHijoNutrienteParameter, secuencialHCEParameter, codAlmacenParameter, iNICIOParameter, nUMEROFILASParameter);
        }

        public virtual ObjectResult<SS_HC_EpisodioNotificaciones_FE> USP_SS_HC_BANDEJA_NOTIFI_EPISODIO_HEADER_LISTAR(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> idOrdenAtencion, Nullable<int> tipo, Nullable<int> idEspecialidad, string codigoOA, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> grupoMedicamento, string comentario, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadaTiempo, string usuarioAuditoria, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> iNDICADORTI, Nullable<int> idPadreNutriente, Nullable<int> idHijoNutriente, string secuencialHCE, string codAlmacen, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));

            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadaTiempoParameter = unidadaTiempo.HasValue ?
                new ObjectParameter("UnidadaTiempo", unidadaTiempo) :
                new ObjectParameter("UnidadaTiempo", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var iNDICADORTIParameter = iNDICADORTI.HasValue ?
                new ObjectParameter("INDICADORTI", iNDICADORTI) :
                new ObjectParameter("INDICADORTI", typeof(int));

            var idPadreNutrienteParameter = idPadreNutriente.HasValue ?
                new ObjectParameter("IdPadreNutriente", idPadreNutriente) :
                new ObjectParameter("IdPadreNutriente", typeof(int));

            var idHijoNutrienteParameter = idHijoNutriente.HasValue ?
                new ObjectParameter("IdHijoNutriente", idHijoNutriente) :
                new ObjectParameter("IdHijoNutriente", typeof(int));

            var secuencialHCEParameter = secuencialHCE != null ?
                new ObjectParameter("SecuencialHCE", secuencialHCE) :
                new ObjectParameter("SecuencialHCE", typeof(string));

            var codAlmacenParameter = codAlmacen != null ?
                new ObjectParameter("CodAlmacen", codAlmacen) :
                new ObjectParameter("CodAlmacen", typeof(string));

            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));

            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_EpisodioNotificaciones_FE>("USP_SS_HC_BANDEJA_NOTIFI_EPISODIO_HEADER_LISTAR", mergeOption, unidadReplicacionParameter, idPacienteParameter, idOrdenAtencionParameter, tipoParameter, idEspecialidadParameter, codigoOAParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, grupoMedicamentoParameter, comentarioParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadaTiempoParameter, usuarioAuditoriaParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, iNDICADORTIParameter, idPadreNutrienteParameter, idHijoNutrienteParameter, secuencialHCEParameter, codAlmacenParameter, iNICIOParameter, nUMEROFILASParameter);
        }

        public virtual ObjectResult<SP_EvolucionMedica_FE_Result> SP_EvolucionMedica_FE(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> codigoSecuencia, Nullable<int> idOrdenAtencion, Nullable<System.DateTime> fechaIngreso, string dictamenRiesgo, string evolucionObjetiva, string observacionesAdicionales, string medico, string especialidad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var codigoSecuenciaParameter = codigoSecuencia.HasValue ?
                new ObjectParameter("CodigoSecuencia", codigoSecuencia) :
                new ObjectParameter("CodigoSecuencia", typeof(int));

            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));

            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));

            var dictamenRiesgoParameter = dictamenRiesgo != null ?
                new ObjectParameter("DictamenRiesgo", dictamenRiesgo) :
                new ObjectParameter("DictamenRiesgo", typeof(string));

            var evolucionObjetivaParameter = evolucionObjetiva != null ?
                new ObjectParameter("EvolucionObjetiva", evolucionObjetiva) :
                new ObjectParameter("EvolucionObjetiva", typeof(string));

            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));

            var medicoParameter = medico != null ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(string));

            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EvolucionMedica_FE_Result>("SP_EvolucionMedica_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, codigoSecuenciaParameter, idOrdenAtencionParameter, fechaIngresoParameter, dictamenRiesgoParameter, evolucionObjetivaParameter, observacionesAdicionalesParameter, medicoParameter, especialidadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_EvolucionMedica_FE> USP_EvolucionMedica_FE(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> codigoSecuencia, Nullable<int> idOrdenAtencion, Nullable<System.DateTime> fechaIngreso, string dictamenRiesgo, string evolucionObjetiva, string observacionesAdicionales, string medico, string especialidad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var codigoSecuenciaParameter = codigoSecuencia.HasValue ?
                new ObjectParameter("CodigoSecuencia", codigoSecuencia) :
                new ObjectParameter("CodigoSecuencia", typeof(int));

            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));

            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));

            var dictamenRiesgoParameter = dictamenRiesgo != null ?
                new ObjectParameter("DictamenRiesgo", dictamenRiesgo) :
                new ObjectParameter("DictamenRiesgo", typeof(string));

            var evolucionObjetivaParameter = evolucionObjetiva != null ?
                new ObjectParameter("EvolucionObjetiva", evolucionObjetiva) :
                new ObjectParameter("EvolucionObjetiva", typeof(string));

            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));

            var medicoParameter = medico != null ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(string));

            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_EvolucionMedica_FE>("USP_EvolucionMedica_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, codigoSecuenciaParameter, idOrdenAtencionParameter, fechaIngresoParameter, dictamenRiesgoParameter, evolucionObjetivaParameter, observacionesAdicionalesParameter, medicoParameter, especialidadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_EvolucionMedica_FE> USP_EvolucionMedica_FE(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> codigoSecuencia, Nullable<int> idOrdenAtencion, Nullable<System.DateTime> fechaIngreso, string dictamenRiesgo, string evolucionObjetiva, string observacionesAdicionales, string medico, string especialidad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var codigoSecuenciaParameter = codigoSecuencia.HasValue ?
                new ObjectParameter("CodigoSecuencia", codigoSecuencia) :
                new ObjectParameter("CodigoSecuencia", typeof(int));

            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));

            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));

            var dictamenRiesgoParameter = dictamenRiesgo != null ?
                new ObjectParameter("DictamenRiesgo", dictamenRiesgo) :
                new ObjectParameter("DictamenRiesgo", typeof(string));

            var evolucionObjetivaParameter = evolucionObjetiva != null ?
                new ObjectParameter("EvolucionObjetiva", evolucionObjetiva) :
                new ObjectParameter("EvolucionObjetiva", typeof(string));

            var observacionesAdicionalesParameter = observacionesAdicionales != null ?
                new ObjectParameter("ObservacionesAdicionales", observacionesAdicionales) :
                new ObjectParameter("ObservacionesAdicionales", typeof(string));

            var medicoParameter = medico != null ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(string));

            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_EvolucionMedica_FE>("USP_EvolucionMedica_FE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, codigoSecuenciaParameter, idOrdenAtencionParameter, fechaIngresoParameter, dictamenRiesgoParameter, evolucionObjetivaParameter, observacionesAdicionalesParameter, medicoParameter, especialidadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_HC_Triaje_Ant_Alergia_FE(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioTriaje, string tieneHistoria, string tieneAlimento, string tieneAmbiental, string tieneContacto, string medicamentoRegular, string transfusionSanguinea, string problemaTransfusion, string comentarios, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string idMedicamento, string linea, string familia, string subFamilia, Nullable<int> idTipoAlergia, string aCCION, string desdeCuandoDet, Nullable<int> estudioAlegistaDet, string observacionesDet, Nullable<int> dosis, string frecuencia, string via, string tipoRegistroDet, string descripcionManualDet)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioTriajeParameter = episodioTriaje.HasValue ?
                new ObjectParameter("EpisodioTriaje", episodioTriaje) :
                new ObjectParameter("EpisodioTriaje", typeof(int));

            var tieneHistoriaParameter = tieneHistoria != null ?
                new ObjectParameter("TieneHistoria", tieneHistoria) :
                new ObjectParameter("TieneHistoria", typeof(string));

            var tieneAlimentoParameter = tieneAlimento != null ?
                new ObjectParameter("TieneAlimento", tieneAlimento) :
                new ObjectParameter("TieneAlimento", typeof(string));

            var tieneAmbientalParameter = tieneAmbiental != null ?
                new ObjectParameter("TieneAmbiental", tieneAmbiental) :
                new ObjectParameter("TieneAmbiental", typeof(string));

            var tieneContactoParameter = tieneContacto != null ?
                new ObjectParameter("TieneContacto", tieneContacto) :
                new ObjectParameter("TieneContacto", typeof(string));

            var medicamentoRegularParameter = medicamentoRegular != null ?
                new ObjectParameter("MedicamentoRegular", medicamentoRegular) :
                new ObjectParameter("MedicamentoRegular", typeof(string));

            var transfusionSanguineaParameter = transfusionSanguinea != null ?
                new ObjectParameter("TransfusionSanguinea", transfusionSanguinea) :
                new ObjectParameter("TransfusionSanguinea", typeof(string));

            var problemaTransfusionParameter = problemaTransfusion != null ?
                new ObjectParameter("ProblemaTransfusion", problemaTransfusion) :
                new ObjectParameter("ProblemaTransfusion", typeof(string));

            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var idMedicamentoParameter = idMedicamento != null ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(string));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var idTipoAlergiaParameter = idTipoAlergia.HasValue ?
                new ObjectParameter("IdTipoAlergia", idTipoAlergia) :
                new ObjectParameter("IdTipoAlergia", typeof(int));

            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));

            var desdeCuandoDetParameter = desdeCuandoDet != null ?
                new ObjectParameter("DesdeCuandoDet", desdeCuandoDet) :
                new ObjectParameter("DesdeCuandoDet", typeof(string));

            var estudioAlegistaDetParameter = estudioAlegistaDet.HasValue ?
                new ObjectParameter("EstudioAlegistaDet", estudioAlegistaDet) :
                new ObjectParameter("EstudioAlegistaDet", typeof(int));

            var observacionesDetParameter = observacionesDet != null ?
                new ObjectParameter("ObservacionesDet", observacionesDet) :
                new ObjectParameter("ObservacionesDet", typeof(string));

            var dosisParameter = dosis.HasValue ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(int));

            var frecuenciaParameter = frecuencia != null ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(string));

            var viaParameter = via != null ?
                new ObjectParameter("Via", via) :
                new ObjectParameter("Via", typeof(string));

            var tipoRegistroDetParameter = tipoRegistroDet != null ?
                new ObjectParameter("TipoRegistroDet", tipoRegistroDet) :
                new ObjectParameter("TipoRegistroDet", typeof(string));

            var descripcionManualDetParameter = descripcionManualDet != null ?
                new ObjectParameter("DescripcionManualDet", descripcionManualDet) :
                new ObjectParameter("DescripcionManualDet", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HC_Triaje_Ant_Alergia_FE", unidadReplicacionParameter, idPacienteParameter, episodioTriajeParameter, tieneHistoriaParameter, tieneAlimentoParameter, tieneAmbientalParameter, tieneContactoParameter, medicamentoRegularParameter, transfusionSanguineaParameter, problemaTransfusionParameter, comentariosParameter, idFormaInicioParameter, idCursoEnfermedadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idMedicamentoParameter, lineaParameter, familiaParameter, subFamiliaParameter, idTipoAlergiaParameter, aCCIONParameter, desdeCuandoDetParameter, estudioAlegistaDetParameter, observacionesDetParameter, dosisParameter, frecuenciaParameter, viaParameter, tipoRegistroDetParameter, descripcionManualDetParameter);
        }

        public virtual ObjectResult<SP_HC_Triaje_Ant_Alergia_FE_Listar_Result1> SP_HC_Triaje_Ant_Alergia_FE_Listar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioTriaje, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string aCCION, string version, string tieneHistoria, string tieneAlimento, string tieneAmbiental, string tieneContacto, string medicamentoRegular, string transfusionSanguinea, string problemaTransfusion, string comentarios, string idMedicamento, Nullable<int> idTipoAlergiaDet, string lineaDet, string familiaDet, string subFamiliaDet, string desdeCuandoDet, string observacionesDet, Nullable<int> estudioAlegistaDet, string tipoRegistroDet, string descripcionManualDet)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioTriajeParameter = episodioTriaje.HasValue ?
                new ObjectParameter("EpisodioTriaje", episodioTriaje) :
                new ObjectParameter("EpisodioTriaje", typeof(int));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(string));

            var tieneHistoriaParameter = tieneHistoria != null ?
                new ObjectParameter("TieneHistoria", tieneHistoria) :
                new ObjectParameter("TieneHistoria", typeof(string));

            var tieneAlimentoParameter = tieneAlimento != null ?
                new ObjectParameter("TieneAlimento", tieneAlimento) :
                new ObjectParameter("TieneAlimento", typeof(string));

            var tieneAmbientalParameter = tieneAmbiental != null ?
                new ObjectParameter("TieneAmbiental", tieneAmbiental) :
                new ObjectParameter("TieneAmbiental", typeof(string));

            var tieneContactoParameter = tieneContacto != null ?
                new ObjectParameter("TieneContacto", tieneContacto) :
                new ObjectParameter("TieneContacto", typeof(string));

            var medicamentoRegularParameter = medicamentoRegular != null ?
                new ObjectParameter("MedicamentoRegular", medicamentoRegular) :
                new ObjectParameter("MedicamentoRegular", typeof(string));

            var transfusionSanguineaParameter = transfusionSanguinea != null ?
                new ObjectParameter("TransfusionSanguinea", transfusionSanguinea) :
                new ObjectParameter("TransfusionSanguinea", typeof(string));

            var problemaTransfusionParameter = problemaTransfusion != null ?
                new ObjectParameter("ProblemaTransfusion", problemaTransfusion) :
                new ObjectParameter("ProblemaTransfusion", typeof(string));

            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));

            var idMedicamentoParameter = idMedicamento != null ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(string));

            var idTipoAlergiaDetParameter = idTipoAlergiaDet.HasValue ?
                new ObjectParameter("IdTipoAlergiaDet", idTipoAlergiaDet) :
                new ObjectParameter("IdTipoAlergiaDet", typeof(int));

            var lineaDetParameter = lineaDet != null ?
                new ObjectParameter("LineaDet", lineaDet) :
                new ObjectParameter("LineaDet", typeof(string));

            var familiaDetParameter = familiaDet != null ?
                new ObjectParameter("FamiliaDet", familiaDet) :
                new ObjectParameter("FamiliaDet", typeof(string));

            var subFamiliaDetParameter = subFamiliaDet != null ?
                new ObjectParameter("SubFamiliaDet", subFamiliaDet) :
                new ObjectParameter("SubFamiliaDet", typeof(string));

            var desdeCuandoDetParameter = desdeCuandoDet != null ?
                new ObjectParameter("DesdeCuandoDet", desdeCuandoDet) :
                new ObjectParameter("DesdeCuandoDet", typeof(string));

            var observacionesDetParameter = observacionesDet != null ?
                new ObjectParameter("ObservacionesDet", observacionesDet) :
                new ObjectParameter("ObservacionesDet", typeof(string));

            var estudioAlegistaDetParameter = estudioAlegistaDet.HasValue ?
                new ObjectParameter("EstudioAlegistaDet", estudioAlegistaDet) :
                new ObjectParameter("EstudioAlegistaDet", typeof(int));

            var tipoRegistroDetParameter = tipoRegistroDet != null ?
                new ObjectParameter("TipoRegistroDet", tipoRegistroDet) :
                new ObjectParameter("TipoRegistroDet", typeof(string));

            var descripcionManualDetParameter = descripcionManualDet != null ?
                new ObjectParameter("DescripcionManualDet", descripcionManualDet) :
                new ObjectParameter("DescripcionManualDet", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HC_Triaje_Ant_Alergia_FE_Listar_Result1>("SP_HC_Triaje_Ant_Alergia_FE_Listar", unidadReplicacionParameter, idPacienteParameter, episodioTriajeParameter, idFormaInicioParameter, idCursoEnfermedadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, aCCIONParameter, versionParameter, tieneHistoriaParameter, tieneAlimentoParameter, tieneAmbientalParameter, tieneContactoParameter, medicamentoRegularParameter, transfusionSanguineaParameter, problemaTransfusionParameter, comentariosParameter, idMedicamentoParameter, idTipoAlergiaDetParameter, lineaDetParameter, familiaDetParameter, subFamiliaDetParameter, desdeCuandoDetParameter, observacionesDetParameter, estudioAlegistaDetParameter, tipoRegistroDetParameter, descripcionManualDetParameter);
        }

        public virtual ObjectResult<SS_HC_Triaje_Ant_Alergia_FE> USP_HC_Triaje_Ant_Alergia_FE_Listar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioTriaje, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string aCCION, string version, string tieneHistoria, string tieneAlimento, string tieneAmbiental, string tieneContacto, string medicamentoRegular, string transfusionSanguinea, string problemaTransfusion, string comentarios, string idMedicamento, Nullable<int> idTipoAlergiaDet, string lineaDet, string familiaDet, string subFamiliaDet, string desdeCuandoDet, string observacionesDet, Nullable<int> estudioAlegistaDet, string tipoRegistroDet, string descripcionManualDet)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioTriajeParameter = episodioTriaje.HasValue ?
                new ObjectParameter("EpisodioTriaje", episodioTriaje) :
                new ObjectParameter("EpisodioTriaje", typeof(int));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(string));

            var tieneHistoriaParameter = tieneHistoria != null ?
                new ObjectParameter("TieneHistoria", tieneHistoria) :
                new ObjectParameter("TieneHistoria", typeof(string));

            var tieneAlimentoParameter = tieneAlimento != null ?
                new ObjectParameter("TieneAlimento", tieneAlimento) :
                new ObjectParameter("TieneAlimento", typeof(string));

            var tieneAmbientalParameter = tieneAmbiental != null ?
                new ObjectParameter("TieneAmbiental", tieneAmbiental) :
                new ObjectParameter("TieneAmbiental", typeof(string));

            var tieneContactoParameter = tieneContacto != null ?
                new ObjectParameter("TieneContacto", tieneContacto) :
                new ObjectParameter("TieneContacto", typeof(string));

            var medicamentoRegularParameter = medicamentoRegular != null ?
                new ObjectParameter("MedicamentoRegular", medicamentoRegular) :
                new ObjectParameter("MedicamentoRegular", typeof(string));

            var transfusionSanguineaParameter = transfusionSanguinea != null ?
                new ObjectParameter("TransfusionSanguinea", transfusionSanguinea) :
                new ObjectParameter("TransfusionSanguinea", typeof(string));

            var problemaTransfusionParameter = problemaTransfusion != null ?
                new ObjectParameter("ProblemaTransfusion", problemaTransfusion) :
                new ObjectParameter("ProblemaTransfusion", typeof(string));

            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));

            var idMedicamentoParameter = idMedicamento != null ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(string));

            var idTipoAlergiaDetParameter = idTipoAlergiaDet.HasValue ?
                new ObjectParameter("IdTipoAlergiaDet", idTipoAlergiaDet) :
                new ObjectParameter("IdTipoAlergiaDet", typeof(int));

            var lineaDetParameter = lineaDet != null ?
                new ObjectParameter("LineaDet", lineaDet) :
                new ObjectParameter("LineaDet", typeof(string));

            var familiaDetParameter = familiaDet != null ?
                new ObjectParameter("FamiliaDet", familiaDet) :
                new ObjectParameter("FamiliaDet", typeof(string));

            var subFamiliaDetParameter = subFamiliaDet != null ?
                new ObjectParameter("SubFamiliaDet", subFamiliaDet) :
                new ObjectParameter("SubFamiliaDet", typeof(string));

            var desdeCuandoDetParameter = desdeCuandoDet != null ?
                new ObjectParameter("DesdeCuandoDet", desdeCuandoDet) :
                new ObjectParameter("DesdeCuandoDet", typeof(string));

            var observacionesDetParameter = observacionesDet != null ?
                new ObjectParameter("ObservacionesDet", observacionesDet) :
                new ObjectParameter("ObservacionesDet", typeof(string));

            var estudioAlegistaDetParameter = estudioAlegistaDet.HasValue ?
                new ObjectParameter("EstudioAlegistaDet", estudioAlegistaDet) :
                new ObjectParameter("EstudioAlegistaDet", typeof(int));

            var tipoRegistroDetParameter = tipoRegistroDet != null ?
                new ObjectParameter("TipoRegistroDet", tipoRegistroDet) :
                new ObjectParameter("TipoRegistroDet", typeof(string));

            var descripcionManualDetParameter = descripcionManualDet != null ?
                new ObjectParameter("DescripcionManualDet", descripcionManualDet) :
                new ObjectParameter("DescripcionManualDet", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Triaje_Ant_Alergia_FE>("USP_HC_Triaje_Ant_Alergia_FE_Listar", unidadReplicacionParameter, idPacienteParameter, episodioTriajeParameter, idFormaInicioParameter, idCursoEnfermedadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, aCCIONParameter, versionParameter, tieneHistoriaParameter, tieneAlimentoParameter, tieneAmbientalParameter, tieneContactoParameter, medicamentoRegularParameter, transfusionSanguineaParameter, problemaTransfusionParameter, comentariosParameter, idMedicamentoParameter, idTipoAlergiaDetParameter, lineaDetParameter, familiaDetParameter, subFamiliaDetParameter, desdeCuandoDetParameter, observacionesDetParameter, estudioAlegistaDetParameter, tipoRegistroDetParameter, descripcionManualDetParameter);
        }

        public virtual ObjectResult<SS_HC_Triaje_Ant_Alergia_FE> USP_HC_Triaje_Ant_Alergia_FE_Listar(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioTriaje, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string aCCION, string version, string tieneHistoria, string tieneAlimento, string tieneAmbiental, string tieneContacto, string medicamentoRegular, string transfusionSanguinea, string problemaTransfusion, string comentarios, string idMedicamento, Nullable<int> idTipoAlergiaDet, string lineaDet, string familiaDet, string subFamiliaDet, string desdeCuandoDet, string observacionesDet, Nullable<int> estudioAlegistaDet, string tipoRegistroDet, string descripcionManualDet, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioTriajeParameter = episodioTriaje.HasValue ?
                new ObjectParameter("EpisodioTriaje", episodioTriaje) :
                new ObjectParameter("EpisodioTriaje", typeof(int));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(string));

            var tieneHistoriaParameter = tieneHistoria != null ?
                new ObjectParameter("TieneHistoria", tieneHistoria) :
                new ObjectParameter("TieneHistoria", typeof(string));

            var tieneAlimentoParameter = tieneAlimento != null ?
                new ObjectParameter("TieneAlimento", tieneAlimento) :
                new ObjectParameter("TieneAlimento", typeof(string));

            var tieneAmbientalParameter = tieneAmbiental != null ?
                new ObjectParameter("TieneAmbiental", tieneAmbiental) :
                new ObjectParameter("TieneAmbiental", typeof(string));

            var tieneContactoParameter = tieneContacto != null ?
                new ObjectParameter("TieneContacto", tieneContacto) :
                new ObjectParameter("TieneContacto", typeof(string));

            var medicamentoRegularParameter = medicamentoRegular != null ?
                new ObjectParameter("MedicamentoRegular", medicamentoRegular) :
                new ObjectParameter("MedicamentoRegular", typeof(string));

            var transfusionSanguineaParameter = transfusionSanguinea != null ?
                new ObjectParameter("TransfusionSanguinea", transfusionSanguinea) :
                new ObjectParameter("TransfusionSanguinea", typeof(string));

            var problemaTransfusionParameter = problemaTransfusion != null ?
                new ObjectParameter("ProblemaTransfusion", problemaTransfusion) :
                new ObjectParameter("ProblemaTransfusion", typeof(string));

            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));

            var idMedicamentoParameter = idMedicamento != null ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(string));

            var idTipoAlergiaDetParameter = idTipoAlergiaDet.HasValue ?
                new ObjectParameter("IdTipoAlergiaDet", idTipoAlergiaDet) :
                new ObjectParameter("IdTipoAlergiaDet", typeof(int));

            var lineaDetParameter = lineaDet != null ?
                new ObjectParameter("LineaDet", lineaDet) :
                new ObjectParameter("LineaDet", typeof(string));

            var familiaDetParameter = familiaDet != null ?
                new ObjectParameter("FamiliaDet", familiaDet) :
                new ObjectParameter("FamiliaDet", typeof(string));

            var subFamiliaDetParameter = subFamiliaDet != null ?
                new ObjectParameter("SubFamiliaDet", subFamiliaDet) :
                new ObjectParameter("SubFamiliaDet", typeof(string));

            var desdeCuandoDetParameter = desdeCuandoDet != null ?
                new ObjectParameter("DesdeCuandoDet", desdeCuandoDet) :
                new ObjectParameter("DesdeCuandoDet", typeof(string));

            var observacionesDetParameter = observacionesDet != null ?
                new ObjectParameter("ObservacionesDet", observacionesDet) :
                new ObjectParameter("ObservacionesDet", typeof(string));

            var estudioAlegistaDetParameter = estudioAlegistaDet.HasValue ?
                new ObjectParameter("EstudioAlegistaDet", estudioAlegistaDet) :
                new ObjectParameter("EstudioAlegistaDet", typeof(int));

            var tipoRegistroDetParameter = tipoRegistroDet != null ?
                new ObjectParameter("TipoRegistroDet", tipoRegistroDet) :
                new ObjectParameter("TipoRegistroDet", typeof(string));

            var descripcionManualDetParameter = descripcionManualDet != null ?
                new ObjectParameter("DescripcionManualDet", descripcionManualDet) :
                new ObjectParameter("DescripcionManualDet", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Triaje_Ant_Alergia_FE>("USP_HC_Triaje_Ant_Alergia_FE_Listar", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioTriajeParameter, idFormaInicioParameter, idCursoEnfermedadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, aCCIONParameter, versionParameter, tieneHistoriaParameter, tieneAlimentoParameter, tieneAmbientalParameter, tieneContactoParameter, medicamentoRegularParameter, transfusionSanguineaParameter, problemaTransfusionParameter, comentariosParameter, idMedicamentoParameter, idTipoAlergiaDetParameter, lineaDetParameter, familiaDetParameter, subFamiliaDetParameter, desdeCuandoDetParameter, observacionesDetParameter, estudioAlegistaDetParameter, tipoRegistroDetParameter, descripcionManualDetParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_HC_Triaje_Ant_Alergia_FE(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioTriaje, string tieneHistoria, string tieneAlimento, string tieneAmbiental, string tieneContacto, string medicamentoRegular, string transfusionSanguinea, string problemaTransfusion, string comentarios, Nullable<int> idFormaInicio, Nullable<int> idCursoEnfermedad, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string idMedicamento, string linea, string familia, string subFamilia, Nullable<int> idTipoAlergia, string aCCION, string desdeCuandoDet, Nullable<int> estudioAlegistaDet, string observacionesDet, Nullable<int> dosis, string frecuencia, string via, string tipoRegistroDet, string descripcionManualDet)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioTriajeParameter = episodioTriaje.HasValue ?
                new ObjectParameter("EpisodioTriaje", episodioTriaje) :
                new ObjectParameter("EpisodioTriaje", typeof(int));

            var tieneHistoriaParameter = tieneHistoria != null ?
                new ObjectParameter("TieneHistoria", tieneHistoria) :
                new ObjectParameter("TieneHistoria", typeof(string));

            var tieneAlimentoParameter = tieneAlimento != null ?
                new ObjectParameter("TieneAlimento", tieneAlimento) :
                new ObjectParameter("TieneAlimento", typeof(string));

            var tieneAmbientalParameter = tieneAmbiental != null ?
                new ObjectParameter("TieneAmbiental", tieneAmbiental) :
                new ObjectParameter("TieneAmbiental", typeof(string));

            var tieneContactoParameter = tieneContacto != null ?
                new ObjectParameter("TieneContacto", tieneContacto) :
                new ObjectParameter("TieneContacto", typeof(string));

            var medicamentoRegularParameter = medicamentoRegular != null ?
                new ObjectParameter("MedicamentoRegular", medicamentoRegular) :
                new ObjectParameter("MedicamentoRegular", typeof(string));

            var transfusionSanguineaParameter = transfusionSanguinea != null ?
                new ObjectParameter("TransfusionSanguinea", transfusionSanguinea) :
                new ObjectParameter("TransfusionSanguinea", typeof(string));

            var problemaTransfusionParameter = problemaTransfusion != null ?
                new ObjectParameter("ProblemaTransfusion", problemaTransfusion) :
                new ObjectParameter("ProblemaTransfusion", typeof(string));

            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));

            var idFormaInicioParameter = idFormaInicio.HasValue ?
                new ObjectParameter("IdFormaInicio", idFormaInicio) :
                new ObjectParameter("IdFormaInicio", typeof(int));

            var idCursoEnfermedadParameter = idCursoEnfermedad.HasValue ?
                new ObjectParameter("IdCursoEnfermedad", idCursoEnfermedad) :
                new ObjectParameter("IdCursoEnfermedad", typeof(int));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var idMedicamentoParameter = idMedicamento != null ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(string));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var idTipoAlergiaParameter = idTipoAlergia.HasValue ?
                new ObjectParameter("IdTipoAlergia", idTipoAlergia) :
                new ObjectParameter("IdTipoAlergia", typeof(int));

            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));

            var desdeCuandoDetParameter = desdeCuandoDet != null ?
                new ObjectParameter("DesdeCuandoDet", desdeCuandoDet) :
                new ObjectParameter("DesdeCuandoDet", typeof(string));

            var estudioAlegistaDetParameter = estudioAlegistaDet.HasValue ?
                new ObjectParameter("EstudioAlegistaDet", estudioAlegistaDet) :
                new ObjectParameter("EstudioAlegistaDet", typeof(int));

            var observacionesDetParameter = observacionesDet != null ?
                new ObjectParameter("ObservacionesDet", observacionesDet) :
                new ObjectParameter("ObservacionesDet", typeof(string));

            var dosisParameter = dosis.HasValue ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(int));

            var frecuenciaParameter = frecuencia != null ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(string));

            var viaParameter = via != null ?
                new ObjectParameter("Via", via) :
                new ObjectParameter("Via", typeof(string));

            var tipoRegistroDetParameter = tipoRegistroDet != null ?
                new ObjectParameter("TipoRegistroDet", tipoRegistroDet) :
                new ObjectParameter("TipoRegistroDet", typeof(string));

            var descripcionManualDetParameter = descripcionManualDet != null ?
                new ObjectParameter("DescripcionManualDet", descripcionManualDet) :
                new ObjectParameter("DescripcionManualDet", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_HC_Triaje_Ant_Alergia_FE", unidadReplicacionParameter, idPacienteParameter, episodioTriajeParameter, tieneHistoriaParameter, tieneAlimentoParameter, tieneAmbientalParameter, tieneContactoParameter, medicamentoRegularParameter, transfusionSanguineaParameter, problemaTransfusionParameter, comentariosParameter, idFormaInicioParameter, idCursoEnfermedadParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, idMedicamentoParameter, lineaParameter, familiaParameter, subFamiliaParameter, idTipoAlergiaParameter, aCCIONParameter, desdeCuandoDetParameter, estudioAlegistaDetParameter, observacionesDetParameter, dosisParameter, frecuenciaParameter, viaParameter, tipoRegistroDetParameter, descripcionManualDetParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_InsertarBandejaTriaje(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> idPersonalSalud, Nullable<System.DateTime> fechaAtencion, Nullable<int> idEspecialidad, Nullable<int> idPrioridad, Nullable<int> flagFirma, Nullable<System.DateTime> fechaFirma, Nullable<int> idMedicoFirma, string observacionFirma, string accion, string version, Nullable<int> estado, string usuarioCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));

            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idPrioridadParameter = idPrioridad.HasValue ?
                new ObjectParameter("IdPrioridad", idPrioridad) :
                new ObjectParameter("IdPrioridad", typeof(int));

            var flagFirmaParameter = flagFirma.HasValue ?
                new ObjectParameter("FlagFirma", flagFirma) :
                new ObjectParameter("FlagFirma", typeof(int));

            var fechaFirmaParameter = fechaFirma.HasValue ?
                new ObjectParameter("FechaFirma", fechaFirma) :
                new ObjectParameter("FechaFirma", typeof(System.DateTime));

            var idMedicoFirmaParameter = idMedicoFirma.HasValue ?
                new ObjectParameter("IdMedicoFirma", idMedicoFirma) :
                new ObjectParameter("IdMedicoFirma", typeof(int));

            var observacionFirmaParameter = observacionFirma != null ?
                new ObjectParameter("ObservacionFirma", observacionFirma) :
                new ObjectParameter("ObservacionFirma", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_InsertarBandejaTriaje", unidadReplicacionParameter, idPacienteParameter, idPersonalSaludParameter, fechaAtencionParameter, idEspecialidadParameter, idPrioridadParameter, flagFirmaParameter, fechaFirmaParameter, idMedicoFirmaParameter, observacionFirmaParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }

        public virtual ObjectResult<SP_ListarBandejaTriaje_Result> SP_ListarBandejaTriaje(string unidadReplicacion, string pacienteBusqueda, string busquedaDNI, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> estado, Nullable<int> prioridadTriaje, Nullable<int> especialidad, string historiaClinica, Nullable<int> pageNumber, Nullable<int> pageZize)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var pacienteBusquedaParameter = pacienteBusqueda != null ?
                new ObjectParameter("PacienteBusqueda", pacienteBusqueda) :
                new ObjectParameter("PacienteBusqueda", typeof(string));

            var busquedaDNIParameter = busquedaDNI != null ?
                new ObjectParameter("BusquedaDNI", busquedaDNI) :
                new ObjectParameter("BusquedaDNI", typeof(string));

            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));

            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var prioridadTriajeParameter = prioridadTriaje.HasValue ?
                new ObjectParameter("PrioridadTriaje", prioridadTriaje) :
                new ObjectParameter("PrioridadTriaje", typeof(int));

            var especialidadParameter = especialidad.HasValue ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(int));

            var historiaClinicaParameter = historiaClinica != null ?
                new ObjectParameter("HistoriaClinica", historiaClinica) :
                new ObjectParameter("HistoriaClinica", typeof(string));

            var pageNumberParameter = estado.HasValue ?
               new ObjectParameter("PageNumber", pageNumber) :
               new ObjectParameter("PageNumber", typeof(int));

            var pageZizeParameter = estado.HasValue ?
               new ObjectParameter("PageZize", pageZize) :
               new ObjectParameter("PageZize", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListarBandejaTriaje_Result>("SP_ListarBandejaTriaje", unidadReplicacionParameter, pacienteBusquedaParameter, busquedaDNIParameter, fechaInicioParameter, fechaFinParameter, estadoParameter, prioridadTriajeParameter, especialidadParameter, historiaClinicaParameter, pageNumberParameter, pageZizeParameter);
        }

        public virtual ObjectResult<SS_HC_EpisodioTriaje> USP_ListarBandejaTriaje(string unidadReplicacion, string pacienteBusqueda, string busquedaDNI, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> estado, Nullable<int> prioridadTriaje, Nullable<int> especialidad, string historiaClinica, Nullable<int> pageNumber, Nullable<int> pageZize)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var pacienteBusquedaParameter = pacienteBusqueda != null ?
                new ObjectParameter("PacienteBusqueda", pacienteBusqueda) :
                new ObjectParameter("PacienteBusqueda", typeof(string));

            var busquedaDNIParameter = busquedaDNI != null ?
                new ObjectParameter("BusquedaDNI", busquedaDNI) :
                new ObjectParameter("BusquedaDNI", typeof(string));

            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));

            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var prioridadTriajeParameter = prioridadTriaje.HasValue ?
                new ObjectParameter("PrioridadTriaje", prioridadTriaje) :
                new ObjectParameter("PrioridadTriaje", typeof(int));

            var especialidadParameter = especialidad.HasValue ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(int));

            var historiaClinicaParameter = historiaClinica != null ?
                new ObjectParameter("HistoriaClinica", historiaClinica) :
                new ObjectParameter("HistoriaClinica", typeof(string));

            var pageNumberParameter = estado.HasValue ?
            new ObjectParameter("PageNumber", pageNumber) :
            new ObjectParameter("PageNumber", typeof(int));

            var pageZizeParameter = estado.HasValue ?
               new ObjectParameter("PageZize", pageZize) :
               new ObjectParameter("PageZize", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_EpisodioTriaje>("USP_ListarBandejaTriaje", unidadReplicacionParameter, pacienteBusquedaParameter, busquedaDNIParameter, fechaInicioParameter, fechaFinParameter, estadoParameter, prioridadTriajeParameter, especialidadParameter, historiaClinicaParameter, pageNumberParameter, pageZizeParameter);
        }

        public virtual ObjectResult<SS_HC_EpisodioTriaje> USP_ListarBandejaTriaje(string unidadReplicacion, string pacienteBusqueda, string busquedaDNI, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> estado, Nullable<int> prioridadTriaje, Nullable<int> especialidad, string historiaClinica, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var pacienteBusquedaParameter = pacienteBusqueda != null ?
                new ObjectParameter("PacienteBusqueda", pacienteBusqueda) :
                new ObjectParameter("PacienteBusqueda", typeof(string));

            var busquedaDNIParameter = busquedaDNI != null ?
                new ObjectParameter("BusquedaDNI", busquedaDNI) :
                new ObjectParameter("BusquedaDNI", typeof(string));

            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));

            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var prioridadTriajeParameter = prioridadTriaje.HasValue ?
                new ObjectParameter("PrioridadTriaje", prioridadTriaje) :
                new ObjectParameter("PrioridadTriaje", typeof(int));

            var especialidadParameter = especialidad.HasValue ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(int));

            var historiaClinicaParameter = historiaClinica != null ?
                new ObjectParameter("HistoriaClinica", historiaClinica) :
                new ObjectParameter("HistoriaClinica", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_EpisodioTriaje>("USP_ListarBandejaTriaje", mergeOption, unidadReplicacionParameter, pacienteBusquedaParameter, busquedaDNIParameter, fechaInicioParameter, fechaFinParameter, estadoParameter, prioridadTriajeParameter, especialidadParameter, historiaClinicaParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_InsertarBandejaTriaje(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> idPersonalSalud, Nullable<System.DateTime> fechaAtencion, Nullable<int> idEspecialidad, Nullable<int> idPrioridad, Nullable<int> flagFirma, Nullable<System.DateTime> fechaFirma, Nullable<int> idMedicoFirma, string observacionFirma, string accion, string version, Nullable<int> estado, string usuarioCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));

            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idPrioridadParameter = idPrioridad.HasValue ?
                new ObjectParameter("IdPrioridad", idPrioridad) :
                new ObjectParameter("IdPrioridad", typeof(int));

            var flagFirmaParameter = flagFirma.HasValue ?
                new ObjectParameter("FlagFirma", flagFirma) :
                new ObjectParameter("FlagFirma", typeof(int));

            var fechaFirmaParameter = fechaFirma.HasValue ?
                new ObjectParameter("FechaFirma", fechaFirma) :
                new ObjectParameter("FechaFirma", typeof(System.DateTime));

            var idMedicoFirmaParameter = idMedicoFirma.HasValue ?
                new ObjectParameter("IdMedicoFirma", idMedicoFirma) :
                new ObjectParameter("IdMedicoFirma", typeof(int));

            var observacionFirmaParameter = observacionFirma != null ?
                new ObjectParameter("ObservacionFirma", observacionFirma) :
                new ObjectParameter("ObservacionFirma", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            if (fechaModificacion == null)
            {
                var dat = typeof(System.DateTime);
                DateTime thisDay = DateTime.Now;
                var fechaModificacionParameter02 = new ObjectParameter("FechaModificacion", thisDay);
                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_InsertarBandejaTriaje", unidadReplicacionParameter, idPacienteParameter, idPersonalSaludParameter, fechaAtencionParameter, idEspecialidadParameter, idPrioridadParameter, flagFirmaParameter, fechaFirmaParameter, idMedicoFirmaParameter, observacionFirmaParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter02);

            }
            else
            {
                var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_InsertarBandejaTriaje", unidadReplicacionParameter, idPacienteParameter, idPersonalSaludParameter, fechaAtencionParameter, idEspecialidadParameter, idPrioridadParameter, flagFirmaParameter, fechaFirmaParameter, idMedicoFirmaParameter, observacionFirmaParameter, accionParameter, versionParameter, estadoParameter, usuarioCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter);

            }

        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_SolicitudTransfusional_2_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idMedico, Nullable<int> idMedicoTratante, Nullable<int> idFirma, string requisitos, Nullable<int> idMedicoFirma, Nullable<int> idMedicoFirmaTratante, string nombreBanco, string firma, Nullable<System.DateTime> fechaRecepcion, Nullable<System.DateTime> horaRecepcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));

            var idMedicoTratanteParameter = idMedicoTratante.HasValue ?
                new ObjectParameter("IdMedicoTratante", idMedicoTratante) :
                new ObjectParameter("IdMedicoTratante", typeof(int));

            var idFirmaParameter = idFirma.HasValue ?
                new ObjectParameter("IdFirma", idFirma) :
                new ObjectParameter("IdFirma", typeof(int));

            var requisitosParameter = requisitos != null ?
                new ObjectParameter("Requisitos", requisitos) :
                new ObjectParameter("Requisitos", typeof(string));

            var idMedicoFirmaParameter = idMedicoFirma.HasValue ?
                new ObjectParameter("IdMedicoFirma", idMedicoFirma) :
                new ObjectParameter("IdMedicoFirma", typeof(int));

            var idMedicoFirmaTratanteParameter = idMedicoFirmaTratante.HasValue ?
                new ObjectParameter("IdMedicoFirmaTratante", idMedicoFirmaTratante) :
                new ObjectParameter("IdMedicoFirmaTratante", typeof(int));

            var nombreBancoParameter = nombreBanco != null ?
                new ObjectParameter("NombreBanco", nombreBanco) :
                new ObjectParameter("NombreBanco", typeof(string));

            var firmaParameter = firma != null ?
                new ObjectParameter("Firma", firma) :
                new ObjectParameter("Firma", typeof(string));

            var fechaRecepcionParameter = fechaRecepcion.HasValue ?
                new ObjectParameter("FechaRecepcion", fechaRecepcion) :
                new ObjectParameter("FechaRecepcion", typeof(System.DateTime));

            var horaRecepcionParameter = horaRecepcion.HasValue ?
                new ObjectParameter("HoraRecepcion", horaRecepcion) :
                new ObjectParameter("HoraRecepcion", typeof(System.DateTime));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_SolicitudTransfusional_2_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idMedicoParameter, idMedicoTratanteParameter, idFirmaParameter, requisitosParameter, idMedicoFirmaParameter, idMedicoFirmaTratanteParameter, nombreBancoParameter, firmaParameter, fechaRecepcionParameter, horaRecepcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_SolicitudTransfusional_2_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idMedico, Nullable<int> idMedicoTratante, Nullable<int> idFirma, string requisitos, Nullable<int> idMedicoFirma, Nullable<int> idMedicoFirmaTratante, string nombreBanco, string firma, Nullable<System.DateTime> fechaRecepcion, Nullable<System.DateTime> horaRecepcion, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));

            var idMedicoTratanteParameter = idMedicoTratante.HasValue ?
                new ObjectParameter("IdMedicoTratante", idMedicoTratante) :
                new ObjectParameter("IdMedicoTratante", typeof(int));

            var idFirmaParameter = idFirma.HasValue ?
                new ObjectParameter("IdFirma", idFirma) :
                new ObjectParameter("IdFirma", typeof(int));

            var requisitosParameter = requisitos != null ?
                new ObjectParameter("Requisitos", requisitos) :
                new ObjectParameter("Requisitos", typeof(string));

            var idMedicoFirmaParameter = idMedicoFirma.HasValue ?
                new ObjectParameter("IdMedicoFirma", idMedicoFirma) :
                new ObjectParameter("IdMedicoFirma", typeof(int));

            var idMedicoFirmaTratanteParameter = idMedicoFirmaTratante.HasValue ?
                new ObjectParameter("IdMedicoFirmaTratante", idMedicoFirmaTratante) :
                new ObjectParameter("IdMedicoFirmaTratante", typeof(int));

            var nombreBancoParameter = nombreBanco != null ?
                new ObjectParameter("NombreBanco", nombreBanco) :
                new ObjectParameter("NombreBanco", typeof(string));

            var firmaParameter = firma != null ?
                new ObjectParameter("Firma", firma) :
                new ObjectParameter("Firma", typeof(string));

            var fechaRecepcionParameter = fechaRecepcion.HasValue ?
                new ObjectParameter("FechaRecepcion", fechaRecepcion) :
                new ObjectParameter("FechaRecepcion", typeof(System.DateTime));

            var horaRecepcionParameter = horaRecepcion.HasValue ?
                new ObjectParameter("HoraRecepcion", horaRecepcion) :
                new ObjectParameter("HoraRecepcion", typeof(System.DateTime));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_SolicitudTransfusional_2_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idMedicoParameter, idMedicoTratanteParameter, idFirmaParameter, requisitosParameter, idMedicoFirmaParameter, idMedicoFirmaTratanteParameter, nombreBancoParameter, firmaParameter, fechaRecepcionParameter, horaRecepcionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_Epicrisis_2_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string complicaciones, string pronostico, string tipoAlta, string condicionEgreso, string causaMuerte, string necropsia, string planAlta, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var complicacionesParameter = complicaciones != null ?
                new ObjectParameter("Complicaciones", complicaciones) :
                new ObjectParameter("Complicaciones", typeof(string));

            var pronosticoParameter = pronostico != null ?
                new ObjectParameter("Pronostico", pronostico) :
                new ObjectParameter("Pronostico", typeof(string));

            var tipoAltaParameter = tipoAlta != null ?
                new ObjectParameter("TipoAlta", tipoAlta) :
                new ObjectParameter("TipoAlta", typeof(string));

            var condicionEgresoParameter = condicionEgreso != null ?
                new ObjectParameter("CondicionEgreso", condicionEgreso) :
                new ObjectParameter("CondicionEgreso", typeof(string));

            var causaMuerteParameter = causaMuerte != null ?
                new ObjectParameter("CausaMuerte", causaMuerte) :
                new ObjectParameter("CausaMuerte", typeof(string));

            var necropsiaParameter = necropsia != null ?
                new ObjectParameter("Necropsia", necropsia) :
                new ObjectParameter("Necropsia", typeof(string));

            var planAltaParameter = planAlta != null ?
                new ObjectParameter("PlanAlta", planAlta) :
                new ObjectParameter("PlanAlta", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_Epicrisis_2_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, complicacionesParameter, pronosticoParameter, tipoAltaParameter, condicionEgresoParameter, causaMuerteParameter, necropsiaParameter, planAltaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SP_SS_HC_EpicrisisFE_2_Listar_Result> SP_SS_HC_EpicrisisFE_2_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string complicaciones, string pronostico, string tipoAlta, string condicionEgreso, string causaMuerte, string necropsia, string planAlta, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var complicacionesParameter = complicaciones != null ?
                new ObjectParameter("Complicaciones", complicaciones) :
                new ObjectParameter("Complicaciones", typeof(string));

            var pronosticoParameter = pronostico != null ?
                new ObjectParameter("Pronostico", pronostico) :
                new ObjectParameter("Pronostico", typeof(string));

            var tipoAltaParameter = tipoAlta != null ?
                new ObjectParameter("TipoAlta", tipoAlta) :
                new ObjectParameter("TipoAlta", typeof(string));

            var condicionEgresoParameter = condicionEgreso != null ?
                new ObjectParameter("CondicionEgreso", condicionEgreso) :
                new ObjectParameter("CondicionEgreso", typeof(string));

            var causaMuerteParameter = causaMuerte != null ?
                new ObjectParameter("CausaMuerte", causaMuerte) :
                new ObjectParameter("CausaMuerte", typeof(string));

            var necropsiaParameter = necropsia != null ?
                new ObjectParameter("Necropsia", necropsia) :
                new ObjectParameter("Necropsia", typeof(string));

            var planAltaParameter = planAlta != null ?
                new ObjectParameter("PlanAlta", planAlta) :
                new ObjectParameter("PlanAlta", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_HC_EpicrisisFE_2_Listar_Result>("SP_SS_HC_EpicrisisFE_2_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, complicacionesParameter, pronosticoParameter, tipoAltaParameter, condicionEgresoParameter, causaMuerteParameter, necropsiaParameter, planAltaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Epicrisis_2_FE> USP_SS_HC_EpicrisisFE_2_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string complicaciones, string pronostico, string tipoAlta, string condicionEgreso, string causaMuerte, string necropsia, string planAlta, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var complicacionesParameter = complicaciones != null ?
                new ObjectParameter("Complicaciones", complicaciones) :
                new ObjectParameter("Complicaciones", typeof(string));

            var pronosticoParameter = pronostico != null ?
                new ObjectParameter("Pronostico", pronostico) :
                new ObjectParameter("Pronostico", typeof(string));

            var tipoAltaParameter = tipoAlta != null ?
                new ObjectParameter("TipoAlta", tipoAlta) :
                new ObjectParameter("TipoAlta", typeof(string));

            var condicionEgresoParameter = condicionEgreso != null ?
                new ObjectParameter("CondicionEgreso", condicionEgreso) :
                new ObjectParameter("CondicionEgreso", typeof(string));

            var causaMuerteParameter = causaMuerte != null ?
                new ObjectParameter("CausaMuerte", causaMuerte) :
                new ObjectParameter("CausaMuerte", typeof(string));

            var necropsiaParameter = necropsia != null ?
                new ObjectParameter("Necropsia", necropsia) :
                new ObjectParameter("Necropsia", typeof(string));

            var planAltaParameter = planAlta != null ?
                new ObjectParameter("PlanAlta", planAlta) :
                new ObjectParameter("PlanAlta", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Epicrisis_2_FE>("USP_SS_HC_EpicrisisFE_2_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, complicacionesParameter, pronosticoParameter, tipoAltaParameter, condicionEgresoParameter, causaMuerteParameter, necropsiaParameter, planAltaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SS_HC_Epicrisis_2_FE> USP_SS_HC_EpicrisisFE_2_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string complicaciones, string pronostico, string tipoAlta, string condicionEgreso, string causaMuerte, string necropsia, string planAlta, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var complicacionesParameter = complicaciones != null ?
                new ObjectParameter("Complicaciones", complicaciones) :
                new ObjectParameter("Complicaciones", typeof(string));

            var pronosticoParameter = pronostico != null ?
                new ObjectParameter("Pronostico", pronostico) :
                new ObjectParameter("Pronostico", typeof(string));

            var tipoAltaParameter = tipoAlta != null ?
                new ObjectParameter("TipoAlta", tipoAlta) :
                new ObjectParameter("TipoAlta", typeof(string));

            var condicionEgresoParameter = condicionEgreso != null ?
                new ObjectParameter("CondicionEgreso", condicionEgreso) :
                new ObjectParameter("CondicionEgreso", typeof(string));

            var causaMuerteParameter = causaMuerte != null ?
                new ObjectParameter("CausaMuerte", causaMuerte) :
                new ObjectParameter("CausaMuerte", typeof(string));

            var necropsiaParameter = necropsia != null ?
                new ObjectParameter("Necropsia", necropsia) :
                new ObjectParameter("Necropsia", typeof(string));

            var planAltaParameter = planAlta != null ?
                new ObjectParameter("PlanAlta", planAlta) :
                new ObjectParameter("PlanAlta", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Epicrisis_2_FE>("USP_SS_HC_EpicrisisFE_2_Listar", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, complicacionesParameter, pronosticoParameter, tipoAltaParameter, condicionEgresoParameter, causaMuerteParameter, necropsiaParameter, planAltaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> USP_SS_HC_Epicrisis_2_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string complicaciones, string pronostico, string tipoAlta, string condicionEgreso, string causaMuerte, string necropsia, string planAlta, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var complicacionesParameter = complicaciones != null ?
                new ObjectParameter("Complicaciones", complicaciones) :
                new ObjectParameter("Complicaciones", typeof(string));

            var pronosticoParameter = pronostico != null ?
                new ObjectParameter("Pronostico", pronostico) :
                new ObjectParameter("Pronostico", typeof(string));

            var tipoAltaParameter = tipoAlta != null ?
                new ObjectParameter("TipoAlta", tipoAlta) :
                new ObjectParameter("TipoAlta", typeof(string));

            var condicionEgresoParameter = condicionEgreso != null ?
                new ObjectParameter("CondicionEgreso", condicionEgreso) :
                new ObjectParameter("CondicionEgreso", typeof(string));

            var causaMuerteParameter = causaMuerte != null ?
                new ObjectParameter("CausaMuerte", causaMuerte) :
                new ObjectParameter("CausaMuerte", typeof(string));

            var necropsiaParameter = necropsia != null ?
                new ObjectParameter("Necropsia", necropsia) :
                new ObjectParameter("Necropsia", typeof(string));

            var planAltaParameter = planAlta != null ?
                new ObjectParameter("PlanAlta", planAlta) :
                new ObjectParameter("PlanAlta", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_SS_HC_Epicrisis_2_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, complicacionesParameter, pronosticoParameter, tipoAltaParameter, condicionEgresoParameter, causaMuerteParameter, necropsiaParameter, planAltaParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_Epicrisis_1_Detalle_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idKardex, Nullable<int> secuencia, Nullable<System.DateTime> fechaSolicitada, Nullable<System.DateTime> fechaPlaneada, Nullable<int> idEspecialidad, Nullable<int> idTipoInterConsulta, string observacion, Nullable<int> realizado, string detalle, string accion, string version, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string codigo, string diagnosticoDescripcion, string determinacionDiagnostica, string gradoAfeccion, Nullable<int> idDiagnosticoPrincipal, string codigoSegus, Nullable<int> tipoOrdenAtencion, Nullable<int> indicadorEPS, string codigoComponente, string examenDescripcion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idKardexParameter = idKardex.HasValue ?
                new ObjectParameter("IdKardex", idKardex) :
                new ObjectParameter("IdKardex", typeof(int));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var fechaSolicitadaParameter = fechaSolicitada.HasValue ?
                new ObjectParameter("FechaSolicitada", fechaSolicitada) :
                new ObjectParameter("FechaSolicitada", typeof(System.DateTime));

            var fechaPlaneadaParameter = fechaPlaneada.HasValue ?
                new ObjectParameter("FechaPlaneada", fechaPlaneada) :
                new ObjectParameter("FechaPlaneada", typeof(System.DateTime));

            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));

            var idTipoInterConsultaParameter = idTipoInterConsulta.HasValue ?
                new ObjectParameter("IdTipoInterConsulta", idTipoInterConsulta) :
                new ObjectParameter("IdTipoInterConsulta", typeof(int));

            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));

            var realizadoParameter = realizado.HasValue ?
                new ObjectParameter("Realizado", realizado) :
                new ObjectParameter("Realizado", typeof(int));

            var detalleParameter = detalle != null ?
                new ObjectParameter("Detalle", detalle) :
                new ObjectParameter("Detalle", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));

            var diagnosticoDescripcionParameter = diagnosticoDescripcion != null ?
                new ObjectParameter("DiagnosticoDescripcion", diagnosticoDescripcion) :
                new ObjectParameter("DiagnosticoDescripcion", typeof(string));

            var determinacionDiagnosticaParameter = determinacionDiagnostica != null ?
                new ObjectParameter("DeterminacionDiagnostica", determinacionDiagnostica) :
                new ObjectParameter("DeterminacionDiagnostica", typeof(string));

            var gradoAfeccionParameter = gradoAfeccion != null ?
                new ObjectParameter("GradoAfeccion", gradoAfeccion) :
                new ObjectParameter("GradoAfeccion", typeof(string));

            var idDiagnosticoPrincipalParameter = idDiagnosticoPrincipal.HasValue ?
                new ObjectParameter("IdDiagnosticoPrincipal", idDiagnosticoPrincipal) :
                new ObjectParameter("IdDiagnosticoPrincipal", typeof(int));

            var codigoSegusParameter = codigoSegus != null ?
                new ObjectParameter("CodigoSegus", codigoSegus) :
                new ObjectParameter("CodigoSegus", typeof(string));

            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var examenDescripcionParameter = examenDescripcion != null ?
                new ObjectParameter("ExamenDescripcion", examenDescripcion) :
                new ObjectParameter("ExamenDescripcion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_Epicrisis_1_Detalle_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idKardexParameter, secuenciaParameter, fechaSolicitadaParameter, fechaPlaneadaParameter, idEspecialidadParameter, idTipoInterConsultaParameter, observacionParameter, realizadoParameter, detalleParameter, accionParameter, versionParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, codigoParameter, diagnosticoDescripcionParameter, determinacionDiagnosticaParameter, gradoAfeccionParameter, idDiagnosticoPrincipalParameter, codigoSegusParameter, tipoOrdenAtencionParameter, indicadorEPSParameter, codigoComponenteParameter, examenDescripcionParameter);
        }

        public virtual ObjectResult<Nullable<int>> SP_SS_HC_Epicrisis_1_FE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idMedico, string manejoConjunto, Nullable<int> especificar, Nullable<int> redacta, Nullable<System.DateTime> fechaIngreso, Nullable<System.DateTime> horaIngreso, Nullable<System.DateTime> fechaEgreso, Nullable<System.DateTime> horaEgreso, string diasHospitalizacion, string enfermedadActual, string antecedentes, string examenFisico, string evolucion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));

            var manejoConjuntoParameter = manejoConjunto != null ?
                new ObjectParameter("ManejoConjunto", manejoConjunto) :
                new ObjectParameter("ManejoConjunto", typeof(string));

            var especificarParameter = especificar.HasValue ?
                new ObjectParameter("Especificar", especificar) :
                new ObjectParameter("Especificar", typeof(int));

            var redactaParameter = redacta.HasValue ?
                new ObjectParameter("Redacta", redacta) :
                new ObjectParameter("Redacta", typeof(int));

            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));

            var horaIngresoParameter = horaIngreso.HasValue ?
                new ObjectParameter("HoraIngreso", horaIngreso) :
                new ObjectParameter("HoraIngreso", typeof(System.DateTime));

            var fechaEgresoParameter = fechaEgreso.HasValue ?
                new ObjectParameter("FechaEgreso", fechaEgreso) :
                new ObjectParameter("FechaEgreso", typeof(System.DateTime));

            var horaEgresoParameter = horaEgreso.HasValue ?
                new ObjectParameter("HoraEgreso", horaEgreso) :
                new ObjectParameter("HoraEgreso", typeof(System.DateTime));

            var diasHospitalizacionParameter = diasHospitalizacion != null ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(string));

            var enfermedadActualParameter = enfermedadActual != null ?
                new ObjectParameter("EnfermedadActual", enfermedadActual) :
                new ObjectParameter("EnfermedadActual", typeof(string));

            var antecedentesParameter = antecedentes != null ?
                new ObjectParameter("Antecedentes", antecedentes) :
                new ObjectParameter("Antecedentes", typeof(string));

            var examenFisicoParameter = examenFisico != null ?
                new ObjectParameter("ExamenFisico", examenFisico) :
                new ObjectParameter("ExamenFisico", typeof(string));

            var evolucionParameter = evolucion != null ?
                new ObjectParameter("Evolucion", evolucion) :
                new ObjectParameter("Evolucion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SS_HC_Epicrisis_1_FE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idMedicoParameter, manejoConjuntoParameter, especificarParameter, redactaParameter, fechaIngresoParameter, horaIngresoParameter, fechaEgresoParameter, horaEgresoParameter, diasHospitalizacionParameter, enfermedadActualParameter, antecedentesParameter, examenFisicoParameter, evolucionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SP_SS_HC_Epicrisis_1_FE_Listar_Result> SP_SS_HC_Epicrisis_1_FE_Listar(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idMedico, string manejoConjunto, Nullable<int> especificar, Nullable<int> redacta, Nullable<System.DateTime> fechaIngreso, Nullable<System.DateTime> horaIngreso, Nullable<System.DateTime> fechaEgreso, Nullable<System.DateTime> horaEgreso, string diasHospitalizacion, string enfermedadActual, string antecedentes, string examenFisico, string evolucion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));

            var manejoConjuntoParameter = manejoConjunto != null ?
                new ObjectParameter("ManejoConjunto", manejoConjunto) :
                new ObjectParameter("ManejoConjunto", typeof(string));

            var especificarParameter = especificar.HasValue ?
                new ObjectParameter("Especificar", especificar) :
                new ObjectParameter("Especificar", typeof(int));

            var redactaParameter = redacta.HasValue ?
                new ObjectParameter("Redacta", redacta) :
                new ObjectParameter("Redacta", typeof(int));

            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));

            var horaIngresoParameter = horaIngreso.HasValue ?
                new ObjectParameter("HoraIngreso", horaIngreso) :
                new ObjectParameter("HoraIngreso", typeof(System.DateTime));

            var fechaEgresoParameter = fechaEgreso.HasValue ?
                new ObjectParameter("FechaEgreso", fechaEgreso) :
                new ObjectParameter("FechaEgreso", typeof(System.DateTime));

            var horaEgresoParameter = horaEgreso.HasValue ?
                new ObjectParameter("HoraEgreso", horaEgreso) :
                new ObjectParameter("HoraEgreso", typeof(System.DateTime));

            var diasHospitalizacionParameter = diasHospitalizacion != null ?
                new ObjectParameter("DiasHospitalizacion", diasHospitalizacion) :
                new ObjectParameter("DiasHospitalizacion", typeof(string));

            var enfermedadActualParameter = enfermedadActual != null ?
                new ObjectParameter("EnfermedadActual", enfermedadActual) :
                new ObjectParameter("EnfermedadActual", typeof(string));

            var antecedentesParameter = antecedentes != null ?
                new ObjectParameter("Antecedentes", antecedentes) :
                new ObjectParameter("Antecedentes", typeof(string));

            var examenFisicoParameter = examenFisico != null ?
                new ObjectParameter("ExamenFisico", examenFisico) :
                new ObjectParameter("ExamenFisico", typeof(string));

            var evolucionParameter = evolucion != null ?
                new ObjectParameter("Evolucion", evolucion) :
                new ObjectParameter("Evolucion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_HC_Epicrisis_1_FE_Listar_Result>("SP_SS_HC_Epicrisis_1_FE_Listar", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idMedicoParameter, manejoConjuntoParameter, especificarParameter, redactaParameter, fechaIngresoParameter, horaIngresoParameter, fechaEgresoParameter, horaEgresoParameter, diasHospitalizacionParameter, enfermedadActualParameter, antecedentesParameter, examenFisicoParameter, evolucionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }

        public virtual ObjectResult<SP_OrdenInterQuirurgicaListarFE_Result> SP_OrdenInterQuirurgicaListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idCirugia, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idCirugiaParameter = idCirugia.HasValue ?
                new ObjectParameter("IdCirugia", idCirugia) :
                new ObjectParameter("IdCirugia", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OrdenInterQuirurgicaListarFE_Result>("SP_OrdenInterQuirurgicaListarFE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idCirugiaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_OrdenIntervencionQuirurgicaCab_FE> USP_OrdenInterQuirurgicaListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idCirugia, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idCirugiaParameter = idCirugia.HasValue ?
                new ObjectParameter("IdCirugia", idCirugia) :
                new ObjectParameter("IdCirugia", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_OrdenIntervencionQuirurgicaCab_FE>("USP_OrdenInterQuirurgicaListarFE", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idCirugiaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual ObjectResult<SS_HC_OrdenIntervencionQuirurgicaCab_FE> USP_OrdenInterQuirurgicaListarFE(string unidadReplicacion, Nullable<long> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idCirugia, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string accion, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idCirugiaParameter = idCirugia.HasValue ?
                new ObjectParameter("IdCirugia", idCirugia) :
                new ObjectParameter("IdCirugia", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_OrdenIntervencionQuirurgicaCab_FE>("USP_OrdenInterQuirurgicaListarFE", mergeOption, unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idCirugiaParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, accionParameter);
        }

        public virtual ObjectResult<SP_SS_GE_Medicamento_FEListarEPICRISIS_Result> SP_SS_GE_Medicamento_FEListarEPICRISIS(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, Nullable<int> grupoMedicamento, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadTiempo, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPadreNutriente, Nullable<int> idHijoNutriente)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPadreNutrienteParameter = idPadreNutriente.HasValue ?
                new ObjectParameter("IdPadreNutriente", idPadreNutriente) :
                new ObjectParameter("IdPadreNutriente", typeof(int));

            var idHijoNutrienteParameter = idHijoNutriente.HasValue ?
                new ObjectParameter("IdHijoNutriente", idHijoNutriente) :
                new ObjectParameter("IdHijoNutriente", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SS_GE_Medicamento_FEListarEPICRISIS_Result>("SP_SS_GE_Medicamento_FEListarEPICRISIS", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, grupoMedicamentoParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadTiempoParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPadreNutrienteParameter, idHijoNutrienteParameter);
        }

        public virtual ObjectResult<SS_HC_Medicamento_FE_Epi2> USP_SS_GE_Medicamento_FEListarEPICRISIS(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, Nullable<int> grupoMedicamento, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadTiempo, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPadreNutriente, Nullable<int> idHijoNutriente)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPadreNutrienteParameter = idPadreNutriente.HasValue ?
                new ObjectParameter("IdPadreNutriente", idPadreNutriente) :
                new ObjectParameter("IdPadreNutriente", typeof(int));

            var idHijoNutrienteParameter = idHijoNutriente.HasValue ?
                new ObjectParameter("IdHijoNutriente", idHijoNutriente) :
                new ObjectParameter("IdHijoNutriente", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Medicamento_FE_Epi2>("USP_SS_GE_Medicamento_FEListarEPICRISIS", unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, grupoMedicamentoParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadTiempoParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPadreNutrienteParameter, idHijoNutrienteParameter);
        }

        public virtual ObjectResult<SS_HC_Medicamento_FE_Epi2> USP_SS_GE_Medicamento_FEListarEPICRISIS(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<long> idEpisodioAtencion, Nullable<int> secuencia, Nullable<int> tipoMedicamento, Nullable<int> idUnidadMedida, string linea, string familia, string subFamilia, string tipoComponente, string codigoComponente, Nullable<int> idVia, string dosis, Nullable<decimal> diasTratamiento, Nullable<decimal> frecuencia, Nullable<decimal> cantidad, Nullable<int> indicadorEPS, Nullable<int> tipoReceta, Nullable<int> forma, Nullable<int> grupoMedicamento, string comentario, Nullable<int> indicadorAuditoria, string usuarioAuditoria, Nullable<int> tipoComida, string volumenDia, string frecuenciaToma, string presentacion, Nullable<System.DateTime> hora, string periodo, Nullable<int> unidadTiempo, string indicacion, Nullable<int> estado, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string accion, string version, Nullable<int> idPadreNutriente, Nullable<int> idHijoNutriente, MergeOption mergeOption)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));

            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));

            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));

            var tipoMedicamentoParameter = tipoMedicamento.HasValue ?
                new ObjectParameter("TipoMedicamento", tipoMedicamento) :
                new ObjectParameter("TipoMedicamento", typeof(int));

            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(int));

            var lineaParameter = linea != null ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(string));

            var familiaParameter = familia != null ?
                new ObjectParameter("Familia", familia) :
                new ObjectParameter("Familia", typeof(string));

            var subFamiliaParameter = subFamilia != null ?
                new ObjectParameter("SubFamilia", subFamilia) :
                new ObjectParameter("SubFamilia", typeof(string));

            var tipoComponenteParameter = tipoComponente != null ?
                new ObjectParameter("TipoComponente", tipoComponente) :
                new ObjectParameter("TipoComponente", typeof(string));

            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));

            var idViaParameter = idVia.HasValue ?
                new ObjectParameter("IdVia", idVia) :
                new ObjectParameter("IdVia", typeof(int));

            var dosisParameter = dosis != null ?
                new ObjectParameter("Dosis", dosis) :
                new ObjectParameter("Dosis", typeof(string));

            var diasTratamientoParameter = diasTratamiento.HasValue ?
                new ObjectParameter("DiasTratamiento", diasTratamiento) :
                new ObjectParameter("DiasTratamiento", typeof(decimal));

            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(decimal));

            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));

            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));

            var tipoRecetaParameter = tipoReceta.HasValue ?
                new ObjectParameter("TipoReceta", tipoReceta) :
                new ObjectParameter("TipoReceta", typeof(int));

            var formaParameter = forma.HasValue ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(int));

            var grupoMedicamentoParameter = grupoMedicamento.HasValue ?
                new ObjectParameter("GrupoMedicamento", grupoMedicamento) :
                new ObjectParameter("GrupoMedicamento", typeof(int));

            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));

            var indicadorAuditoriaParameter = indicadorAuditoria.HasValue ?
                new ObjectParameter("IndicadorAuditoria", indicadorAuditoria) :
                new ObjectParameter("IndicadorAuditoria", typeof(int));

            var usuarioAuditoriaParameter = usuarioAuditoria != null ?
                new ObjectParameter("UsuarioAuditoria", usuarioAuditoria) :
                new ObjectParameter("UsuarioAuditoria", typeof(string));

            var tipoComidaParameter = tipoComida.HasValue ?
                new ObjectParameter("TipoComida", tipoComida) :
                new ObjectParameter("TipoComida", typeof(int));

            var volumenDiaParameter = volumenDia != null ?
                new ObjectParameter("VolumenDia", volumenDia) :
                new ObjectParameter("VolumenDia", typeof(string));

            var frecuenciaTomaParameter = frecuenciaToma != null ?
                new ObjectParameter("FrecuenciaToma", frecuenciaToma) :
                new ObjectParameter("FrecuenciaToma", typeof(string));

            var presentacionParameter = presentacion != null ?
                new ObjectParameter("Presentacion", presentacion) :
                new ObjectParameter("Presentacion", typeof(string));

            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(System.DateTime));

            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));

            var unidadTiempoParameter = unidadTiempo.HasValue ?
                new ObjectParameter("UnidadTiempo", unidadTiempo) :
                new ObjectParameter("UnidadTiempo", typeof(int));

            var indicacionParameter = indicacion != null ?
                new ObjectParameter("Indicacion", indicacion) :
                new ObjectParameter("Indicacion", typeof(string));

            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));

            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));

            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));

            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));

            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));

            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));

            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));

            var idPadreNutrienteParameter = idPadreNutriente.HasValue ?
                new ObjectParameter("IdPadreNutriente", idPadreNutriente) :
                new ObjectParameter("IdPadreNutriente", typeof(int));

            var idHijoNutrienteParameter = idHijoNutriente.HasValue ?
                new ObjectParameter("IdHijoNutriente", idHijoNutriente) :
                new ObjectParameter("IdHijoNutriente", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_Medicamento_FE_Epi2>("USP_SS_GE_Medicamento_FEListarEPICRISIS", mergeOption, unidadReplicacionParameter, idPacienteParameter, episodioClinicoParameter, idEpisodioAtencionParameter, secuenciaParameter, tipoMedicamentoParameter, idUnidadMedidaParameter, lineaParameter, familiaParameter, subFamiliaParameter, tipoComponenteParameter, codigoComponenteParameter, idViaParameter, dosisParameter, diasTratamientoParameter, frecuenciaParameter, cantidadParameter, indicadorEPSParameter, tipoRecetaParameter, formaParameter, grupoMedicamentoParameter, comentarioParameter, indicadorAuditoriaParameter, usuarioAuditoriaParameter, tipoComidaParameter, volumenDiaParameter, frecuenciaTomaParameter, presentacionParameter, horaParameter, periodoParameter, unidadTiempoParameter, indicacionParameter, estadoParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, accionParameter, versionParameter, idPadreNutrienteParameter, idHijoNutrienteParameter);
        }

        public virtual ObjectResult<SP_ListarAlergiaDetalle_FE_Result> SP_ListarAlergiaDetalle_FE(string unidadReplicacion, Nullable<int> idPaciente, Nullable<int> episodioTriaje)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));

            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));

            var episodioTriajeParameter = episodioTriaje.HasValue ?
                new ObjectParameter("EpisodioTriaje", episodioTriaje) :
                new ObjectParameter("EpisodioTriaje", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListarAlergiaDetalle_FE_Result>("SP_ListarAlergiaDetalle_FE", unidadReplicacionParameter, idPacienteParameter, episodioTriajeParameter);
        }
    }
}
